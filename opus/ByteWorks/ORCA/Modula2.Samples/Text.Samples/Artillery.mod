(*$Keep 'Artillery'*)(*-----------------------------------------------*)(*                                               *)(*  Artillery                                    *)(*                                               *)(*  This classic interactive text game lets you  *)(*  pick the angle of your artillery gun in      *)(*  an attempt to knock out the enemy position.  *)(*  The computer picks a secret distance.  When  *)(*  you fire, you will be told how much you      *)(*  missed by, and must fire again.              *)(*                                               *)(*-----------------------------------------------*)MODULE Artillery;FROM SYSTEM IMPORT ADR;FROM MiscToolSet IMPORT ReadASCIITime;FROM InOut IMPORT ReadReal, WriteInt, WriteLn, WriteString;FROM MathLib0 IMPORT sin, cos;CONST   blastRadius = 50.0;			(*max distance from target to get a hit*)   degreesToRadians = 0.01745329;	(*convert from degrees to radians*)   velocity = 434.6;			(*muzzle velocity*)VAR   angle: REAL;				(*angle*)   asciiTime: ARRAY[1..20] OF CHAR;	(*time - for random #s*)   distance: REAL;			(*distance to the target*)   done: BOOLEAN;			(*is there a hit, yet?*)   time: REAL;				(*time of flight*)   tries: INTEGER;			(*number of shots*)   x: REAL;				(*distance to impact*)   vx,vy: REAL;				(*x, y velocities*)BEGIN   (*choose a distance to the target*)   ReadASCIITime(ADR(asciiTime));   distance := FLOAT(((ORD(asciiTime[16])-0B0H)*10      + (ORD(asciiTime[17])-0B0H))*100);   (*not done yet...*)   done := FALSE;   tries := 1;   (*shoot 'til we hit it*)   REPEAT      (*get the firing angle*)      WriteString('Firing angle: ');      ReadReal(angle);      WriteLn;      (*compute the muzzle velocity in x, y*)      angle := angle*degreesToRadians;      vx := cos(angle)*velocity;      vy := sin(angle)*velocity;      (*find the time of flight*)      (*(velocity = acceleration*time, two trips)*)      time := 2.0*vy/32.0;      (*find the distance*)      (*(velocity = distance/time)*)      x := vx*time;      (*see what happened...*)      IF ABS(distance-x) < blastRadius THEN	 done := TRUE;	 WriteString('A hit, after ');         WriteInt(tries, 1);	 IF tries = 1 THEN           WriteString(' try!');	 ELSE           WriteString(' tries!');         END;         WriteLn;	 CASE tries OF            1: WriteString('(A lucky shot...)');          | 2: WriteString('Phenominal shooting!');          | 3: WriteString('Good shooting.');            ELSE WriteString('Practice makes perfect - try again.');         END; (*case*)         WriteLn;      ELSIF distance > x THEN	 WriteString('You were short by ');         WriteInt(TRUNC(distance-x), 1);         WriteString(' feet.');         WriteLn;      ELSE	 WriteString('You were over by ');         WriteInt(TRUNC(x-distance), 1);         WriteString(' feet.');         WriteLn;      END;      tries := tries+1;   UNTIL done;END Artillery.