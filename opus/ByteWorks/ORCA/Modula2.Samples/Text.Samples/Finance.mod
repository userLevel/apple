(*$Keep 'Finance'*)(*-----------------------------------------------*)(*                                               *)(*  Financing                                    *)(*                                               *)(*  This program prints the ballance on an       *)(*  account for monthly payments, along with the *)(*  total amount paid so far.                    *)(*                                               *)(*-----------------------------------------------*)MODULE Finance;FROM InOut IMPORT WriteString, WriteFixPt, WriteInt, WriteLn;CONST   loanAmount    = 10000.0;      (*amount of the loan*)   payment       = 600.0;        (*monthly payment*)   interest      = 15;           (*yearly interest (as %)*)VAR   balance: REAL;                (*amount left to pay*)   month: INTEGER;               (*month number*)   monthlyInterest: REAL;        (*multiplier for interest*)   paid: REAL;                   (*total amount paid*)BEGIN   (*set up the initial values*)   balance := loanAmount;   paid := 0.0;   month := 0;   monthlyInterest := 1.0+FLOAT(interest)/1200.0;   (*write out the conditions*)   WriteString('Payment schedule for a loan of ');   WriteFixPt(loanAmount, 10, 2);   WriteLn;   WriteString('with monthly payments of ');   WriteFixPt(payment, 5, 2);   WriteString(' at an');   WriteLn;   WriteString('interest rate of ');   WriteInt(interest, 1);   WriteString('%.');   WriteLn;   WriteLn;   WriteString('          month        balance    amount paid');   WriteLn;   WriteString('          -----        -------    -----------');   WriteLn;   (*check for payments that are too small*)   IF balance*monthlyInterest-balance >= payment THEN      WriteString('The payment is too small!');      WriteLn;   ELSE      WHILE balance > 0.0 DO	 (*add in the interest*)	 balance := balance*monthlyInterest;	 (*make a payment*)	 IF balance > payment THEN            balance := balance-payment;            paid := paid+payment;	 ELSE            paid := paid+balance;            balance := 0.0;	 END;	 (*update the month number*)	 month := month+1;	 (*write the new statistics*)	 WriteInt(month, 15);	 WriteString('     ');	 WriteFixPt(balance, 10, 2);	 WriteString('     ');	 WriteFixPt(paid, 10, 2);	 WriteLn;      END;   END;END Finance.