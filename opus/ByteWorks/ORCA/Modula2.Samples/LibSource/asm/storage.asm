** Storage** This library consists of routines to provide the implementation part of the* "Storage" module.** Copyright 1989...End Of Time* EZ-Soft, Cameron Computer Systems** Written by: P.C. Easdown*          CASE      ON          65816     ON          LONGI     ON          LONGA     ON          OBJCASE   ON          KEEP      Storage** Dummy is a tacky way of forcing all of the routines into the .A file. The ORCA* assembler will place Dummy in the .ROOT file and then place all other segments* into the .A file.*Dummy     start          end** Storage_ALLOCATE** PROCEDURE ALLOCATE(VAR a: ADDRESS; size: CARDINAL);* (**   OPERATION:*     Allocate some dynamic storage (contiguous memory area).* *   NOTE:*     The actual number of bytes allocated may be slightly greater than 'size',*     due to administrative overhead.* *)*Storage_ALLOCATE  STARTresultAddress     EQU   6sizeDesired       EQU   4                  TSC                  PHD                  TCD                  PEA   0                  LDA   sizeDesired                  PHA                  JSL   >~NEW                  STA   [resultAddress]                  LDY   #$0002                  TXA                  STA   [resultAddress],Y                  LDA   $0                  STA   resultAddress                  LDA   $2                  STA   resultAddress+2                  PLD                  TSC                  CLC                  ADC   #6                  TCS                  RTL                  END Storage_ALLOCATE** Storage_DEALLOCATE** PROCEDURE DEALLOCATE (VAR a: ADDRESS; size: CARDINAL);* (**   OPERATION:*     Release some dynamic storage (contiguous memory area).**   NOTE:*     The storage area released is made available for subsequent calls to*     ALLOCATE.**     'a' is set to NIL as a result of the deallocation.* *)** Note that in this implementation, the 'size' parameter is meaningless, as* the memory manager keeps track of the size of a block.*Storage_DEALLOCATE  STARTpointer             EQU   6size                EQU   4                    TSC                    PHD                    TCD                    LDY   #$0002                    LDA   [pointer],Y                    PHA                    LDA   [pointer]                    PHA                    JSL   >~DISPOSE                    LDA   #$0000                    LDY   #$0002                    STA   [pointer],Y                    STA   [pointer]                    PLD                    LDA   2,S                    STA   8,S                    LDA   1,S                    STA   7,S                    TSC                    CLC                    ADC   #$6                    TCS                    RTL                    END Storage_DEALLOCATE** Storage_Available** PROCEDURE Available (size: CARDINAL) : BOOLEAN;* (**   OPERATION:*     Returns TRUE if there exists a block of memory at lease 'size' bytes in*     size.* *)*Storage_Available STARTTRUE              EQU   1FALSE             EQU   0result            EQU   6size              EQU   4                  TSC                  PHD                  TCD                  PEA   0                  LDA   size                  PHA                  JSL   >~NEW                  CPX   #$0000                  BNE   available                  CMP   #$0000                  BNE   available                  LDA   #FALSE                  BRA   doneavailable         PHX                  PHA                  JSL   >~DISPOSE                  LDA   #TRUEdone              STA   result                  PLD                  LDA   2,S                  STA   4,S                  LDA   1,S                  STA   3,S                  PLA                  RTL                  END Storage_Available** Storage__Initialisation** This procedure is called up at initialisation time by calls generated by the* compiler.*Storage__1EDD02584268 START                      RTL                      END Storage__1EDD02584268