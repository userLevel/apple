(*$Segment Terminal*)IMPLEMENTATION MODULE Terminal;FROM ASCII IMPORT  nul, EOL;FROM M2Lib IMPORT  PutChar;FROM OrcaShell IMPORT  KeyPressDCB, KeyPress, ReadKeyDCB, ReadKey;FROM SYSTEM IMPORT  ADDRESS;IMPORT TextTools;VAR  doRead:       aReadProc;  doWrite:      aWriteProc;PROCEDURE ReadChar(VAR ch: CHAR; VAR done: BOOLEAN); FORWARD;PROCEDURE AssignRead(readProc: aReadProc);BEGIN  doRead := readProc;END AssignRead;PROCEDURE AssignWrite(writeProc: aWriteProc);BEGIN  doWrite := writeProc;END AssignWrite;PROCEDURE BusyRead(VAR ch: CHAR);VAR  done: BOOLEAN;BEGIN  doRead(ch, done);  IF NOT done THEN    ch := nul;  END;END BusyRead;PROCEDURE DeassignRead;BEGIN  doRead := ReadChar;END DeassignRead;PROCEDURE DeassignWrite;BEGIN  doWrite := PutChar;END DeassignWrite;PROCEDURE GetWriteProc(VAR curWriteProc: aWriteProc);BEGIN  curWriteProc := doWrite;END GetWriteProc;PROCEDURE Read(VAR ch: CHAR);VAR  done: BOOLEAN;BEGIN  REPEAT    doRead(ch, done);  UNTIL done;END Read;PROCEDURE ReadChar(VAR ch: CHAR; VAR done: BOOLEAN);VAR  rk: ReadKeyDCB;  kp: KeyPressDCB;BEGIN  kp.pCount := 3;  KeyPress(kp);  IF kp.available THEN    rk.pCount := 2;    ReadKey(rk);    ch := CHR(rk.key);    done := TRUE;  ELSE    done := FALSE;    ch := nul;  END;END ReadChar;PROCEDURE Write(ch: CHAR);BEGIN  doWrite(ch);END Write;PROCEDURE WriteString(string: ARRAY OF CHAR);VAR  c, h: CARDINAL;  ch:   CHAR;BEGIN  h := HIGH(string);  c := 0;  LOOP    IF c > h THEN      EXIT;    END;    ch := string[c];    IF ch = 0C THEN      EXIT;    END;    INC (c);    doWrite(ch);  END;END WriteString;PROCEDURE WriteLn;BEGIN  doWrite(EOL);END WriteLn;BEGIN  doRead := ReadChar;  doWrite := PutChar;END Terminal.