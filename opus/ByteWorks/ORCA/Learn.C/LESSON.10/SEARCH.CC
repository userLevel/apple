/* This program reads a list of names from the keyboard,         *//* stopping when you enter the string -.  These names are stored *//* in the linked list names.  The program then asks you to enter *//* a name, and scans the list.  If the name is in the list, the  *//* program prints the name.  If not, false is printed.  Again,   *//* this process repeats until you enter the string -.            */#include <stdio.h>#include <string.h>#include <stdlib.h>#define NAMELENGTH 20                   /* max length of a name */typedef struct nameType {               /* element of the name list */   struct nameType *next;   char name[NAMELENGTH+1];   }   nameType,   *namePtr;                            /* name pointer type */namePtr names;                          /* list of names *//* Read a list of names from the keyboard */void ReadList (void){namePtr ptr;                            /* new name */char name[NAMELENGTH+1];                /* name read from keyboard */names = NULL;                           /* no names so far */do {   printf("Name:");                     /* get a name */   scanf("%20s", name);   if (strcmp(name, "-") != 0) {      ptr = (namePtr) malloc(sizeof(nameType)); /* get a new name record */      ptr->next = names;                /* add the record to the list */      names = ptr;      strcpy(ptr->name, name);          /* put the name in the record */      }   }while (strcmp(name, "-") != 0);}/* Test to see if names are in the list */void Test (void){namePtr ptr;                            /* used to trace the list */char name[NAMELENGTH+1];                /* name read from keyboard */do {   printf("Name to find:");             /* get a name */   scanf("%20s", name);   if (strcmp(name, "-") == 0)          /* quit if no name is given */      return;   ptr = names;                         /* scan for the name */   while (ptr != NULL) {      if (strcmp(ptr->name, name) == 0) /* name found -> write it */         {         printf("true: \"%s\"\n", name);         goto out;         }      ptr = ptr->next;      }   printf("false\n");                   /* name not found */   out: ;   }while (1);                              /* loop forever */}/* Main program */void main (void){ReadList();printf("\n");Test();}