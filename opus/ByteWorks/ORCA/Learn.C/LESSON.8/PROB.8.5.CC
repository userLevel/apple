/* This program reads in a list of integers, placing them in a  *//* queue, then prints the numbers in the resulting linked list. */#include <stdio.h>#include <stdlib.h>#include <stddef.h>typedef struct listElement {   struct listElement *next;   int i;   } listElement;listElement *list;void GetList (void)/* Read a list from the keyboard.                            *//*                                                           *//* Variables:                                                *//*    list - pointer to the head of the list                 */{int i;                                  /* variable read from the keyboard */listElement *temp;                      /* work pointer */listElement *last;                      /* ptr to the end of the list */list = NULL;                            /* initialize the list pointer */last = NULL;                            /* no end item, yet */do {   scanf(" %d", &i);                    /* read a value */   if (i != 0) {                        /* if not at the end of the list... */                                        /* allocate a structure */      temp = (listElement *) malloc (sizeof(listElement));      temp->i = i;                      /* record the value */      temp->next = NULL;                /* nothing comes after it */      if (list == NULL)                 /* add the struct to the list */         list = temp;      else         last->next = temp;      last = temp;                      /* record the new end of list */      }   }while (i != 0);}void PrintList (void)/* Print a list.                                             *//*                                                           *//* Parameters:                                               *//*    list - pointer to the head of the list                 */{listElement *temp;                      /* work pointer */while (list != NULL) {   temp = list;                         /* remove an item from the list */   list = temp->next;   printf("%d\n", temp->i);             /* write the value */   free(temp);                          /* free the memory */   }}void main (void){GetList();                              /* read a list */PrintList();                            /* print a list */}