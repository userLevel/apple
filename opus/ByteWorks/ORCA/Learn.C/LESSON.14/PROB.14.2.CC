/* Graphic solution to the Towers of Hanoi puzzle. */#include <quickdraw.h>#define DISKS 6                         /* # of disks to move */typedef int peg[DISKS];                 /* one peg, with contents */peg pegs[3];                            /* all three pegs */void DrawDisk (int disk, int peg, int height, int color)/* Draw a disk on the screen                                    *//*                                                              *//* Parameters:                                                  *//*    disk - disk (i.e. size) to draw                           *//*    peg - peg to draw the disk on                             *//*    height - distance from the bottom of the pile             *//*    color - color to draw the disk                            */{int x,y;                                /* position of the center of the disk */x = peg*80 + 40;                        /* find the position */y = 50 - height*4;SetSolidPenPat(color);                  /* set the pen color */MoveTo(x - disk*5, y);                  /* draw the disk */LineTo(x + disk*5, y);}void Move (int fromPeg, int toPeg)/* Move a disk                                                  *//*                                                              *//* Parameters:                                                  *//*    fromPeg - peg to move the disk from                       *//*    toPeg - peg to move the disk to                           */{int i;                                  /* peg array index */int disk;                               /* disk being moved */i = DISKS-1;                            /* find the disk to move */while (pegs[fromPeg][i] == 0)   --i;disk = pegs[fromPeg][i];                /* remove the disk */pegs[fromPeg][i] = 0;DrawDisk(disk, fromPeg, i, 3);          /* erase the disk */i = 0;                                  /* find the new spot for the disk */while (pegs[toPeg][i] != 0)   ++i;pegs[toPeg][i] = disk;                  /* place the disk on the peg */DrawDisk(disk, toPeg, i, 0);            /* draw the disk */}void Tower(int fromPeg, int toPeg, int sparePeg, int count)/* Move count pegs from peg # fromPeg to peg # toPeg            *//*                                                              *//* Parameters:                                                  *//*    fromPeg - peg to move the disks from                      *//*    toPeg - peg to move the disks to                          *//*    sparePeg - unused peg                                     *//*                                                              *//* Variables:                                                   *//*    pegs - the current content of each peg                    */{if (count) {   Tower(fromPeg, sparePeg, toPeg, count-1);   Move(fromPeg, toPeg);   Tower(sparePeg, toPeg, fromPeg, count-1);   }}void main (void)/* main program                                                 */{int i;                                  /* loop variable */SetPenMode(0);                          /* initialize the graphics pen */SetPenSize(8,3);for (i = 0; i < DISKS; ++i) {           /* set up the game */   pegs[0][i] = DISKS-i+1;   pegs[1][i] = 0;   pegs[2][i] = 0;   DrawDisk(pegs[0][i], 0, i, 0);   }Tower(0, 2, 1, DISKS);                  /* move the disks */}