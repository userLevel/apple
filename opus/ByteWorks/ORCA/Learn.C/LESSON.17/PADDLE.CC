/* Move a paddle in the graphics window */#include <quickdraw.h>#include <event.h>#include <memory.h>#include <orca.h>#define EVENTMASK 0x0F6E                /* GetNextEvent event mask */#define SIZE 640                        /* graphics mode */EventRecord myevent;                    /* current event record */int maxX;                               /* max X distance the paddle can travel */int paddlePosition = 0;                 /* current X position of the paddle */Rect screen;                            /* port rectangle */void StartTools (void)/* Start the tools                                              */{handle memory;                          /* memory returned by NewHandle */Rect r;                                 /* screen size */startgraph(SIZE);                       /* initialize QuickDraw */SetPenMode(2);                          /* pen mode = xor */SetPenSize(1,1);                        /* use a square pen */SetSolidPenPat(15);                     /* paint the screen white */GetPortRect(&r);PaintRect(&r);SetSolidPenPat(0);                      /* use a black pen */memory = NewHandle(256L,userid(),0xC015,0L); /* start up the event mgr */EMStartUp((int) *memory, 0, 0, SIZE, 0, 200, userid());FlushEvents(0xFFFF, 0);}void ShutDownTools (void)/* Shut down the tools                                          */{EMShutDown();endgraph();}void DrawPaddle (int position, int color)/* Draw the paddle                                              *//*                                                              *//* Parameters:                                                  *//*    position - position to draw the paddle                    *//*    color - color of the paddle                               */#define WIDTH 70                        /* width of the paddle */#define HEIGHT 3                        /* height of the paddle */{int y;                                  /* position of the paddle on the screen */SetPenSize(WIDTH,HEIGHT);               /* set the pen to draw the entire paddle */SetSolidPenPat(color);                  /* set the paddle color */SetPenMode(0);                          /* use copy mode */if (position+WIDTH > maxX)              /* make sure we don't go off of the screen */   position = maxX-WIDTH;if (position < 0)   position = 0;y = screen.v2-12;                       /* find the paddle's y position */MoveTo(position,y);                     /* draw the paddle */LineTo(position,y);}void MovePaddle (void)/* Track and move the paddle                                    *//*                                                              *//* Variables:                                                   *//*    paddlePosition - position of the paddle                   *//*    myevent - last event returned by GetNextEvent             */{/* convert the point to our window */GlobalToLocal(&myevent.where);/* if the mouse moved, move the paddle */if (myevent.where.h != paddlePosition) {   DrawPaddle(paddlePosition,3);   paddlePosition = myevent.where.h;   DrawPaddle(paddlePosition,0);   }}void main (void)/* Main program                                                 */{int event;                              /* event flag; returned by GetNextEvent */StartTools();                           /* start the tools */GetPortRect(&screen);                   /* set the limit on the paddle */maxX = screen.h2;DrawPaddle(paddlePosition,0);           /* draw the initial paddle */do {                                    /* event loop */   event = GetNextEvent(EVENTMASK, &myevent);   MovePaddle();   }while (!event);ShutDownTools();                        /* shut down the tools */}