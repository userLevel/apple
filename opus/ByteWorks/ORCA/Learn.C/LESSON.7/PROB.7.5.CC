/* This program shuffles a deck of cards, then prints the       *//* results.                                                     *//*                                                              *//* The deck of cards is represented by a pair of arrays.  Each  *//* array has one position for each of the 52 cards in a         *//* standard deck of playing cards.  One array gives the value   *//* of the card (see the value enumeration), while the other     *//* gives the suit (see the suit enumeration).                   */#include <stdio.h>#include <stdlib.h>                                        /* suits of cards */enum suit {spades, diamonds, clubs, hearts};                                        /* face value of cards */enum value {two, three, four, five, six, seven, eight, nine, ten,            jack, queen, king, ace};enum suit suitDeck[52];                 /* these two arrays define */enum value valueDeck[52];               /* a deck of cards         */unsigned RandomValue (unsigned max)/* Return a pseudo-random number in the range 1..max.              *//*                                                                 *//* Parameters:                                                     *//*    max - largest number to return                               *//*    color - interior color of the rectangle                      */{return rand() % max + 1;}void InitializeDeck (enum suit suits[52], enum value values[52])/* Fills in the values to define a sorted deck of cards         *//*                                                              *//* Parameters:                                                  *//*    suits - array of the card suits                           *//*    values - array of the card values                         */{unsigned i;                             /* loop variable */for (i = 0; i < 13; ++i) {              /* initialize the suit array */   suits[i] = spades;   suits[i+13] = diamonds;   suits[i+26] = clubs;   suits[i+39] = hearts;   }values[0] = two;                        /* initialize the first suit */values[1] = three;values[2] = four;values[3] = five;values[4] = six;values[5] = seven;values[6] = eight;values[7] = nine;values[8] = ten;values[9] = jack;values[10] = queen;values[11] = king;values[12] = ace;for (i = 13; i < 52; ++i)               /* copy the first suit to the */   values[i] = values[i-13];            /* remaining suits            */}void Shuffle (enum suit suits[52], enum value values[52])/* Shuffles the deck of cards                                   *//*                                                              *//* Parameters:                                                  *//*    suits - array of the card suits                           *//*    values - array of the card values                         */{unsigned i;                             /* loop variable */unsigned j;                             /* card to swap with current card */enum value tvalue;                      /* temp value; used for swap */enum suit tsuit;                        /* temp suit; used for swap */for (i = 0; i < 52-1; ++i) {   j = RandomValue(52 - i) + i - 1;   tsuit = suits[i];   suits[i] = suits[j];   suits[j] = tsuit;   tvalue = values[i];   values[i] = values[j];   values[j] = tvalue;   }}void PrintValue (enum value v)/* Print the value of a card                                 *//*                                                           *//* Parameters:                                               *//*    v - value of the card                                  */{switch (v) {   case two:   printf("two");               break;   case three: printf("three");               break;   case four:  printf("four");               break;   case five:  printf("five");               break;   case six:   printf("six");               break;   case seven: printf("seven");               break;   case eight: printf("eight");               break;   case nine:  printf("nine");               break;   case ten:   printf("ten");               break;   case jack:  printf("jack");               break;   case queen: printf("queen");               break;   case king:  printf("king");               break;   case ace:   printf("ace");               break;   }}void PrintSuit (enum suit s)/* Print the suit of a card                                  *//*                                                           *//* Parameters:                                               *//*    s - suit of the card                                   */{switch (s) {   case spades:    printf("spades");                   break;   case diamonds:  printf("diamonds");                   break;   case clubs:     printf("clubs");                   break;   case hearts:    printf("hearts");                   break;   }}void PrintDeck (enum suit suits[52], enum value values[52])/* Prints the cards in order                                    *//*                                                              *//* Parameters:                                                  *//*    suits - array of the card suits                           *//*    values - array of the card values                         */{unsigned i;                             /* loop variable */for (i = 0; i < 52; ++i) {   PrintValue(values[i]);   printf(" of ");   PrintSuit(suits[i]);   printf("\n");   }}void main (void)/* Main program                                                 */{srand(1234);                          /* initialize the random number generator */InitializeDeck(suitDeck, valueDeck);  /* get a new (sorted) deck of cards */Shuffle(suitDeck, valueDeck);         /* shuffle the deck */PrintDeck(suitDeck, valueDeck);       /* print the shuffled deck */}