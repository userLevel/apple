/* This program shuffles a deck of cards, then prints the       *//* results.                                                     *//*                                                              *//* The deck of cards is represented by a pair of arrays.  Each  *//* array has one position for each of the 52 cards in a         *//* standard deck of playing cards.  One array gives the value   *//* of the card (see the value enumeration), while the other     *//* gives the suit (see the suit enumeration).                   */#include <stdio.h>#include <stdlib.h>                                        /* suits of cards */enum suit {spades, diamonds, clubs, hearts};                                        /* face value of cards */enum value {two, three, four, five, six, seven, eight, nine, ten,            jack, queen, king, ace};struct card {                           /* one card in a deck */             enum value v;             enum suit s;            };struct card deck[52];                   /* our deck of cards */unsigned RandomValue (unsigned max)/* Return a pseudo-random number in the range 1..max.              *//*                                                                 *//* Parameters:                                                     *//*    max - largest number to return                               *//*    color - interior color of the rectangle                      */{return rand() % max + 1;}void InitializeDeck (struct card deck[52])/* Fills in the values to define a sorted deck of cards         *//*                                                              *//* Parameters:                                                  *//*    deck - array of cards                                     */{unsigned i;                             /* loop variable */for (i = 0; i < 13; ++i) {              /* initialize the suit array */   deck[i].s = spades;   deck[i+13].s = diamonds;   deck[i+26].s = clubs;   deck[i+39].s = hearts;   }deck[0].v = two;                        /* initialize the first suit */deck[1].v = three;deck[2].v = four;deck[3].v = five;deck[4].v = six;deck[5].v = seven;deck[6].v = eight;deck[7].v = nine;deck[8].v = ten;deck[9].v = jack;deck[10].v = queen;deck[11].v = king;deck[12].v = ace;for (i = 13; i < 52; ++i)               /* copy the first suit to the */   deck[i].v = deck[i-13].v;            /* remaining suits            */}void Shuffle(struct card deck[52])/* Shuffles the deck of cards                                   *//*                                                              *//* Parameters:                                                  *//*    deck - array of cards                                     */{unsigned i;                             /* loop variable */unsigned j;                             /* card to swap with current card */struct card tcard;                      /* temp card; for swap */for (i = 0; i < 52-1; ++i) {   j = RandomValue(52 - i) + i - 1;   tcard = deck[i];   deck[i] = deck[j];   deck[j] = tcard;   }}void PrintValue (enum value v)/* Print the value of a card                                 *//*                                                           *//* Parameters:                                               *//*    v - value of the card                                  */{if (v == two)   printf("two");else if (v == three)   printf("three");else if (v == four)   printf("four");else if (v == five)   printf("five");else if (v == six)   printf("six");else if (v == seven)   printf("seven");else if (v == eight)   printf("eight");else if (v == nine)   printf("nine");else if (v == ten)   printf("ten");else if (v == jack)   printf("jack");else if (v == queen)   printf("queen");else if (v == king)   printf("king");else if (v == ace)   printf("ace");}void PrintSuit (enum suit s)/* Print the suit of a card                                  *//*                                                           *//* Parameters:                                               *//*    s - suit of the card                                   */{if (s == spades)   printf("spades");else if (s == diamonds)   printf("diamonds");else if (s == clubs)   printf("clubs");else if (s == hearts)   printf("hearts");}void PrintDeck (struct card deck[52])/* Prints the cards in order                                    *//*                                                              *//* Parameters:                                                  *//*    deck - array of cards                                     */{unsigned i;                             /* loop variable */for (i = 0; i < 52; ++i) {   PrintValue(deck[i].v);   printf(" of ");   PrintSuit(deck[i].s);   printf("\n");   }}void main (void)/* Main program                                                 */{srand(1234);                    /* initialize the random number generator */InitializeDeck(deck);           /* get a new (sorted) deck of cards */Shuffle(deck);                  /* shuffle the deck */PrintDeck(deck);                /* print the shuffled deck */}