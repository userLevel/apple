/* Create a binary tree from keyboard strings */#include <stdio.h>#include <string.h>#include <stdlib.h>typedef struct treeStruct {             /* tree entry */   struct treeStruct *left, *right;   char str[20];   }   treeStruct, *treePtr;treePtr tree = NULL;                    /* top of the tree */void Add (treePtr *ptr, treePtr rec)/* Add a record to the tree                                     *//*                                                              *//* Parameters:                                                  *//*    ptr - next node in the tree                               *//*    rec - record to add to the tree                           */{int cmp;                                /* result of strcmp */if (*ptr == NULL)   *ptr = rec;else {   cmp = strcmp(rec->str, (*ptr)->str);   if (cmp < 0)      Add(&((*ptr)->left), rec);   else if (cmp > 0)      Add(&((*ptr)->right), rec);   }}void main (void)/* Main program                                                 */{char str[20];                           /* work string */treePtr tPtr;                           /* work pointer */do {   printf("string: ");                  /* get a string */   scanf("%19[^\n]%*1[\n]", str);   if (strlen(str)) {                                        /* create a new record */      tPtr = (treePtr) malloc(sizeof(treeStruct));      tPtr->left = NULL;      tPtr->right = NULL;      strcpy(tPtr->str, str);      Add(&tree, tPtr);                 /* add it to the tree */      }   }while (strlen(str));                    /* loop until no string is given */} 