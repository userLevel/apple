/* Move a "robot" around on the graphics screen */#include <stdio.h>#include <ctype.h>#include <string.h>#include <quickdraw.h>#define MAXLENGTH 10                    /* length of a word */#define MAXLINE 256                     /* max length of a line */#define MOVEX 30                        /* distance of one move */#define MOVEY 10                                        /* command subjects */typedef enum {none, up, down, left, right} subjectType;typedef enum {nada, go, stop} verbType; /* commands */char cline[MAXLINE];                    /* command line */int lineIndex;                          /* index of next char in line */char token[MAXLENGTH];                  /* last word read */subjectType subject;                    /* subject of the last command */verbType verb;                          /* verb of the last command */void GetToken(void)/* Read a word from the command line                            *//*                                                              *//* Variables:                                                   *//*    f - source file                                           *//*    cline - source line                                       *//*    lineIndex - index to next char in source line             */{int len = 0;                            /* length of the string */                                        /* skip to the first character */while ((! isalpha(cline[lineIndex])) && (lineIndex <= strlen(cline)))   ++lineIndex;                                        /* read the word */while ((lineIndex <= strlen(cline)) && (isalpha(cline[lineIndex]))) {   if (len < MAXLENGTH-1) {      token[len] = toupper(cline[lineIndex]);      ++len;      }   ++lineIndex;   }token[len] = (char) 0;                  /* set the null terminator */}void GetAction (void)/* Find out what the player wants to do                         *//*                                                              *//* Variables:                                                   *//*    verb - action to take                                     *//*    subject - what we do the action to or with                */{int done = 0;                           /* loop exit variable */do {   scanf("%255[^\n]%*1[\n]", cline);    /* get a line */   lineIndex = 0;   verb = nada;                         /* start with no subject,verb */   subject = none;   do {      GetToken();                       /* get a token */                                        /* handle a subject */      if ((strcmp(token, "NORTH") == 0)         || (strcmp(token, "UP") == 0))         subject = up;      else if ((strcmp(token, "SOUTH") == 0)         || (strcmp(token, "DOWN") == 0))         subject = down;      else if ((strcmp(token, "EAST") == 0)         || (strcmp(token, "RIGHT") == 0))         subject = right;      else if ((strcmp(token, "WEST") == 0)         || (strcmp(token, "LEFT") == 0))         subject = left;                                        /* handle a verb */      else if ((strcmp(token, "QUIT") == 0)         || (strcmp(token, "STOP") == 0))         verb = stop;      else if ((strcmp(token, "GO") == 0)         || (strcmp(token, "MOVE") == 0))         verb = go;      }   while (strlen(token));   switch (verb) {                      /* make sure the input is consistent */      case nada:         printf("Please tell me what to do (go or stop).\n");         break;      case stop:         done = 1;         break;      case go:         if (subject == none)            printf("Please tell me which way to go.\n");         else            done = 1;         break;      }   }while (!done);}void DrawPoint (int x, int y, int color)/* Draw the robot                                               *//*                                                              *//* Parameters:                                                  *//*    x,y - position of the robot                               *//*    color - robot color                                       */{SetSolidPenPat(color);SetPenMode(0);SetPenSize(9,3);MoveTo(x,y);LineTo(x,y);}void main(void)/* main program                                                 */{int x = 60, y = 20;                     /* position of the robot */DrawPoint(x, y, 0);do {   GetAction();                         /* find out what we are supposed to do */   if (verb == go) {                    /* if it is a movement then move */      DrawPoint(x, y, 3);               /* erase the old robot */      switch (subject) {                /* move the robot */         case up:       y -= MOVEY;                        break;         case down:     y += MOVEY;                        break;         case left:     x -= MOVEX;                        break;         case right:    x += MOVEX;                        break;         }      DrawPoint(x, y ,0);               /* draw the robot in the new spot */      }   }while (verb != stop);}