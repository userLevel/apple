/* Write the number of times a word occurs in a file */#include <stdio.h>#include <stdlib.h>#include <string.h>#include <ctype.h>#define MAXLENGTH 30                    /* length of a word */#define FNAME "prob.13.2.cc"            /* file name to scan */typedef struct symbolStruct {           /* symbol table entry */   struct symbolStruct *next;           /* ptr to next entry */   int count;                           /* # of occurrences */   char symbol[MAXLENGTH];              /* symbol */   }   symbolStruct;typedef symbolStruct *symbolPtr;        /* ptr to a symbol table entry */char token[MAXLENGTH];                  /* last word read */char ch = ' ';                          /* last character read */symbolPtr table = NULL;                 /* the symbol table */FILE *f;                                /* source file */void GetToken(void)/* Read a word from the source file                             *//*                                                              *//* Variables:                                                   *//*    f - source file                                           *//*    token - string read                                       */{int len = 0;                            /* length of the string */while ((! isalpha(ch)) && (ch != EOF))  /* skip to the first character */   ch = fgetc(f);while ((ch != EOF) && (isalpha(ch))) {  /* read the word */   if (len < MAXLENGTH-1) {      token[len] = ch;      ++len;      }   ch = fgetc(f);   }token[len] = (char) 0;                  /* set the null terminator */}void Insert (void)/* Insert a word in the symbol table                            *//*                                                              *//* Variables:                                                   *//*    token - symbol                                            *//*    table - pointer to the first element in the symbol        *//*       table                                                  */{symbolPtr ptr;                          /* work pointer */int len;                                /* length of the string */ptr = table;                            /* see if the symbol already exists */while (ptr != NULL) {   if (strcmp(ptr->symbol, token) == 0) {      ++ptr->count;                     /* yes -> update the count and exit */      return;      }   ptr = ptr->next;   }                                        /* no -> create a new entry */ptr = (symbolPtr) malloc(sizeof(symbolStruct));ptr->next = table;table = ptr;ptr->count = 1;strcpy(ptr->symbol, token);}void PrintSymbols (void)/* Print the symbol table                                       *//*                                                              *//* Variables:                                                   *//*    table - pointer to the first element in the symbol        *//*       table                                                  */{symbolPtr ptr;                          /* work pointer */ptr = table;while (ptr != NULL) {   printf("%10d  %s\n", ptr->count, ptr->symbol);   ptr = ptr->next;   }}void main(void)/* main program                                                 */{f = fopen(FNAME, "r");                  /* open the file */if (f == NULL) {   printf("Could not open %s.\n", FNAME);   return;   }do {                                    /* scan the file */   GetToken();   if (strlen(token))      Insert();   }while (strlen(token));PrintSymbols();                         /* print the symbol table */fclose(f);                              /* close the file */}