/* Implement the drunkard's walk */#include <stdio.h>#include <stdlib.h>#include <quickdraw.h>#define WIDTH 3                         /* width of a pixel */void main(void){static unsigned left = 150 - 20*WIDTH;  /* dimensions of the walk area */static unsigned right = 150 + 20*WIDTH;static unsigned top = 40 - 20;static unsigned bottom = 40 + 20;static unsigned x = 150, y = 40;        /* starting position */static tx, ty;                          /* temp x, y (for animation) */static int steps = 0;                   /* # steps taken */static rval;                            /* number generated by rand() */srand(12345);                           /* initialize rand() */SetPenSize(3,1);                        /* set up the graphics screen */SetSolidPenPat(0);                      /* plot the initial point */MoveTo(x, y);LineTo(x, y);MoveTo(left, top);                      /* draw the confining box */LineTo(right, top);LineTo(right, bottom);LineTo(left, bottom);LineTo(left, top);do {   tx = x;                              /* save the current point */   ty = y;   rval = rand() % 3;                   /* update x */   if (rval == 0)      x -= WIDTH;   else if (rval == 2)      x += WIDTH;   rval = rand() % 3;                   /* update y */   if (rval == 0)      --y;   else if (rval == 2)      ++y;   SetSolidPenPat(3);                   /* erase the old point */   MoveTo(tx, ty);   LineTo(tx, ty);   SetSolidPenPat(0);                   /* draw the new point */   MoveTo(x, y);   LineTo(x, y);   ++steps;                             /* update the step count */   }                                    /* loop if not at the edge */while ((x != left) && (x != right) && (y != top) && (y != bottom));printf("The walk took %d steps.\n", steps); /* write the results */}