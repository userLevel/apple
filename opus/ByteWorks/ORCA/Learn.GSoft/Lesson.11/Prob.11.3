      REM Move a "robot" around on the text screen.      CONST NONE = 0:! "empty" indicator      CONST UP = 1:! command subjects      CONST DOWN = 2      CONST LEFT = 3      CONST RIGHT = 4      CONST GO = 1:! command verbs      CONST QUIT = 2      DIM CH AS STRING :! current character from the line      DIM LINE$ AS STRING :! command line      DIM LINEINDEX AS INTEGER :! index of next char in line      DIM TOKEN AS STRING :! last word read      DIM X AS INTEGER , Y AS INTEGER :! position of the robot      DIM SUBJECT AS INTEGER :! subject of the last command      DIM VERB AS INTEGER :! verb of the last command      ! initialize the robot      HOME      X = 40      Y = 12      CALL DRAWROBOT(X, Y, "*")      DO        ! find out what we are supposed to do        CALL GETACTION        ! if it is a movement then move        IF VERB = GO THEN          ! erase the old robot          CALL DRAWROBOT(X, Y, " ")          ! move the robot          SELECT CASE SUBJECT            CASE UP:Y = Y - 1            CASE DOWN:Y = Y + 1            CASE LEFT:X = X - 1            CASE RIGHT:X = X + 1          END SELECT          ! draw the robot in the new spot          CALL DRAWROBOT(X, Y, "*")        END IF      LOOP UNTIL VERB = QUIT      END      !----------------------------------------------------------      !      ! DrawRobot - draw the robot      !      ! Shared Variables:      !    x,y - position of the robot      !    ch - character to draw      !      !----------------------------------------------------------      SUB DRAWROBOT(X AS INTEGER , Y AS INTEGER , CH AS STRING )      HTAB X      VTAB Y      PRINT CH;      END SUB      !----------------------------------------------------------      !      ! GetLine - get a command      !      ! Parameters:      !    prompt - prompt string      !      ! Returns:      !    string - string read      !      !----------------------------------------------------------      FUNCTION GETLINE(PROMPT AS STRING ) AS STRING      DIM I AS INTEGER :! loop variable      DIM LINE$:! line read      ! erase any old line      HTAB 1      VTAB 1      FOR I = 1 TO 79        PRINT " ";      NEXT      ! get the new input      HTAB 1      LINE INPUT PROMPT;LINE$      GETLINE = LINE$      END FUNCTION      !----------------------------------------------------------      !      ! NextToken - read a word from line$      !      ! Shared Variables:      !    ch - next character from line$      !    token - string in which to return the token      !      !----------------------------------------------------------      SUB NEXTTOKEN      SHARED CH, TOKEN      ! initialize the token      TOKEN = ""      ! skip to the first character      WHILE ( ASC (CH) <> 0) AND (CH < "A" OR CH > "Z")        CALL NEXTCH      WEND      ! read the word      WHILE ( ASC (CH) <> 0) AND (CH >= "A" AND CH <= "Z")        TOKEN = TOKEN + CH        CALL NEXTCH      WEND      END SUB      !----------------------------------------------------------      !      ! NextCh - get the next character from line$      !      ! Shared Variables:      !    ch - next character from line$      !    line$ - line containing the characters      !    lineindex - index of the character ch in line$      !      ! Notes: The end of a line is reported as a space      !    character.  Characters are converted to uppercase.      !      !----------------------------------------------------------      SUB NEXTCH      SHARED CH, LINE$, LINEINDEX      ! check for the end of the line      IF LINEINDEX > LEN (LINE$) THEN        CH = ""      ELSE        LINEINDEX = LINEINDEX + 1        IF LINEINDEX > LEN (LINE$) THEN          ! handle an end of line          CH = " "        ELSE          ! report the next character          CH = MID$ (LINE$, LINEINDEX, 1)          IF CH >= "a" AND CH <= "z" THEN            CH = CHR$ ( ASC (CH) - 32)          END IF        END IF      END IF      END SUB      !----------------------------------------------------------      !      ! GetAction - find out what the player wants to do      !      ! Shared Variables:      !    ch - next character from line$      !    line$ - line containing the characters      !    lineindex - index of the character ch in line$      !    verb - action to take      !    subject - what we do the action to or with      !    none, go, quit - verbs      !    up, down, left, right - subjects      !    token - string in which to return the token      !      !----------------------------------------------------------      SUB GETACTION      SHARED CH, LINE$, LINEINDEX, TOKEN      SHARED SUBJECT, VERB      SHARED NONE, UP, DOWN, LEFT, RIGHT, GO, QUIT      DIM PROMPT AS STRING :! Prompt for the line input      ! start with no subject or verb      VERB = NONE      SUBJECT = NONE      ! set up a default prompt      PROMPT = "Your command, Sir: "      WHILE VERB = NONE        ! get a command line        LINE$ = GETLINE(PROMPT)        ! set up the scanner        CH = " "        LINEINDEX = 0        CALL NEXTCH        ! handle the command        DO          ! get the next token          CALL NEXTTOKEN          SELECT CASE TOKEN              ! handle a subject            CASE "NORTH", "UP":SUBJECT = UP            CASE "SOUTH", "DOWN":SUBJECT = DOWN            CASE "EAST", "RIGHT":SUBJECT = RIGHT            CASE "WEST", "LEFT":SUBJECT = LEFT              ! handle a verb            CASE "QUIT", "STOP":VERB = QUIT            CASE "GO", "MOVE":VERB = GO          END SELECT        LOOP UNTIL LEN (TOKEN) = 0        ! make sure the input is complete and consistent        SELECT CASE VERB          CASE NONE            PROMPT = "Please tell me what to do (go or stop)."          CASE GO            IF SUBJECT = NONE THEN              PROMPT = "Please tell me which way to go."              VERB = NONE            END IF        END SELECT      WEND      END SUB