      REM Draw a ball bouncing across the screen.      DIM X AS INTEGER , Y AS INTEGER :! Coordinates for the ball      DIM X2 AS INTEGER , Y2 AS INTEGER :! New position for the ball      DIM XSPEED AS INTEGER , YSPEED AS INTEGER :! Speed of the ball      DIM ITER AS INTEGER :! Number of iterations      DIM I AS INTEGER :! loop counter      ! Get the ball's initial position, speed, and the number      ! of animated frames.      INPUT "Starting X position: ";X      INPUT "Starting Y position: ";Y      INPUT "X Speed            : ";XSPEED      INPUT "Y Speed            : ";YSPEED      INPUT "Number of steps    : ";ITER      ! Make sure the starting position is on the screen.      IF X < 0 THEN        X = 0      ELSE IF X > 319 THEN        X = 319      END IF      IF Y < 0 THEN        Y = 0      ELSE IF Y > 199 THEN        Y = 199      END IF      ! Set up for graphics      HGR      SETPENMODE (2)      SETPENSIZE (4, 4)      SETSOLIDPENPAT (15)      ! Draw the ball in the starting position.      MOVETO (X, Y)      LINETO (X, Y)      ! Animate the ball.      FOR I = 1 TO ITER        ! Find the new X position for the ball        X2 = X + XSPEED        IF X2 < 0 THEN          X2 = 0          XSPEED = - XSPEED        ELSE IF X2 > 319 THEN          X2 = 319          XSPEED = - XSPEED        END IF        ! Find the new Y position for the ball        Y2 = Y + YSPEED        IF Y2 < 0 THEN          Y2 = 0          YSPEED = - YSPEED        ELSE IF Y2 > 199 THEN          Y2 = 199          YSPEED = - YSPEED        END IF        ! Draw the ball at the new position.        MOVETO (X2, Y2)        LINETO (X2, Y2)        ! Erase the old ball.        MOVETO (X, Y)        LINETO (X, Y)        ! Update the ball position.        X = X2        Y = Y2      NEXT      INPUT "";A$