      REM This program reads in a list of integers and then prints      REM them in the order read.  The program stops when a zero value      REM is read.      TYPE LISTRECORD        NEXTP AS POINTER TO LISTRECORD        I AS INTEGER      END TYPE      TYPE LISTPOINTER AS POINTER TO LISTRECORD      DIM FIRST AS LISTPOINTER:! points to the top item in the first      CALL GETLIST(FIRST):! read a list      CALL PRINTLIST(FIRST):! print a list      END      !----------------------------------------------------------      !      ! GetList - Read a list from the keyboard      !      ! Parameters:      !    first - pointer to the head of the list      !      !----------------------------------------------------------      SUB GETLIST(FIRST AS LISTPOINTER)      DIM I AS INTEGER :! value read from the keyboard      DIM TEMP AS LISTPOINTER:! work pointer      DIM LAST AS LISTPOINTER:! points to the last record in the list      ! initialize the list pointer      FIRST = NIL      DO        ! read a value        INPUT "Enter a number: ";I        IF I <> 0 THEN          ! allocate a record          ALLOCATE (TEMP)          ! no forward link          TEMP^.NEXTP = NIL          ! place i in the record          TEMP^.I = I          ! put the record in the list          IF FIRST = NIL THEN            FIRST = TEMP          ELSE            LAST^.NEXTP = TEMP          END IF          LAST = TEMP        END IF      LOOP UNTIL I = 0      END SUB      !----------------------------------------------------------      !      ! PrintList - Print a list      !      ! Parameters:      !    first - pointer to the head of the list      !      !----------------------------------------------------------      SUB PRINTLIST(FIRST AS LISTPOINTER)      DIM TEMP AS LISTPOINTER:! work pointer      WHILE FIRST <> NIL        ! remove an item from the list        TEMP = FIRST        FIRST = TEMP^.NEXTP        ! print the value        PRINT TEMP^.I        ! free the memory        DISPOSE (TEMP)      WEND      END SUB