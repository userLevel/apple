/***************************************************************** Globals module for the SpeakIt program.** Written by Barbara Allred and Mike Westerfield** Copyright 1991, Byte Works, Inc.* Copyright 1987-1991, First Byte, Inc.****************************************************************/#pragma keep "globals"#pragma noroot#pragma optimize 9#define dtItemListLength 20#include "globals.h"                                        /* General variables */                                        /*********************/int numWindows = 0;                     /* # currently open windows */int userWindows = 0;                    /* # open user windows */dictControls dictCtls;                  /* dict's control hndls */windowRec userWind[] = {                /* info to track windows */   {0, 0, 0L, 0, "\p                 ", 0L, 0L, 0, 0L},   {0, 0, 0L, 0, "\p                 ", 0L, 0L, 0, 0L},   {0, 0, 0L, 0, "\p                 ", 0L, 0L, 0, 0L},   {0, 0, 0L, 0, "\p                 ", 0L, 0L, 0, 0L},   {0, 0, 0L, 0, "\p                 ", 0L, 0L, 0, 0L},   {0, 0, 0L, 0, "\p                 ", 0L, 0L, 0, 0L},   {0, 0, 0L, 0, "\p                 ", 0L, 0L, 0, 0L},   {0, 0, 0L, 0, "\p                 ", 0L, 0L, 0, 0L},   {0, 0, 0L, 0, "\p                 ", 0L, 0L, 0, 0L},   {0, 0, 0L, 0, "\p                 ", 0L, 0L, 0, 0L},   {0, 0, 0L, 0, "\p                 ", 0L, 0L, 0, 0L}};int myID;                               /* SpeakIt's user ID */boolean done = FALSE;                   /* true if user selects Quit */handle buffer;                          /* buffer for window's text */long bufferSize;                        /* size of this buffer */TEInfoRec textInfo;                     /* # chars/# lines in document */int nextEntry = 0;                      /* entry # of next dict. element */boolean dictChanged = FALSE;            /* true if dict. changed since saved */gsosInString15 fileDName = {            /* name when dict is from file */   15, "               "};ListTemplate listTempl = {              /* dict list control template */   14, 9L, {22, 36, 74, 536}, 0x89000000L, 0, 0x1400, 0L, 0, 5, 6, 0,   0L, 10, 10, NULL   };                                        /* Data structures for GS/OS calls */                                        /***********************************/minGSOSOutString options = {6, 4};OpenRecGS openRec = {   15, 0, 0L, 0x0003, 0, 0, 0, 0L, 0,   {0, 0, 0, 0, 0, 0, 0, 0},   {0, 0, 0, 0, 0, 0, 0, 0},   (void *) &options, 0L, 0L, 0L, 0L   };IORecGS readRec = {   5, 0, 0L, 0L, 0L, 0   };RefNumRecGS closeRec = {1, 0};NameRecGS destroyRec = {1, 0L};IORecGS writeRec = {5, 0, 0L, 0L, 0L, 0};FileInfoRecGS getFileInfoRec = {   12, NULL, 0, 0, 0L, 0,   {0, 0, 0, 0, 0, 0, 0, 0},   {0, 0, 0, 0, 0, 0, 0, 0},   (void *) &options, 0L, 0L, 0L, 0L   };CreateRecGS createRec = {   7, NULL, 0x00C3, 0x0004, 0L, 1, 0L, 0L   };SetPositionRecGS setEOFRec = {   3, 0, 0, 0L   };                                        /* Common button titles */                                        /************************/char okTitle[] = "\pOK";                /* OK button's descriptor */char cancelTitle[] = "\pCancel";        /* Cancel button's descriptor */char yesTitle[] = "\pYes";              /* Yes button's descriptor */char noTitle[] = "\pNo";                /* No button's descriptor */                                        /* Set Parameters dialog */                                        /*************************/char item00pointerparm[] =              /* male btn's text */   "\pMale voice";ItemTemplate maleParm = {               /* Male voice radio button */   3,   {17, 12, 30, 126},   12, (void *) &item00pointerparm,   1, 1, NULL   };char item01pointerparm[] =              /* female btn's text */   "\pFemale voice";ItemTemplate femaleParm = {             /* Female voice radio button */   4,   {30, 11, 43, 140},   12, (void *) &item01pointerparm,   0, 1, NULL   };char item02pointerparm[] =              /* title text */   "\pSet speech parameters";ItemTemplate item02parm = {             /* Set parameters title */   2,   {3, 111, 13, 270},   0x800F, (void *) &item02pointerparm,   21, 0, NULL   };char item03pointerparm[] =              /* treble btn's text */   "\pTreble";ItemTemplate trebleParm = {             /* Treble radio button */   6,   {72, 12, 85, 97},   12, (void *) &item03pointerparm,   0, 2, NULL   };char item04pointerparm[] = "\pBass";    /* bass btn's text */ItemTemplate bassParm = {               /* Bass radio button */   7,   {58, 10, 71, 80},   12, (void *) &item04pointerparm,   1, 2, NULL   };minPString pitch = "\p5";               /* pitch box's text */ItemTemplate item05parm = {             /* Pitch edit line box */   8,   {19, 355, 32, 378},   17, (void *) &pitch,   1, 0, NULL   };minPString speed = "\p5";               /* speed box's text */ItemTemplate item06parm = {             /* Speed edit line box */   9,   {35, 355, 48, 378},   17, (void *) &speed,   1, 0, NULL   };minPString volume = "\p5";              /* volume box's text */ItemTemplate item07parm = {             /* Volume edit line box */   10,   {51, 355, 64, 378},   17, (void *) &volume,   1, 0, NULL   };char item08pointerparm[] = "\pPitch";   /* pitch btn's text */ItemTemplate item08parm = {             /* title for Pitch edit box */   11,   {20, 296, 30, 334},   0x800F, (void *) &item08pointerparm,   5, 0, NULL   };char item09pointerparm[] = "\pSpeed";   /* speed btn's text */ItemTemplate item09parm = {             /* title for Speed edit box */   12,   {36, 296, 46, 336},   0x800F, (void *) &item09pointerparm,   5, 0, NULL   };char item10pointerparm[] = "\pVolume";  /* volume btn's text */ItemTemplate item10parm = {             /* title for Volume edit box */   13,   {52, 297, 62, 347},   0x800F, (void *) &item10pointerparm,   6, 0, NULL   };ItemTemplate item11parm = {             /* OK button */   1,   {94, 100, 107, 155},   10, (void *) &okTitle,   0, 1, NULL   };ItemTemplate item12parm = {             /* Cancel button */   2,   {94, 216, 107, 302},   010, (void *) &cancelTitle,   0, 0, NULL   };DialogTemplate setParmsDlg = {          /* Set parameters dialog box */   {40, 96, 156, 507},   -1, 0L,   &maleParm,   &femaleParm,   &item02parm,   &trebleParm,   &bassParm,   &item05parm,   &item07parm,   &item06parm,   &item08parm,   &item09parm,   &item10parm,   &item11parm,   &item12parm,   NULL   };                                        /* Set Parameters error alert */                                        /******************************/char item00pointerPErr[] =              /* actual msg */   "\pValue must be between 0 and 9.";ItemTemplate item00PErr = {             /* Error message */   100,   {32, 61, 42, 276},   15, (void *) &item00pointerPErr,   30, 1, NULL   };ItemTemplate item01PErr = {             /* OK button */   1,   {48, 134, 61, 189},   10, (void *) &okTitle,   0, 1, NULL   };AlertTemplate pErrorAlert = {           /* Set parameters error alert */   {49, 136, 114, 473},   3, 0x81, 0x82, 0x83, 0x84,   &item00PErr,   &item01PErr,   NULL   };