******************************************************************  Shell macros**  These macros are used to call the built in shell functions*  provided in the ORCA shell.**  by Mike Westerfield**  Copyright 1987,1988,1991. All rights reserved.*  The Byte Works, Inc.*****************************************************************	macro&l	get_linfo &p&l	~setm	jsl	$E100A8	dc	i2'$0101'	dc	i4'&p'	~restm	mend	macro&l	getlinfo &p&l	~setm	jsl	$E100A8	dc	i2'$0101'	dc	i4'&p'	~restm	mend	macro&l	set_linfo &p&l	~setm	jsl	$E100A8	dc	i2'$0102'	dc	i4'&p'	~restm	mend	macro&l	setlinfo &p&l	~setm	jsl	$E100A8	dc	i2'$0102'	dc	i4'&p'	~restm	mend	macro&l	get_lang &p&l	~setm	jsl	$E100A8	dc	i2'$0103'	dc	i4'&p'	~restm	mend	macro&l	getlang &p&l	~setm	jsl	$E100A8	dc	i2'$0103'	dc	i4'&p'	~restm	mend	macro&l	set_lang &p&l	~setm	jsl	$E100A8	dc	i2'$0104'	dc	i4'&p'	~restm	mend	macro&l	setlang &p&l	~setm	jsl	$E100A8	dc	i2'$0104'	dc	i4'&p'	~restm	mend	macro&l	error &p&l	~setm	jsl	$E100A8	dc	i2'$0105'	dc	i4'&p'	~restm	mend	macro&l	set	&p&l	~setm	jsl	$E100A8	dc	i2'$0106'	dc	i4'&p'	~restm	mend	macro&l	version &p&l	~setm	jsl	$E100A8	dc	i2'$0107'	dc	i4'&p'	~restm	mend	macro&l	read_indexed &p&l	~setm	jsl	$E100A8	dc	i2'$0108'	dc	i4'&p'	~restm	mend	macro&l	readindexed &p&l	~setm	jsl	$E100A8	dc	i2'$0108'	dc	i4'&p'	~restm	mend	macro&l	init_wildcard &p&l	~setm	jsl	$E100A8	dc	i2'$0109'	dc	i4'&p'	~restm	mend	macro&l	initwildcard &p&l	~setm	jsl	$E100A8	dc	i2'$0109'	dc	i4'&p'	~restm	mend	macro&l	next_wildcard &p&l	~setm	jsl	$E100A8	dc	i2'$010A'	dc	i4'&p'	~restm	mend	macro&l	nextwildcard &p&l	~setm	jsl	$E100A8	dc	i2'$010A'	dc	i4'&p'	~restm	mend	macro&l	read_variable &p&l	~setm	jsl	$E100A8	dc	i2'$010B'	dc	i4'&p'	~restm	mend 	macro&l	readvariable &p&l	~setm	jsl	$E100A8	dc	i2'$010B'	dc	i4'&p'	~restm	mend 	macro&l	changevector &p&l	~setm	jsl	$E100A8	dc	i2'$010C'	dc	i4'&p'	~restm	mend	macro&l	execute &p&l	~setm	jsl	$E100A8	dc	i2'$010D'	dc	i4'&p'	~restm	mend	macro&l	fastfile &p&l	~setm	jsl	$E100A8	dc	i2'$010E'	dc	i4'&p'	~restm	mend	macro&l	direction &p&l	~setm	jsl	$E100A8	dc	i2'$010F'	dc	i4'&p'	~restm	mend	macro&l	redirect &p&l	~setm	jsl	$E100A8	dc	i2'$0110'	dc	i4'&p'	~restm	mend	macro&l	stop	&p&l	~setm	jsl	$E100A8	dc	i2'$0113'	dc	i4'&p'	~restm	mend	macro&l	expanddevices &p&l	~setm	jsl	$E100A8	dc	i2'$0114'	dc	i4'&p'	~restm	mend	macro&l	unsetvariable &p&l	~setm	jsl	$E100A8	dc	i2'$0115'	dc	i4'&p'	~restm	mend	macro&l	export  &p&l	~setm	jsl	$E100A8	dc	i2'$0116'	dc	i4'&p'	~restm	mend	macro&l	popvariables &p&l	~setm	jsl	$E100A8	dc	i2'$0117'	dc	i4'&p'	~restm	mend	macro&l	pushvariables &p&l	~setm	jsl	$E100A8	dc	i2'$0118'	dc	i4'&p'	~restm	mend	macro&l	setstopflag &p&l	~setm	jsl	$E100A8	dc	i2'$0119'	dc	i4'&p'	~restm	mend	macro&l	consoleout &p&l	~setm	jsl	$E100A8	dc	i2'$011A'	dc	i4'&p'	~restm	mend	macro&l	setiodevices &p&l	~setm	jsl	$E100A8	dc	i2'$011B'	dc	i4'&p'	~restm	mend	macro&l	getiodevices &p&l	~setm	jsl	$E100A8	dc	i2'$011C'	dc	i4'&p'	~restm	mend	macro&l	getcommand &p&l	~setm	jsl	$E100A8	dc	i2'$011D'	dc	i4'&p'	~restm	mend	macro&l	get_linfogs &p&l	~setm	jsl	$E100A8	dc	i2'$0141'	dc	i4'&p'	~restm	mend	macro&l	getlinfogs &p&l	~setm	jsl	$E100A8	dc	i2'$0141'	dc	i4'&p'	~restm	mend	macro&l	keypress &p&l	~setm	jsl	$E100A8	dc	i2'$011E'	dc	i4'&p'	~restm	mend	macro&l	keypressgs &p&l	~setm	jsl	$E100A8	dc	i2'$015E'	dc	i4'&p'	~restm	mend	macro&l	readkey &p&l	~setm	jsl	$E100A8	dc	i2'$011F'	dc	i4'&p'	~restm	mend	macro&l	readkeygs &p&l	~setm	jsl	$E100A8	dc	i2'$015F'	dc	i4'&p'	~restm	mend	macro&l	set_linfogs &p&l	~setm	jsl	$E100A8	dc	i2'$0142'	dc	i4'&p'	~restm	mend	macro&l	setlinfogs &p&l	~setm	jsl	$E100A8	dc	i2'$0142'	dc	i4'&p'	~restm	mend	macro&l	get_langgs &p&l	~setm	jsl	$E100A8	dc	i2'$0143'	dc	i4'&p'	~restm	mend	macro&l	getlanggs &p&l	~setm	jsl	$E100A8	dc	i2'$0143'	dc	i4'&p'	~restm	mend	macro&l	set_langgs &p&l	~setm	jsl	$E100A8	dc	i2'$0144'	dc	i4'&p'	~restm	mend	macro&l	setlanggs &p&l	~setm	jsl	$E100A8	dc	i2'$0144'	dc	i4'&p'	~restm	mend	macro&l	errorgs &p&l	~setm	jsl	$E100A8	dc	i2'$0145'	dc	i4'&p'	~restm	mend	macro&l	setgs	&p&l	~setm	jsl	$E100A8	dc	i2'$0146'	dc	i4'&p'	~restm	mend	macro&l	versiongs &p&l	~setm	jsl	$E100A8	dc	i2'$0147'	dc	i4'&p'	~restm	mend	macro&l	read_indexedgs &p&l	~setm	jsl	$E100A8	dc	i2'$0148'	dc	i4'&p'	~restm	mend	macro&l	readindexedgs &p&l	~setm	jsl	$E100A8	dc	i2'$0148'	dc	i4'&p'	~restm	mend	macro&l	init_wildcardgs &p&l	~setm	jsl	$E100A8	dc	i2'$0149'	dc	i4'&p'	~restm	mend	macro&l	initwildcardgs &p&l	~setm	jsl	$E100A8	dc	i2'$0149'	dc	i4'&p'	~restm	mend	macro&l	next_wildcardgs &p&l	~setm	jsl	$E100A8	dc	i2'$014A'	dc	i4'&p'	~restm	mend	macro&l	nextwildcardgs &p&l	~setm	jsl	$E100A8	dc	i2'$014A'	dc	i4'&p'	~restm	mend	macro&l	read_variablegs &p&l	~setm	jsl	$E100A8	dc	i2'$014B'	dc	i4'&p'	~restm	mend 	macro&l	readvariablegs &p&l	~setm	jsl	$E100A8	dc	i2'$014B'	dc	i4'&p'	~restm	mend 	macro&l	changevectorgs &p&l	~setm	jsl	$E100A8	dc	i2'$014C'	dc	i4'&p'	~restm	mend	macro&l	executegs &p&l	~setm	jsl	$E100A8	dc	i2'$014D'	dc	i4'&p'	~restm	mend	macro&l	fastfilegs &p&l	~setm	jsl	$E100A8	dc	i2'$014E'	dc	i4'&p'	~restm	mend	macro&l	directiongs &p&l	~setm	jsl	$E100A8	dc	i2'$014F'	dc	i4'&p'	~restm	mend	macro&l	redirectgs &p&l	~setm	jsl	$E100A8	dc	i2'$0150'	dc	i4'&p'	~restm	mend	macro&l	stopgs &p&l	~setm	jsl	$E100A8	dc	i2'$0153'	dc	i4'&p'	~restm	mend	macro&l	expanddevicesgs &p&l	~setm	jsl	$E100A8	dc	i2'$0154'	dc	i4'&p'	~restm	mend	macro&l	unsetvariablegs &p&l	~setm	jsl	$E100A8	dc	i2'$0155'	dc	i4'&p'	~restm	mend	macro&l	exportgs &p&l	~setm	jsl	$E100A8	dc	i2'$0156'	dc	i4'&p'	~restm	mend	macro&l	popvariablesgs &p&l	~setm	jsl	$E100A8	dc	i2'$0157'	dc	i4'&p'	~restm	mend	macro&l	pushvariablesgs &p&l	~setm	jsl	$E100A8	dc	i2'$0158'	dc	i4'&p'	~restm	mend	macro&l	setstopflaggs &p&l	~setm	jsl	$E100A8	dc	i2'$0159'	dc	i4'&p'	~restm	mend	macro&l	consoleoutgs &p&l	~setm	jsl	$E100A8	dc	i2'$015A'	dc	i4'&p'	~restm	mend	macro&l	setiodevicesgs &p&l	~setm	jsl	$E100A8	dc	i2'$015B'	dc	i4'&p'	~restm	mend	macro&l	getiodevicesgs &p&l	~setm	jsl	$E100A8	dc	i2'$015C'	dc	i4'&p'	~restm	mend	macro&l	getcommandgs &p&l	~setm	jsl	$E100A8	dc	i2'$015D'	dc	i4'&p'	~restm	mend	macro&l	~restm&l	anop	aif	(&~la+&~li)=2,.i	sep	#32*(.not.&~la)+16*(.not.&~li)	aif	&~la,.h	longa off.h	aif	&~li,.i	longi off.i	mend	macro&l	~setm&l	anop	aif	c:&~la,.b	gblb	&~la	gblb	&~li.b&~la	setb	s:longa&~li	setb	s:longi	aif	s:longa.and.s:longi,.a	rep	#32*(.not.&~la)+16*(.not.&~li)	longa on	longi on.a	mend	