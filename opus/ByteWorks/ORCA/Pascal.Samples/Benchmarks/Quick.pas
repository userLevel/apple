{$keep 'Quick'}{$optimize -1, stacksize 30000}{--------------------------------------------------------------}{                                                              }{  QuickSort                                                   }{                                                              }{  Creates an array of long integers, then sorts the array.    }{                                                              }{  Due to the amount of stack space required, this program     }{  cannot be executed from the desktop environment.  It must   }{  be executed from the text based shell.                      }{                                                              }{--------------------------------------------------------------}program Quick(output);const  maxNum  = 999;                        {size of array to sort - 1}  count   = 10;                         {# of iterations}  modulus = $00020000;                  {for random number generator}  c       = 13849;  a       = 25173;type  arrayType = array[0..maxNum] of longint;var  i,j: integer;                         {loop variables}  seed: longint;                        {seed for random number generator}  buffer: arrayType;                    {array to sort}  pass: boolean;                        {for checking the array}  procedure Quick(lo,hi: integer; var base: arrayType);  var    i,j: integer;    pivot,temp: longint;  begin  if hi > lo then begin    pivot := base[hi];    i := lo-1;    j := hi;    repeat      repeat i := i+1 until base[i] >= pivot;      repeat j := j-1 until base[j] <= pivot;      temp := base[i];      base[i] := base[j];      base[j] := temp;    until j <= i;    base[j] := base[i];    base[i] := base[hi];    base[hi] := temp;    Quick(lo,i-1,base);    Quick(i+1,hi,base);    end;  end; {Quick}  function Random(size: longint): longint;  begin  seed := seed*a+c;  Random := seed mod size;  end;beginseed := 7;writeln('Filling array and sorting ',count:1,' times.');for i := 1 to count do begin  for j := 0 to maxNum do    buffer[j] := abs(Random(modulus));  Quick(0,maxNum,buffer);  end;writeln('Done.');pass := true;for i := 0 to maxNum-1 do  if buffer[i] > buffer[i+1] then    pass := false;if pass then  writeln('The last array is sorted properly.')else  writeln('The last array is NOT sorted properly!');end.