{$keep 'Artilery'}{-----------------------------------------------}{                                               }{  Artilery                                     }{                                               }{  This classic interactive text game lets you  }{  pick the angle of your artilery gun in       }{  an attempt to knock out the enemy position.  }{  The computer picks a secret distance.  When  }{  you fire, you will be told how much you      }{  missed by, and must fire again.              }{                                               }{-----------------------------------------------}program Artilery(input, output);uses Common, MscToolSet;const   blastRadius = 50.0;          {max distance from target to get a hit}   degreesToRadians = 0.01745329; {convert from degrees to radians}   velocity    = 434.6;         {muzzle velocity}var   angle: real;                 {angle}   asciiTime: packed array[1..20] of char; {time - for random #s}   distance: real;              {distance to the target}   done: boolean;               {is there a hit, yet?}   time: real;                  {time of flight}   tries: integer;              {number of shots}   x: real;                     {distance to impact}   vx,vy: real;                 {x, y velocities}begin{choose a distance to the target}ReadAsciiTime(@asciiTime);distance := (ord(asciiTime[16])&$0F*10 + ord(asciiTime[17])&$0F)*100;{not done yet...}done := false;tries := 1;{shoot 'til we hit it}repeat   {get the firing angle}   write('Firing angle: ');   readln(angle);   {compute the muzzle velocity in x, y}   angle := angle*degreesToRadians;   vx := cos(angle)*velocity;   vy := sin(angle)*velocity;   {find the time of flight}   {(velocity = acceleration*time, two trips)}   time := 2.0*vy/32.0;   {find the distance}   {(velocity = distance/time)}   x := vx*time;   {see what happened...}   if abs(distance-x) < blastRadius then begin      done := true;      write('A hit, after ',tries:1);      if tries = 1 then        writeln(' try!')      else        writeln(' tries!');      case tries of         1: writeln('(A lucky shot...)');         2: writeln('Phenominal shooting!');         3: writeln('Good shooting.');         otherwise: writeln('Practice makes perfect - try again.');         end; {case}      end {if}   else if distance > x then      writeln('You were short by ',round(distance-x):1,' feet.')   else      writeln('You were over by ',round(x-distance):1,' feet.');   tries := tries+1;until done;end.