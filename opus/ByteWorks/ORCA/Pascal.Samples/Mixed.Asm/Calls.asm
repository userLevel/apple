         mcopy calls.macros******************************************************************  These subroutines show how to use the subroutine and return*  macros to get parameters passed by Pascal and to return*  function values.**  The Subroutine macro has a parameter list, enclosed in*  parenthesis, and a work space count.  Each of the parameters*  starts with the length of the parameter in bytes.  This is*  followed by a colon, and the name of the parameter.  If there*  is more than one parameter, they are separated by commas.*  The parameters appear in the same order as they do in Pascal.*  The parameters are located in direct page, so you can use*  the pointers as is.  (See the Sort example for a use of a*  pointer.)**  The work space is the number of bytes of direct page that you*  want for your own use.  Your work space starts at direct page*  location 0, and continues from there.  In the simple functions,*  zeros are stored to the work space, showing that it can*  definitely be used!**  The return macro can be used from both functions and procedures.*  From a procedure, no operand is coded at all.  From a function,*  code a single parameter using the same format as in the*  subroutine macro: a length, a colon, and the name of the value.*  Keep in mind that real and double values are always returned in*  extended format, and that they must not be located in direct*  page.******************************************************************BoolFunc start                          echo a boolean         subroutine (2:b),4         stz   0         stz   2         return 2:b         endByteFunc start                          echo a byte         subroutine (2:b),4         stz   0         stz   2         return 2:b         endCharFunc start                          echo a character         subroutine (2:c),4         stz   0         stz   2         return 2:c         endIntFunc  start                          echo an integer         subroutine (2:c),4         stz   0         stz   2         return 2:c         endRealFunc start                          echo a real         subroutine (10:r),4         phb         phk         plb         lda   r         sta   lr         lda   r+2         sta   lr+2         lda   r+4         sta   lr+4         lda   r+6         sta   lr+6         lda   r+8         sta   lr+8         stz   0         stz   2         plb         return 10:lrlr       ds    10         endLongIntFunc start                       echo a long integer         subroutine (4:l),4         stz   0         stz   2         return 4:l         endSort     start                          sort a 3 element array of         subroutine (4:a),0             positive integers         ldy   #2                       if a[0] >= a[1] then         lda   [a]         cmp   [a],y         blt   lb1         tax                              swap them         lda   [a],y         sta   [a]         txa         sta   [a],ylb1      lda   [a],y                    if a[1] >= a[2] then         ldy   #4         cmp   [a],y         blt   lb2         tax                              swap them         lda   [a],y         ldy   #2         sta   [a],y         txa         ldy   #4         sta   [a],ylb2      ldy   #2                       if a[0] >= a[1] then         lda   [a]         cmp   [a],y         blt   lb3         tax                              swap them         lda   [a],y         sta   [a]         txa         sta   [a],ylb3      return         end