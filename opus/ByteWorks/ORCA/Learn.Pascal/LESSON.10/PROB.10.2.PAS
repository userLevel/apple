{ Hex to decimal converter }program HextoDec (input, output);const   lineLength = 20;                     {max length of a line}var   i: 1..lineLength;                    {loop index}   line: string[lineLength];            {input line}   val: longint;                        {decimal value}   function ToUpper(ch: char): char;   { Convert a character to uppercase           }   {                                            }   { Parameters:                                }   {    ch - character to convert               }   {                                            }   { Returns:                                   }   {    Uppercase equivalent of ch              }   begin {ToUpper}   if ch in ['a'..'z'] then      ch := chr(ord(ch) - ord('a') + ord('A'));   ToUpper := ch;   end; {ToUpper}   function Value(ch: char): integer;   { Return the value of a hexadecimal digit    }   {                                            }   { Parameters:                                }   {    ch - character to convert               }   {                                            }   { Returns:                                   }   {    Numeric value of the hexadecimal digit  }   var      val: integer;                     {value of the character}   begin {Value}   ch := ToUpper(ch);   val := ord(ch) - ord('0');   if val > 9 then      val := val-7;   Value := val;   end; {Value}beginrepeat   write('Hex number:');   readln(line);   if length(line) <> 0 then begin      val := 0;      for i := 1 to length(line) do         if line[i] in ['0'..'9','A'..'F','a'..'f'] then            val := val*16 + Value(line[i])         else            writeln(line[i], ' is not a valid hexadecimal digit.');      writeln('Decimal number: ', val:1);      end; {if}until length(line) = 0;end.