{ Read a file name from the command line }program CLine (input, output);const   fNameLength = 64;                      {max length of a file name}type   fNameType = string[fNameLength];       {type of a file name}var   fName: fNameType;                      {file name}procedure GetFileName (var fName: fNameType);{ Read a file name from the command line.  If none is given,   }{ prompt for one.  Return a null string if no name is given    }{ when a name is asked for.                                    }{                                                              }{ Parameters:                                                  }{    fName - the file name is returned here                    }var   cline: string[255];                    {command line}   i,j: integer;                          {string indices}   procedure SkipBlanks;   { Skip blanks in the command line                           }   begin {SkipBlanks}   while (i < length(cline)) and (cline[i] = ' ') do      i := i+1;   end; {SkipBlanks}begin {GetFileName}CommandLine(cline);                       {read the command line}i := 1;SkipBlanks;                               {skip leading blanks}while (i < length(cline))                 {skip the program name}   and (cline[i] <> ' ') do   i := i+1;SkipBlanks;                               {skip to the file name}if i >= length(cline) then begin          {if needed, prompt for a name}   write('File to cross reference: ');   readln(cline);   i := 1;   SkipBlanks;   end; {if}if i <= length(cline) then begin   j := 0;                                {read the file name}   while (j < fNameLength)      and (i <= length(cline))      and (cline[i] <> ' ') do begin      j := j+1;      fName[j] := cline[i];      i := i+1;      end; {while}   fName[0] := chr(j);                    {set the length}   SkipBlanks;                            {check for extra input}   if i <= length(cline) then      writeln('Extra input ignored');   end {if}else   fName := '';                           {return a null string}end; {GetFileName}beginGetFileName(fName);                       {Test the procedure}writeln('File name = "', fName, '"');end.