program Bounce10;uses Common, QuickDrawII;const   maxX = 316;   maxY = 83;var   i: integer;                         {loop counter}   x1,x2,x3,x4,x5,x6,x7,x8,x9,x10: integer; {x coordinates of the point}   y1,y2,y3,y4,y5,y6,y7,y8,y9,y10: integer; {y coordinates of the point}                                       {ball velocities}   vx1,vx2,vx3,vx4,vx5,vx6,vx7,vx8,vx9,vx10: integer;   vy1,vy2,vy3,vy4,vy5,vy6,vy7,vy8,vy9,vy10: integer;   procedure InitGraphics;   { Standard graphics initialization.                            }   begin {InitGraphics}   SetPenMode(0);               {pen mode = copy}   SetSolidPenPat(0);           {pen color = black}   SetPenSize(3,1);             {use a square pen}   end; {InitGraphics}   procedure MoveBall(var x, y, vx, vy: integer);   { Move a ball in the graphics window.  If the ball   }   { hits one of the sides (defined by the global       }   { constants maxX and maxY), the direction of the     }   { ball is changed.                                   }   {                                                    }   { Parameters:                                        }   {    x,y - position of the ball                      }   {    vx,vy - velocity of the ball                    }   begin {MoveBall}   SetSolidPenPat(3);           {erase the ball}   MoveTo(x,y);   LineTo(x,y);   x := x+vx;                   {move in the x direction}   if x < 0 then begin          {check for off the edge}      x := 0;      vx := -vx;      end {if}   else if x > maxX then begin      x := maxX;      vx := -vx;      end; {else}   y := y+vy;                   {move in the y direction}   if y < 0 then begin          {check for off the edge}      y := 0;      vy := -vy;      end {if}   else if y > maxY then begin      y := maxY;      vy := -vy;      end; {else}   SetSolidPenPat(0);           {draw the ball in the new spot}   MoveTo(x,y);   LineTo(x,y);   end; {MoveBall}   function RandomValue(max: integer): integer;   { Return a pseudo-random number in the range 1..max.           }   {                                                              }   { Parameters:                                                  }   {    max - largest number to return                            }   {    color - interior color of the rectangle                   }   begin {RandomValue}   RandomValue := (RandomInteger mod max) + 1;   end; {RandomValue}beginInitGraphics;                   {set up the graphics window}SetPenSize(6,2);                {use a large ball}Seed(6289);                     {initialize the random number generator}                                {set the initial ball positions}x1 := RandomValue(maxX);   y1 := RandomValue(maxY);x2 := RandomValue(maxX);   y2 := RandomValue(maxY);x3 := RandomValue(maxX);   y3 := RandomValue(maxY);x4 := RandomValue(maxX);   y4 := RandomValue(maxY);x5 := RandomValue(maxX);   y5 := RandomValue(maxY);x6 := RandomValue(maxX);   y6 := RandomValue(maxY);x7 := RandomValue(maxX);   y7 := RandomValue(maxY);x8 := RandomValue(maxX);   y8 := RandomValue(maxY);x9 := RandomValue(maxX);   y9 := RandomValue(maxY);x10 := RandomValue(maxX);  y10 := RandomValue(maxY);                                {set the initial ball velocities}vx1 := RandomValue(19)-10;  vy1 := RandomValue(7)-3;vx2 := RandomValue(19)-10;  vy2 := RandomValue(7)-3;vx3 := RandomValue(19)-10;  vy3 := RandomValue(7)-3;vx4 := RandomValue(19)-10;  vy4 := RandomValue(7)-3;vx5 := RandomValue(19)-10;  vy5 := RandomValue(7)-3;vx6 := RandomValue(19)-10;  vy6 := RandomValue(7)-3;vx7 := RandomValue(19)-10;  vy7 := RandomValue(7)-3;vx8 := RandomValue(19)-10;  vy8 := RandomValue(7)-3;vx9 := RandomValue(19)-10;  vy9 := RandomValue(7)-3;vx10 := RandomValue(19)-10; vy10 := RandomValue(7)-3;for i := 1 to 100 do begin      {animate the ball}   MoveBall(x1,y1,vx1,vy1);     {move the balls}   MoveBall(x2,y2,vx2,vy2);   MoveBall(x3,y3,vx3,vy3);   MoveBall(x4,y4,vx4,vy4);   MoveBall(x5,y5,vx5,vy5);   MoveBall(x6,y6,vx6,vy6);   MoveBall(x7,y7,vx7,vy7);   MoveBall(x8,y8,vx8,vy8);   MoveBall(x9,y9,vx9,vy9);   MoveBall(x10,y10,vx10,vy10);   end; {for}end.