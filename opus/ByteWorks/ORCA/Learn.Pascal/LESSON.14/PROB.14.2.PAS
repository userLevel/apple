{ Graphic solution to the Towers of Hanoi puzzle. }program Tower;uses Common, QuickDrawII;const   disks = 6;                           {# of disks to move}type   peg = array[1..disks] of integer;    {one peg, with contents}var   i: integer;                          {loop variable}   pegs: array[1..3] of peg;            {all three pegs}   procedure DrawDisk(disk, peg, height, color: integer);   { Draw a disk on the screen                                  }   {                                                            }   { Parameters:                                                }   {    disk - disk (i.e. size) to draw                         }   {    peg - peg to draw the disk on                           }   {    height - distance from the bottom of the pile           }   {    color - color to draw the disk                          }   var      x,y: integer;                     {position of the center of the disk}   begin {DrawDisk}   x := peg*80 - 40;                    {find the position}   y := 50 - height*4;   SetSolidPenPat(color);               {set the pen color}   MoveTo(x - disk*5, y);               {draw the disk}   LineTo(x + disk*5, y);   end; {DrawDisk}   procedure Tower(fromPeg, toPeg, sparePeg: integer; count: integer);   { Move count pegs from peg # fromPeg to peg # toPeg          }   {                                                            }   { Parameters:                                                }   {    fromPeg - peg to move the disks from                    }   {    toPeg - peg to move the disks to                        }   {    sparePeg - unused peg                                   }   {                                                            }   { Variables:                                                 }   {    pegs - the current content of each peg                  }      procedure Move (fromPeg, toPeg: integer);      { Move a disk                                             }      {                                                         }      { Parameters:                                             }      {    fromPeg - peg to move the disk from                  }      {    toPeg - peg to move the disk to                      }      var         i: integer;                    {peg array index}         disk: integer;                 {disk being moved}      begin {Move}      i := disks;                       {find the disk to move}      while pegs[fromPeg,i] = 0 do         i := i-1;      disk := pegs[fromPeg,i];          {remove the disk}      pegs[fromPeg,i] := 0;      DrawDisk(disk, fromPeg, i, 3);    {erase the disk}      i := 1;                           {find the new spot for the disk}      while pegs[toPeg,i] <> 0 do         i := i+1;      pegs[toPeg,i] := disk;            {place the disk on the peg}      DrawDisk(disk, toPeg, i, 0);      {draw the disk}      end; {Move}   begin {Tower}   if count <> 0 then begin      Tower(fromPeg, sparePeg, toPeg, count-1);      Move(fromPeg, toPeg);      Tower(sparePeg, toPeg, fromPeg, count-1);      end; {if}   end; {Tower}beginSetPenMode(0);                          {initialize the graphics pen}SetPenSize(8,3);for i := 1 to disks do begin            {set up the game}   pegs[1,i] := disks-i+1;   pegs[2,i] := 0;   pegs[3,i] := 0;   DrawDisk(pegs[1,i], 1, i, 0);   end; {for}Tower(1, 3, 2, disks);                  {move the disks}end.