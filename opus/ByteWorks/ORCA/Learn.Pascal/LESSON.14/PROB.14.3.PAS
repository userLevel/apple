{ Use recursion to reverse the elements in a linked list }program Print (output);type   listPtr = ^listRecord;   listRecord = record                  {element in the list}      next: listPtr;      value: integer;      end;var   i: integer;                          {loop variable}   list: listPtr;                       {the list}   ptr: listPtr;                        {work pointer}   procedure Print (ptr: listPtr);   { Print the values in the list in reverse order              }   begin {Print}   if ptr <> nil then begin      Print(ptr^.next);      writeln(ptr^.value);      end; {if}   end; {Print}beginfor i := 1 to 10 do begin               {create the list}   new(ptr);   ptr^.next := list;   ptr^.value := i;   list := ptr;   end; {for}Print(list);                            {print the list}end.