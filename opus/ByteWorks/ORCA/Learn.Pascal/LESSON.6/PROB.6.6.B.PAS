{ Hangman                                               }{                                                       }{ This program plays the game of Hangman.  When the     }{ game starts, you are given a word to guess.  The      }{ program displays one dash for each letter in the      }{ word.  You guess a letter.  If the letter is in the   }{ word, the computer prints the word with all letters   }{ you have guessed correctly shown in their correct     }{ positions.  If you do not guess the word, you move    }{ one step closer to being hung.  After six wrong       }{ guesses, you loose.                                   }program HangMan (input, output);const   maxWords = 10;               {possible words}   maxChars = 8;                {number of characters in each word}var   words: array[1..maxWords] of string[maxChars]; {word array}   procedure FillArray;   { Fill the word array.                               }   {                                                    }   { Variables:                                         }   {    words - word array                              }   begin {FillArray}   words[1] := 'computer';   words[2] := 'whale';   words[3] := 'megabyte';   words[4] := 'modem';   words[5] := 'chip';   words[6] := 'online';   words[7] := 'disk';   words[8] := 'monitor';   words[9] := 'window';   words[10] := 'keyboard';   end; {FillArray}   procedure GetSeed;   { Initialize the random number generator             }   var      val: integer;             {seed value}   begin {GetSeed}   write('Please enter a random number seed:');   readln(val);   seed(val);   end; {GetSeed}   function RandomValue(max: integer): integer;   { Return a pseudo-random number in the range 1..max.           }   {                                                              }   { Parameters:                                                  }   {    max - largest number to return                            }   {    color - interior color of the rectangle                   }   begin {RandomValue}   RandomValue := (RandomInteger mod max) + 1;   end; {RandomValue}beginFillArray;                      {fill the word array}GetSeed;                        {initialize the random number generator}writeln(words[RandomValue(maxWords)]); {write a random word}end.