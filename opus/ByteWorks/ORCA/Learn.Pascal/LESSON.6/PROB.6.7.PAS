{ Draw a "flower" shape by rotating a cube.             }program Flower;uses Common, QuickDrawII;const   xScale = 86;                 {x conversion factor}   yScale = 33;                 {y conversion factor}   pi = 3.1415927;              {circumference of a circle}var   color: integer;              {color of the square}   x,y: array[1..4] of real;    {points in the square}   i: integer;                  {loop variable}   procedure InitGraphics;   { Standard graphics initialization           }   begin {InitGraphics}   SetPenMode(0);               {pen mode = copy}   SetSolidPenPat(0);           {pen color = black}   SetPenSize(3,1);             {use a square pen}   end; {InitGraphics}   procedure Rotate (var x,y: real; angle,ox,oy: real);   { Rotate the point x,y about ox,oy through   }   { the angle given.                           }   {                                            }   { Parameters:                                }   {    x,y - point to rotate                   }   {    angle - angle to rotate (in radians)    }   {    ox,oy - point to rotate around          }   var      cosAngle,sinAngle: real;  {sin and cos of angle}      nx: real;                 {new x}   begin {Rotate}   x := x-ox;                   {move the point}   y := y-oy;   cosAngle := cos(angle);      {this takes time - save the results}   sinAngle := sin(angle);   nx := x*cosAngle + y*sinAngle; {rotate the point}   y := y*cosAngle - x*sinAngle;   x := nx+ox;                  {move the point back}   y := y+oy;   end; {Rotate}   procedure RotateSquare;   { Rotate the square 9 degrees                }   {                                            }   { Variables:                                 }   {    oldX,oldY - coordinates of square       }   var      i: integer;               {loop variable}   begin {RotateSquare}   for i := 1 to 4 do      Rotate(x[i], y[i], pi/20.0, 1.25, 1.25);   end; {RotateSquare}   procedure DrawSquare (color: integer);   { Draw the square                            }   {                                            }   { Parameters:                                }   {    color - color to draw                   }   begin {DrawSquare}   SetSolidPenPat(color);       {set the pen color}                                {draw the square}   MoveTo(round(x[1]*xScale), round(y[1]*yScale));   LineTo(round(x[2]*xScale), round(y[2]*yScale));   LineTo(round(x[3]*xScale), round(y[3]*yScale));   LineTo(round(x[4]*xScale), round(y[4]*yScale));   LineTo(round(x[1]*xScale), round(y[1]*yScale));   end; {DrawSquare}beginInitGraphics;                   {set up the graphics window}x[1] := 1.0;   y[1] := 1.0;     {initialize the square}x[2] := 2.0;   y[2] := 1.0;x[3] := 2.0;   y[3] := 2.0;x[4] := 1.0;   y[4] := 2.0;color := 0;                     {start with black}for i := 1 to 40 do begin   RotateSquare;                {rotate}   DrawSquare(color);           {erase the old square}   color := color+1;            {get a new color}   if color = 3 then      color := 0;   end; {for}end.