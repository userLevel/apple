{ Count the compares needed to sort a pseudo-random array with  }{ a shell sort.                                                 }program ShellSort (output);const   size = 2;                            {size of the array to sort}   trials = 100;                        {number of trial runs}var   a: array[1..size] of integer;        {array to sort}   count: integer;                      {number of compares}   i: 1..trials;                        {loop variable}   procedure Sort;   { Sort an array                                              }   {                                                            }   { Variables:                                                 }   {    a - array to sort                                       }   var      i: integer;                       {loop variable/array index}      swap: boolean;                    {was a value swapped?}      temp: integer;                    {temp; used for swapping}   begin {Sort}   repeat      swap := false;      for i := 1 to size-1 do begin         count := count+1;         if a[i] > a[i+1] then begin            temp := a[i];            a[i] := a[i+1];            a[i+1] := temp;            swap := true;            end; {if}         end; {for}   until not swap;   end; {Sort}   function RandomValue(max: integer): integer;   { Return a pseudo-random number in the range 1..max.         }   {                                                            }   { Parameters:                                                }   {    max - largest number to return                          }   begin {RandomValue}   RandomValue := (RandomInteger mod max) + 1;   end; {RandomValue}   procedure Fill;   { Fill an array                                              }   {                                                            }   { Variables:                                                 }   {    a - array to fill                                       }   var      i: integer;                       {loop variable}   begin {Fill}   for i := 1 to size do      a[i] := RandomValue(size);   end; {Fill}beginSeed(2345);                             {initialize the random number generator}count := 0;                             {no compares, so far}for i := 1 to trials do begin           {do the trial runs}   Fill;   Sort;   end; {for}                                        {print the results}writeln('The average number of compares is ', count/trials:1:2, '.');end.