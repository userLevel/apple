{ This program reads in a string, sorts the characters, and       }{ writes the string back to the shell window.  It continues doing }{ this until a string of length zero is entered. To get a string  }{ of length zero, press the RETURN key without typing any other   }{ character.                                                      }program Sort(input, output);const   max = 255;                   {max length of the input string}var   inString,                    {input string}   outString: packed array[1..max] of char; {output string}   procedure Sort;   { Sort a string                                      }   {                                                    }   { Variables:                                         }   {    inString - string to sort                       }   {    outString - reversed string                     }   var      i: integer;                 {loop variable}      index: integer;             {index into the reversed string}      temp: char;                 {temp variable; used for swapping}      noswap: boolean;            {has a swap occurred?}   begin {Sort}   outString := inString;         {make a copy of the string}   index := length(outString);    {get the length}   repeat                         {loop until the array is sorted}      noswap := true;             {no swaps, yet}      for i := 1 to index-1 do    {check each element but the last}                                  {if a swap is needed then...}         if outString[i+1] < outString[i] then begin            noswap := false;      {note that there was a swap}            temp := outString[i]; {swap the entries}            outString[i] := outString[i+1];            outString[i+1] := temp;            end; {if}   until noswap;   end; {Sort}beginrepeat                          {loop until there is no input string}   write('String  :');          {get a string}   readln(inString);   Sort;                        {sort the string}   writeln('Sorted:', outString); {write the sorted string}   writeln;until length(inString) = 0;end.