/***************************************************************** Beep** Road runner simulation.****************************************************************/#pragma lint -1#include <orca.h>#include <Event.h>#include <Menu.h>#include <QuickDraw.h>#include <Window.h>#include <MiscTool.h>#define file_Quit       256             /* menu item IDs */#define beep_Beep1      301#define beep_Beep2      302#define beep_Beep3      303BOOLEAN done;                           /* are we done, yet? */EventRecord myEvent;                    /* event record */int menuNum, menuItemNum;               /* menu number & menu item number *//***************************************************************** Beep** Beep some number of times** Parameters:*    times - number of times to beep****************************************************************/void Beep (int times){while (times--)   SysBeep();}/***************************************************************** HandleMenu** Initialize the menu bar.****************************************************************/void HandleMenu (void){switch (menuItemNum) {                  /* go handle the menu */   case file_Quit:      done = TRUE;      break;   case beep_Beep1:      Beep(1);      break;   case beep_Beep2:      Beep(2);      break;   case beep_Beep3:      Beep(3);      break;   }HiliteMenu(FALSE, menuNum);             /* unhighlight the menu */}/***************************************************************** InitMenus** Initialize the menu bar.****************************************************************/void InitMenus (void){int height;                             /* height of the largest menu */MenuRecHndl menuHand;                   /* for 'handling' menus */menuHand = NewMenu(                     /* create the beep menu */   ">> Beep \\N2\r"   "--One\\N301*11\r"   "--Two\\N302*22\r"   "--Three\\N303*33\r"   ".\r");InsertMenu(menuHand, 0);menuHand = NewMenu(                     /* create the file menu */   ">> File \\N1\r"   "--Quit\\N256*Qq\r"   ".\r");InsertMenu(menuHand, 0);height = FixMenuBar();                  /* draw the completed menu bar */DrawMenuBar();}/***************************************************************** Main program****************************************************************/int main (void){int where;                              /* where the mouse event occurred */GrafPortPtr wPtr;                       /* window where event occurred */startdesk(640);                         /* start the tools */InitMenus();                            /* set up the menu bar */InitCursor();                           /* start the arrow cursor */done = FALSE;                           /* we aren't done, yet */while (!done) {                                        /* handle the events */   if (GetNextEvent(everyEvent, &myEvent))      switch (myEvent.what) {         case mouseDownEvt:            where = FindWindow(&wPtr, myEvent.where.h, myEvent.where.v);            if (where == wInMenuBar) {               MenuSelect(&myEvent, NULL);               menuNum = (int) (myEvent.wmTaskData >> 16);               menuItemNum = (int) myEvent.wmTaskData;               if (menuItemNum != 0)                  HandleMenu();               }            break;         case keyDownEvt:         case autoKeyEvt:            if (myEvent.modifiers & appleKey) {               MenuKey(&myEvent, NULL);               menuNum = (int) (myEvent.wmTaskData >> 16);               menuItemNum = (int) myEvent.wmTaskData;               if (menuItemNum != 0)                  HandleMenu();               };            break;         }   }enddesk();}