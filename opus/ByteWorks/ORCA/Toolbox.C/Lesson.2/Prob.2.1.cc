/***************************************************************** Quit** This program creates a menu bar with one command: quit.****************************************************************/#pragma lint -1#include <orca.h>#include <Event.h>#include <Menu.h>#include <QuickDraw.h>#include <Window.h>#define file_Quit       256             /* menu item IDs */BOOLEAN done;                           /* are we done, yet? */EventRecord myEvent;                    /* event record */int menuNum, menuItemNum;               /* menu number & menu item number *//***************************************************************** HandleMenu** Initialize the menu bar.****************************************************************/void HandleMenu (void){switch (menuItemNum) {                  /* go handle the menu */   case file_Quit:      done = TRUE;      break;   }HiliteMenu(FALSE, menuNum);             /* unhighlight the menu */}/***************************************************************** InitMenus** Initialize the menu bar.****************************************************************/void InitMenus (void){int height;                             /* height of the largest menu */MenuRecHndl menuHand;                   /* for 'handling' menus */menuHand = NewMenu(                     /* create the edit menu */   ">> Edit \\N3\r"   "--Undo\\N250\r"   "--Cut\\N251\r"   "--Copy\\N252\r"   "--Paste\\N253\r"   "--Clear\\N254\r"   ".\r");InsertMenu(menuHand, 0);menuHand = NewMenu(                     /* create the file menu */   ">> File \\N1\r"   "--Quit\\N256\r"   ".\r");InsertMenu(menuHand, 0);height = FixMenuBar();                  /* draw the completed menu bar */DrawMenuBar();}/***************************************************************** Main program****************************************************************/int main (void){int where;                              /* where the mouse event occurred */GrafPortPtr wPtr;                       /* window where event occurred */startdesk(640);                         /* start the tools */InitMenus();                            /* set up the menu bar */InitCursor();                           /* start the arrow cursor */done = FALSE;                           /* we aren't done, yet */while (!done) {                                        /* handle the events */   if (GetNextEvent(everyEvent, &myEvent))      if (myEvent.what == mouseDownEvt) {         where = FindWindow(&wPtr, myEvent.where.h, myEvent.where.v);         if (where == wInMenuBar) {            MenuSelect(&myEvent, NULL);            menuNum = (int) (myEvent.wmTaskData >> 16);            menuItemNum = (int) myEvent.wmTaskData;            if (menuItemNum != 0)               HandleMenu();            }         }   }enddesk();}