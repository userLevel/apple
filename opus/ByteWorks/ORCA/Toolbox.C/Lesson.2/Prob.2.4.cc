/***************************************************************** Quit** This program creates a menu bar with one command: quit.****************************************************************/#pragma lint -1#include <orca.h>#include <Event.h>#include <Menu.h>#include <QuickDraw.h>#include <Window.h>#define file_Quit       256             /* menu item IDs */BOOLEAN done;                           /* are we done, yet? */EventRecord myEvent;                    /* event record *//***************************************************************** HandleMenu** Initialize the menu bar.****************************************************************/void HandleMenu (void){int menuNum, menuItemNum;               /* menu number & menu item number */menuNum = myEvent.wmTaskData >> 16;menuItemNum = myEvent.wmTaskData;switch (menuItemNum) {                  /* go handle the menu */   case file_Quit:      done = TRUE;      break;   }HiliteMenu(FALSE, menuNum);             /* unhighlight the menu */}/***************************************************************** InitMenus** Initialize the menu bar.****************************************************************/void InitMenus (void){int height;                             /* height of the largest menu */MenuRecHndl menuHand;                   /* for 'handling' menus */menuHand = NewMenu(                     /* create the file menu */   ">> File \\N1\r"   "--Quit\\N256*Qq\r"   ".\r");InsertMenu(menuHand, 0);height = FixMenuBar();                  /* draw the completed menu bar */DrawMenuBar();}/***************************************************************** Main program****************************************************************/int main (void){int event;                              /* event type returned by TaskMaster */startdesk(640);                         /* start the tools */InitMenus();                            /* set up the menu bar */InitCursor();                           /* start the arrow cursor */done = FALSE;                           /* main event loop */myEvent.wmTaskMask = 0x001F7FFF;        /* let TaskMaster do it all */while (!done) {   event = TaskMaster(everyEvent, &myEvent);   switch (event) {      case wInSpecial:      case wInMenuBar:         HandleMenu();         break;      }   }enddesk();}