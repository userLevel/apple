/***************************************************************** Road runner simulation, part 3.****************************************************************/#pragma lint -1#include <orca.h>#include <Event.h>#include <Menu.h>#include <QuickDraw.h>#include <Window.h>#include <Desk.h>#include <MiscTool.h>#define file_Quit       256             /* menu item IDs */#define beeps_Beep      258#define beeps_1         259#define beeps_2         260#define beeps_3         261#define beeps_Silence   262BOOLEAN done;                           /* are we done, yet? */BOOLEAN silence;                        /* is silence selected? */EventRecord myEvent;                    /* event record */int beeps;                              /* number of beeps *//***************************************************************** Beep** Beep some number of times****************************************************************/void Beep (void){int i;                                  /* loop variable */for (i = 0; i < beeps; ++i)   SysBeep();}/***************************************************************** BeSilent** Block the Beep command****************************************************************/void BeSilent (void){silence = !silence;CheckMItem(silence, beeps_Silence);if (silence)   DisableMItem(beeps_Beep);else   EnableMItem(beeps_Beep);}/***************************************************************** SetBeep** Set the number of times to beep** Parameters:*    times - number of times to beep****************************************************************/void SetBeep (int times){CheckMItem(FALSE, beeps_1 + beeps - 1); /* uncheck the currently selected item */beeps = times;CheckMItem(TRUE, beeps_1 + beeps - 1); /* check the newly selected item */}/***************************************************************** HandleMenu** Initialize the menu bar.****************************************************************/void HandleMenu (void){int menuNum, menuItemNum;               /* menu number & menu item number */menuNum = myEvent.wmTaskData >> 16;menuItemNum = myEvent.wmTaskData;switch (menuItemNum) {                  /* go handle the menu */   case file_Quit:      done = TRUE;    break;   case beeps_Beep:     Beep();         break;   case beeps_1:        SetBeep(1);     break;   case beeps_2:        SetBeep(2);     break;   case beeps_3:        SetBeep(3);     break;   case beeps_Silence:  BeSilent();     break;   }HiliteMenu(FALSE, menuNum);             /* unhighlight the menu */}/***************************************************************** InitMenus** Initialize the menu bar.****************************************************************/void InitMenus (void){int height;                             /* height of the largest menu */MenuRecHndl menuHand;                   /* for 'handling' menus */menuHand = NewMenu(                     /* create the beeps menu */   ">> Beeps \\N4\r"   "--Beep\\N258V\r"   "--1\\N259C\x12\r"   "--2\\N260\r"   "--3\\N261V\r"   "--Silence\\N262\r"   ".\r");InsertMenu(menuHand, 0);menuHand = NewMenu(                     /* create the edit menu */   ">> Edit \\N3\r"   "--Undo\\N250*Zz\r"   "--Cut\\N251*Xx\r"   "--Copy\\N252*Cc\r"   "--Paste\\N253*Vv\r"   "--Clear\\N254\r"   ".\r");InsertMenu(menuHand, 0);menuHand = NewMenu(                     /* create the file menu */   ">> File \\N2\r"   "--Close\\N255*Ww\r"   "--Quit\\N256*Qq\r"   ".\r");InsertMenu(menuHand, 0);menuHand = NewMenu(                     /* create the apple menu */   ">>@\\XN1\r"   "--About...\\N257\r"   ".\r");InsertMenu(menuHand, 0);FixAppleMenu(1);                        /* add desk accessories */height = FixMenuBar();                  /* draw the completed menu bar */DrawMenuBar();}/***************************************************************** Main program****************************************************************/int main (void){int event;                              /* event type returned by TaskMaster */startdesk(640);                         /* start the tools */InitMenus();                            /* set up the menu bar */InitCursor();                           /* start the arrow cursor */beeps = 1;                              /* beep once */silence = FALSE;                        /* not silent */done = FALSE;                           /* main event loop */myEvent.wmTaskMask = 0x001F7FFF;        /* let TaskMaster do it all */while (!done) {   event = TaskMaster(everyEvent, &myEvent);   switch (event) {      case wInSpecial:      case wInMenuBar:         HandleMenu();         break;      }   }enddesk();}