;                             DISASM.Data;;       ORCA/Disassembler data file v1.2.1 (System Disk 5.0.2);       Copyright (c) 1989-90, Byte Works, Inc.  All Rights Reserved;;       Last modified 08/10/90 by Paul Elseth;;    === ProDOS 8 Calls ===0040 ALLOC_INTERRUPT0041 DEALLOC_INTERRUPT0065 QUIT0080 READ_BLOCK0081 WRITE_BLOCK0082 GET_TIME00C0 CREATE00C1 DESTROY00C2 RENAME00C3 SET_FILE_INFO00C4 GET_FILE_INFO00C5 ONLINE00C6 SET_PREFIX00C7 GET_PREFIX00C8 OPEN00C9 NEWLINE00CA READ00CB WRITE00CC CLOSE00CD FLUSH00CE SET_MARK00CF GET_MARK00D0 SET_EOF00D1 GET_EOF00D2 SET_BUF00D3 GET_BUF*    === ProDOS 16, APW Shell, GS/OS ===;    --- ProDOS 16 Calls ---0001 CREATE0002 DESTROY0004 CHANGE_PATH0005 SET_FILE_INFO0006 GET_FILE_INFO0008 VOLUME0009 SET_PREFIX000A GET_PREFIX000B CLEAR_BACKUP_BIT000E EXPAND_PATH0010 OPEN0011 NEWLINE0012 READ0013 WRITE0014 CLOSE0015 FLUSH0016 SET_MARK0017 GET_MARK0018 SET_EOF0019 GET_EOF001A SET_LEVEL001B GET_LEVEL001C GET_DIR_ENTRY0020 GET_DEV_NUM0021 GET_LAST_DEV0022 READ_BLOCK0023 WRITE_BLOCK0024 FORMAT0025 ERASE_DISK0027 GET_NAME0028 GET_BOOT_VOL0029 QUIT002A GET_VERSION002C D_INFO0031 ALLOC_INTERRUPT0032 DEALLOC_INTERRUPT;    --- Shell Calls ---0101 SHELL:GET_LINFO0102 SHELL:SET_LINFO0103 SHELL:GET_LANG0104 SHELL:SET_LANG0105 SHELL:ERROR0106 SHELL:SET0107 SHELL:VERSION0108 SHELL:READ_INDEXED0109 SHELL:INIT_WILDCARD010A SHELL:NEXT_WILDCARD010B SHELL:READ_VARIABLE010C SHELL:ChangeVector010D SHELL:EXECUTE010E SHELL:FASTFILE010F SHELL:DIRECTION0110 SHELL:REDIRECT0113 SHELL:STOP0114 SHELL:ExpandDevices0115 SHELL:UnsetVariable0116 SHELL:EXPORT0117 SHELL:PopVariables0119 SHELL:SetStopFlag011A SHELL:ConsoleOut011B SHELL:SetIODevices011C SHELL:GetIODevices011D SHELL:GetCommand;    --- GS/OS Calls ---2001 Create2002 Destroy2003 OSShutdown2004 ChangePath2005 SetFileInfo2006 GetFileInfo2008 Volume2009 SetPrefix200A GetPrefix200B ClearBackup200C SetSysPrefs200D Null200E ExpandPath200F GetSysPrefs2010 Open2011 NewLine2012 Read2013 Write2014 Close2015 Flush2016 SetMark2017 GetMark2018 SetEOF2019 GetEOF201A SetLevel201B GetLevel201C GetDirEntry201D BeginSession201E EndSession201F SessionStatus2020 GetDevNumber2024 Format2025 EraseDisk2026 ResetCacheGS2027 GetName2028 GetBootVol2029 Quit202A GetVersion202B GetFSTInfo202C DInfo202D DStatus202E DControl202F DRead2030 DWrite2031 BindInt2032 UnbindInt2033 FSTSpecific2034 AddNotifyProc2035 DelNotifyProc2036 DRename2037 GetStdRefNum2038 GetRefNum2039 GetRefInfo*    === System tools ===0001 --- Tool Locator ---0101 TLBootInit0201 TLStartUp0301 TLShutDown0401 TLVersion0501 TLReset0601 TLStatus0901 GetTSPtr0A01 SetTSPtr0B01 GetFuncPtr0C01 GetWAP0D01 SetWAP0E01 LoadTools0F01 LoadOneTool1001 UnloadOneTool1101 TLMountVolume1201 TLTextMountVolume1301 SaveTextState1401 RestoreTextState1501 MessageCenter1601 SetDefaultTPT1701 MessageByName1801 StartUpTools1901 ShutDownTools0002 --- Memory Manager ---0102 MMBootInit0202 MMStartUp0302 MMShutDown0402 MMVersion0502 MMReset0602 MMStatus0902 NewHandle0A02 ReallocHandle0B02 RestoreHandle0C02 AddToOOMQueue0D02 DeleteFromOOMQueue1002 DisposeHandle1102 DisposeAll1202 PurgeHandle1302 PurgeAll1802 GetHandleSize1902 SetHandleSize1A02 FindHandle1B02 FreeMem1C02 MaxBlock1D02 TotalMem1E02 CheckHandle1F02 CompactMem2002 HLock2102 HLockAll2202 HUnlock2302 HUnlockAll2402 SetPurge2502 SetPurgeAll2802 PtrToHand2902 HandToPtr2A02 HandToHand2B02 BlockMove2F02 RealFreeMem0003 --- Miscellaneous Tool Set ---0103 MTBootInit0203 MTStartUp0303 MTShutDown0403 MTVersion0503 MTReset0603 MTStatus0903 WriteBRam0A03 ReadBRam0B03 WriteBParam0C03 ReadBParam0D03 ReadTimeHex0E03 WriteTimeHex0F03 ReadAsciiTime1003 SetVector1103 GetVector1203 SetHeartBeat1303 DelHeartBeat1403 ClrHeartBeat1503 SysFailMgr1603 GetAddr1703 ReadMouse1803 InitMouse1903 SetMouse1A03 HomeMouse1B03 ClearMouse1C03 ClampMouse1D03 GetMouseClamp1E03 PosMouse1F03 ServeMouse2003 GetNewID2103 DeleteID2203 StatusID2303 IntSource2403 FWEntry2503 GetTick2603 PackBytes2703 UnPackBytes2803 Munger2903 GetIRQEnable2A03 SetAbsClamp2B03 GetAbsClamp2C03 SysBeep2E03 AddToQueue2F03 DeleteFromQueue3003 SetInterruptState3103 GetInterruptState3203 GetIntStateRecSize3303 ReadMouse23403 GetCodeResConverter3503 GetROMResource3603 ReleaseROMResource0004 --- QuickDraw II ---0104 QDBootInit0204 QDStartup0304 QDShutDown0404 QDVersion0504 QDReset0604 QDStatus0804 AddPt0904 GetAddress0A04 GrafOn0B04 GrafOff0C04 GetStandardSCB0D04 InitColorTable0E04 SetColorTable0F04 GetColorTable1004 SetColorEntry1104 GetColorEntry1204 SetSBC1304 GetSCB1404 SetAllSCBs1504 ClearScreen1604 SetMasterSCB1704 GetMasterSCB1804 OpenPort1904 InitPort1A04 ClosePort1B04 SetPort1C04 GetPort1D04 SetPortLoc1E04 GetPortLoc1F04 SetPortRect2004 GetPortRect2104 SetPortSize2204 MovePortTo2304 SetOrigin2404 SetClip2504 GetClip2604 ClipRect2704 HidePen3804 ShowPen2904 GetPen2A04 SetPenState2B04 GetPenState2C04 SetPenSize2D04 GetPenSize2E04 SetPenMode2F04 GetPenMode3004 SetPenPat3104 GetPenPat3204 SetPenMask3304 GetPenMask3404 SetBackPat3504 GetBackPat3604 PenNormal3704 SetSolidPenPat3804 SetSolidBackPat3904 SolidPattern3A04 MoveTo3B04 Move3C04 LineTo3D04 Line3E04 SetPicSave3F04 GetPicSave4004 SetRgnSave4104 GetRgnSave4204 SetPolySave4304 GetPolySave4404 SetGrafProcs4504 GetGrafProcs4604 SetUserField4704 GetUserField4804 SetSysField4904 GetSysField4A04 SetRect4B04 OffsetRect4C04 InsetRect4D04 SectRect4E04 UnionRect4F04 PtInRect5004 Pt2Rect5104 EqualRect5204 NotEmptyRect5304 FrameRect5404 PaintRect5504 EraseRect5604 InvertRect5704 FillRect5804 FrameOval5904 PaintOval5A04 EraseOval5B04 InvertOval5C04 FillOval5D04 FrameRRect5E04 PaintRRect5F04 EraseRRect6004 InvertRRect6104 FillRRect6204 FrameArc6304 PaintArc6404 EraseArc6504 InvertArc6604 FillArc6704 NewRgn6804 DisposeRgn6904 CopyRgn6A04 SetEmptyRgn6B04 SetRectRgn6C04 RectRgn6D04 OpenRgn6E04 CloseRgn6F04 OffsetRgn7004 InsetRgn7104 SectRgn7204 UnionRgn7304 DiffRgn7404 XorRgn7504 PtInRgn7604 RectInRgn7704 EqualRgn7804 EmptyRgn7904 FrameRgn7A04 PaintRgn7B04 EraseRgn7C04 InvertRgn7D04 FillRgn7E04 ScrollRect7F04 PaintPixels8104 SubPt8204 SetPt8304 EqualPt8404 LocalToGlobal8504 GlobalToLocal8604 Random8704 SetRandSeed8804 GetPixel8904 ScalePt8A04 MapPt8B04 MapRect8C04 MapRgn8D04 SetStdProcs8E04 SetCursor8F04 GetCursorAdr9004 HideCursor9104 ShowCursor9404 SetFont9504 GetFont9604 GetFontInfo9704 GetFontGlobals9804 SetFontFlags9904 GetFontFlags9A04 SetTextFace9B04 GetTextFace9C04 SetTextMode9D04 GetTextMode9E04 SetSpaceExtra9F04 GetSpaceExtraA004 SetForeColorA104 GetForeColorA204 SetBackColorA304 GetBackColorA404 DrawCharA504 DrawStringA604 DrawCStringA704 DrawTextA804 CharWidthA904 StringWidthAA04 CStringWidthAB04 TextWidthAC04 CharBoundsAD04 StringBoundsAE04 CStringBoundsAF04 TextBoundsB004 SetArcRotB104 GetArcRotB204 SetSysFontB304 GetSysFontB404 SetVisRgnB504 GetVisRgnB604 SetIntUseB704 OpenPictureB804 PicCommentB904 ClosePictureBA04 DrawPictureBB04 KillPictureBC04 FramePolyBD04 PaintPolyBE04 ErasePolyBF04 InvertPoltC004 FillPoltC104 OpenPolyC204 ClosePolyC304 KillPolyC404 OffsetPolyC504 MapPolyC604 SetClipHandleC704 GetClipHandleC804 SetVisHandleC904 GetVisHandleCA04 InitCursorCB04 SetBufDimsCC04 ForceBufDimsCD04 SaveBufDimsCE04 RestoreBufDimsCF04 GetFGSizeD004 SetFontIDD104 GetFontIDD204 SetTextSizeD304 GetTextSizeD404 SetCharExtraD504 GetCharExtraD604 PPToPortD704 InflateTextBufferD804 GetRomFontD904 GetFontLore0005 --- Desk Manager ---0105 DeskBootInit0205 DeskStartup0305 DeskShutDown0405 DeskVersion0505 DeskReset0605 DeskStatus0905 SaveScrn0A05 RestScrn0B05 SaveAll0C05 RestAll0E05 InstallNDA0F05 InstallCDA1105 ChooseCDA1305 SetDAStrPtr1405 GetDAStrPtr1505 OpenNDA1605 CloseNDA1705 SystemClick1805 SystemEdit1905 SystemTask1A05 SystemEvent1B05 GetNumNDAs1C05 CloseNDAbyWinPtr1D05 CloseAllNDAs1E05 FixAppleMenu1F05 AddToRunQ2005 RemoveFromRunQ2105 RemoveCDA2205 RemoveNDA0006 --- Event Manager ---0106 EMBootInit0206 EMStartup0306 EMShutDown0406 EMVersion0506 EMReset0606 EMStatus0906 DoWindows0A06 GetNextEvent0B06 EventAvail0C06 GetMouse0D06 Button0E06 StillDown0F06 WaitMouseUp1006 TickCount1106 GetDBLTime1206 GetCaretTime1306 SetSwitch1406 PostEvent1506 FlushEvents1606 GetOSEvent1706 OSEventAvail1806 SetEventMask1906 FakeMouse1A06 SetAutoKeyLimit1B06 GetKeyTranslation1C06 SetKeyTranslation0007 --- Scheduler ---0107 SchBootInit0207 SchStartup0307 SchShutDown0407 SchVersion0507 SchReset0607 SchStatus0907 SchAddTask0A07 SchFlush0008 --- Sound Tool Set ---0108 SoundBootInit0208 SoundStartup0308 SoundShutDown0408 SoundVersion0508 SoundReset0608 SoundToolStatus0908 WriteRamBlock0A08 ReadRamBlock0B08 GetTableAddres0C08 GetSoundVolume0D08 SetSoundVolume0E08 FFStartSound0F08 FFStopSound1008 FFSoundStatus1108 FFGeneratorStatus1208 SetSoundMIRQV1308 SetUserSoundIRQV1408 FFSoundDoneStatus1508 FFSetUpSound1608 FFStartPlaying1708 SetDOCReg1808 ReadDOCReg0009 --- Apple Desktop Bus Tool Set ---0109 ADBBootInit0209 ADBStartUp0309 ADBShutDown0409 ADBVersion0509 ADBReset0609 ADBStatus0909 SendInfo0A09 ReadKeyMicroData0B09 ReadKeyMicroMemory0D09 AsyncADBReceive0E09 SyncADBReceive0F09 AbsOn1009 AbsOff1109 ReadAbs1209 SetAbsScale1309 GetAbsScale1409 SRQPoll1509 SRQRemove1609 ClearSRQTable000A --- SANE Tool Set ---010A SANEBootInit020A SANEStartup030A SANEShutDown040A SANEVersion050A SANEReset060A SANEStatus090A SANEFP8160A0A SANEDecStr8160B0A SANEElems816000B --- Integer Math Tool Set ---010B IMBootInit020B IMStartup030B IMShutDown040B IMVersion050B IMReset060B IMStatus090B Multiply0A0B SDivide0B0B UDivide0C0B LongMul0D0B LongDivide0E0B FixRatio0F0B FixMul100B FracMul110B FixDiv120B FracDiv130B FixRound140B FracSqrt150B FracCos160B FracSin170B FixATan2180B HiWord190B LoWord1A0B Long2Fix1B0B Fix2Long1C0B Fix2Frac1D0B Frac2Fix1E0B Fix2X1F0B Frac2X200B X2Fix210B X2Frac220B Int2Hex230B Long2Hex240B Hex2Int250B Hex2Long260B Int2Dec270B Long2Dec280B Dec2Int290B Dec2Long2A0B HexIt000C --- Text Tools Set ---010C TextBootInit020C TextStartup030C TextShutDown040C TextVersion050C TextReset060C TextStatus090C SetInGlobals0A0C SetOutGlobals0B0C SetErrGlobals0C0C GetInGlobals0D0C GetOutGlobals0E0C GetErrGlobals0F0C SetInputDevice100C SetOutputDevice110C SetErrDevice120C GetInputDevice130C GetOutputDevice140C GetErrDevice150C InitTextDev160C CtlTextDev170C StatusTextDev180C WriteChar190C ErrWriteChar1A0C WriteLine1B0C ErrWriteLine1C0C WriteString1D0C ErrWriteString1E0C TextWriteBlock1F0C ErrWriteBlock200C WriteCString210C ErrWriteCString220C ReadChar240C ReadLine000D --- reserved ---000E --- Window Manager ---010E WindBootInit020E WindStartup030E WindShutDown040E WindVersion050E WindReset060E WindStatus090E NewWindow0A0E CheckUpdate0B0E CloseWindow0C0E DeskTop0D0E SetWTitle0E0E GetWTitle0F0E SetFrameColor100E GetFrameColor110E SelectWindow120E HideWindow130E ShowWindow140E SendBehind150E FrontWindow160E SetInfoDraw170E FindWindow180E TrackGoAway190E MoveWindow1A0E DragWindow1B0E GrowWindow1C0E SizeWindow1D0E TaskMaster1E0E BeginUpdate1F0E EndUpdate200E GetWMgrPort210E PinRect220E HiliteWindow230E ShowHide240E BringToFront250E WindNewRes260E TrackZoom270E ZoomWindow280E SetWRefCon290E GetWRefCon2A0E GetNextWindow2B0E GetWKind2C0E GetWFrame2D0E SetWFrame2E0E GetStructRgn2F0E GetContentRgn300E GetUpdateRgn310E GetDefProc320E SetDefProc330E GetWControls340E SetOriginMask350E GetInfoRefCon360E SetInfoRefCon370E GetZoomRect380E SetZoomRect390E RefreshDesktop3A0E InvalRect3B0E InvalRgn3C0E ValidRect3D0E ValidRgn3E0E GetContentOrigin3F0E SetContentOrigin400E GetDataSize410E SetDataSize420E GetMaxGrow430E SetMaxGrow440E GetScroll450E SetScroll460E GetPage470E SetPage480E GetContentDraw490E SetContentDraw4A0E GetInfoDraw4B0E SetSysWindow4C0E GetSysWFlag4D0E StartDrawing4E0E SetWindowIcons4F0E GetRectInfo500E StartInfoDrawing510E EndInfoDrawing520E GetFirstWindow530E WindDragRect540E -- Window Manager Internal --550E DrawInfoBar560E WindowGlobal570E SetContentOrigin580E GetWindowMgrGlobals590E AlertWindow5A0E StartFrameDrawing5B0E EndFrameDrawing5C0E ResizeWindow5D0E TaskMasterContent5E0E TaskMasterKey5F0E TaskMasterDA600E CompileText610E NewWindow2620E ErrorWindow000F --- Menu Manager ---010F MenuBootInit020F MenuStartup030F MenuShutDown040F MenuVersion050F MenuReset060F MenuStatus090F MenuKey0A0F GetMenuBar0B0F MenuRefresh0C0F FlashMenuBar0D0F InsertMenu0E0F DeleteMenu0F0F InsertMItem100F DeleteMItem110F GetSysBar120F SetSysBar130F FixMenuBar140F CountMItems150F NewMenuBar160F GetMHandle170F SetBarColors180F GetBarColors190F SetMTitleStart1A0F GetMTitleStart1B0F GetMenuMgrPort1C0F CalcMenuSize1D0F SetMTitleWidth1E0F GetMTitleWidth1F0F SetMenuFlag200F GetMenuFlag210F SetMenuTitle220F GetMenuTitle230F MenuGlobal240F SetMItem250F GetMItem260F SetMItemFlag270F GetMItemFlag280F SetMItemBlink290F MenuNewRes2A0F DrawMenuBar2B0F MenuSelect2C0F HiliteMenu2D0F NewMenu2E0F DisposeMenu2F0F InitPalette300F EnableMItem310F DisableMItem320F CheckMItem330F SetMItemMark340F GetMItemMark350F SetMItemStyle360F GetMItemStyle370F SetMenuID380F SetMItemID390F SetMenuBar3A0F SetMItemName3B0F GetPopUpDefProc3C0F PopUpMenuSelect3E0F NewMenu23F0F InsertMItem2400F SetMenuTitle2410F SetMItem2420F SetMItemName2430F NewMenuBar2450F HideMenuBar460F ShowMenuBar0010 --- Control Manager ---0110 CtlBootInit0210 CtlStartup0310 CtlShutDown0410 CtlVersion0510 CtlReset0610 CtlStatus0910 NewControl0A10 DisposeControl0B10 KillControls0C10 SetCtlTitle0D10 GetCtlTitle0E10 HideControl0F10 ShowControl1010 DrawControls1110 HiliteControl1210 CtlNewRes1310 FindControl1410 TestControl1510 TrackControl1610 MoveControl1710 DragControl1810 SetCtlIcons1910 SetCtlValue1A10 GetCtlValue1B10 SetCtlParams1C10 GetCtlParams1D10 DragRect1E10 GrowSize1F10 GetCtlDPage2010 SetCtlAction2110 GetCtlAction2210 SetCtlRefCon2310 GetCtlRefCon2410 EraseControl2510 DrawOneCtl2610 FindTargetCtl2710 MakeNextCtlTarget2810 MakeThisCtlTarget2910 SendEventToCtl2A10 GetCtlID2B10 SetCtlID2C10 CallCtlDefProc2D10 NotifyCtls2E10 GetCtlMoreFlags2F10 SetCtlMoreFlags3010 GetCtlHandleFromID3110 NewControl23210 CMLoadResource3310 CMReleaseResource3410 SetCtlParamPtr3510 GetCtlParamPtr3710 InvalCtls0011 --- Loader ---0111 LoaderBootInit0211 LoaderStartup0311 LoaderShutDown0411 LoaderVersion0511 LoaderReset0611 LoaderStatus0911 InitialLoad0A11 Restart0B11 LoadSegNum0C11 UnloadSegNum0D11 LoadSegName0E11 UnloadSeg0F11 GetLoadSegInfo1011 GetUserID1111 LGetPathname1211 UserShutdown1311 RenamePathname2011 InitialLoad22111 GetUserID22211 LGetPathname20012 --- QuickDraw II Auxiliary ---0112 QDAuxBootInit0212 QDAuxStartup0312 QDAuxShutDown0412 QDAuxVersion0512 QDAuxReset0612 QDAuxStatus0912 CopyPixels0A12 WaitCursor0B12 DrawIcon0C12 SpecialRect0D12 SeedFill0E12 CalcMask0013 --- Print Manager ---0113 PMBootInit0213 PMStartup0313 PMShutDown0413 PMVersion0513 PMReset0613 PMStatus0913 PrDefault0A13 PrValidate0B13 PrStlDialog0C13 PrJobDialog0D13 PrPixelMap0E13 PrOpenDoc0F13 PrCloseDoc1013 PrOpenPage1113 PrClosePage1213 PrPicFile1413 PrError1513 PrSetError1613 PrChoosePrinter1813 PrGetPrinterSpecs2313 PrDriverVer2413 PrPortVer2513 PrGetZoneName2813 PrGetPrinterDvrName2913 PrGetPortDvrName2A13 PrGetUserName2B13 PrGetNetworkName3413 PMUnloadDriver3513 PMLoadDriver3613 PrGetDocName3713 PrSetDocName3813 PrGetPgOrientation0014 --- Line Edit Tool Set ---0114 LEBootInit0214 LEStartup0314 LEShutDown0414 LEVersion0514 LEReset0614 LEStatus0914 LENew0A14 LEDispose0B14 LESetText0C14 LEIdle0D14 LEClick0E14 LESetSelect0F14 LEActivate1014 LEDeactivate1114 LEKey1214 LECur1314 LECopy1414 LEPaste1514 LEDelete1614 LEInsert1714 LEUpdate1814 LETextBox1914 LEFromScrap1A14 LEToScrap1B14 LEScrapHandle1C14 LEGetScrapLen1D14 LESetScrapLen1E14 LESetHilite1F14 LESetCaret2014 LETextBox22114 LESetJust2214 LEGetTextHand2314 LEGetTextLen2414 GetLEDefProc0015 --- Dialog Manager ---0115 DialogBootInit0215 DialogStartup0315 DialogShutDown0415 DialogVersion0515 DialogReset0615 DialogStatus0915 ErrorSound0A15 NewModalDialog0B15 NewModelessDialog0C15 CloseDialog0D15 NewDItem0E15 RemoveDItem0F15 ModalDialog1015 IsDialogEvent1115 DialogSelect1215 DlgCut1315 DlgCopy1415 DlgPaste1515 DlgDelete1615 DrawDialog1715 Alert1815 StopAlert1915 NoteAlert1A15 CautionAlert1B15 ParamText1C15 SetDAFont1E15 GetControlDItem1F15 GetIText2015 SetIText2115 SelectIText2215 HideDItem2315 ShowDItem2415 FindDItem2515 UpdateDialog2615 GetDItemType2715 SetDItemType2815 GetDItemBox2915 SetDItemBox2A15 GetFirstDItem2B15 GetNextDItem2C15 ModalDialog22E15 GetDItemValue2F15 SetDItemValue3215 GetNewModalDialog3315 GetNewDItem3515 ResetAlertStage3815 GetDItemBox3415 GetAlertStage3615 DefaultFilter3715 GetDefButton3815 SetDefButton3915 DisableDItem3A15 EnableDItem0016 --- Scrap Manager ---0116 ScrapBootInit0216 ScrapStartup0316 ScrapShutDown0416 ScrapVersion0516 ScrapReset0616 ScrapStatus0916 UnloadScrap0A16 LoadScrap0B16 ZeroScrap0C16 PutScrap0D16 GetScrap0E16 GetScrapHandle0F16 GetScrapSize1016 GetScrapPath1116 GetScrapPath1216 GetScrapCount1316 GetScrapState0017 --- Standard File Tool Set ---0117 SFBootInit0217 SFStartup0317 SFShutDown0417 SFVersion0517 SFReset0617 SFStatus0917 SFGetFile0A17 SFPutFile0B17 SFPGetFile0C17 SFPPutFile0D17 SFAllCaps0E17 SFGetFile20F17 SFPutFile21017 SFPGetFile21117 SFPPutFile21217 SFShowInvisible1317 SFReScan1417 SFMultiGet21517 SFPMultiGet20018 --- reserved ---0019 --- Note Synthesizer ---0119 NSBootInit0219 NSStartup0319 NSShutDown0419 NSVersion0519 NSReset0619 NSStatus0919 AllocGen0A19 DeAllocGen0B19 NoteOn0C19 NoteOff0D19 AllNotesOff0E19 NSSetUpdateRate0F19 NSSetUserUpdateRtn001A --- Note Sequencer ---011A SeqBootInit021A SeqStartup031A SeqShutDown041A SeqVersion051A SeqReset061A SeqStatus091A SetIncr0A1A ClearIncr0B1A GetTimer0C1A GetLoc0D1A SeqAllNotesOff0E1A SetTrkInfo0F1A StartSeq101A StepSeq111A StopSeq121A?SetInstTable131A StartInts141A StopInts151A StartSeqRel001B --- Font Manager ---011B FMBootInit021B FMStartup031B FMShutDown041B FMVersion051B FMReset061B FMStatus091B CountFamilies0A1B FindFamily0B1B GetFamInfo0C1B GetFamNum0D1B AddFamily0E1B InstallFont0F1B SetPurgeStat101B CountFonts111B FindFontStats121B LoadFont131B LoadSysFont141B AddFontVar151B FixFontMenu161B ChooseFont171B ItemID2FamNum181B FMSetSysFont191B FMGetSysFID1A1B FMGetCurFID1B1B FamNum2ItemID1C1B InstallWithStats001C --- List Manager ---011C ListBootInit021C ListStartup031C ListShutDown041C ListVersion051C ListReset061C ListStatus091C CreateList0A1C SortList0B1C NextMember0C1C DrawMember0D1C SelectMember0E1C GetListDefProc0F1C ResetMember101C NewList111C DrawMember2121C NextMember2131C ResetMember2141C SelectMember2151C SortList2161C NewList2001D --- Audio Compression and Expansion Tool Set ---011D ACEBootInit021D ACEStartup031D ACEShutdown041D ACEVersion051D ACEReset061D ACEStatus071D ACEInfo091D ACECompress0A1D ACEExpand0B1D ACECompBegin0C1D ACEExpBegin001E --- Resource Manager ---011E ResourceBootInit021E ResourceStartup031E ResourceShutdown041E ResourceVersion051E ResourceReset061E ResourceStatus091E CreateResourceFile0A1E OpenResourceFile0B1E CloseResourceFile0C1E AddResource0D1E UpdateResourceFile0E1E LoadResource0F1E RemoveResource101E MarkResourceChange111E SetCurResourceFile121E GetCurResourceFile131E SetCurResourceApp141E GetCurResourceApp151E HomeResourceFile161E WriteResource171E ReleaseResource181E DetachResource191E UniqueResourceID1A1E SetResourceID1B1E GetResourceAttr1C1E SetResourceAttr1D1E GetResourceSize1E1E MatchResourceHandle1F1E GetOpenFileRefNum201E CountTypes211E GetIndType221E CountResources231E GetIndResource241E SetResourceLoad251E SetResourceFileDepth261E GetMapHandle271E LoadAbsResource281E ResourceConverter0020 --- MIDI Tool Set ---0120 MIDIBootInit0220 MIDIStartup0320 MIDIShutDown0420 MIDIVersion0520 MIDIReset0620 MIDIStatus0920 MIDIControl0A20 MIDIDevice0B20 MIDIClock0C20 MIDIInfo0D20 MIDIReadPacket0E20 MIDIWritePacket0022 --- Text Edit ---0122 TEBootInit0222 TEStartUp0322 TEShutDown0422 TEVersion0522 TEReset0622 TEStatus0922 TENew0A22 TEKill0B22 TESetText0C22 TEGetText0D22 TEGetTextInfo0E22 TEIdle0F22 TEActivate1022 TEDeactivate1122 TEClick1222 TEUpdate1322 TEPaintText1422 TEKey1622 TECut1722 TECopy1822 TEPaste1922 TEClear1A22 TEInsert1B22 TEReplace1C22 TEGetSelection1D22 TESetSelection1E22 TEGetSelectionStyle1F22 TEStyleChange2022 TEOffsetToPoint2122 TEPointToOffset2222 TEGetDefProc2322 TEGetRuler2422 TESetRuler2522 TEScroll2622 TEGetInternalProc2722 TEGetLastError2822 TECompactRecord*    === User Tools ===*    === Bank $E1 Vectors ===00003Toolbox00043DISPATCH2          vector to tool locator entry type 200083UToolbox000C3UDISPATCH2         user tool locator entry type 200103INTMGRV            system Interrupt Manager00143COPMGRV            COP Manager00183ABORTMGRV          ABORT Manager001C3SYSDMGRV           System Death Manager;    --- Interrupt Vectors ---00203IRQ_APTALK         AppleTalk interrupt handler00243IRQ_SERIAL         serial port interrupt handler00283IRQ_SCAN           scan-line interrupt handler002C3IRQ_SOUND          sound interrupt handler00303IRQ_VBL            VBL interrupt handler00343IRQ_MOUSE          mouse interrupt handler00383IRQ_QTR            quarter-second interrupt handler003C3IRQ_KBD            keyboard interrupt handler00403IRQ_RESPONSE       ADB response interrupt handler00443IRQ_SRQ            SRQ interrupt handler00483IRQ_DSKACC         Desk Accessory interrupt handler004C3IRQ_FLUSH          keyboard FLUSH interrupt handler00503IRQ_MICRO          keyboard micro abort interrupt handler00543IRQ_1SEC           1-second interrupt handler00583IRQ_EXT            VGC external interrupt handler005C3IRQ_OTHER          other interrupt handler;    --- Various System Vectors ---00603CUPDATE            cursor update00643INCBUSYFLG         increment busy flag00683DECBUSYFLG         decrement busy flag006C3BELLVECTOR         bell00703BREAKVECTOR        break00743TRACEVECTOR        trace00783STEPVECTOR         step00803TOWRITEBR          write BatteryRAM00843TOREADBR           read BatteryRAM00883TOWRITETIME        write time008C3TOREADTIME         read time00903TOCTRL_PANEL       show control panel00943TOBRAMSETUP        setup system to BRAM parameters00983TOPRINTMSG8        print ASCII string by 8-bit A009C3TOPRINTMSG16       print ASCII string by 16-bit A00A03CTRLYVECTOR        user control-Y vector00A43TOTEXTPG2DA        Alternate Display Mode CDA;    --- GS/OS Bank $E1 Vectors ---00A83GSOS00AC3Chain_vector       GS/OS chain vector00B03GSOS200BA1NULLS              two guaranteed null bytes00BC OS_KIND            indicates currently running O/S00BD OS_BOOT            indicates O/S initially booted00BE1GSOSBusy           GS/OS busy flag;00C03MSGPOINTER         pointer to system msg strings00CB MPROTECT           don't move or purge memory flag00DC3TickCount          current tick count;01803ToolReturn2        dec busy flag, fix stack and return01843ToolReturn         fix stack and return;    --- AppleTalk Vectors ---10043BASIC              AppleTalk BASIC interface vector10083Pascal             AppleTalk Pascal interface vector100C3RamGoComp          protocol completion vector10103SoftReset          reset vector chain10143RamDispatch        AppleTalk command dispatch entry10183RamForbid          disable packet/timer interrupts101C3RamPermit          re-enable packet/timer interrupts10201ProEntry           saved ProDOS entry address10223ProDOS             trap address for ProDOS calls10263SerStatus          serial emulation status102A3SerWrite           serial emulation write char102E3SerRead            serial emulation read char103A3PriorityVector     INIT file priority vector103E3PFIVector          ProDOS Filing Interface vector;    --- Memory Manager Globals ---16003FirstHandle        first handle161C3LastHandle         last handle16223TotalMem           total memory in the machine16401RAMBlocks          maximum 16K chunks in RAMdisk16421RAMDiskSize        16K chunks allocated to RAMdisk16463RAMHandle          handle of first 16K chunk of RAMdisk164A1RAMDirOk           RAMdisk directory setup flag16A43CopyBytesV         block copy routine vector;D600 CmdTable           AppleTalk command tableDA003TickCount          tick count since AppleTalk initialized*    === Bank $E0 Vectors ===;    --- Quickdraw Bottleneck Procs ---1E043StdText            text drawing bottleneck1E083StdLine            line drawing bottleneck1E0C3StdRect            rect drawing bottleneck1E103StdRRect           round rect drawing bottleneck1E143StdOval            oval drawing bottleneck1E183StdArc             arc drawing bottleneck1E1C3StdPoly            polygon drawing bottleneck1E203StdRgn             region drawing bottleneck1E243StdPixels          pixel drawing bottleneck1E283StdComment         pict comment bottleneck1E2C3StdTxMeas          text measuring bottleneck1E303StdTxBnds          text bounds bottleneck1E343StdGetPic          get pict bottleneck1E383StdPutPic          put pict bottleneck;    --- Cursor Vectors ---1E983ShieldCursor       hide cursor if in MinRect1E9C3UnshieldCursor     done with ShieldCursor*    === Bank $01 Vectors ===;    --- GS/OS System Service Calls ---FC003Dev_Dispatcher     make device driver callFC043Cache_Find_Blk     search cache for disk blockFC083Cache_Add_Blk      add disk block to cacheFC143Cache_Delete_Blk   delete disk block from cacheFC183Cache_Delete_Vol   delete volume's blocks from cacheFC343Swap_Out           mark volume as off-lineFC503Set_Sys_Speed      control system speedFC543Cache_Flsh_DefFC703Move_Info          move data between buffersFC883Signal             notify GS/OS of signal occuranceFC903Set_Disksw         notify GS/OS of disk-switchFCA43Sup_Drvr_Disp      make supervisory driver callFCA83Install_Driver     install device into device listFCBC3Dyn_Slot_Arbiter   return slot statusFCD83UNBIND_INT_VECTOR  unbind interrupt handler*    === Bank $00 Vectors ===;    --- Applesoft TXTPTR routines ---00B1 CHARGET            get next character00B7 CHARGOT            re-get last character;    --- Low Memory Globals ---03F01BRKV               BRK vector03F21SOFTEV             RESET vector03F4 PWREDUP            power up byte03F51AMPERV             & vector03F82USRADR             ctl-Y vector03FB2NMILOC             non-maskable interrupt vector03FE1IRQLOC             interrupt vector07F8 MSLOT              slot being accessed;    --- BASIC.SYSTEM Global Page ---BE002WARMDOSV           WARMDOS vectorBE032PARSEV             command parser vectorBE062UPARSEV            user parser vectorBE092BERRV              basic error vectorBE0C2BERR2V             basic print error vectorBE0F BERROR             basic error codeBE10FBOUTV              output vectorsBE20FBINPV              input vectorsBE301CUROUTV            current output vectorBE321CURINPV            current input vectorBE341OUTINTV            output intercept vectorBE361INPINTV            input intercept vectorBE383STATEI             STATE interceptsBE3C CURSLOT            default slotBE3D CURDRIVE           default driveBE3E BASAVE             A saveareaBE3F BXSAVE             X saveareaBE40 BYSAVE             Y saveareaBE41 TRACEFLAG          TRACE active flagBE42 STATEFLAG          STATE (0 = immediate)BE43 EXECFLAG           EXEC active flagBE44 READFLAG           READ active flagBE45 WRITEFLAG          WRITE active flagBE46 PREFIXFLAG         PREFIX active flagBE47 DREADFLAG          DIR file READ flagBE49 STRCOUNT           STRINGS space countBE4A BWCOUNT            buffered write countBE4B CLINELEN           command line lengthBE4C PREVCHAR           previous characterBE4D FILECNT            open file countBE4E CLEXECFLAG         EXEC file closing flagBE4F CATSTATE           CATALOG line stateBE501XTRNCMD            external cmd handlerBE52 CMDLEN             command name lengthBE53 COMMAND            command numberBE541PBITS              permitted keywordsBE561FBITS              found keywordsBE581AVALUE             A keyword valueBE5A2BVALUE             B keyword valueBE5D1EVALUE             E keyword valueBE5F1LVALUE             L keyword valueBE61 SVALUE             S keyword valueBE62 DVALUE             D keyword valueBE631FVALUE             F keyword valueBE651RVALUE             R keyword valueBE67 VVALUE             V keyword valueBE681ATVALUE            @ keyword valueBE6A TVALUE             T keyword valueBE6B IOVALUE            PR#/IN# slot valueBE6C1PATH1PTR           pathname 1 ptrBE6E1PATH2PTR           pathname 2 ptrBE70 GOSYSTEM           MLI interfaceBE85 MLICALL            last MLI call numberBE861MLIPARMS           last MLI call parameter listBEF52GETBUFRV           GETBUFR vectorBEF82FREEBUFRV          FREEBUFR vectorBEFB OHIMEM             original HIMEM MSB;    --- ProDOS 8 Global Page ---BF002PRODOS8BF032P8DEATHV           P8 system death vectorBF062CLOCKV             P8 clock vectorBF092P8ERRV             P8 error vectorBF0C2P8DEATHV           P8 system death vectorBF0F P8ERROR            P8 error codeBF10FDRIVERTBL1         device driver table 1BF20FDRIVERTBL2         device driver table 2BF30 LASTDEV            last device usedBF31 NUMDEVS            count (-1) active devicesBF32DDEVLIST            active device listBF505RAMIRQ             bank in RAM call IRQBF587MEMMAP             P8 memory bitmapBF60FMEMMAP2            P8 memory bitmapBF70FBUFTBL             open file buffer tableBF807INTTBL             interrupt tableBF88 P8AREG             A register saveareaBF89 P8XREG             X register saveareaBF8A P8YREG             Y register saveareaBF8B P8SREG             S register saveareaBF8C P8PREG             P register saveareaBF8D BANKID             bank ID byte (ROM/RAM)BF8E1INTADR             interrupt return addressBF901P8DATE             P8 dateBF921P8TIME             P8 timeBF94 FLEVEL             current file levelBF95 BUBIT              backup bitBF98 MACHID             machine ID byteBF99 ROMMAP             slot ROM bit mapBF9A PREFLAG            prefix flagBF9B MLIACT             MLI active flagBF9C1MLIRETN            last MLI call return addressBF9E MLIX               MLI X register saveareaBF9F MLIY               MLI Y register saveareaBFFC MINIVERS           minimum interpreter versionBFFD IVERSION           interpreter versionBFFE MINKVERS           minimum kernal versionBFFF KVERSION           kernal version;    --- Soft Switches ---C000 KBD                keyboard latchC001 SET80COL           enable 80-col storeC002 RDMAINRAM          read from main 48KC003 RDCARDRAM          read from alt 48KC004 WRMAINRAM          write to main 48KC005 WRCARDRAM          write to alt 48KC006 SETSLOTCXROM       use ROM on cardsC007 SETINTCXROM        use internal ROMC008 SETSTDZP           use main zero page/stackC009 SETALTZP           use alt zero page/stackC00A SETINTC3ROM        enable internal slot 3 ROMC00B SETSLOTC3ROM       enable external slot 3 ROMC00C CLR80VID           disable 80 col hardwareC00D SET80VID           enable 80 col hardwareC00E CLRALTCHAR         normal LC, flashing UCC00F SETALTCHAR         normal inverse, LC; no flashC010 KBDSTROBE          turn off keypressed flagC011 RDLCBNK2           if LC bank 2 enabledC012 RDLCRAM            if LC RAM read enabledC013 RDRAMRD            if reading alt 48KC014 RDRAMWRT           if writing alt 48KC015 RDCXROM            if using internal ROMC016 RDALTZP            if alt zero page enabledC017 RDC3ROM            if slot 3 ROM enabledC018 RD80COL            if 80-column storeC019 RDVBLBAR           if not VBLC01A RDTEXT             if text modeC01B RDMIX              if mixed modeC01C RDPAGE2            if TXTPAGE2 switched inC01D RDHIRES            if HIRES modeC01E ALTCHARSET         if alt char setC01F RD80VID            if 80-col hardware onC021 MONOCOLOR          mono/color selectionC022 TBCOLOR            text/background colorsC023 VGCINT             VGC interrupt registerC024 MOUSEDATA          X or Y mouse data registerC025 KEYMODREG          key modifier registerC026 DATAREG            data register in GLU chipC027 KMSTATUS           kbd/mouse status registerC028 ROMBANK            ROM bank select toggleC029 NEWVIDEO           video mode selectC02B LANGSEL            language/PAL/NTSC selectC02C CHARROM            tst mode read of char ROMC02D SLTROMSEL          slot ROM selectC02E VERTCNT            video counter bits V5-VBC02F HORIZCNT           video counter bits VA-H0C030 SPKR               click speakerC031 DISKREG            for 3.5" disksC032 SCANINT            scan-line interrupt registerC033 CLOCKDATA          clock data registerC034 CLOCKCTL           clock control registerC035 SHADOW             shadow registerC036 CYAREG             speed and motor on detectC037 DMAREG             DMA bank addressC038 SCCBREG            SCC channel B cmd registerC039 SCCAREG            SCC channel A cmd registerC03A SCCBDATA           SCC channel B data registerC03B SCCADATA           SCC channel A data registerC03C SOUNDCTL           sound control registerC03D SOUNDDATA          sound data registerC03E SOUNDADRL          sound address ptr (lo)C03F SOUNDADRH          sound address ptr (hiC041 INTEN              interrupt-enable registerC044 MMDELTAX           mouse delta XC045 MMDELTAY           mouse delta YC046 DIAGTYPE           interrupt flag registerC047 CLRVBLINT          clear VBL/3.75hz interrupt flagsC048 CLRXYINT           clear mouse interrupt flagsC050 TXTCLR             switch in graphicsC051 TXTSET             switch in textC052 MIXCLR             clear mixed modeC053 MIXSET             set mixed modeC054 TXTPAGE1           switch in text page 1C055 TXTPAGE2           switch in text page 2C056 LORES              low-resolution graphicsC057 HIRES              high-resolution graphicsC058 SETAN0             clear annunciator 0C059 CLRAN0             set annunciator 0C05A SETAN1             clear annunciator 1C05B CLRAN1             set annunciator 1C05C SETAN2             clear annunciator 2C05D CLRAN2             set annunciator 2C05E SETAN3             clear annunciator 3C05F CLRAN3             set annunciator 3C060 BUTN3              read switch 3C061 BUTN0              read switch 0 (open-Apple)C062 BUTN1              read switch 1 (option)C063 BUTN2              read switch 2C064 PADDL0             read paddle 0C065 PADDL1             read paddle 1C066 PADDL2             read paddle 2C067 PADDL3             read paddle 3C068 STATEREG           state registerC06D TESTREG            test mode bit registerC06E CLRTM              clear test modeC06F ENTM               enable test modeC070 PTRIG              trigger paddlesC071EINTCODE            ROM interrupt tableC080 RDBANK2            read only RAM bank 2C081 ROMIN2             read ROM/write RAM bank 2C082 RDROM2             read ROMC083 LCBANK2            read/write RAM bank 2C084 RDBANK2            read only RAM bank 2C085 RROMWRAM2          read ROM/write RAM bank 2C086 RDROM2             read ROMC087 LCBANK2            read/write RAM bank 2C088 RDBANK1            read only RAM bank 1C089 ROMIN1             read ROM/write RAM bank 1C08A RDROM1             read ROMC08B LCBANK1            read/write RAM bank 1C08C RDBANK1            read only RAM bank 1C08D LCBANK1            read/write RAM bank 1C08E RDROM1             read ROMC08F LCBANK1            read/write RAM bank 1C0E0 ph0off             IWM: phase 0 offC0E1 ph0on              IWM: phase 0 onC0E2 ph1off             IWM: phase 1 offC0E3 ph1on              IWM: phase 1 onC0E4 ph2off             IWM: phase 2 offC0E5 ph2on              IWM: phase 2 onC0E6 ph3off             IWM: phase 3 offC0E7 ph3on              IWM: phase 3 onC0E8 motoroff           IWM: disk motor offC0E9 motoron            IWM: disk motor onC0EA drv0en             IWM: select drive 0C0EB drv1en             IWM: select drive 1C0EC q6l                IWM: Q6 lowC0ED q6h                IWM: Q6 highC0EE q7l                IWM: Q7 lowC0EF q7h                IWM: Q7 high;    --- Mouse Firmware ---C412 SETMOUSE           set mouse modeC413 SERVEMOUSE         service mouse interruptC414 READMOUSE          read mouse positionC415 CLEARMOUSE         clear mouse positionC416 POSMOUSE           set mouse positionC417 CLAMPMOUSE         set mouse boundsC418 HOMEMOUSE          home mouse positionC419 INITMOUSE          resets mouse values to defaultsC41A DIAGMOUSEC41B COPYRIGHTC41C TIMEDATAC41D SETVBLCNTSC41E OPTMOUSEC41F STARTTIMER;CFFF CLRROM             switch out $C8 ROMs;    --- Applesoft Entry Points ---D393 BLTU       block transferD3E3 REASON     ensure room in memoryD412 ERROR      handle errorsD52C INLIN      input text (no prompt)D52E INLIN2     input text (prompt in X)D539 GDBUFS     fix input bufferD553 INCHR      get characterD566 RUN        run the program in memoryD61A FNDLIN     find the line numberD64B SCRTCH     clear program, variables, stackD66C CLEARC     clear variables and stackD683 STKINI     clear stackD697 STXTPT     set TXTPTR to beginning of programD7D2 NEWSTT     start execution at (TXTPTR)D849 RESTOR     reset DATA ptrD858 ISCNTC     check for ctl-CD898 CONT       prepare to CONTinueD8B0 SAVE       save program to tapeD8C9 LOAD       load program from tapeD901 PROGIO     setup to save program textD93E GOTO       execute GOTO statementD995 DATA       skip to end of statementD998 ADDON      add Y to TXTPTRD9A3 DATAN      calc offset to end of statementD9A6 REMN       calc offset to end of lineDA0C LINGET     read line number into LINNUMDA46 LET        assign value to a variableDA7B ASGNSTR    assign string to variableDA9A ASGNST2    assign string to variableDAB7 COPY       move stringDAFB CRDO       print c/rDB3A STROUT     print string in (YA)DB3D STRPRT     print stringDB57 OUTSPC     print a spaceDB5A OUTQST     print a question markDB5C OUTDO      print char in ADD67 FRMNUM     evaluate numeric formula to FACDD6A CHKNUM     ensure FAC is numericDD6C CHKSTR     ensure FAC is a stringDD6D CHKVAL     check result for number or stringDD7B FRMEVL     evaluate formula to FACDE81 STRTXT     get string from TXTPTRDEB2 PARCHK     evaluate a formula in parenthesisDEB8 CHKCLS     ensure next char is ')'DEBB CHKOPN     ensure next char is '('DEBE CHKCOM     ensure next char is ','DEC0 SYNCHR     ensure next char is char in ADFE3 PTRGET     get ptr to variable at (TXTPTR)E07D ISLETC     ensure A is 'A'-'Z'E0FE5BIGNEG     fp constant -32768E10C AYINT      QINT if -32767 < A < 32767E2F2 GIVAYF     float signed AYE301 SNGFLT     float unsigned YE306 ERRDIR     ensure deferred modeE3D5 STRINI     initialize stringE3DD STRSPA     create space for stringE3E7 STRLIT     get string ending with "E3E9 STRLITC    get string ending with char in XE3ED STRLT2     get string from (YA)E42A PUTNEW     put new temporary stringE452 GETSPA     get space for a stringE484 GARBAG     string garbage collectorE597 CAT        concatenate stringsE5D4 MOVSTR     move A length string from (YX)E5FD FRESTR     free string in FACE600 FREFAC     free string in FACE604 FRETMP     free temp string in (YA)E635 FRETMS     free temp string descriptorE6F5 GTBYTC     skip char then eval byteE6F8 GETBYT     evaluate byte valueE6FB CONINT     convert FAC to byte in XE746 GETNUM     parse integer into LINNUME74C COMBYTE    check for ',' and get byte in XE752 GETADR     convert FAC to word in LINNUME7A0 FADDH      add 1/2 to FACE7A7 FSUB       (YA) - FACE7AA FSUBT      ARG - FACE7BE FADD       (YA) + FACE7C1 FADDT      ARG + FACE9135ONE        fp constant 1E92D5SQRHALF    fp constant SQR(1/2)E9325SQR2       fp constant SQR(2)E9375NONEHALF   fp constant -1/2E93C5LN2        fp constant LN(2)E941 LOG        natural log of FACE97F FMULT      (YA) * FACE982 FMULTT     ARG * FACE9E3 CONUPK     unpack (YA) to ARGEA39 MUL10      multiply FAC by 10EA505TEN        fp constant 10EA55 DIV10      divide FAC by 10EA66 FDIV       (YA) / FACEA69 FDIVT      ARG / FACEAF9 MOVFM      move (YA) to FACEB1E MOV2F      pack FAC to TEMP2EB21 MOV1F      pack FAC to TEMP1EB23 MOVML      pack FAC to 0,XEB2B MOVMF      pack FAC to (YX)EB53 MOVFA      copy ARG to FACEB63 MOVAF      copy FAC to ARGEB82 SIGN       A = sign of FACEB90 SGN        sign of FACEB93 FLOAT      float signed AEBAF ABS        absolute value of FACEBB2 FCOMP      compare (YA) to FACEBF2 QINT       quick greatest integerEC23 INT        integer of FACEC4A FIN        input fp number to FACED145BILLION    fp constant 1,000,000,000ED19 INPRT      print "IN" then current line numberED24 LINPRT     print unsigned XAED2E PRNTFAC    print FACED34 FOUT       output FACEE645ONEHALF    fp constant 1/2EE8D SQR        square root of FACEE97 FPWRT      ARG ^ FACEED0 NEGOP      negate FACEEDB5LOG2       fp constant LOG(e)2EF09 EXP        e ^ FACEFAE RND        randomize FACEFEA COS        cosine of FACEFF1 SIN        sine of FACF03A TAN        tangent of FACF0635HALFPI     fp constant PI/2F06B5TWOPI      fp constant PI*2F0705ONE4TH     fp constant 1/4F09E ATN        arctangent of FACF1EC PLOTFNS    evaluate 2 lores coordinatesF2E9 HANDLERR   error handlerF317 RESUME     resume execute after an errorF3D8 HGR2       initialize hires page 2F3E2 HGR        initialize hires page 1F3F2 HCLR       clear hires screen to blackF3F4 BKGND      clear hires screen to color in AF3F6 HGR2       clear hires screen to last colorF411 HPOSN      position hires penF457 HPLOT      plot a hires dot (calls HPOSN)F45A PLOT       plot a hires dotF465 INTX       incr or decr pen XF467 DECRX      decrement pen XF48A INCRX      increment pen XF4D3 INTY       incr or decr pen YF4D5 DECRX      decrement pen YF504 INCRX      increment pen YF53A HLIN       draw a hires lineF5B27BITPSNS    bit position tableF5CB HFIND      convert pen addr to X-Y coordinatesF601 DRAW       draw shape at (Y,X), rotation AF65D XDRAW      xor shape at (Y,X), rotation AF6B9 HFNS       evaluate 2 hires coordinatesF6EC SETHCOL    set hires color to XF6F0 HCOLOR     set hires color to XF6F67HMASK      hires color mask tableF775 SHLOAD     load shape table from tapeF7D9 GETARYPT   find variable at (TXTPTR);    --- Firmware Entry Points ---F800 PLOT       plot low-res pointF80E PLOT1      modify low-ews pointF819 HLINE      low-res horizontal lineF828 VLINE      low-res vertical lineF832 CLRSCR     clear low-res screnF836 CLRTOP     clear top 40 lines of low-res screenF847 GBASCALC   calc low-res base addressF85F NXTCOL     inc color by 3F864 SETCOL     set low-res colorF871 SCRN       read low-res colorF88C INSDS1_2   calc length of (PCL,X) instructionF88E INSDS2     calc length of 6502 instructionF890 GET816LEN  calc length of 65816 instructionF8D0 INSTDSP    display disassembled instructionF940 PRNTYX     print YX in hexF941 PRNTAX     print AX in hexF944 PRNTX      print X in hexF948 PRBLNK     print 3 spacesF94A PRBL2      print X spacesF953 PCADJ      adjust monitor PCF962 TEXT2COPY  toggle text page 2 shadowingFA40 OLDIRQ     emulation mode interrupt handlingFA4C BREAK      old 6502 break handlerFA59 OLDBRK     new 65c816 break handlerFA62 RESET      reset handlerFAA6 PWRUP      cold-start routineFABA SLOOP      disk controller slot searchFAD7 REGDSP     display register contentsFB194RTBL       6502 register namesFB1E PREAD      read a hand controllerFB21 PREAD4     check paddle timeout then PREADFB2F INIT       init text screenFB39 SETTXT     set text modeFB40 SETGR      set graphics modeFB4B SETWND     set text window sizeFB51 SETWND2    set text window width and bottomFB5B TABV       vertical tabFB60 APPLEII    display Apple IIGS logoFB6F SETPWRC    create power-up byteFB78 VIDWAIT    check for ctl-SFB88 KBDWAIT    wait for keypressFBB3 VERSION    monitor ROM id byteFBBF ZIDBYTE2   monitor ROM id byteFBC0 ZIDBYTE    monitor ROM id byteFBC1 BASCALC    calc text base addressFBDD BELL1      generate bell toneFBE2 BELL1_2    generate bell toneFBE4 BELL2      generate bell toneFBF0 STORADV    place char on screenFBF4 ADVANCE    inc cursor positionFBFD VIDOUT     place char on screenFC10 BS         backspaceFC1A UP         move cursor up one lineFC22 VTAB       vertical tabFC24 VTABZ      vertical tabFC42 CRLEOP     clear to end of pageFC58 HOME       home cursor and clear screenFC62 CR         carriage returnFC66 LF         line feedFC70 SCROLL     scroll up one lineFC9C CLREOL     clear to end of lineFC9E CLREOLZ    clear to end of lineFCA8 WAIT       delay loopFCB4 NXTA4      inc A4FCBA NXTA1      compare A1 to A2 then inc A1FCC9 HEADR      write cassette headerFD0C RDKEY      input char with cursorFD10 FD10       input char w/o cursorFD18 RDKEY1     input charFD1B KEYIN      read keyboardFD35 RDCHAR     input char (handles ESC codes)FD67 GETLNZ     input line after c/rFD6A GETLN      input line w/promptFD6C GETLN0     input line w/prompt (alt)FD6F GETLN1     input line w/o promptFD8B CROUT1     CLEOL then c/rFD8E CROUT      issue carriage returnFD92 PRA1       print c/r then A1FDDA PRBYTE     print hex byteFDE3 PRHEX      print hex digitFDED COUT       ouput charFDF0 COUT1      output char to screenFDF6 COUTZ      output char to screen (w/o mask)FE1F IDROUTINE  returns system infoFE2C MOVE       monitor move routineFE5E LIST       old list entryFE80 SETINV     set inverse text modeFE84 SETNORM    set normal text modeFE89 SETKBD     reset input to keyboardFE8B INPORT     reset input to slotFE93 SETVID     reset output to screenFE95 OUTPORT    reset output to slotFEB6 GO         jump (A1)FECD WRITE      write record to cassetteFEFD READ       read record from cassetteFF2D PRERR      print "ERR"FF3A BELL       output bell (ctl-G)FF3F RESTORE    restore registersFF4A SAVE       save registersFF58 IORTS      known RTS instructionFF59 OLDRST     old monitor entryFF65 MON        std monitor entry w/beepFF69 MONZ       std monitor entryFF6C MONZ2      std monitor entry (alt)FF70 MONZ4      monitor entry (no prompt)FF8A DIG        shift hex digit into A2FFA7 GETNUM     get hex input into A2FFAD NXTCHR     translate next charFFBE TOSUB      call monitor functionFFC7 ZMODE      zero monitors mode byteFFFA1NMIV       NMI vectorFFFC1RESETV     RESET vectorFFFE1IRQV       interrupt vector*