*******************************************************************************							     **	  HodgePodge:  An example Apple IIGS Desktop application 	     **							     **	  Written in 65816 Assembler by the Apple IIGS Tools Team	     **  Modified by Ben Koning for "Programmer's Introduction to the Apple IIGS"  **							     **	      Copyright (c) 1986-87 by Apple Computer, Inc.		     **							     **   ----------------------------------------------------------------------   **							     **   Modified to use the ORCA/M macros and format by Byte Works, Inc.	     **	      Copyright (c) 1989 by Byte Works, Inc.			     **							     **   ASM65816 Code file "MENU.ASM" -- Menu initialization and dispatching.    **							     *************************************************************************************************************************************************** Menu item ID's                                                  *********************************************************************MenuIDs	       startAppleMenuID    gequ   1FileMenuID     gequ   2EditMenuID     gequ   3WindowsMenuID  gequ   4FontsMenuID    gequ   5UndoID	       gequ   250		These next 6 are standard andCutID	       gequ   251		  required for DA support underCopyID	       gequ   252		  TaskMaster.PasteID	       gequ   253ClearID	       gequ   254CloseWID       gequ   255AboutID	       gequ   256		These are our own responsibilityQuitID	       gequ   257OpenWID	       gequ   258SaveID	       gequ   259ChooseID       gequ   260SetupID	       gequ   261PrintID	       gequ   262ShowFontID     gequ   263MonoID	       gequ   264	       end****************************************************************** DoMenu** Called when TaskMaster tells me that a menu item has* been selected.******************************************************************DoMenu	 start	 using GlobalDATA	 lda   taskData	 cmp   #299			299 is dummy do nothing - ignore	 beq   Unhilite			  do nothing	 bge   DoWItem			300 and up are added windows	 sec	 sbc   #UndoID	 asl   a	 tax	 jsr   (MenuTable,x)Unhilite anop	 ph2   #False			draw normal	 ph2   taskDATA+2		which menu	 _HiliteMenu	 rtsMenuTable anop	 dc    i'ignore' 		Edit items	 dc    i'ignore'	 dc    i'ignore'	 dc    i'ignore'	 dc    i'ignore'	 dc    i'doCloseItem'	 dc    i'doAboutItem'	 dc    i'doQuitItem'	 dc    i'doOpenItem'	 dc    i'doSaveItem'	 dc    i'doChooserItem'	 dc    i'doSetupItem'	 dc    i'doPrintItem'	 dc    i'doOpenItem'	 dc    i'doSetMono'DoWitem	 anop	 sec	 sbc   #300ProcessW anop				In A is window number	 asl   a	 asl   a 			  times 4 to index window list	 tax	 lda   windowlist,x	 sta   whichWindow	 lda   windowlist+2,x	 sta   whichwindow+2	 jsr   DoWindow	 jmp   Unhilite			done with it	 end****************************************************************** SetupMenus** Now build the menu bar by inserting the six menus* (back to front).******************************************************************SetupMenus start	 using MenuDATA	 ph4   #0			space for return	 ph4   #FontsMenu	 _NewMenu	 ph2   #0	 _InsertMenu	 ph4   #0			space for return	 ph4   #WindowsMenu	 _NewMenu	 ph2   #0	 _InsertMenu	 ph4   #0			space for return	 ph4   #EditMenu	 _NewMenu	 ph2   #0	 _InsertMenu	 ph4   #0			space for return	 ph4   #FileMenu	 _NewMenu	 ph2   #0	 _InsertMenu	 ph4   #0			space for return	 ph4   #AppleMenu	 _NewMenu	 ph2   #0	 _InsertMenu;; Call the desk accessory manager to install the; list of NDAs in the system.;	 ph2   #1	 _FixAppleMenu;; Finish off getting the menu bar ready.;	 ph2   #0	 _FixMenuBar	 pla				Discard menu bar height	 ph2   #10			Set starting position of menu	 _SetMTitleStart	 _DrawMenuBar			Actually draw the menu bar	 rts	 end****************************************************************** AddToMenu:**   Use the fact that the last SFGTEFILE returned in REPLY record*   the name of the file and the state of the request.	Set PrintAvail.*****************************************************************AddToMenu start	 using GlobalDATA	 lda   #1	 sta   printAvail		Set PrintAvail flag to allow printing	 ph4   #0			it's the front window we're adding in	 _FrontWindow	 pla	 sta   whichwindow	 plx	 stx   whichwindow+2		get result for pushing in a sec.	 ph4   #0			space for result	 ph4   whichwindow	 _GetWrefCon			refcon has handle to data	 pla	 sta   temphandle	 plx	 stx   tempHandle+2	 jsr   Deref			dereference	 sta   0	 stx   2	 ph2   wIndex			font's size	 ph4   #Iddgt			ptr to string	 ph2   #2			length of string	 ph2   #0			unsigned integer	 _Int2Dec			convert size into an ASCII string	 lda   iddgt	 ora   #'00'	 sta   iddgt	 ldy   #oLength			get names length	 lda   [0],y			find end of string to slide stuff	 and   #$FF	 clc	 adc   #6	 tay				y index off ids is where we store	 ldx   #0			x index off idn is where we loadCpyIDLp	 lda   idn,x	 sta   [0],y	 iny	 iny	 inx	 inx	 cpx   #6			do 6 bytes	 bne   CpyIDLp	 lda   0 			now pt. to itemlist loc. for insert	 clc	 adc   #4	 tax	 lda   2	 adc   #0	 pha	 phx	 ph2   #$FFFF	 ph2   #WindowsMenuID	 _InsertMItem	 lda   wIndex			if first time, omit dummy 299	 bne   NotFirstTime	 ph2   #299			299 is dummy item to delete	 _DeleteMItem			it's gone, now add next one	 ph2   #$ff7f	 ph2   #WindowsMenuID	 _SetMenuFlag	 lda   #True	 sta   needToUpdateNotFirstTime lda  #0			re-calc size	 pha	 pha	 ph2   #WindowsMenuID	 _CalcMenuSize	 lda   wIndex			save off window Pointer for menu stuff	 asl   a	 asl   a	 tax				*4 for WINDOWLIST index	 lda   whichWindow	 sta   windowList,x	 tay	 lda   whichWindow+2	 sta   windowList+2,x	 inc   wIndex			bump counter for next add on	 lda   tempHandle	 ldx   tempHandle+2	 jsr   Unlock			ok, let this loose again	 rtsidn	 dc    c'\N3'			 "\N3nn" will slide in behind itiddgt	 dc    c'00'			00->15 slides into nnidcr	 dc    i1'13'			and finally a carriage returniddmy	 dc    i1'0'			a dummy so we slide exactly 8	 end****************************************************************** Menu Data*****************************************************************MenuData dataReturn	 equ   13AppleMenu dc   c'>>@\XH',i'AppleMenuID',i1'RETURN'	 dc    c'==About HodgePodge...\H',i'AboutID',i1'RETURN'	 dc    c'==-\N500D\0',i1'RETURN'	 dc    c'.'EditMenu dc    c'>>  Edit  \DH',i'EditMenuID',i1'RETURN'	 dc    c'==Undo\*ZzH',i'UndoID',i1'RETURN'	 dc    c'==-\N500D\0',i1'RETURN'	 dc    c'==Cut\*XxH',i'CutID',i1'RETURN'	 dc    c'==Copy\*CcH',i'CopyID',i1'RETURN'	 dc    c'==Paste\*VvH',i'PasteID',i1'RETURN'	 dc    c'==Clear\H',i'ClearID',i1'RETURN'	 dc    c'.'FileMenu dc    c'>>  File  \H',i'FileMenuID',i1'RETURN'	 dc    c'==Open...\*OoH',i'OpenWID',i1'RETURN'	 dc    c'==Close\DH',i'CloseWID',i1'RETURN'	 dc    c'==Save As...\DH',i'SaveID',i1'RETURN'	 dc    c'==-\N500D\0',i1'RETURN'	 dc    c'==Choose Printer...\H',i'ChooseID',i1'RETURN'	 dc    c'==Page Setup...\DH',i'SetupID',i1'RETURN'	 dc    c'==Print...\D*PpH',i'PrintID',i1'RETURN'	 dc    c'==-\N500D\0',i1'RETURN'	 dc    c'==Quit\*QqH',i'QuitID',i1'RETURN'	 dc    c'.'WindowsMenu dc c'>>  Windows  \DH',i'WindowsMenuID',i1'RETURN'origItem entry	 dc    c'==No Windows allocated\N299',i1'RETURN'	 dc    c'.'FontsMenu dc   c'>>  Fonts  \H',i'FontsMenuID',i1'RETURN'	 dc    c'==Display Font...\*FfH',i'ShowFontID',i1'RETURN'MonoPropItem entry	 dc    c'==Display Font as Mono-spaced\*MmH',i'MonoID',i1'RETURN'	 dc    c'.'MonoStr	 dc    c'==Display Font as Mono-spaced\H',i'MonoID',i1'RETURN'PropStr	 dc    c'==Display Font as Proportional\*MmH',i'MonoID',i1'RETURN'******NOTE: 300 is starting number for a building list - used in AddToMenu******	    299 is the dummy one that is deleted when we get a real one	 end	 append Window.Asm