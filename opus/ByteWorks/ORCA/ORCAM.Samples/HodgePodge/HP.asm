	       keep   HodgePodge	       mcopy  hp.macros*******************************************************************************							     **	  HodgePodge:  An example Apple IIGS Desktop application 	     **							     **	  Written in 65816 Assembler by the Apple IIGS Tools Team	     **  Modified by Ben Koning for "Programmer's Introduction to the Apple IIGS"  **							     **	      Copyright (c) 1986-87 by Apple Computer, Inc.		     **							     **   ----------------------------------------------------------------------   **							     **	    This program and its derivatives are licensed only for	     **	    use on Apple computers.					     **							     **	    Works based on this program must contain and 		     **	    conspicuously display this notice.				     **							     **	    This software is provided for your evaluation and to 	     **	    assist you in developing software for the Apple IIGS 	     * *	    computer.					     **							     **	    This is not a distribution license. Distribution of	     **	    this and other Apple software requires a separate		     **	    license. Contact the Software Licensing Department of	     **	    Apple Computer, Inc. for details.				     **							     **	    DISCLAIMER OF WARRANTY					     **							     **	    THE SOFTWARE IS PROVIDED "AS IS" WITHOUT			     **	    WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,		     **	    WITH RESPECT TO ITS MERCHANTABILITY OR ITS FITNESS		     **	    FOR ANY PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO		     **	    THE QUALITY AND PERFORMANCE OF THE SOFTWARE IS WITH	     **	    YOU.  SHOULD THE SOFTWARE PROVE DEFECTIVE, YOU (AND	     **	    NOT APPLE OR AN APPLE AUTHORIZED REPRESENTATIVE)		     **	    ASSUME THE ENTIRE COST OF ALL NECESSARY SERVICING,		     **	    REPAIR OR CORRECTION.					     **							     **	    Apple does not warrant that the functions			     **	    contained in the Software will meet your requirements	     **	    or that the operation of the Software will be		     **	    uninterrupted or error free or that defects in the		     **	    Software will be corrected.				     **							     **	    SOME STATES DO NOT ALLOW THE EXCLUSION			     **	    OF IMPLIED WARRANTIES, SO THE ABOVE EXCLUSION MAY		     **	    NOT APPLY TO YOU.  THIS WARRANTY GIVES YOU SPECIFIC	     **	    LEGAL RIGHTS AND YOU MAY ALSO HAVE OTHER RIGHTS		     **	    WHICH VARY FROM STATE TO STATE.				     **							     **   ----------------------------------------------------------------------   **							     **   ASM65816 Code file "HP.ASM" -- Main routine and COPY's and appends for   **				   other files		     **							     **************************************************************************************************************************************************************							     **			Version 2.0 -- August 1989	     **							     **   Translated to use ORCA/M's macros and format by Byte Works, Inc.         **   Copyright 1989 by Byte Works, Inc.					     **							     *************************************************************************************************************************************************  The main program******************************************************************HodgePodge     start	       using  GlobalData;; Global equates used throughout the program.;True	       gequ   $8000False	       gequ   $0000	       phk			set code and data bank to same bank	       plb			  so can use absolute addressing	       tcd	       sta    myDP		save original Direct Page register;; Start the tools we'll need.;	       pha	       ph2    #$80		640 mode	       jsl    StartupTools	       pla			necessary because StartUpTools	       pla			  uses Pascal calling convention;					  leaving input params on stack	       bne    AllDone	       jsr    SetupMenus	       stz    lastWType		initialize program flags	       stz    quitFlag	       stz    wIndex	       stz    printRecord	zero the print record handle	       stz    printRecord+2	       jsr    MainEvent		handle events until fatal error or user;					  quits;;; All is done, let's shut down.;AllDone	       anop	       jsl    ShutDownTools	       ph4    printRecord	get rid of print record handle	       _DisposeHandle		  if PrintRecord has zero in it;					  dispose handle will fail but;					  we don't care.	       Quit  quitParams	       end****************************************************************** GlobalDATA******************************************************************GlobalData     data	       copy  13/ainclude/E16.DialogvolNotFound    gequ   $45		GS/OS errorlastWind       gequ    15		maximum number of windows openmyID	       entry	       ds     2thisMode       entry	       ds     2origPort       entry	       ds     4prompt	       dc     i1'19',c'Load which Picture:'prompt2	       dc     i1'19',c'Save which Picture:'wXoffset       dc     i'20'		offset for upperleft window cornerwYOffset       dc     i'12'		offset for upperleft window cornernullRect       dc     i'0,0,0,0'reply	       anop			SF GET/PUT FILE recordr_good	       dc     i2'0'r_type	       dc     i2'0'r_auxtyp       dc     i2'0'r_fname	       ds     16r_fullpn       ds     129quitParams     anop	       dc     a4'0'		let OS choose next application	       dc     i'$4000'		program is restartable in memorysrcInfo320     dc     i'$00'		PPtoPort 320 parmspicPtr320      ds     4	       dc     i'160'	       dc     i'0,0,200,320'srcRect320     dc     i'0,0,200,320'srcLocInfo     dc     i'$80'		PPtoPort 640 parmspicPtr	       ds     4	       dc     i'160'	       dc     i'0,0,200,640'srcRect	       dc     i'0,0,200,640'eventRecord    anopeventWhat      ds     2eventMessage   ds     4eventWhen      ds     4eventWhere     ds     4eventModifiers ds     2taskData       ds     4taskMask       dc     i4'$0FFF'quitFlag       ds     2dialogPtr      ds     4wIndex	       ds     2			index to next avail.window IDmyDP	       ds     2vIndex	       ds     2			index used to list of what WAS visiblevTable	       ds     16*4		list of what WAS vis. when Hiding allwindowList     ds     16*4		all windows handle go into this listwhichWindow    ds     4			will contain window pointer, cur. windowtempHandle     ds     4			some temp handlestemp2Handle    ds     4picHandle      ds     4			handle to picture datasaveType       ds     2activateFlag   ds     2			flag for check front window.needToUpdate   ds     2			used to prevent multi menu redrawsthisWType      ds     2lastWtype      ds     2printAvail     dc     i'0'		make sure this starts as 0 printRecord    ds     4			handle to print recordprintPort      ds     4			pointer to printing GrafPort;; MyWindowInfo;; This is the data structure used for the windows we allocate.;maxNameSize    equ    29 		largest name we allowoHandle	       equ    0oBlank	       equ    oHandle+4oLength	       equ    oBlank+1oName	       equ    oLength+1oMMStuff       equ    oName+MaxNameSizeoFlag	       equ    oMMStuff+6oExtra	       equ    oFlag+1;oFontID	       equ    oHandle		if the type is for font,;					  the first field is a FontID;					  rather than the handle to picture;					  data.myWinfoSize    equ    oExtra+4	       end****************************************************************** IOData******************************************************************IOData	 datacreateParms  anopnameC	 dc    i4'0'	 dc    i2'$00C3' 		DBNWRcType	 dc    i2'$0006' 		BIN filetypecAux	 dc    i4'$00000000'		auxtype	 dc    i2'$0001' 		storage type	 dc    i2'$0000' 		create date	 dc    i2'$0000' 		create timedestParams anopnameD	 dc    i4'0'openParams     anopopenID	       ds     2			reference numbernamePtr	       ds     4			pathname of file to open	       dc     i4'0'		buffer - reservedreadParams     anopreadID	       ds     2			reference numberpicDestIN      ds     4			pointer to data buffer	       dc     i4'$8000'		this many bytes	       ds     4			how many xferedpReadParams    anop			for reading a packed filepReadID	       ds     2pReadLoc       ds     4pReadSize      ds     4			this many bytes	       ds     4			how many xferedmarkParams     anopmarkID	       ds     2			reference numbercurrentMark    anop			current file positionmark	       ds     4writeParams    anopwriteID	       ds     2			reference numberpicDestOUT     ds     4			pointer to data buffer	       dc     i4'$8000'		this many bytes	       ds     4			how many xferedpackWParams    anoppackWID	       ds     2packWDest      ds     4howMany	       ds     4			this many bytes	       ds     4			how many xferedcloseParams    anopcloseID	       ds 2			reference number	       end****************************************************************** Ignore** Does not do a whole lot.*****************************************************************Ignore	       start	       rts	       end****************************************************************** Deref** Derefs and locks the handle passed in a,x.  Result passed back* in a,x. Trashes 0 on zp.*****************************************************************Deref	 start	 sta   0	 stx   2	 ldy   #4	 lda   [0],y	 ora   #$8000	 sta   [0],y	 dey	 dey	 lda   [0],y	 tax	 lda   [0]	 rts	 end****************************************************************** Unlock** Unlocks the handle passed in x and a.	 0 is trashed on zp.*****************************************************************Unlock	 start	 sta   0	 stx   2	 ldy   #4	 lda   [0],y	 and   #$7FFF	 sta   [0],y	 rts	 end	 append Init.Asm