         KEEP  CAL         MCOPY CL.MACROS******************************************************************  CAL 1.0*  24 January 1987**  Takes a month and year and prints the calendar for that month.*  If no month is specified, the entire year's calendar is*  printed.**  CAL [-V] [month] year**        -V    Print version number and copyright.*        month Month as a three letter code.  Extra letters are*              ignored.*        year  Year as a number from 1500 to 3999.**  By Mike Westerfield**  Copyright 1987*  By the Byte Works, Inc.*  All rights reserved******************************************************************CAL      START         JSR   SINIT         JSR   SMAIN         LDA   #0         RTL         DC    C'CAL 1.0'         DC    C'Copyright 1987, Byte Works, Inc.'         END******************************************************************  COMMON - Common Data Areas******************************************************************COMMON   DATA;;  Constants;FALSE    EQU   0                        boolean constantsTRUE     EQU   1;;  Zero Page Equates;R0       GEQU  $0                       general purpose registersR1       GEQU  $1R2       GEQU  $2R3       GEQU  $3R4       GEQU  $4R5       GEQU  $5R6       GEQU  $6R7       GEQU  $7R8       GEQU  $8R9       GEQU  $9R10      GEQU  $AR11      GEQU  $BR12      GEQU  $CR13      GEQU  $DR14      GEQU  $ER15      GEQU  $FINLINE   GEQU  $10                      pointer to input lineCLDISP   GEQU  $14                      disp in INLINE;;  Flagged variables;COPYRIGHT GEQU $40                      display copyright?;;  DCBs;QT_DCB   ANOP                           quit DCB         DC    A4'QT_FLAGS'QT_FLAGS DC    I'0'ER_DCB   ANOP                           system error DCBER_NUM   DS    2;;  Global Variables;MONTH    DS    2                        month - 0..11 or -1 for all yearTOKEN    DSTR  ,255                     command line tokenUSER_ID  DS    2                        User IDYEAR     DS    2                        year         END******************************************************************  SCALN - Print a monthly calendar**  Inputs:*        MONTH - month to print*        YEAR - year to print******************************************************************SCALN    START         USING COMMON         LONGA ON         LONGI ON;;  Write the title line.;         LA    R0,MONTHS                skip to correct month         LDY   #1         LDX   MONTH         BEQ   LB2LB1      LDA   (R0),Y         AND   #$00FF         INC   A         SEC         ADC   R0         STA   R0         DBNE  X,LB1LB2      PUTCR                          skip a line         PUTS  #'       '               write leading blanks to center         PUTS  {R0}                     write the month         PUT2  YEAR,#5,CR=T             write the year         PUTCR                          skip a line         PUTS  #' Sun Mon Tue Wed Thu Fri Sat',CR=T;;  Compute length of month and starting day of week.;         LDA   MONTH                    get factor for first date         LDX   YEAR         JSR   SFACT         STA   R0         STX   R2         SUB4  R0,#1,R4                 R4 = starting day of week         MOD4  R4,#7                     {R4 = FACTOR-1 MOD 7}         LDA   MONTH                    get factor for second date         LDX   YEAR         INC   A         CMP   #12         BLT   LB3         LDA   #0         INXLB3      JSR   SFACT         SEC                            R0 = # days in month         SBC   R0                        {FACTOR for first day in next month -         STA   R0                         FACTOR for first day in this month};;  Print the days in the month.;         LDA   R4                       print leading blanks         BEQ   LB5         STA   R2LB4      PUTS  #'    '         DBNE  R2,LB4LB5      LDA   #1                       for R2 = 1 to R0 do         STA   R2LB6      PUT2  R2,#4                      write(R2,4)         INC   R4                         R4 := R4+1         LDA   R4                         if R4 = 7 then         CMP   #7         BNE   LB7         STZ   R4                           R4 = 0         PUTCR                              writelnLB7      ANOP                             endif         INC   R2                       next R2         DBNE  R0,LB6         PUTCR         RTSMONTHS   DSTR  ' January'         DSTR  ' February'         DSTR  '  March'         DSTR  '  April'         DSTR  '   May'         DSTR  '   June'         DSTR  '   July'         DSTR  '  August'         DSTR  'September'         DSTR  ' October'         DSTR  ' November'         DSTR  ' December'         END******************************************************************  SFACT - Calculate the date factor (# days since the first)**  Inputs:*        A - month*        X - year**  Outputs:*        X-A - # days since first day in calendar******************************************************************SFACT    START         LONGA ON         LONGI ON         STA   MONTH         STX   YEAR         MUL4  YEAR,#365,FACTOR         (do common part of calculation)         INC4  FACTOR         MUL4  MONTH,#31,T1         ADD4  FACTOR,T1         LDA   MONTH                    if month < 2 then         CMP   #2         BGE   LB1;                                         FACTOR = 365*YEAR;                                           +1;                                           +31*MONTH         DEC4  YEAR                         +(YEAR-1)/4         DIV4  YEAR,#4,T1         ADD4  FACTOR,T1         BRL   LB1A                         -(((YEAR-1)/100)+1)*3/4;        DIV4  YEAR,#100,T1;        INC4  T1;        MUL4  T1,#3;        DIV4  T1,#4;        SUB4  FACTOR,T1;        BRA   LB2LB1      ANOP                           else;                                         FACTOR = 365*YEAR;                                           +1;                                           +31*MONTH         ADD4  MONTH,#1,T1                  -((MONTH+1)*4+23)/10         MUL4  T1,#4         ADD4  T1,#23         DIV4  T1,#10         SUB4  FACTOR,T1         DIV4  YEAR,#4,T1                   +YEAR/4         ADD4  FACTOR,T1LB1A     DIV4  YEAR,#100,T1                 -(YEAR/100+1)*3/4         INC4  T1         MUL4  T1,#3         DIV4  T1,#4         SUB4  FACTOR,T1LB2      ANOP                           endif         LDA   FACTOR         LDX   FACTOR+2         RTSYEAR     DC    I4'0'MONTH    DC    I4'0'FACTOR   DS    4T1       DS    4         END******************************************************************  SFLAG - Read a flag from the command line**  Inputs:*        TOKEN - token to check to see if its a flag**  Outputs:*        A - flag character; MSB set for +, clear for -*        C - set if flag found, else clear******************************************************************SFLAG    START         USING COMMON         LONGA ON         LONGI ON         SHORT I,M         LDA   TOKEN+1         CMP   #2         BNE   NOT         LDA   #0         LDX   TOKEN+2         CPX   #'-'         BEQ   MINUS         CPX   #'+'         BEQ   PLUSNOT      CLC         LONG  I,M         RTS         LONGI OFF         LONGA OFFPLUS     LDA   #$80MINUS    ORA   TOKEN+3         LONG  I,M         AND   #$00FF         PHA         JSR   STOKN         PLA         CMP   #'a'         BLT   LB1         CMP   #'z'+1         BLT   LB0         CMP   #'a'+$80         BLT   LB1         CMP   #'z'+$80+1         BGE   LB1LB0      AND   #$00DFLB1      SEC         RTS         END******************************************************************  SINIT - Program Initialization******************************************************************SINIT    START         USING COMMON         LONGA ON         LONGI ON;;  Save O/S supplied values;         PHK                            set data bank         PLB         STA   USER_ID                  save user ID         STX   INLINE+2                 save addr of input line         STY   INLINE;;  Initialize global variables;         STZ   COPYRIGHT                COPYRIGHT = FALSE;;  Read flags.;         LDA   #8                       skip shell identifier         STA   CLDISP         JSR   STOKN                    read the command nameLB1      JSR   STOKN                    skip if there is no token on the line         LDA   TOKEN+1         AND   #$00FF         BEQ   FL1         JSR   SFLAG                    read any flags on the line         BCC   FL1         CMP   #'V'         BNE   BADFLAG         LDA   #TRUE         STA   COPYRIGHT         BRA   FL1BADFLAG  PUTS  #'Illegal flag',CR=T,ERROUT=T         LDA   #$FFFF         QUIT  QT_DCB;;  Set up the input file;FL1      JSR   SMONT                    read the month         JSR   SYEAR                    read the year         LDA   TOKEN+1         AND   #$00FF         BNE   BADPARM         RTSBADPARM  PUTS  #'Too many parameters on command line',CR=T,ERROUT=T         LDA   #$FFFF         QUIT  QT_DCB         END******************************************************************  SMAIN - Top level control******************************************************************SMAIN    START         USING COMMON         LONGA ON         LONGI ON         STZ   ST_STOP                  don't stop yet         LDA   COPYRIGHT                if V flag then write copyright         BEQ   LB1         PUTS  #'Calendar 1.0',CR=T         PUTS  #'Copyright 1987, Byte Works, Inc.',CR=T         PUTCRLB1      LDA   MONTH                    if month = -1 then         BPL   LB3         STZ   MONTH                      for month := 0 to 11 doLB2      JSR   SCALN                        SCALN         STOP  ST_DCB                       check for user exit         LDA   ST_STOP         BNE   LB5         INC   MONTH                      next month         LDA   MONTH         CMP   #12         BLT   LB2         BRA   LB4                      elseLB3      JSR   SCALN                      SCALNLB4      ANOP                           endifLB5      RTSST_DCB   ANOPST_STOP  DS    2         END******************************************************************  SMONT - Read the month**  Inputs:*        TOKEN - month**  Outputs:*        TOKEN - next token*        MONTH - 0..11 for month, or -1 for none specified******************************************************************SMONT    START         USING COMMON         LONGA ON         LONGI ON         LDA   #-1                      assume no month         STA   MONTH         LDA   TOKEN+1                  quit if string is zero length         AND   #$00FF         JEQ   LB6         CMP   #3                       quit if string is shorter than 3 chars         JLT   LB6         LDA   TOKEN+2                  quit if string starts with a number         JSR   SNMID         JCS   LB6         LDX   #3                       capitolize the first 3 digitsLB2      LDA   TOKEN+1,X         AND   #$007F         JSR   SUPER         SHORT M         STA   TOKEN+1,X         LONG  M         DBNE  X,LB2         LDY   #0                       y is month number         LDX   #0                       x is dism into month tableLB3      LDA   MONTHS,X                 branch if month matches         CMP   TOKEN+2         BNE   LB4         LDA   MONTHS+1,X         CMP   TOKEN+3         BEQ   LB5LB4      INX                            next month         INX         INX         INY         CPY   #12         BLT   LB3         PUTS  TOKEN,ERROUT=T         PUTS  #' is not a valid month.',CR=T,ERROUT=T         LDA   #$FFFF         QUIT  QT_DCBLB5      STY   MONTH                    set the month         JSR   STOKN                    read the next tokenLB6      RTSMONTHS   DC    C'JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC'         END******************************************************************  SMNID - See if A is a digit**  Inputs:*        A - character**  Outputs:*        C - set if A is a digit, else clear******************************************************************SNMID    START         LONGA ON         LONGI ON         AND   #$007F         CMP   #'0'         BLT   NO         CMP   #'9'+1         BGE   NO         SEC         RTSNO       CLC         RTS         END******************************************************************  STOKN - Read a token from the command line**  Outputs:*        TOKEN - token read******************************************************************STOKN    START         USING COMMON         LONGA ON         LONGI ON         STZ   TOKEN+1                  set token to null         LDA   INLINE                   quit if no command line         ORA   INLINE+2         BEQ   LB5         SHORT I,M         LDY   CLDISP                   skip leading blanksLB1      LDA   [INLINE],Y         CMP   #' '         BNE   LB2         INY         BRA   LB1LB2      LDX   #0                       read the tokenLB3      LDA   [INLINE],Y         BEQ   LB4         CMP   #' '         BEQ   LB4         STA   TOKEN+2,X         INY         INX         BPL   LB3LB4      STX   TOKEN+1                  set the string length         STY   CLDISP                   save the new disp         LONG  I,MLB5      RTS         END******************************************************************  SUPER - Convert to uppercase**  Inputs:*        A - letter**  Outputs:*        A - uppercase letter******************************************************************SUPER    START         LONGA ON         LONGI ON         AND   #$007F         CMP   #'a'         BLT   LB1         CMP   #'z'+1         BGE   LB1         AND   #$005FLB1      RTS         END******************************************************************  SYEAR - Read the year**  Inputs:*        TOKEN - year**  Outputs:*        YEAR - year number******************************************************************SYEAR    START         USING COMMON         LONGA ON         LONGI ON         LDA   TOKEN+1                  make sure there is a string         AND   #$00FF         BNE   LB1         PUTS  #'Year: '         GETS  TOKEN         LDA   TOKEN+1         AND   #$00FF         BNE   LB1         BRA   BD1BAD      PUTS  TOKEN,ERROUT=T         PUTS  #' is not a valid year.',CR=T,ERROUT=TBD1      LDA   #-1         QUIT  QT_DCBLB1      TAX                            make sure it is numericLB2      LDA   TOKEN+1,X         JSR   SNMID         BCC   BAD         DBNE  X,LB2         CNVS2 TOKEN,YEAR               make sure it is in the valid range         BVS   BD2         LDA   YEAR         CMP   #1500         BLT   BD2         CMP   #4000         BGE   BD2         JSR   STOKN                    skip to the next token         RTSBD2      PUTS  #'The year must be in the range 1500 to 3999.',CR=T,ERROUT=T         BRA   BD1         END