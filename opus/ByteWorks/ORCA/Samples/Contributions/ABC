      DIM GT%: REM Use for keypress      DIM X%, Y%: REM Use for loops      DIM V%(4), H%(4): REM Use to hold character locations      DIM A$(4, 4): REM Use to hold original characters      DIM B$(4, 4): REM Use to hold working characters      DIM FLAG%: REM Use for various flags      DIM DONE%: REM Flag to indicate end of program      HOME      ! Draw screen and comments      HTAB 10: PRINT " _______________"      FOR X% = 1 TO 4        HTAB 10: PRINT "|   |   |   |   |"        HTAB 10: PRINT "|   |   |   |   |"        HTAB 10: PRINT "|___|___|___|___|"      NEXT      VTAB 2: HTAB 30: INVERSE : PRINT "                               "      VTAB 3: HTAB 30: PRINT " ABC Puzzle by Charlie Hartley "      VTAB 4: HTAB 30: PRINT "                               ": NORMAL      VTAB 7: HTAB 32: PRINT "Use the arrow keys to move;"      VTAB 9: HTAB 32: PRINT "press ESCape to quit."      ! Stuff screen locations into variables      FOR X% = 1 TO 4        READ V%(X%), H%(X%):      NEXT      DATA 3,12,6,16,9,20,12,24      ! Stuff original characters into variables      FOR X% = 1 TO 4        FOR Y% = 1 TO 4          READ A$(X%, Y%)        NEXT      NEXT      DATA A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,*      ! Stuff working characters into variables      FOR X% = 1 TO 4        FOR Y% = 1 TO 4          FLAG% = 0          WHILE NOT FLAG%            V% = ( RND (1) * 4) + 1            H% = ( RND (1) * 4) + 1            IF B$(V%, H%) = "" THEN              B$(V%, H%) = A$(X%, Y%)              FLAG% = 1            END IF          WEND        NEXT      NEXT      CT% = - 1: REM moves counter      DO UNTIL DONE% > 0        ! Print working characters to screen slots.        FOR X% = 1 TO 4          FOR Y% = 1 TO 4            VTAB V%(X%): HTAB H%(Y%): PRINT B$(X%, Y%)            IF B$(X%, Y%) = "*" THEN              VT% = X%: REM vtab location of *              HT% = Y%: REM htab location of *            END IF          NEXT        NEXT        CT% = CT% + 1        VTAB 18: HTAB 1: PRINT "Moves - ";CT%        CALL GETKEY(GT%)        DONE% = 0: REM initialize end of program flag        SELECT CASE GT%          CASE 8: REM left arrow key pressed            IF HT% = 1 THEN              PRINT CHR$ (7);: REM already at top of graph            ELSE              GT$ = B$(VT%, HT%): REM swap two characters              B$(VT%, HT%) = B$(VT%, HT% - 1)              B$(VT%, HT% - 1) = GT$            END IF          CASE 21: REM right arrow key pressed            IF HT% = 4 THEN              PRINT CHR$ (7);            ELSE              GT$ = B$(VT%, HT%)              B$(VT%, HT%) = B$(VT%, HT% + 1)              B$(VT%, HT% + 1) = GT$            END IF          CASE 11: REM up arrow key pressed            IF VT% = 1 THEN              PRINT CHR$ (7);            ELSE              GT$ = B$(VT%, HT%)              B$(VT%, HT%) = B$(VT% - 1, HT%)              B$(VT% - 1, HT%) = GT$            END IF          CASE 10: REM down arrow key pressed            IF VT% = 4 THEN              PRINT CHR$ (7);            ELSE              GT$ = B$(VT%, HT%)              B$(VT%, HT%) = B$(VT% + 1, HT%)              B$(VT% + 1, HT%) = GT$            END IF          CASE 27: REM ESCape key pressed            GT$ = "You quit."            DONE% = 1        END SELECT        ! Print working characters to screen slots.        FOR X% = 1 TO 4          FOR Y% = 1 TO 4            VTAB V%(X%): HTAB H%(Y%): PRINT B$(X%, Y%)            IF B$(X%, Y%) = "*" THEN              VT% = X%              HT% = Y%            END IF          NEXT        NEXT        ! Check to see of characters are correctly placed.        FLAG% = 0        FOR X% = 1 TO 4          FOR Y% = 1 TO 4            IF A$(X%, Y%) = B$(X%, Y%) THEN              FLAG% = FLAG% + 1            END IF          NEXT        NEXT        IF FLAG% = 16 THEN          DONE% = 1: REM all are correct          GT$ = "You won!"        END IF      LOOP      ! Game over - print appropriate message      VTAB 20: HTAB 1: PRINT GT$      END      ! Get keypress; return result      SUB GETKEY(GT%)      PRINT CHR$ (6);: REM make sure cursor off      WAIT $00C000, $80: REM wait for keystoke      GT% = PEEK ($00C000): REM capture it      POKE $00C010, 0: REM clear input buffer      END SUB