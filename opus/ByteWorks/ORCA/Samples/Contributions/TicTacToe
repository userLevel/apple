      ! Tic-Tac-Toe 3D      ! Written by Charlie Hartley      ! This version sets you against the computer.      ! Like the face of a die, the blocks in this game are numbered.      ! The game opens with the following faces visible.      TOP% = 3      FRONT% = 1      SIDE% = 2      ! ROUND% keeps track of the round being played. It is used      !  along with CHECK% to figure whose turn it is.      ROUND% = 0      CHECK% = 0      ! P% is the player variable. 1 = you; 2 = the computer      ! C% is used as a cursor position holder on occasion.      ! FACE% is used to hold the side of the block facing front (1-6)      P% = 1      C% = 1      FACE% = 1      DIM X%(9): REM Holds the x coordinates of each block.      DIM Y%(9): REM Holds the y coordinates of each block.      DIM LENGTH%(9): REM Holds the length of a front face side.      DIM HALF%(9): REM Holds the length of a side or top side.      DIM FLAG%(9, 6): REM Holds the color of each face of each block.      ! Set up variables.      FOR X% = 1 TO 9        READ X%(X%), Y%(X%), LENGTH%(X%), HALF%(X%)        FOR Y% = 1 TO 6          FLAG%(X%, Y%) = 14: REM Begin with all blocks gray.        NEXT      NEXT      DATA 60,90,12,6,90,90,10,5,116,90,8,4      DATA 60,60,12,6,90,60,10,5,116,60,8,4      DATA 60,30,12,6,90,30,10,5,116,30,8,4      DIM COMPUTER%(6, 6, 6)      ! Variable to hold directions that blocks must rotate to move to      !   be in position for the computer's next move.      !     0 = placeholder; not used      !     8 = move left      !    21 = move right      !    11 = move up      !    10 = move down      !    22 = move down twice      ! This creates a lookup table to enable swift selection of movement.      FOR X% = 1 TO 6        FOR Y% = 1 TO 6          FOR Z% = 1 TO 6            READ COMPUTER%(X%, Y%, Z%)          NEXT        NEXT      NEXT      DATA 0,0,0,0,0,0,0,10,8,11,21,22,0,8,10,11,21,22,0,21,11,10,8,22      DATA 0,11,8,21,10,22,0,0,0,0,0,0,10,0,8,21,22,11,0,0,0,0,0,0,21,0      DATA 10,11,22,8,8,0,11,10,22,21,0,0,0,0,0,0,11,0,21,8,22,10,10,21,0      DATA 22,8,11,8,10,0,22,11,21,0,0,0,0,0,0,0,0,0,0,0,0,21,11,0,22,10      DATA 8,11,8,0,22,21,10,10,8,22,0,21,11,21,10,22,0,11,8,0,0,0,0,0,0      DATA 0,0,0,0,0,0,8,11,22,0,10,21,11,21,22,0,8,10,10,22,21,8,0,11      DATA 0,0,0,0,0,0,8,22,10,11,0,21,21,22,11,10,0,8,0,0,0,0,0,0      DATA 11,22,8,21,0,10,0,0,0,0,0,0,22,10,8,21,11,0,22,21,10,11,8,0      DATA 22,8,11,10,21,0,22,11,21,8,10,0,0,0,0,0,0,0      HOME      INVERSE      PRINT " Tic Tac Toe 3D  by  Charlie Hartley "      NORMAL      VTAB 3: HTAB 3      PRINT "This version of Tic Tac Toe is played on all six sides of nine blocks. All it"      PRINT "takes to win is to complete three in a row on any side. However, there are"      PRINT "some special rules. "      VTAB 7: HTAB 3      PRINT "After you open with an initial move, each player, beginning with the"      PRINT "computer's turn, has two plays in a row. However, those two plays must be on"      PRINT "two different faces of the block."      VTAB 11: HTAB 3      PRINT "Second, if you attempt to place both plays on the same face, or if you"      PRINT "attempt to play a spot already claimed, you lose that play. "      VTAB 14: HTAB 3      PRINT "The arrow keys are used to rotate the blocks; the number keys are used to"      PRINT "select the block to play. They are laid out so that the keypad matches the"      PRINT "layout of the blocks. "      VTAB 18: HTAB 3      PRINT "When one player wins, his color is displayed at the bottom of the screen"      PRINT "along with the word 'wins'. To exit the game at this time, press the return key."      VTAB 21: HTAB 3      PRINT "If you want to quit before the end of the game, press the escape key,"      PRINT "followed by the return key. "      VTAB 24: HTAB 28      PRINT "Press a key to continue. ";      CALL GETKEY(GT%)      WHILE LEVEL = 0        HOME        INVERSE        PRINT " Pick a level of expertise: "        NORMAL        VTAB 3: HTAB 1: PRINT "1 - Novice"        PRINT "2 - Intermediate"        PRINT "3 - Superior"        PRINT "4 - Expert"        PRINT        PRINT "... and type its number (1-4) ";        CALL GETKEY(GT%)        GT% = GT% - 48        IF GT% > 0 AND GT% < 5 THEN          LEVEL = GT%        ELSE          HOME          PRINT "Please select between 1-4."          PRINT : PRINT "Press a key to continue ...";          CALL GETKEY(GT%)        END IF      WEND      HGR      GOSUB 100: REM Draw the game blocks.      ! Draw the following on the graphics screen:      !      !  7 | 8 | 9      !-----------      !  4 | 5 | 6      !-----------      !  1 | 2 | 3      !      ! This shows the player what numbers are associated with each block.      HCOLOR= 3      X% = 175      Y% = 100      ! tic-tac-toe lines      HPLOT X% + 8, Y% TO X% + 8, Y% - 34      HPLOT X% + 20, Y% TO X% + 20, Y% - 34      HPLOT X%, Y% - 10 TO X% + 28, Y% - 10      HPLOT X%, Y% - 24 TO X% + 28, Y% - 24      ! numerals one - nine      X = 175:Y = 100: GOSUB 49      X = 187:Y = 100: GOSUB 50      X = 199:Y = 100: GOSUB 51      X = 175:Y = 86: GOSUB 52      X = 187:Y = 86: GOSUB 53      X = 199:Y = 86: GOSUB 54      X = 175:Y = 72: GOSUB 55      X = 187:Y = 72: GOSUB 56      X = 199:Y = 72: GOSUB 57      ! Print SELECT next to the keypad display.      Y = 86      FOR L = 0 TO 5        X = 213 + (L * 7)        ON L + 1 GOSUB 83, 69, 76, 69, 67, 84      NEXT      ! Draw four arrows to remind the player to use the arrow keys      !  to rotate the blocks.      X = 175      Y = 40      ! left arrow      HPLOT X, Y - 6 TO X + 6, Y - 6      HPLOT X + 1, Y - 5 TO X + 1, Y - 7      HPLOT X + 2, Y - 8 TO X + 2, Y - 4      ! right arrow      HPLOT X + 21, Y - 6 TO X + 28, Y - 6      HPLOT X + 27, Y - 5 TO X + 27, Y - 7      HPLOT X + 26, Y - 8 TO X + 26, Y - 4      ! down arrow      HPLOT X + 14, Y + 7 TO X + 14, Y      HPLOT X + 13, Y + 6 TO X + 15, Y + 6      HPLOT X + 12, Y + 5 TO X + 16, Y + 5      ! up arrow      HPLOT X + 14, Y - 13 TO X + 14, Y - 20      HPLOT X + 13, Y - 19 TO X + 15, Y - 19      HPLOT X + 12, Y - 18 TO X + 16, Y - 18      ! Print ROTATE next to the arrows.      Y = 37      FOR L = 0 TO 5        X = 213 + (L * 7)        ON L + 1 GOSUB 82, 79, 84, 65, 84, 69      NEXT      ! Draw a blue box to represent the player's color.      X = 60      Y = 150      HCOLOR= 6      FOR A = 0 TO 6        HPLOT X, Y - A TO X + 6, Y - A      NEXT      ! Print YOU next to the box.      HCOLOR= 3      FOR L = 0 TO 2        X = 70 + (L * 7)        ON L + 1 GOSUB 89, 79, 85      NEXT      ! Draw a red box to represent the computer.      X = 115      HCOLOR= 7      FOR A = 0 TO 6        HPLOT X, Y - A TO X + 6, Y - A      NEXT      ! Print COMPUTER next to the red box.      HCOLOR= 3      FOR L = 0 TO 8        X = 125 + (L * 7)        ON L + 1 GOSUB 67, 79, 77, 80, 85, 84, 69, 82      NEXT      ! Draw a blue box to serve as the opening turn color.      X = 205      HCOLOR= 6      FOR A = 0 TO 6        HPLOT X, Y - A TO X + 6, Y - A      NEXT      ! Print <-- TURN next to the turn box.      HCOLOR= 3      HPLOT X + 9, Y - 3 TO X + 15, Y - 3      HPLOT X + 10, Y - 4 TO X + 10, Y - 2      HPLOT X + 11, Y - 5 TO X + 11, Y - 1      FOR L = 0 TO 3        X = 223 + (L * 7)        ON L + 1 GOSUB 84, 85, 82, 78      NEXT      ! You are now finished setting up for the game.      ! Beginning below you will actually be taking turns with the computer.      ! DONE% is the variable that determines if someone has won yet. While      !  it equals 0 the game continues.      DONE% = 0      WHILE NOT DONE%        ! Check to see if it is the computer's turn; if yes then gosub 1 to        !  determine a move.        IF P% = 2 THEN          GOSUB 1          IF FRONT% <> CF% THEN            ! Need to change faces.            GT% = COMPUTER%(FRONT%, TOP%, CF%)            SELECT CASE GT%              CASE 8, 10, 11, 21                CALL ARROWS(GT%, TOP%, FRONT%, SIDE%)                GOSUB 100              CASE 22                GT% = 10                CALL ARROWS(GT%, TOP%, FRONT%, SIDE%)                GOSUB 100                GT% = 10                CALL ARROWS(GT%, TOP%, FRONT%, SIDE%)                GOSUB 100            END SELECT          END IF          GT% = CC% + 48        ELSE          CALL GETKEY(GT%): REM Your turn.        END IF        SELECT CASE GT%          CASE 11, 10, 8, 21            CALL ARROWS(GT%, TOP%, FRONT%, SIDE%)            GOSUB 100          CASE 49, 50, 51, 52, 53, 54, 55, 56, 57            IF FRONT% = OLDFRONT% OR FLAG%(GT% - 48, FRONT%) < 14 THEN              PRINT CHR$ (7);: PRINT CHR$ (7);: PRINT CHR%(7);              ! This checks to see if the player is trying to draw on the              ! same face twice in a turn, or is trying to select a blockface              ! that has already been selected.            ELSE              GT% = GT% - 48              FLAG%(GT%, FRONT%) = P% + 5              IF P% = 1 THEN                HOLDGT% = GT%:HOLDFRONT% = FRONT%                ! Remembers your last move.              END IF              C% = GT%              ! Go draw the player's color on the appropriate blockface.              FACE% = 1:COLOR% = FLAG%(C%, FRONT%)              CALL DRAW(LENGTH%(C%), X%(C%), Y%(C%), COLOR%, HALF%(C%), FACE%)              ! Redraw the border              FACE% = 4:COLOR% = 4              CALL DRAW(LENGTH%(C%), X%(C%), Y%(C%), COLOR%, HALF%(C%), FACE%)              ! Check to see if anyone has won.              FOR L% = 1 TO 6                IF FLAG%(1, L%) = P% + 5 AND FLAG%(2, L%) = P% + 5 AND FLAG%(3, L%) = P% + 5 THEN                  WINNER% = P% + 5:L% = 6:DONE% = 1                ELSE IF FLAG%(4, L%) = P% + 5 AND FLAG%(5, L%) = P% + 5 AND FLAG%(6, L%) = P% + 5 THEN                  WINNER% = P% + 5:L% = 6:DONE% = 1                ELSE IF FLAG%(7, L%) = P% + 5 AND FLAG%(8, L%) = P% + 5 AND FLAG%(9, L%) = P% + 5 THEN                  WINNER% = P% + 5:L% = 6:DONE% = 1                ELSE IF FLAG%(1, L%) = P% + 5 AND FLAG%(4, L%) = P% + 5 AND FLAG%(7, L%) = P% + 5 THEN                  WINNER% = P% + 5:L% = 6:DONE% = 1                ELSE IF FLAG%(2, L%) = P% + 5 AND FLAG%(5, L%) = P% + 5 AND FLAG%(8, L%) = P% + 5 THEN                  WINNER% = P% + 5:L% = 6:DONE% = 1                ELSE IF FLAG%(3, L%) = P% + 5 AND FLAG%(6, L%) = P% + 5 AND FLAG%(9, L%) = P% + 5 THEN                  WINNER% = P% + 5:L% = 6:DONE% = 1                ELSE IF FLAG%(1, L%) = P% + 5 AND FLAG%(5, L%) = P% + 5 AND FLAG%(9, L%) = P% + 5 THEN                  WINNER% = P% + 5:L% = 6:DONE% = 1                ELSE IF FLAG%(3, L%) = P% + 5 AND FLAG%(5, L%) = P% + 5 AND FLAG%(7, L%) = P% + 5 THEN                  WINNER% = P% + 5:L% = 6:DONE% = 1                END IF              NEXT            END IF            IF DONE% = 0 THEN              ! Check to see if there are any available moves.              CHECKME% = 1              FOR X = 1 TO 9                FOR Y = 1 TO 6                  IF FLAG%(X, Y) = 14 THEN                    CHECKME% = 0:X = 9:Y = 6                  END IF                NEXT              NEXT              IF CHECKME% = 1 THEN                DONE% = 1                TIEGAME% = 1              END IF            END IF            IF DONE% = 0 THEN              OLDFRONT% = FRONT%: REM Remember last face selected.              ROUND% = ROUND% + 1              CHECK% = ROUND% / 2              ! Check to see if it is the next player's turn.              IF CHECK% * 2 <> ROUND% THEN                OLDFRONT% = 0                IF P% = 1 THEN                  P% = 2                ELSE                  P% = 1                END IF                HCOLOR= P% + 5                X = 205:Y = 150                FOR A = 0 TO 6                  HPLOT X, Y - A TO X + 6, Y - A                NEXT              END IF            END IF          CASE 27: REM ESCAPE key pressed.            DONE% = 1        END SELECT      WEND      IF DONE% = 1 AND WINNER% > 0 THEN        HCOLOR= P% + 5        X = 135:Y = 175        FOR A = 0 TO 6          HPLOT X, Y - A TO X + 6, Y - A        NEXT        X = 145:Y = 175: GOSUB 87        X = 152: GOSUB 73        X = 159: GOSUB 78        X = 166: GOSUB 83      END IF      IF DONE% = 1 AND TIEGAME% = 1 THEN        HOME : TEXT : PRINT "Tie game ... no moves left."      ELSE        INPUT "";A$        TEXT        HOME        PRINT "Bye!"      END IF      END      ! Begin subroutines here.      ! Subroutine 1 is used to determine computer's move.      ! CF% holds the face selected by the computer (1-6).      ! CC% holds the block chosen by the computer. (1-9).    1 CF% = 0:CC% = 0      ! Begin by checking for level 4. If yes, check for a way to win.      IF LEVEL = 4 THEN        FOR L = 1 TO 6          IF L <> OLDFRONT% THEN            IF FLAG%(1, L) = 7 AND FLAG%(2, L) = 7 AND FLAG%(3, L) = 14 THEN              CF% = L:CC% = 3:L = 6            ELSE IF FLAG%(2, L) = 7 AND FLAG%(3, L) = 7 AND FLAG%(1, L) = 14 THEN              CF% = L:CC% = 1:L = 6            ELSE IF FLAG%(3, L) = 7 AND FLAG%(1, L) = 7 AND FLAG%(2, L) = 14 THEN              CF% = L:CC% = 2:L = 6            ELSE IF FLAG%(4, L) = 7 AND FLAG%(5, L) = 7 AND FLAG%(6, L) = 14 THEN              CF% = L:CC% = 6:L = 6            ELSE IF FLAG%(5, L) = 7 AND FLAG%(6, L) = 7 AND FLAG%(4, L) = 14 THEN              CF% = L:CC% = 4:L = 6            ELSE IF FLAG%(6, L) = 7 AND FLAG%(4, L) = 7 AND FLAG%(5, L) = 14 THEN              CF% = L:CC% = 5:L = 6            ELSE IF FLAG%(7, L) = 7 AND FLAG%(8, L) = 7 AND FLAG%(9, L) = 14 THEN              CF% = L:CC% = 9:L = 6            ELSE IF FLAG%(8, L) = 7 AND FLAG%(9, L) = 7 AND FLAG%(7, L) = 14 THEN              CF% = L:CC% = 7:L = 6            ELSE IF FLAG%(9, L) = 7 AND FLAG%(7, L) = 7 AND FLAG%(8, L) = 14 THEN              CF% = L:CC% = 8:L = 6            ELSE IF FLAG%(1, L) = 7 AND FLAG%(5, L) = 7 AND FLAG%(9, L) = 14 THEN              CF% = L:CC% = 9:L = 6            ELSE IF FLAG%(5, L) = 7 AND FLAG%(9, L) = 7 AND FLAG%(1, L) = 14 THEN              CF% = L:CC% = 1:L = 6            ELSE IF FLAG%(9, L) = 7 AND FLAG%(1, L) = 7 AND FLAG%(5, L) = 14 THEN              CF% = L:CC% = 5:L = 6            ELSE IF FLAG%(3, L) = 7 AND FLAG%(5, L) = 7 AND FLAG%(7, L) = 14 THEN              CF% = L:CC% = 7:L = 6            ELSE IF FLAG%(5, L) = 7 AND FLAG%(7, L) = 7 AND FLAG%(3, L) = 14 THEN              CF% = L:CC% = 3:L = 6            ELSE IF FLAG%(7, L) = 7 AND FLAG%(3, L) = 7 AND FLAG%(5, L) = 14 THEN              CF% = L:CC% = 5:L = 6            ELSE IF FLAG%(1, L) = 7 AND FLAG%(4, L) = 7 AND FLAG%(7, L) = 14 THEN              CF% = L:CC% = 7:L = 6            ELSE IF FLAG%(4, L) = 7 AND FLAG%(7, L) = 7 AND FLAG%(1, L) = 4 THEN              CF% = L:CC% = 1:L = 6            ELSE IF FLAG%(7, L) = 7 AND FLAG%(1, L) = 7 AND FLAG%(4, L) = 14 THEN              CF% = L:CC% = 4:L = 6            ELSE IF FLAG%(2, L) = 7 AND FLAG%(5, L) = 7 AND FLAG%(8, L) = 14 THEN              CF% = L:CC% = 8:L = 6            ELSE IF FLAG%(5, L) = 7 AND FLAG%(8, L) = 7 AND FLAG%(2, L) = 14 THEN              CF% = L:CC% = 2:L = 6            ELSE IF FLAG%(8, L) = 7 AND FLAG%(2, L) = 7 AND FLAG%(5, L) = 14 THEN              CF% = L:CC% = 5:L = 6            ELSE IF FLAG%(3, L) = 7 AND FLAG%(6, L) = 7 AND FLAG%(9, L) = 14 THEN              CF% = L:CC% = 9:L = 6            ELSE IF FLAG%(6, L) = 7 AND FLAG%(9, L) = 7 AND FLAG%(3, L) = 14 THEN              CF% = L:CC% = 3:L = 6            ELSE IF FLAG%(9, L) = 7 AND FLAG%(3, L) = 7 AND FLAG%(6, L) = 14 THEN              CF% = L:CC% = 6:L = 6            END IF          END IF        NEXT      END IF      IF CC% > 0 THEN RETURN      ! If not level 4, begin here.      FOR L = 1 TO 6        IF L <> OLDFRONT% THEN          IF FLAG%(1, L) = 6 AND FLAG%(2, L) = 6 AND FLAG%(3, L) = 14 THEN            CF% = L:CC% = 3:L = 6          ELSE IF FLAG%(2, L) = 6 AND FLAG%(3, L) = 6 AND FLAG%(1, L) = 14 THEN            CF% = L:CC% = 1:L = 6          ELSE IF FLAG%(3, L) = 6 AND FLAG%(1, L) = 6 AND FLAG%(2, L) = 14 THEN            CF% = L:CC% = 2:L = 6          ELSE IF FLAG%(4, L) = 6 AND FLAG%(5, L) = 6 AND FLAG%(6, L) = 14 THEN            CF% = L:CC% = 6:L = 6          ELSE IF FLAG%(5, L) = 6 AND FLAG%(6, L) = 6 AND FLAG%(4, L) = 14 THEN            CF% = L:CC% = 4:L = 6          ELSE IF FLAG%(6, L) = 6 AND FLAG%(4, L) = 6 AND FLAG%(5, L) = 14 THEN            CF% = L:CC% = 5:L = 6          ELSE IF FLAG%(7, L) = 6 AND FLAG%(8, L) = 6 AND FLAG%(9, L) = 14 THEN            CF% = L:CC% = 9:L = 6          ELSE IF FLAG%(8, L) = 6 AND FLAG%(9, L) = 6 AND FLAG%(7, L) = 14 THEN            CF% = L:CC% = 7:L = 6          ELSE IF FLAG%(9, L) = 6 AND FLAG%(7, L) = 6 AND FLAG%(8, L) = 14 THEN            CF% = L:CC% = 8:L = 6          ELSE IF FLAG%(1, L) = 6 AND FLAG%(5, L) = 6 AND FLAG%(9, L) = 14 THEN            CF% = L:CC% = 9:L = 6          ELSE IF FLAG%(5, L) = 6 AND FLAG%(9, L) = 6 AND FLAG%(1, L) = 14 THEN            CF% = L:CC% = 1:L = 6          ELSE IF FLAG%(9, L) = 6 AND FLAG%(1, L) = 6 AND FLAG%(5, L) = 14 THEN            CF% = L:CC% = 5:L = 6          ELSE IF FLAG%(3, L) = 6 AND FLAG%(5, L) = 6 AND FLAG%(7, L) = 14 THEN            CF% = L:CC% = 7:L = 6          ELSE IF FLAG%(5, L) = 6 AND FLAG%(7, L) = 6 AND FLAG%(3, L) = 14 THEN            CF% = L:CC% = 3:L = 6          ELSE IF FLAG%(7, L) = 6 AND FLAG%(3, L) = 6 AND FLAG%(5, L) = 14 THEN            CF% = L:CC% = 5:L = 6          ELSE IF FLAG%(1, L) = 6 AND FLAG%(4, L) = 6 AND FLAG%(7, L) = 14 THEN            CF% = L:CC% = 7:L = 6          ELSE IF FLAG%(4, L) = 6 AND FLAG%(7, L) = 6 AND FLAG%(1, L) = 14 THEN            CF% = L:CC% = 1:L = 6          ELSE IF FLAG%(7, L) = 6 AND FLAG%(1, L) = 6 AND FLAG%(4, L) = 14 THEN            CF% = L:CC% = 4:L = 6          ELSE IF FLAG%(2, L) = 6 AND FLAG%(5, L) = 6 AND FLAG%(8, L) = 14 THEN            CF% = L:CC% = 8:L = 6          ELSE IF FLAG%(5, L) = 6 AND FLAG%(8, L) = 6 AND FLAG%(2, L) = 14 THEN            CF% = L:CC% = 2:L = 6          ELSE IF FLAG%(8, L) = 6 AND FLAG%(2, L) = 6 AND FLAG%(5, L) = 14 THEN            CF% = L:CC% = 5:L = 6          ELSE IF FLAG%(3, L) = 6 AND FLAG%(6, L) = 6 AND FLAG%(9, L) = 14 THEN            CF% = L:CC% = 9:L = 6          ELSE IF FLAG%(6, L) = 6 AND FLAG%(9, L) = 6 AND FLAG%(3, L) = 14 THEN            CF% = L:CC% = 3:L = 6          ELSE IF FLAG%(9, L) = 6 AND FLAG%(3, L) = 6 AND FLAG%(6, L) = 14 THEN            CF% = L:CC% = 6:L = 6          END IF        END IF      NEXT      ! Use following routine to find a random selection.      IF LEVEL = 1 AND CC% = 0 THEN        FINDRANDOM = 0        WHILE NOT FINDRANDOM          CF% = ( RND (1) * 6) + 1          CC% = ( RND (1) * 9) + 1          IF FLAG%(CC%, CF%) = 14 AND CF% <> OLDFRONT% THEN            FINDRANDOM = 1          END IF        WEND      END IF      IF CC% > 0 THEN RETURN      ! If level > 1 then continue here.      FOR L = 1 TO 6        IF L <> OLDFRONT% THEN          IF FLAG%(5, L) = 6 THEN            IF FLAG%(1, L) = 14 THEN              CF% = L:CC% = 1:L = 6            ELSE IF FLAG%(3, L) = 14 THEN              CF% = L:CC% = 3:L = 6            ELSE IF FLAG%(7, L) = 14 THEN              CF% = L:CC% = 7:L = 6            ELSE IF FLAG%(9, L) = 14 THEN              CF% = L:CC% = 9:L = 6            END IF          END IF        END IF      NEXT      IF HOLDFRONT% <> OLDFRONT% AND HOLDFRONT% > 0 THEN        L = HOLDFRONT%        SELECT CASE HOLDGT%          CASE 5            IF FLAG%(1, L) = 6 AND FLAG%(9, L) = 14 THEN              CF% = L:CC% = 9            ELSE IF FLAG%(9, L) = 6 AND FLAG%(1, L) = 14 THEN              CF% = L:CC% = 1            ELSE IF FLAG%(2, L) = 6 AND FLAG%(8, L) = 14 THEN              CF% = L:CC% = 8            ELSE IF FLAG%(8, L) = 6 AND FLAG%(2, L) = 14 THEN              CF% = L:CC% = 2            ELSE IF FLAG%(3, L) = 6 AND FLAG%(7, L) = 14 THEN              CF% = L:CC% = 7            ELSE IF FLAG%(7, L) = 6 AND FLAG%(3, L) = 14 THEN              CF% = L:CC% = 3            ELSE IF FLAG%(4, L) = 6 AND FLAG%(6, L) = 14 THEN              CF% = L:CC% = 6            ELSE IF FLAG%(6, L) = 6 AND FLAG%(4, L) = 14 THEN              CF% = L:CC% = 4            END IF          CASE 1            IF FLAG%(2, L) = 6 AND FLAG%(3, L) = 14 THEN              CF% = L:CC% = 3            ELSE IF FLAG%(3, L) = 6 AND FLAG%(2, L) = 14 THEN              CF% = L:CC% = 2            ELSE IF FLAG%(4, L) = 6 AND FLAG%(7, L) = 14 THEN              CF% = L:CC% = 7            ELSE IF FLAG%(7, L) = 6 AND FLAG%(4, L) = 14 THEN              CF% = L:CC% = 4            ELSE IF FLAG%(5, L) = 6 AND FLAG%(9, L) = 14 THEN              CF% = L:CC% = 9            ELSE IF FLAG%(9, L) = 6 AND FLAG%(5, L) = 14 THEN              CF% = L:CC% = 5            END IF          CASE 2            IF FLAG%(1, L) = 6 AND FLAG%(3, L) = 14 THEN              CF% = L:CC% = 3            ELSE IF FLAG%(3, L) = 6 AND FLAG%(1, L) = 14 THEN              CF% = L:CC% = 1            ELSE IF FLAG%(5, L) = 6 AND FLAG%(8, L) = 14 THEN              CF% = L:CC% = 8            ELSE IF FLAG%(8, L) = 6 AND FLAG%(5, L) = 14 THEN              CF% = L:CC% = 5            END IF          CASE 3            IF FLAG%(2, L) = 6 AND FLAG%(1, L) = 14 THEN              CF% = L:CC% = 1            ELSE IF FLAG%(1, L) = 6 AND FLAG%(2, L) = 14 THEN              CF% = L:CC% = 2            ELSE IF FLAG%(6, L) = 6 AND FLAG%(9, L) = 14 THEN              CF% = L:CC% = 9            ELSE IF FLAG%(9, L) = 6 AND FLAG%(6, L) = 14 THEN              CF% = L:CC% = 6            ELSE IF FLAG%(5, L) = 6 AND FLAG%(7, L) = 14 THEN              CF% = L:CC% = 7            ELSE IF FLAG%(7, L) = 6 AND FLAG%(5, L) = 14 THEN              CF% = L:CC% = 5            END IF          CASE 4            IF FLAG%(1, L) = 6 AND FLAG%(7, L) = 14 THEN              CF% = L:CC% = 7            ELSE IF FLAG%(7, L) = 6 AND FLAG%(1, L) = 14 THEN              CF% = L:CC% = 1            ELSE IF FLAG%(5, L) = 6 AND FLAG%(6, L) = 14 THEN              CF% = L:CC% = 6            ELSE IF FLAG%(6, L) = 6 AND FLAG%(5, L) = 14 THEN              CF% = L:CC% = 5            END IF          CASE 6            IF FLAG%(3, L) = 6 AND FLAG%(9, L) = 14 THEN              CF% = L:CC% = 9            ELSE IF FLAG%(9, L) = 6 AND FLAG%(3, L) = 14 THEN              CF% = L:CC% = 3            ELSE IF FLAG%(5, L) = 6 AND FLAG%(4, L) = 14 THEN              CF% = L:CC% = 4            ELSE IF FLAG%(4, L) = 6 AND FLAG%(5, L) = 14 THEN              CF% = L:CC% = 5            END IF          CASE 7            IF FLAG%(4, L) = 6 AND FLAG%(1, L) = 14 THEN              CF% = L:CC% = 1            ELSE IF FLAG%(1, L) = 6 AND FLAG%(4, L) = 14 THEN              CF% = L:CC% = 4            ELSE IF FLAG%(8, L) = 6 AND FLAG%(9, L) = 14 THEN              CF% = L:CC% = 9            ELSE IF FLAG%(9, L) = 6 AND FLAG%(8, L) = 14 THEN              CF% = L:CC% = 8            ELSE IF FLAG%(5, L) = 6 AND FLAG%(3, L) = 14 THEN              CF% = L:CC% = 3            ELSE IF FLAG%(3, L) = 6 AND FLAG%(5, L) = 14 THEN              CF% = L:CC% = 5            END IF          CASE 8            IF FLAG%(7, L) = 6 AND FLAG%(9, L) = 14 THEN              CF% = L:CC% = 9            ELSE IF FLAG%(9, L) = 6 AND FLAG%(7, L) = 14 THEN              CF% = L:CC% = 7            ELSE IF FLAG%(5, L) = 6 AND FLAG%(2, L) = 14 THEN              CF% = L:CC% = 2            ELSE IF FLAG%(2, L) = 6 AND FLAG%(5, L) = 14 THEN              CF% = L:CC% = 5            END IF          CASE 9            IF FLAG%(5, L) = 6 AND FLAG%(1, L) = 14 THEN              CF% = L:CC% = 1            ELSE IF FLAG%(1, L) = 6 AND FLAG%(5, L) = 14 THEN              CF% = L:CC% = 5            ELSE IF FLAG%(8, L) = 6 AND FLAG%(7, L) = 14 THEN              CF% = L:CC% = 7            ELSE IF FLAG%(7, L) = 6 AND FLAG%(8, L) = 14 THEN              CF% = L:CC% = 8            ELSE IF FLAG%(6, L) = 6 AND FLAG%(3, L) = 14 THEN              CF% = L:CC% = 3            ELSE IF FLAG%(3, L) = 6 AND FLAG%(6, L) = 14 THEN              CF% = L:CC% = 6            END IF        END SELECT      END IF      IF LEVEL = 2 AND CC% = 0 THEN        FINDRANDOM = 0        WHILE NOT FINDRANDOM          CF% = ( RND (1) * 6) + 1          CC% = ( RND (1) * 9) + 1          IF FLAG%(CC%, CF%) = 14 AND CF% <> OLDFRONT% THEN            FINDRANDOM = 1          END IF        WEND      END IF      IF CC% > 0 THEN RETURN      ! If level > 2 then continue here.      FOR L = 1 TO 6        IF L <> OLDFRONT% THEN          IF (FLAG%(1, L) = 14 AND FLAG%(9, L) = 14) AND (FLAG%(3, L) = 14 OR FLAG%(7, L) = 14) THEN            IF FLAG%(5, L) = 14 THEN              CF% = L:CC% = 5:L = 6            END IF          ELSE IF FLAG%(3, L) = 14 AND FLAG%(7, L) = 14 AND FLAG%(2, L) = 14 THEN            CF% = L:CC% = 2:L = 6          ELSE IF FLAG%(1, L) = 14 AND FLAG%(9, L) = 14 AND FLAG%(2, L) = 14 THEN            CF% = L:CC% = 2:L = 6          ELSE IF FLAG%(1, L) = 14 AND FLAG%(9, L) = 14 AND FLAG%(4, L) = 14 THEN            CF% = L:CC% = 4:L = 6          ELSE IF FLAG%(1, L) = 14 AND FLAG%(9, L) = 14 AND FLAG%(6, L) = 14 THEN            CF% = L:CC% = 6:L = 6          ELSE IF FLAG%(1, L) = 14 AND FLAG%(9, L) = 14 AND FLAG%(8, L) = 14 THEN            CF% = L:CC% = 8:L = 6          ELSE IF FLAG%(5, L) = 14 THEN            CF% = L:CC% = 5:L = 6          END IF        END IF      NEXT      IF LEVEL = 3 AND CC% = 0 THEN        FINDRANDOM = 0        WHILE NOT FINDRANDOM          CF% = ( RND (1) * 6) + 1          CC% = ( RND (1) * 9) + 1          IF FLAG%(CC%, CF%) = 14 AND CF% <> OLDFRONT% THEN            FINDRANDOM = 1          END IF        WEND      END IF      IF CC% > 0 THEN RETURN      ! If level = 4 continue here.      IF ROUND% = 2 THEN        FOR L = 1 TO 6          IF L <> OLDFRONT% THEN            IF FLAG%(5, L) = 6 AND FLAG%(1, L) = 14 THEN              CF% = L:CC% = 1:L = 6            END IF          END IF        NEXT      ELSE IF ROUND% = 4 THEN        FOR L = 1 TO 6          IF L <> OLDFRONT% THEN            IF FLAG%(5, L) = 6 AND FLAG%(9, L) = 6 AND FLAG%(3, L) = 14 THEN              CF% = L:CC% = 3:L = 6            END IF          END IF        NEXT      END IF      IF CC% = 0 THEN        FINDRANDOM = 0        WHILE NOT FINDRANDOM          CF% = ( RND (1) * 6) + 1          CC% = ( RND (1) * 9) + 1          IF FLAG%(CC%, CF%) = 14 AND CF% <> OLDFRONT% THEN            FINDRANDOM = 1          END IF        WEND      END IF      RETURN      ! The following subroutines each draw a character on the graphic screen.      ! The subroutine # matches the ASCII # of the character.      ! Each one must be called with X and Y variables already declared.   49 HPLOT X + 1, Y - 5 TO X + 2, Y - 6 TO X + 2, Y: HPLOT X + 1, Y      HPLOT TO X + 3, Y: RETURN   50 HPLOT X + 4, Y TO X, Y TO X, Y - 1 TO X + 4, Y - 5 TO X + 3, Y - 6      HPLOT TO X + 1, Y - 6 TO X, Y - 5: RETURN   51 HPLOT X, Y - 1 TO X + 1, Y TO X + 3, Y TO X + 4, Y - 1 TO X + 4, Y - 2      HPLOT TO X + 3, Y - 3 TO X + 4, Y - 4 TO X + 4, Y - 5 TO X + 3, Y - 6      HPLOT TO X + 1, Y - 6 TO X, Y - 5: HPLOT X + 2, Y - 3: RETURN   52 HPLOT X, Y - 5 TO X, Y - 3 TO X + 4, Y - 3: HPLOT X + 3, Y      HPLOT TO X + 3, Y - 6: RETURN   53 HPLOT X, Y TO X + 3, Y TO X + 4, Y - 1      HPLOT TO X + 4, Y - 2 TO X + 3, Y - 3 TO X, Y - 3      HPLOT TO X, Y - 6 TO X + 4, Y - 6: RETURN   54 HPLOT X + 4, Y - 5 TO X + 3, Y - 6 TO X + 1, Y - 6 TO X, Y - 5      HPLOT TO X, Y - 1 TO X + 1, Y TO X + 3, Y TO X + 4, Y - 1      HPLOT TO X + 4, Y - 2 TO X + 3, Y - 3 TO X + 1, Y - 3: RETURN   55 HPLOT X, Y - 6 TO X + 4, Y - 6 TO X + 4, Y - 5 TO X + 1, Y - 2      HPLOT TO X + 1, Y: RETURN   56 HPLOT X, Y - 2 TO X, Y - 1 TO X + 1, Y TO X + 3, Y TO X + 4, Y - 1      HPLOT TO X + 4, Y - 2 TO X + 3, Y - 3 TO X + 1, Y - 3 TO X, Y - 4      HPLOT TO X, Y - 5 TO X + 1, Y - 6 TO X + 3, Y - 6 TO X + 4, Y - 5      HPLOT TO X + 4, Y - 4: RETURN   57 HPLOT X, Y - 1 TO X + 1, Y TO X + 3, Y TO X + 4, Y - 1 TO X + 4, Y - 5      HPLOT TO X + 3, Y - 6 TO X + 1, Y - 6 TO X, Y - 5 TO X, Y - 4      HPLOT TO X + 1, Y - 3 TO X + 3, Y - 3: RETURN   65 HPLOT X, Y TO X, Y - 5 TO X + 1, Y - 6 TO X + 3, Y - 6 TO X + 4, Y - 5      HPLOT TO X + 4, Y: HPLOT X, Y - 3 TO X + 4, Y - 3: RETURN   67 HPLOT X + 4, Y - 5 TO X + 3, Y - 6 TO X + 1, Y - 6 TO X, Y - 5      HPLOT TO X, Y - 1 TO X + 1, Y TO X + 3, Y TO X + 4, Y - 1: RETURN   69 HPLOT X + 4, Y - 6 TO X, Y - 6 TO X, Y TO X + 4, Y: HPLOT X + 3, Y - 3      HPLOT TO X + 1, Y - 3: RETURN   73 HPLOT X + 2, Y TO X + 2, Y - 6: HPLOT X + 1, Y TO X + 3, Y:      HPLOT X + 1, Y - 6 TO X + 3, Y - 6: RETURN   76 HPLOT X + 4, Y TO X, Y TO X, Y - 6: RETURN   77 HPLOT X, Y TO X, Y - 6 TO X + 2, Y - 4 TO X + 4, Y - 6 TO X + 4, Y      HPLOT X + 2, Y - 3: RETURN   78 HPLOT X, Y TO X, Y - 6: HPLOT X + 4, Y TO X + 4, Y - 6      HPLOT X + 1, Y - 4 TO X + 3, Y - 2: RETURN   79 HPLOT X, Y - 1 TO X, Y - 5 TO X + 1, Y - 6 TO X + 3, Y - 6      HPLOT TO X + 4, Y - 5 TO X + 4, Y - 1 TO X + 3, Y TO X + 1, Y: RETURN   80 HPLOT X, Y TO X, Y - 6 TO X + 3, Y - 6 TO X + 4, Y - 5 TO X + 4, Y - 4      HPLOT TO X + 3, Y - 3 TO X + 1, Y - 3: RETURN   82 HPLOT X, Y TO X, Y - 6 TO X + 3, Y - 6 TO X + 4, Y - 5 TO X + 4, Y - 4      HPLOT TO X + 3, Y - 3 TO X + 1, Y - 3      HPLOT X + 4, Y TO X + 2, Y - 2: RETURN   83 HPLOT X, Y - 1 TO X + 1, Y TO X + 3, Y TO X + 4, Y - 1 TO X + 4, Y - 2      HPLOT TO X + 3, Y - 3 TO X + 1, Y - 3 TO X, Y - 4 TO X, Y - 5      HPLOT TO X + 1, Y - 6 TO X + 3, Y - 6 TO X + 4, Y - 5: RETURN   84 HPLOT X + 2, Y TO X + 2, Y - 6: HPLOT X, Y - 6 TO X + 4, Y - 6: RETURN   85 HPLOT X, Y - 6 TO X, Y - 1 TO X + 1, Y TO X + 3, Y TO X + 4, Y - 1      HPLOT TO X + 4, Y - 6: RETURN   87 HPLOT X, Y - 6 TO X, Y TO X + 2, Y - 2 TO X + 4, Y TO X + 4, Y - 6      HPLOT X + 2, Y - 3: RETURN   89 HPLOT X, Y - 6 TO X, Y - 5 TO X + 2, Y - 3 TO X + 4, Y - 5      HPLOT TO X + 4, Y - 6: HPLOT X + 2, Y TO X + 2, Y - 3: RETURN      ! Routine to do a full draw of blocks  100 FOR C% = 1 TO 9        FACE% = 1:COLOR% = FLAG%(C%, FRONT%)        CALL DRAW(LENGTH%(C%), X%(C%), Y%(C%), COLOR%, HALF%(C%), FACE%)        FACE% = 2:COLOR% = FLAG%(C%, TOP%)        CALL DRAW(LENGTH%(C%), X%(C%), Y%(C%), COLOR%, HALF%(C%), FACE%)        FACE% = 3:COLOR% = FLAG%(C%, SIDE%)        CALL DRAW(LENGTH%(C%), X%(C%), Y%(C%), COLOR%, HALF%(C%), FACE%)        FACE% = 4:COLOR% = 4        CALL DRAW(LENGTH%(C%), X%(C%), Y%(C%), COLOR%, HALF%(C%), FACE%)      NEXT      RETURN      SUB DRAW(LENGTH%, X%, Y%, COLOR%, HALF%, FACE%)      SELECT CASE FACE%        CASE 1: REM front          HCOLOR= COLOR%          FOR A% = 0 TO LENGTH%            HPLOT X%, Y% + A% TO X% + LENGTH%, Y% + A%          NEXT        CASE 2: REM top          HCOLOR= COLOR%          FOR A% = 0 TO LENGTH%            HPLOT X% + A%, Y% TO X% + A% + HALF%, Y% - HALF%          NEXT        CASE 3: REM side          HCOLOR= COLOR%          FOR A% = 0 TO LENGTH%            HPLOT X% + LENGTH%, Y% + A% TO X% + LENGTH% + HALF%, Y% + A% - HALF%          NEXT        CASE 4: REM borders          HCOLOR= COLOR%          HPLOT X%, Y% TO X% + LENGTH%, Y%          HPLOT TO X% + LENGTH%, Y% + LENGTH%          HPLOT X% + LENGTH%, Y% TO X% + LENGTH% + HALF%, Y% - HALF%      END SELECT      END SUB      ! Routine to get a keypress.      SUB GETKEY(GT%)      WAIT $00C000, $80      GT% = PEEK ($00C000) - 128      POKE $00C010, 0      END SUB      ! ARROWS and SWITCH are used to reassign the values to      !  TOP%  SIDE% and FRONT%.      SUB ARROWS(GT%, TOP%, FRONT%, SIDE%)      SELECT CASE GT%        CASE 11          HOLDA% = TOP%          CALL SWITCH(HOLDA%, HOLDB%)          TOP% = FRONT%          FRONT% = HOLDB%        CASE 10          HOLDA% = FRONT%          CALL SWITCH(HOLDA%, HOLDB%)          FRONT% = TOP%          TOP% = HOLDB%        CASE 8          HOLDA% = FRONT%          CALL SWITCH(HOLDA%, HOLDB%)          FRONT% = SIDE%          SIDE% = HOLDB%        CASE 21          HOLDA% = SIDE%          CALL SWITCH(HOLDA%, HOLDB%)          SIDE% = FRONT%          FRONT% = HOLDB%      END SELECT      END SUB      SUB SWITCH(HOLDA%, HOLDB%)      SELECT CASE HOLDA%        CASE 1          HOLDB% = 6        CASE 2          HOLDB% = 5        CASE 3          HOLDB% = 4        CASE 4          HOLDB% = 3        CASE 5          HOLDB% = 2        CASE 6          HOLDB% = 1      END SELECT      END SUB