!---------------------------------------------------------------!!  Frame 1.0!!  This desktop program is about as simple as they get.  It!  brings up the Apple menu, a file menu with Quit and Close,!  and an edit menu with Undo, Cut, Copy, Paste and Clear.!  This is the minimum configuration for supporting desk!  accessories.  (All of these menus have pre-assigned numbers,!  assigned by Apple.)!!  The purpose of this rather simple program is to show how!  simple a desktop program can really be, and to give you a!  framework to use in developing your own programs.!!  Mike Westerfield!!  Copyright 1998!  Byte Works, Inc.!!---------------------------------------------------------------dim done as integer			: ! tells if the program should stopdim event as integer                  : ! event #; returned by TaskMasterdim lastEvent as eventRecord          : ! last event returned in event loopdim startStopParam as long		: ! tool startup/shutdown information! Initialize the programstartStopParm = StartupTools(MMStartup, 2, clng(1))if ToolError <> 0 then   print "Could not start the tools! ToolError = ";ToolError   stopend ifcall InitMenuslastEvent.taskMask = $1FFFShowCursorInitCursor! Main event loopdone = 0while not done   event = TaskMaster($076E, lastEvent)   select case event      case wInSpecial, wInMenuBar         call HandleMenu(lastEvent.taskData)   end selectwendShutDownTools(1, startStopParm)end!---------------------------------------------------------------!! InitMenus - Initialize the menu bar.! !---------------------------------------------------------------SUB InitMenusconst menuID% = 1			: ! menu bar resource IDdim height as integer			: ! height of the largest menudim m as menuBarHandle		: ! our menu bar's handle! create the menu barm = NewMenuBar2(2, 1, NIL)SetSysBar(ctlRecHndl(m))SetMenuBar(NIL)! add desk accessoriesFixAppleMenu(1)! draw the completed menu barheight = FixMenuBarDrawMenuBarEND SUB!---------------------------------------------------------------!! HandleMenu - Handle a menu selection.!! Parameters:!	taskData - taskData field for the menu event!! Shared:!	done - event loop done flag!!---------------------------------------------------------------SUB HandleMenu (taskData as long)shared doneselect case LoWord(taskData)   case 257 : ! Apple Menu, About...      call MenuAbout   case 256 : ! File Menu, Quit      done = 1   end selectHiliteMenu(0, HiWord(taskData))end sub!---------------------------------------------------------------!! MenuAbout - Show About alert box.!!---------------------------------------------------------------SUB MenuAboutconst alertID% = 1			: ! alert resource IDdim b as integer			: ! button pushedb = AlertWindow(5, NIL, alertID%)END SUB