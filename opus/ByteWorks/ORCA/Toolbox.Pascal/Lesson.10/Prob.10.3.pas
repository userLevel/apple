{---------------------------------------------------------------}{                                                               }{  Text Position Demo                                           }{                                                               }{---------------------------------------------------------------}program TextPosition (input);uses Common, QuickDrawII;const   baseLine = 50;                       {base line location}var   info: fontInfoRecord;                {info about the current font}   r: rect;                             {screen's grafPort rect}   space: integer;                      {space between lines}   str: pString;                        {string to print}   pos: integer;                        {position in the string}begin{set up the tools}StartGraph(320);PenNormal;SetForeColor(0);SetBackColor(15);SetTextMode(modeForeCopy);SetSolidPenPat(15);GetPortRect(r);PaintRect(r);{get the font characteristics}GetFontInfo(info);space := info.descent + info.ascent + info.leading;{draw the lines}SetSolidPenPat(14);MoveTo(0, baseLine);LineTo(320, baseLine);MoveTo(0, baseLine + space);LineTo(320, baseLine + space);SetSolidPenPat(11);MoveTo(0, baseLine - info.ascent);LineTo(320, baseLine - info.ascent);MoveTo(0, baseLine + info.descent);LineTo(320, baseLine + info.descent);MoveTo(0, baseLine - info.ascent + space);LineTo(320, baseLine - info.ascent + space);MoveTo(0, baseLine + info.descent + space);LineTo(320, baseLine + info.descent + space);SetSolidPenPat(7);MoveTo(10, 0);LineTo(10, 200);MoveTo(310, 0);LineTo(310, 200);{draw the text}MoveTo(10, baseLine);str := 'The quick gray Apple IIGS jumped over the lazy black IBM PC.';pos := 1;while TextWidth(@str[1], pos) < 300 do   pos := pos+1;pos := pos-1;while str[pos] <> ' ' do   pos := pos-1;MoveTo(10, baseLine);DrawText(@str[1], pos);MoveTo(10, baseLine + space);DrawText(@str[pos+1], length(str)-pos);{wait for a keypress}readln;EndGraph;end.