{$keep 'globals'}unit Globals;{---------------------------------------------------------------}{                                                               }{  Global data for MiniWord                                     }{                                                               }{---------------------------------------------------------------}interfaceuses  Common, ControlMgr, TextEdit;const  isDirty     =  $0040;                 {mask to check dirty bit               }  notDirty    =  $FFBF;                 {mask to clear dirty bit after saving  }                                        {  file to disk                        }  maxWindows  =  4;                     {maximum # windows allowed on desktop  }                                                                 {Menu item IDs}  cutID       =  251;  copyID      =  252;  pasteID     =  253;  closeID     =  255;  aboutID     =  256;  newID       =  257;  openID      =  258;  saveID      =  259;  saveAsID    =  260;  pSetUpID    =  261;  printID     =  262;  quitID      =  263;  findID      =  264;type  windowType = (noWindow, fromFile, fromNew);                     {Window types}                                                                   {Alert types}  alertType = (stdAlertTyp, stopAlertTyp, noteAlertTyp, cautionAlertTyp);  pString50 = packed array [0..50] of char;  pString17 = packed array [0..17] of char;  convert = record                      {for choosing whether to handle 4 bytes}      case boolean of                   {  as 1 longint or 2 integers          }          true:  (long:     longint);          false: (lsw, msw: integer);      end;var  done:        boolean;              {true if user is ready to exit MiniWord   }  myID:        integer;              {MiniWord's user ID                       }  buffer:      handle;               {buffer to hold text returned by TEGetText}  bufferSize:  longint;              {size of this buffer                      }  textInfo:    teInfoRec;            {gives # lines, # chars in a document     }  okTitle:     packed array [0..2] of char;               {common button titles}  cancelTitle: packed array [0..6] of char;  { Window tracking information -- We're allowing only 4 windows to be opened }  { on the desktop.                                                           }  windowOpen:   array [0..3] of windowType;     {array of open window flags    }  windowPtr:    array [0..3] of grafPortPtr;    {array of pointers to grafPorts}  textEdHandle: array [0..3] of ctlRecHndl;     {array of editText ctl handles }  pathHandle:   array [0..3] of handle;         {array of pathname handles,    }                                                {  returned by SFO             }implementationend. {Globals unit}