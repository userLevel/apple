*****************************************************************************      STOP_PAUSE**  Handles key press pause and resume.  Returns TRUE for Apple-Period,*  otherwise false.**  Returns 1 for Open-Apple-Period*          2 for Option-Period**  Nb: This is NOT a standalone program!**  To install in a module, add the following source line :-**      APPEND STOP_PAUSE**  Example of use from C :-**      if (STOP_PAUSE()) exit(0);**  Example of use from Assembler :-**      JSL   STOP_PAUSE                 ;Look for keypress or Apple-Period*      CMP   #1                         ;Apple-Period pressed*      BEQ   Exit                       ;Yes, so exit*      CMP   #2                         ;Option-Period pressed*      BEQ   Exit                       ;Yes, so exit*****************************************************************************  Source code based on APW V1.0 reference manual, P.215.**  v1.0 Modified to preserve X and Y registers; and support Option-Period.*  v1.1 Display an 'hourglass' icon while paused.**************************************************************************         case    on         objcase on                     Need 'main' in lower case for 'C'         msb     on                     Need high bit on for comparesSTOP_PAUSE start main         phb                            Save data bank         php                            Save m & x flag status         sep   #$20         longa off                      Change to 8 bit memory/accumulator mode         lda   #$00                     Preset default result...         xba         lda   #$00                                          ...in all 16 bits         pha                            Set data bank to 0...         plb                            ...so we can read keystrobe and data         bit   $C000                    test strobe         bpl   Done                     no keypress, so all done         lda   $C000                    Get the keystroke         cmp   #'.'                     Test for period (high bit still set)         bne   Key                      No, just treat as a 'pause' request         bit   $C025                    Look for Open-Apple/Option modifiers         bvs   HaltSet                  Look for Option modifier         bmi   StopSet                  Look for Apple  modifierKey      anop		A key was pressed!	phx	phy	php         rep	#$30	16-bit mode for tool calls	pea	>WaitMsg|-16	pea	>WaitMsg         ldx	#$200C	WriteCString	jsl	$E10000	Toolbox call	plp		Restore 8-bit mode	bit   $C010                    Reset strobeLoop     lda   $C000                    Test strobe...         bpl   Loop                     ...until next keypress	php         rep	#$30	16-bit mode for tool calls	pha		Save character	pea	>GoMsg|-16                                          	pea	>GoMsg         ldx	#$200C	WriteCString	jsl	$E10000	Toolbox call	pla   	Get character	plp		Restore 8-bit mode	ply	plx         cmp   #'.'                     Test for period (high bit still set)         bne   NoneSet                  No, so simply exit         bit   $C025                    Look for Open-Apple/Option modifiers         bvs   HaltSet                  Look for Option modifier         bmi   StopSet                  Look for Apple  modifierNoneSet  lda   #0                       Restore default result         bra   Out                      and leaveHaltSet  lda   #2                       Return value for stop of ALL files         bra   OutStopSet  lda   #1                       Set return value for STOPOut      bit   $C010                    Reset strobe alwaysDone     anop         plp                            Back to 16 bit mode (maybe)	plb                            Restore data bank         rtl                            Return to our callerWaitMsg	dc	i1'27,15,67,14,24,0'	Mousetext hourglassGoMsg	dc	i1'8,32,8,0'	Erase icon         end