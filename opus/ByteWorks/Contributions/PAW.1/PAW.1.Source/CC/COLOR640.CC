#define WhoAmI "Color640 V1.1"/****************************************************   Color640 - Display the (dithered) colours available in 640 mode graphics.              v1.0 - Copyright by Peter Watson, April 1990              v1.1 - Minor prototyping bug fix, and compile under ORCA C v1.2.              Compiled with ORCA/C V1.2******************************************************/#include <quickdraw.h>             /* For general graphics */#include <orca.h>                  /* For StartGraph, etc  */#define  MODE  640char *Copyright[]=WhoAmI,                  " - Copyright 1991 by Peter Watson and Byte Works, Inc.";char *Licence[] = "This program contains material from the ORCA/C ",                  "Run-Time Libraries, copyright 1987-1989 ",                  "by Byte Works, Inc.  Used with permission.";char   *TitleMsg= "640-Mode Colour Table by Peter Watson.    Press '?' "                  "for info.";char   KeyPress(void);             /* Get a keystroke      */int    *MakePatt(unsigned int);    /* Build a dithered colour pattern */void   AboutBox(int,int);          /* Display an 'About...' box       */int    pattern[16];                /* 32 bytes             */Rect   r;void main(void){   int i,colour,x,y;   startgraph(MODE);               /* 640 mode graphics screen */   GetPortRect(&r);/* FillRect(&r,MakePatt(13));      /* Nice 'desktop' blue      */   ClearScreen(0xDDDD);            /* Nice 'desktop' blue      */   SetPenMode(modeCopy);           /* Copy pen pixels          */   SetPenSize(2,1);   r.v2 = 13;   FillRect(&r,MakePatt(15));      /* White title bar...       */   SetSolidPenPat(black);   FrameRect(&r);                  /* ...with a black frame    *//*   Put our title at the top of the screen*/   SetForeColor(black);            /* Black text               */   SetBackColor(white);            /* White text background    */   SetTextMode(modeCopy);   MoveTo((MODE-CStringWidth(TitleMsg))/2,10);   DrawCString(TitleMsg);/*   Draw the 4 x 4 640 mode colour chart, with a black frame*/Restart:   x = 200; y = 50;                /* Starting coordinates     */   r.v1 = y-2; r.v2 = y+82; r.h1 = x-4; r.h2 = x+164;   SetPenSize(4,2);   SetSolidPenPat(black);          /* Black border             */   FrameRect(&r);/*   Each square is 40 pixels wide x 20 pixels deep (ie. roughly 'square')*/   colour = black;                 /* First colour             */   for (r.v1 = y; r.v1 < y+80; r.v1 += 20)  {       r.v2 = r.v1 + 20;       for (r.h1 = x; r.h1 < x+160; r.h1 += 40)  {           r.h2 = r.h1 + 40;           FillRect(&r,MakePatt(colour++)); /* Draw a colour box   */           }       }   i = KeyPress();                 /* Let the user see it      */   if (i == '?' || i == '/')  {    /* 'About' box              */       AboutBox(x,y);              /* Display the box          */       GetPortRect(&r); r.v1 += 20;       FillRect(&r,MakePatt(13));  /* Nice 'desktop' blue      */       goto Restart;       }   endgraph();   exit(0);} /*main*/char KeyPress(){   char *Kbd       = (char *)0xE0C000; /* Keyboard latch       */   char *KbdStrobe = (char *)0xE0C010; /* Keyboard strobe      */   while (*Kbd < 128) {}               /* Wait for a keypress  */   *KbdStrobe = '\0';                  /* Reset keyboard       */   return(*Kbd);                       /* < 128 due to 'reset' */}int *MakePatt(colour)   unsigned int colour;/*   Build a 640-mode colour pattern corresponding to the colour passed.*/{   int i;   colour &= 0x000F;           /* Low nibble only      */   for (i=0; i<16; i++)        /* Turn 0x? into 0x???? */       pattern[i] = (colour << 12) | (colour << 8) | (colour << 4) | colour;   return(pattern);}void AboutBox(x,y)   int     x,y;/*   Display an 'About COLOR640' box*/{   int     i;   Point   p;   Rect    a;   r.v1 = y - 2; r.v2 = y + 80 + 2;   r.h1 = 65;    r.h2 = MODE - r.h1;   FillRect(&r,MakePatt(15));      /* White box    */   FrameRect(&r);                  /* Black frame  */   SetPenPat(MakePatt(4));         /* Red letter day!  */   GetPenSize(&p);   x = r.h1 + 15; y = r.v2 - 20;   SetPenSize(16,1);   MoveTo(x,y); LineTo(x,y-36);    /* Draw a 'P'   */   SetPenSize(16,8);   a.v1 = y - 36; a.v2 = y - 15;   a.h1 = x - 16; a.h2 = x + 48;   FrameArc(&a,0,180);             /* Semi circle  */   x = r.h1 + 64; y = r.v2 - 20;   SetPenSize(16,1);   MoveTo(x,y-36);                    /* Draw a 'W'   */   LineTo(x+16,y); LineTo(x+32,y-24); LineTo(x+48,y); LineTo(x+64,y-36);   SetPenSize(p.h,p.v);            /* Restore pen size */   x = r.h1 + 15; y = r.v1 + 15;   MoveTo(x,y);   DrawCString(Copyright[0]); DrawCString(Copyright[1]);   x += 120 + 20; y += 25;   for (i=0; i<3 ;i++)  {       MoveTo(x,y);       DrawCString(Licence[i]);       y += 10;       }   KeyPress();   return;}