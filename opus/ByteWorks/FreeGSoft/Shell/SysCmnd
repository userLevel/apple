;;  ORCA Command Table;ALIAS		C	40		alias a commandASM65816	*L	3		65816 assemblerASML		C	1		assemble and linkASMLG		C	2		assemble, link and executeASSEMBLE	C	3		assembleBASIC		*L	260		GSoft BASICBREAK		C	25		break from loopCAT		C	4		catalogCATALOG		C	4		catalogCC		*L	8		ORCA/C compilerCHANGE		C	20		change language stampCMPL		C	1		compile and linkCMPLG		C	2		compile, link and executeCOMMANDS	C	35		read command tableCOMPACT		*U			compact OMF filesCOMPILE		C	3		compileCOMPRESS	C	32		compress/alphabetize directoriesCONTINUE	C	26		continue a loopCONVERT         *U                      Integer BASIC conversion programCOPY		C	5		copy files/directories/disksCREATE		C	6		create a subdirectoryCRUNCH		*U			combine object modulesDELETE		C	7		delete a fileDEBUGBREAK	*U			debugger breakDEBUGFAST	*U			debugger speed-up utilityDEBUGNOFAST	*U			reverse effect of DEBUGFASTDEREZ		*U			resource decompilerDETOKE		*U			GSoft BASIC tokenized file converterDEVICES		C	48		Show DevicesDISABLE		C	8		disable file attributesDISKCHECK	U			check integrity of ProDOS disksDUMPOBJ		U			object module dumperEDIT		*C	9		edit a fileECHO		C	29		print from an exec fileELSE		C	31		part of an IF statementENABLE		C	10		enable file attributesEND		C	23		end an IF, FOR, or LOOPENTAB		*U			entab utilityERASE		C	44		Erase entire volume.EXEC		L	6		EXEC languageEXECUTE		C	38		EXEC with changes to local variablesEXISTS		C	19		see if a file existsEXIT		C	27		exit a loopEXPORT		C	36		export a shell variableEXPRESS		U			converts files to ExpressLoad formatFILETYPE	C	21		change the type of a fileFOR		C	22		for loopHELP		C	11		online helpHISTORY		C	39		display last 20 commandsHOME		C	43		clear the screen and home the cursorIBASIC          *L      4               Integer BASICIF		C	30		conditional branchINIT		C	45		initialize disksINPUT		C	13		read a value from the command lineLINK		*C	12		linkLINKER		*L	265		command line linker scriptLOGO            L       274             3D LogoLOGOPROG        L       3090            3D Logo ProgramLOOP		C	24		loop statementMACGEN		U			generate a macro fileMAKEBIN		U			convert load file to a binary fileMAKELIB		U			librarianMODULA2		*L	272		Modula-2 CompilerMOVE		C	34		move filesNEWER		C	49		check for more recent filesPASCAL		*L	5		Pascal compilerPREFIX		C	14		set system prefixPRIZM		U			desktop development systemPRODOS		L	0		ProDOS languageQUIT		C	15		exit from ORCAREMOVEREZ	U			remove a resource forkRENAME		C	16		rename filesRESEQUAL	*U			compares resource forksREZ		*L	21		resource compilerRUN		C	2		compile, link and executeSET		C	28		set a variableSHOW		C	17		show system attributesSWITCH		C	33		switch order of filesSHUTDOWN	C	47		shut down the computerTEXT		L	1		Text fileTOUCH		C	46		Update date/timeTYPE		C	18		list a file to standard outUNALIAS		C	41		delete an aliasUNSET		C	37		delete a shell variable*		C	42		comment