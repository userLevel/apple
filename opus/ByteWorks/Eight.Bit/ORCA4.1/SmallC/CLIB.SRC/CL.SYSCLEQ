******************************************************************  SYSCLEQ - Test for Signed Less Than or Equal******************************************************************SYSCLEQ  START         JSR   SYSCLOD2         JSR   SYSCMP4         JLE   SYSCTRUE         JMP   SYSCFALSE         END******************************************************************  SYSCLES - Test for Signed Less Than******************************************************************SYSCLES  START         JSR   SYSCLOD2         JSR   SYSCMP4         JLT   SYSCTRUE         JMP   SYSCFALSE         END******************************************************************  SYSCLND - Logical AND******************************************************************SYSCLND  START         CLC                            C indicates if its an AND or an OR         BCC   LB1SYSCLOR  ENTRY         SECLB1      PHP         JSR   SYSCIBOP                 get operand addressed         LDY   #3                       convert one operand to boolean         LDA   #0LB2      ORA   (WR0),Y         DBPL  Y,LB2         TAY         BEQ   LB3         LDA   #1LB3      STA   WR0         LDY   #3                       convert second operand to boolean         LDA   #0LB4      ORA   (SP),Y         DBPL  Y,LB4         TAY         BEQ   LB5         LDA   #1LB5      PLP                            get operation type         BCC   LB6         ORA   WR0                      do an OR         JMP   SYSCBOOLLB6      AND   WR0                      do an AND         JMP   SYSCBOOL         DC    R'SYSCFALSE'         END******************************************************************  SYSCMOD - Mod Operation******************************************************************SYSCMOD  START         JSR   SYSCLOD2         JSR   SYSDIV4         MOVE  MR1+4,{SP},#4         RTS         END******************************************************************  SYSCMPI - Signed Multiplication******************************************************************SYSCMPI  START         JSR   SYSCLOD2         JSR   SYSMUL4         MOVE  MR1,{SP},#4         RTS         END******************************************************************  SYSCMST - Mark Stack******************************************************************SYSCMST  START         SUB2  SP,#4         LDY   #2         LDA   MP         STA   (SP),Y         INY         LDA   MP+1         STA   (SP),Y         JMP   SYSCSTK         END******************************************************************  SYSCNEQ - Test for Not Equal******************************************************************SYSCNEQ  START         JSR   SYSCLOD2         JSR   SYSCMP4         JNE   SYSCTRUE         JMP   SYSCFALSE         END******************************************************************  SYSCNGI - Negation******************************************************************SYSCNGI  START         LDY   #0         LDX   #4         SECLB1      LDA   #0         SBC   (SP),Y         STA   (SP),Y         INY         DBNE  X,LB1         RTS         END******************************************************************  SYSCNOT - Logical NOT******************************************************************SYSCNOT  START         LDY   #3         LDA   #0LB1      ORA   (SP),Y         DBPL  Y,LB1         TAY         BEQ   LB2         LDA   #0         JMP   SYSCBOOLLB2      LDA   #1         JMP   SYSCBOOL         DC    R'SYSCFALSE'         END******************************************************************  SYSCOCP - One's Complement******************************************************************SYSCOCP  START         LDY   #3LB1      LDA   (SP),Y         EOR   #$FF         STA   (SP),Y         DBPL  Y,LB1         RTS         END******************************************************************  SYSCPOPI - Pop Value from TOS******************************************************************SYSCPOPI START         ADD2  SP,#4         RTS         END******************************************************************  SYSCRET - Return from Function**  Notes:*        For native code use, only.******************************************************************SYSCRET  START         SUB2  MP,#4,WR0         LDY   #3         LDA   (WR0),Y         STA   MP+1         LDA   (SP),Y         STA   (WR0),Y         DEY         LDA   (WR0),Y         STA   MPLB1      LDA   (SP),Y         STA   (WR0),Y         DBPL  Y,LB1         MOVE  WR0,SP         RTS         END******************************************************************  SYSCSBI - Signed Subtraction******************************************************************SYSCSBI  START         JSR   SYSCIBOP         LDX   #4         LDY   #0         SECLB1      LDA   (SP),Y         SBC   (WR0),Y         STA   (SP),Y         INY         DBNE  X,LB1         RTS         END******************************************************************  SYSCSHL - Shift Left******************************************************************SYSCSHL  START         JSR   SYSCLOD2                 get operands         LDA   MR2+1                    if shifting by more than 256         ORA   MR2+2                     bits, the rseult must be         ORA   MR2+3                     0 (false)         BEQ   LB1         JMP   SYSCFALSELB1      LDX   MR2                      get # bits to shift         BEQ   LB3LB2      ASL   MR1                      shift the bits         ROL   MR1+1         ROL   MR1+2         ROL   MR1+3         DBNE  X,LB2LB3      MOVE  MR1,{SP},#4              save result         RTS         END******************************************************************  SYSCSHR - Shift Right******************************************************************SYSCSHR  START         JSR   SYSCLOD2                 get operands         LDA   MR2+1                    branch if shifting by < 256 bits         ORA   MR2+2         ORA   MR2+3         BEQ   LB2         LDX   #0                       result determined by sign bit         LDA   MR1+3         BPL   LB1         DEXLB1      STX   MR1         STX   MR1+1         STX   MR1+2         STX   MR1+3         JMP   LB4LB2      LDX   MR2                      get # bits to shift         BEQ   LB4LB3      LDA   MR1+3                    shift the bits         ASL   A         ROR   MR1+3         ROR   MR1+2         ROR   MR1+1         ROR   MR1         DBNE  X,LB3LB4      MOVE  MR1,{SP},#4              save the result         RTS         END******************************************************************  SYSCTJPW - Jump if TOS = True**  Inputs:*        (PC) - jump address******************************************************************SYSCTJPW START         LDY   #3         LDA   #0LB1      ORA   (SP),Y         DBPL  Y,LB1         TAY         PHP         ADD2  SP,#4         JSR   SYSCGET2         PLP         BEQ   RTS         STA   PC         STX   PC+1RTS      RTS         END******************************************************************  SYSCUJPW - Unconditional Jump******************************************************************SYSCUJPW START         JSR   SYSCGET2         STA   PC         STX   PC+1         RTS         END******************************************************************  SYSCULE - Test for Unsigned Less Than or Equal******************************************************************SYSCULE  START         JSR   SYSCUTST         JLE   SYSCTRUE         JMP   SYSCFALSE         END******************************************************************  SYSCULT - Test for Unsigned Less Than******************************************************************SYSCULT  START         JSR   SYSCUTST         JLT   SYSCTRUE         JMP   SYSCFALSE         END******************************************************************  SYSCUGE - Test for Unsigned Greater Than or Equal******************************************************************SYSCUGE  START         JSR   SYSCUTST         JGE   SYSCTRUE         JMP   SYSCFALSE         END******************************************************************  SYSCUGT - Test for Unsigned Greater Than******************************************************************SYSCUGT  START         JSR   SYSCUTST         JGT   SYSCTRUE         JMP   SYSCFALSE         END******************************************************************  SYSCXJP - Indexed Jump**  Inputs:*        TOS - addr of default lab*        TOS-1 - disp to end of table*        TOS-2 - disp into jump table******************************************************************SYSCXJP  START         LDY   #9                       see if disp is past end of list         LDA   (SP),Y         LDY   #5         CMP   (SP),Y         BNE   LB1         LDY   #8         LDA   (SP),Y         LDY   #4         CMP   (SP),YLB1      BGE   LB2         LDY   #8                       no -> index into table         CLC         LDA   (SP),Y         ADC   PC         STA   WR0         INY         LDA   (SP),Y         ADC   PC+1         STA   WR1         MOVE  {WR0},PC         JMP   LB3LB2      MOVE  {SP},PC                  yes -> use default labelLB3      ADD2  SP,#12                   remove old stuff from stack         RTS         END******************************************************************  SYSCXOR - Bitwise Exclusive OR******************************************************************SYSCXOR  START         JSR   SYSCIBOP         LDY   #3LB1      LDA   (WR0),Y         EOR   (SP),Y         STA   (SP),Y         DBPL  Y,LB1         RTS         END         APPEND CL.FCLOSE