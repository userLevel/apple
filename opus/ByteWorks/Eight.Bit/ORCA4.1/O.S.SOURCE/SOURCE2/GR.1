******************************************************************  SYSGLIN - Draw a Line**  INPUTS:*        SYSX, SYSY - start point*        SYSAX, SYSAY - end point*        SYSCOLOR - pen color**  NOTES:*        1) See Foley and Van Dam, Fundamentals of Interactive*           Computer Graphics, p. 435.******************************************************************SYSGLIN  STARTDX       EQU   $0DY       EQU   $2INCR1    EQU   $4INCR2    EQU   $6D        EQU   $8XEND     EQU   $ADELY     EQU   $C;;  Common initialization.;         MOVE  DX,SAVE,#14              save zero page         SUB2  SYSX,SYSAX,DX            DX = ABS(SYSX-SYSAX)         SUB2  SYSY,SYSAY,DY            DY = ABS(SYSY-SYSAY)         LA    DELY,1                   DELY = SGN(DX*DY)         LDA   DY         ORA   DY+1         BEQ   LN0         LDA   DX         ORA   DX+1         BEQ   LN0         LDA   DY+1         EOR   DX+1         BPL   LN0         LA    DELY,-1LN0      LDA   DY+1         BPL   LN1         SUB2  #0,DY,DYLN1      LDA   DX+1         BPL   LN2         SUB2  #0,DX,DXLN2      CMPW  DX,DY                    choose routine based on slope         JLT   LN8;;  Draw line with slope of 0 to 1.;         LDA   DY                       D = 2*DY-DX         ASL   A                        INCR1 = 2*DY         STA   INCR1         LDA   DY+1         ROL   A         STA   INCR1+1         SUB2  INCR1,DX,D               INCR2 = 2*(DY-DX)         SUB2  DY,DX,INCR2         ASL2  INCR2         CMPW  SYSX,SYSAX               start at point with lowest X         BLT   LN3         MOVE  SYSX,XEND         MOVE  SYSAX,SYSX         MOVE  SYSAY,SYSY         JMP   LN4LN3      MOVE  SYSAX,XENDLN4      JSR   SYSPLOT                  draw first pointLN5      CMPW  SYSX,XEND                WHILE X<XEND DO         JGE   LN14         INC2  SYSX                       X = X+1         LDA   D+1                        IF D<0 THEN         BPL   LN6         ADD2  D,INCR1                      D = D+INCR1         JMP   LN7                        ELSELN6      ADD2  SYSY,DELY                    Y = Y+DELY         ADD2  D,INCR2                      D = D+INCR2LN7      ANOP                             ENDIF         JSR   SYSPLOT                    draw a point         JMP   LN5                      ENDWHILE;;  Draw a line with slop of 1 to infinity.;LN8      LDA   DX                       D = 2*DX-DY         ASL   A                        INCR1 = 2*DX         STA   INCR1         LDA   DX+1         ROL   A         STA   INCR1+1         SUB2  INCR1,DY,D         SUB2  DX,DY,INCR2              INCR2 = 2*(DX-DY)         ASL2  INCR2         CMPW  SYSY,SYSAY               start at point with smallest Y         BLT   LN9         MOVE  SYSY,XEND         MOVE  SYSAY,SYSY         MOVE  SYSAX,SYSX         JMP   LN10LN9      MOVE  SYSAY,XENDLN10     JSR   SYSPLOT                  draw first pointLN11     CMPW  SYSY,XEND                WHILE Y<XEND DO         BGE   LN14         INC2  SYSY                       Y = Y+1         LDA   D+1                        IF D<0 THEN         BPL   LN12         ADD2  D,INCR1                      D = D+INCR1         JMP   LN13                       ELSELN12     ADD2  SYSX,DELY                    X = X+DELY         ADD2  D,INCR2                      D = D+INCR2LN13     ANOP                             ENDIF         JSR   SYSPLOT                    draw a point         JMP   LN11                     ENDWHILELN14     MOVE  SAVE,DX,#14              restore zero page         MOVE  SYSAY,SYSY               set current point to end of line         MOVE  SYSAX,SYSX         RTSSAVE     DS    14         END******************************************************************  SYSGRCH - Hi Res Color Plot/Read**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  INPUTS:*        SYSX - X coordinate to plot or read*        SYSY - Y coordinate to plot or read*        SYSCOLOR - color to plot**  OUTPUTS:*        A - color of point read**  NOTES:*        1) Will not plot outside of the current window*        2) Returns black on reads outside of the physical*           screen******************************************************************SYSGRCH  STARTMR0      EQU   $C8                      macro registersMR1      EQU   $C9MR2      EQU   $CAMR3      EQU   $CBMASKL    EQU   $CCMASKH    EQU   $CDBLACK    EQU   0PURPLE   EQU   3BLUE     EQU   6ORANGE   EQU   9GREEN    EQU   12WHITE    EQU   15;;  External constant definitions.;         DC    I'139'                   max X allowed         DC    I'191'                   max Y allowed         DC    B'1001 0010 0100 1001'   allowed colors mask         DC    I1'4'                    number of bits per pixel in block;;  Plot a point.;         LDA   SYSX+1                   insure that the point is in the         ORA   SYSY+1                    current window         BNE   RTS         LDA   SYSX         CMP   SYSGL         BLT   RTS         CMP   SYSGR         BGT   RTS         LDA   SYSY         CMP   SYSGB         BLT   RTS         CMP   SYSGT         BLE   PL0RTS      RTSPL0      LM    MR1,#0                   MR0 = byte number         LDA   SYSX                     MR2 = bit number in first byte         ASL   A         ROL   MR1         STA   MR0         JSR   SYSDIV7         LDX   SYSCOLOR                 create a two byte mask from the color         LDA   CPATTERN,X                and relative bit position         LDX   MR2         BEQ   PL2PL1      ASL   A         DBNE  X,PL1PL2      ASL   A         PHP         LSR   A         STA   MASKL         LDA   #0         PLP         ROL   A         STA   MASKH         LDY   MR0                      find the address of the line         JSR   SYSGBAS         LDX   SYSCOLOR         LDA   CBIT,X         BEQ   PL4         BPL   PL3         LDX   MR2                      ... turn off the color bit         LDA   (MR0),Y         AND   #$7F         AND   MASK,X         ORA   MASKL         STA   (MR0),Y         CPX   #6         BNE   PL5         INY         LDA   (MR0),Y         AND   #$7E         ORA   MASKH         STA   (MR0),Y         RTSPL3      LDX   MR2                      ... turn on the color bit         LDA   (MR0),Y         ORA   #$80         AND   MASK,X         ORA   MASKL         STA   (MR0),Y         CPX   #6         BNE   PL5         INY         LDA   (MR0),Y         ORA   #$80         AND   #$FE         ORA   MASKH         STA   (MR0),Y         RTSPL4      LDX   MR2                      ... leave the color bit alone         LDA   (MR0),Y         AND   MASK,X         ORA   MASKL         STA   (MR0),Y         CPX   #6         BNE   PL5         INY         LDA   (MR0),Y         AND   #$FE         ORA   MASKH         STA   (MR0),YPL5      RTS;;  Read a point.;SYSRDCH  ENTRY         LDA   SYSX+1                   report black if the read is outside         ORA   SYSY+1                    of the physical screen         BNE   RD0         LDA   SYSX         CMP   #140         BGE   RD0         LDA   SYSY         CMP   #192         BLT   RD0ARD0      LDA   #0         RTSRD0A     LM    MR1,#0                   MR0 = byte number         LDA   SYSX                     MR2 = bit number in first byte         ASL   A         ROL   MR1         STA   MR0         JSR   SYSDIV7         LDY   MR0                      read the bit pattern         JSR   SYSGBAS         INY         LDA   (MR0),Y         LSR   A         DEY         LDA   (MR0),Y         PHP         ASL   A         PLP         ROR   A         LDX   MR2                      right justify it         BEQ   RD2RD1      LSR   A         DBNE  X,RD1RD2      AND   #3                       and out unneeded bits         TAX                            get the color bit         LDA   (MR0),Y         BMI   RD3                      load the color number         LDA   PCOLOR,X         RTSRD3      LDA   NCOLOR,X         RTS;;  Local data areas.;CPATTERN DC    H'00 00 00 01 00 00 01 00 00 02 00 00 02 00 00 03'MASK     DC    B'11111100'         DC    B'11111001'         DC    B'11110011'         DC    B'11100111'         DC    B'11001111'         DC    B'10011111'         DC    B'10111111'CBIT     DC    H'00 00 00 FF 00 00 01 00 00 01 00 00 FF 00 00 00'PCOLOR   DC    I1'BLACK,BLUE,ORANGE,WHITE'NCOLOR   DC    I1'BLACK,PURPLE,GREEN,WHITE'         END******************************************************************  SYSSCOL - Sets an Element in the Color Table**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  INPUTS:*        A - color drawn*        X - color drawn onto*        Y - resulting color**  OUTPUTS:*        SYSCTBL - updated******************************************************************SYSSCOL  START         STA   COLOR         TXA         ASL   A         ASL   A         ASL   A         ASL   A         ORA   COLOR         TAX         TYA         STA   SYSCTBL,X         RTSCOLOR    DS    1         END******************************************************************  SYSGRDC - Double Hi Res Color Plot/Read**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  INPUTS:*        SYSX - X coordinate to plot or read*        SYSY - Y coordinate to plot or read*        SYSCOLOR - color to plot**  OUTPUTS:*        A - color of point read**  NOTES:*        1) Will not plot outside of the current window*        2) Returns black on reads outside of the physical*           screen******************************************************************SYSGRDC  STARTMR0      EQU   $C8                      macro registersMR1      EQU   $C9MR2      EQU   $CAMR3      EQU   $CBMR4      EQU   $CCMR5      EQU   $CDMR6      EQU   $CEMR7      EQU   $CFALTCHAR  EQU   $C055                    store to alternate memoryNORMCHAR EQU   $C054                    stroe to main memory;;  External constant definitions.;         DC    I'139'                   max X allowed         DC    I'191'                   max Y allowed         DC    B'1111 1111 1111 1111'   allowed colors mask         DC    I1'4'                    number of bits per pixel in block;;  Plot a point.;         LDA   SYSX+1                   insure that the point is in the         ORA   SYSY+1                    current window         BNE   RTS         LDA   SYSX         CMP   SYSGL         BLT   RTS         CMP   SYSGR         BGT   RTS         LDA   SYSY         CMP   SYSGB         BLT   RTS         CMP   SYSGT         BLE   PL0RTS      RTSPL0      LM    MR1,#0                   MR0 = byte number         LDA   SYSX                     MR2 = bit number in first byte         ASL   A         ROL   MR1         ASL   A         ROL   MR1         STA   MR0         JSR   SYSDIV7         LDA   #0                       create a two byte pattern from the color         STA   MR4                       and relative bit position         STA   MR5         LDX   MR2         LDA   MASKL,X         STA   MR6         LDA   MASKH,X         STA   MR7         LDY   SYSCOLOR         LDA   COLR,Y         TAY         LDA   FLIPBIT,Y         CPX   #4         BGE   PL2         CPX   #0         BEQ   PL1APL1      ASL   A         DBNE  X,PL1PL1A     STA   MR4         BEQ   PL6APL2      ASL   A         ASL   A         ASL   A         ASL   A         ASL   A         ROL   MR5         CPX   #5         BLT   PL4         BEQ   PL3         ASL   A         ROL   MR5PL3      ASL   A         ROL   MR5PL4      LSR   A         STA   MR4PL6A     LDA   MR0                      or the two byte pattern with the         LSR   A                         graphics screen         TAY         PHP         JSR   SYSGBAS         PLP         BCC   PL7         LDA   (MR0),Y         AND   MR6         ORA   MR4         STA   (MR0),Y         STA   ALTCHAR         INY         LDA   (MR0),Y         AND   MR7         ORA   MR5         STA   (MR0),Y         STA   NORMCHAR         RTSPL7      STA   ALTCHAR         LDA   (MR0),Y         AND   MR6         ORA   MR4         STA   (MR0),Y         STA   NORMCHAR         LDA   (MR0),Y         AND   MR7         ORA   MR5         STA   (MR0),Y         RTS;;  Read a point.;SYSRDDC  ENTRY         LDA   SYSX+1                   report black if the read is outside         ORA   SYSY+1                    of the physical screen         BNE   RD0         LDA   SYSX         CMP   #140         BGE   RD0         LDA   SYSY         CMP   #192         BLT   RD0ARD0      LDA   #0         RTSRD0A     LM    MR1,#0                   MR0 = byte number         LDA   SYSX                     MR2 = bit number in first byte         ASL   A         ROL   MR1         ASL   A         ROL   MR1         STA   MR0         JSR   SYSDIV7         LDX   MR2                      read a point         CPX   #4         BGE   RD4         LDA   MR0                      ... for points not split across         LSR   A                             screens         TAY         PHP         JSR   SYSGBAS         PLP         BCC   RD1         LDA   (MR0),Y         JMP   RD2RD1      STA   ALTCHAR         LDA   (MR0),Y         STA   NORMCHARRD2      LDX   MR2         BEQ   RD3ARD3      LSR   A         DBNE  X,RD3RD3A     AND   #$F         JMP   RD9RD4      LDA   MR0                      ... for points split across screens         LSR   A         TAY         PHP         JSR   SYSGBAS         PLP         LDX   MR2         BCC   RD5         LDA   (MR0),Y         ASL   A         STA   MR4         INY         STA   ALTCHAR         LDA   (MR0),Y         STA   NORMCHAR         JMP   RD6RD5      STA   ALTCHAR         LDA   (MR0),Y         ASL   A         STA   MR4         STA   NORMCHAR         LDA   (MR0),YRD6      LDX   MR2                      combine the bits from the first and         CPX   #5                        second bytes         BLT   RD8         BEQ   RD7         LSR   A         ROR   MR4RD7      LSR   A         ROR   MR4RD8      LSR   A         LDA   MR4         ROR   A         LSR   A         LSR   A         LSR   A         LSR   ARD9      TAX         LDA   FLIPBIT,X         TAX         LDA   COLR,X         RTS;;  Local data areas.;MASKL    DC    B'11110000'              masks for erasing a dot on the screen         DC    B'11100001'         DC    B'11000011'         DC    B'10000111'         DC    B'10001111'         DC    B'10011111'         DC    B'10111111'MASKH    DC    4B'11111111'         DC    B'11111110'         DC    B'11111100'         DC    B'11111000'FLIPBIT  DC    B'00000000'              used to reverse the order of the         DC    B'00001000'               lower four bits         DC    B'00000100'         DC    B'00001100'         DC    B'00000010'         DC    B'00001010'         DC    B'00000110'         DC    B'00001110'         DC    B'00000001'         DC    B'00001001'         DC    B'00000101'         DC    B'00001101'         DC    B'00000011'         DC    B'00001011'         DC    B'00000111'         DC    B'00001111'COLR     ANOP                           translate between low res and high!                                        res color numbers         DC    I1'0,1,8,9,4,5,12,13,2,3,10,11,6,7,14,15'         END         APPEND GR.2