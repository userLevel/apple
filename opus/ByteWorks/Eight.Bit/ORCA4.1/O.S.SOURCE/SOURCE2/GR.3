******************************************************************  SYSGRT1 - 40 Column Text Screen Graphics Read/Write**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  INPUTS:*        SYSX - X coordinate to plot or read*        SYSY - Y coordinate to plot or read*        SYSCOLOR - color to plot**  OUTPUTS:*        A - color of point read**  NOTES:*        1) Will not plot outside of the current window*        2) Returns black on reads outside of the physical*           screen******************************************************************SYSGRT1  STARTBLACK    EQU   $A0                      character codes for the colorsWHITE    EQU   $20CV       EQU   $25                      current vertical cursor for textBASL     EQU   $28                      addr of the text lineVTAB     EQU   $FC24                    set BASL to the addr of the line in A;;  External constant definitions.;         DC    I'39'                    max X allowed         DC    I'23'                    max Y allowed         DC    B'1000 0000 0000 0001'   allowed colors mask         DC    I1'1'                    number of bits per pixel in block;;  Plot a point.;         LDA   SYSY+1                   insure that the point is in the         ORA   SYSX+1                    current window         BNE   RTS         LDA   SYSX         CMP   SYSGL         BLT   RTS         CMP   SYSGR         BGT   RTS         LDA   SYSY         CMP   SYSGB         BLT   RTS         CMP   SYSGT         BLE   PL1RTS      RTSPL1      SEC                            find the address of the line         LDA   #23         SBC   SYSY         JSR   VTAB         LDA   #BLACK                   A = blank (black) or inverse blank         LDY   SYSCOLOR                  (white)         BEQ   PL2         LDA   #WHITEPL2      LDY   SYSX                     plot the point         STA   (BASL),Y         LDA   CV                       restore BASL and return         JMP   VTAB;;  Read a point.;SYSRDT1  ENTRY         LDA   SYSY+1                   report black if the read is outside         ORA   SYSX+1                    of the physical screen         BNE   RD0         LDA   SYSX         CMP   #40         BGE   RD0         LDA   SYSY         CMP   #24         BLT   RD1RD0      LDA   #0         RTSRD1      SEC                            find the address of the line         LDA   #23         SBC   SYSY         JSR   VTAB         LDY   SYSX                     load the point         LDA   (BASL),Y         PHA                            restore BASL         LDA   CV         JSR   VTAB         PLA         TAX                            set the color from the character code         LDA   #0         CPX   #WHITE         BNE   RD2         LDA   #$FRD2      RTS         END******************************************************************  SYSGRT2 - 40 Column Text Screen Graphics Read/Write, Page 2**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  INPUTS:*        SYSX - X coordinate to plot or read*        SYSY - Y coordinate to plot or read*        SYSCOLOR - color to plot**  OUTPUTS:*        A - color of point read**  NOTES:*        1) Will not plot outside of the current window*        2) Returns black on reads outside of the physical*           screen******************************************************************SYSGRT2  STARTBLACK    EQU   $A0                      character codes for the colorsWHITE    EQU   $20CV       EQU   $25                      current vertical cursor for textBASL     EQU   $28                      addr of the text lineVTAB     EQU   $FC24                    set BASL to the addr of the line in A;;  External constant definitions.;         DC    I'39'                    max X allowed         DC    I'23'                    max Y allowed         DC    B'1000 0000 0000 0001'   allowed colors mask         DC    I1'1'                    number of bits per pixel in block;;  Plot a point.;         LDA   SYSY+1                   insure that the point is in the         ORA   SYSX+1                    current window         BNE   RTS         LDA   SYSX         CMP   SYSGL         BLT   RTS         CMP   SYSGR         BGT   RTS         LDA   SYSY         CMP   SYSGB         BLT   RTS         CMP   SYSGT         BLE   PL1RTS      RTSPL1      SEC                            find the address of the line         LDA   #23         SBC   SYSY         JSR   VTAB         LDA   BASL+1         EOR   #%00001100         STA   BASL+1         LDA   #BLACK                   A = blank (black) or inverse blank         LDY   SYSCOLOR                  (white)         BEQ   PL2         LDA   #WHITEPL2      LDY   SYSX                     plot the point         STA   (BASL),Y         LDA   CV                       restore BASL and return         JMP   VTAB;;  Read a point.;SYSRDT2  ENTRY         LDA   SYSY+1                   report black if the read is outside         ORA   SYSX+1                    of the physical screen         BNE   RD0         LDA   SYSX         CMP   #40         BGE   RD0         LDA   SYSY         CMP   #24         BLT   RD1RD0      LDA   #0         RTSRD1      SEC                            find the address of the line         LDA   #23         SBC   SYSY         JSR   VTAB         LDA   BASL+1         EOR   #%00001100         STA   BASL+1         LDY   SYSX                     load the point         LDA   (BASL),Y         PHA                            restore BASL         LDA   CV         JSR   VTAB         PLA         TAX                            set the color from the character code         LDA   #0         CPX   #WHITE         BNE   RD2         LDA   #$FRD2      RTS         END******************************************************************  SYSGR80 - 80 Column Text Screen Graphics Read/Write**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  INPUTS:*        SYSX - X coordinate to plot or read*        SYSY - Y coordinate to plot or read*        SYSCOLOR - color to plot**  OUTPUTS:*        A - color of point read**  NOTES:*        1) Will not plot outside of the current window*        2) Returns black on reads outside of the physical*           screen******************************************************************SYSGR80  STARTBLACK    EQU   $A0                      character codes for the colorsWHITE    EQU   $20CV       EQU   $25                      current vertical cursor for textBASL     EQU   $28                      addr of the text lineALTCHAR  EQU   $C055                    alternate pageNORMCHAR EQU   $C054                    normal pageVTAB     EQU   $FC24                    set BASL to the addr of the line in A;;  External constant definitions.;         DC    I'79'                    max X allowed         DC    I'23'                    max Y allowed         DC    B'1000 0000 0000 0001'   allowed colors mask         DC    I1'1'                    number of bits per pixel in block;;  Plot a point.;         LDA   SYSY+1                   insure that the point is in the         ORA   SYSX+1                    current window         BNE   RTS         LDA   SYSX         CMP   SYSGL         BLT   RTS         CMP   SYSGR         BGT   RTS         LDA   SYSY         CMP   SYSGB         BLT   RTS         CMP   SYSGT         BLE   PL1RTS      RTSPL1      SEC                            find the address of the line         LDA   #23         SBC   SYSY         JSR   VTAB         LDA   #BLACK                   A = blank (black) or inverse blank         LDY   SYSCOLOR                  (white)         BEQ   PL2         LDA   #WHITEPL2      PHA                            plot the point         LDA   SYSX         LSR   A         TAY         PLA         BCS   PL3         STA   ALTCHARPL3      STA   (BASL),Y         STA   NORMCHAR         LDA   CV                       restore BASL and return         JMP   VTAB;;  Read a point.;SYSRD80  ENTRY         LDA   SYSY+1                   report black if the read is outside         ORA   SYSX+1                    of the physical screen         BNE   RD0         LDA   SYSX         CMP   #80         BGE   RD0         LDA   SYSY         CMP   #24         BLT   RD1RD0      LDA   #0         RTSRD1      SEC                            find the address of the line         LDA   #23         SBC   SYSY         JSR   VTAB         LDA   SYSX                     load the point         LSR   A         TAY         BCS   RD1A         STA   ALTCHARRD1A     LDA   (BASL),Y         STA   NORMCHAR         PHA                            restore BASL         LDA   CV         JSR   VTAB         PLA         TAX                            set the color from the character code         LDA   #0         CPX   #WHITE         BNE   RD2         LDA   #$FRD2      RTS         END******************************************************************  SYSDIV7 - Divide by 7**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  INPUTS:*        MR0 - number to divide by 7**  OUTPUTS:*        MR0 - result*        MR2 - remainder**  NOTES:*        1) The input must be <= 560.******************************************************************SYSDIV7  STARTMR0      EQU   $C8                      input/output locationsMR1      EQU   $C9MR2      EQU   $CAMR3      EQU   $CB         LA    MR2,0LB1      LDA   MR1                      reduce to < 256         BEQ   LB2         ADD2  MR2,#36         SUB2  MR0,#252         JMP   LB1LB2      LDA   MR0                      reduce to < 128         BPL   LB3         SEC         SBC   #126         STA   MR0         ADD2  MR2,#18         JMP   LB2LB3      TAX                            do division         CLC         LDA   MR2         ADC   VAL,X         STA   MR0         LDA   MR3         ADC   #0         STA   MR1         LM    MR3,#0         LDA   REM,X         STA   MR2         RTSVAL      DC    7I1'0',7I1'1',7I1'2',7I1'3'         DC    7I1'4',7I1'5',7I1'6',7I1'7'         DC    7I1'8',7I1'9',7I1'10',7I1'11'         DC    7I1'12',7I1'13',7I1'14',7I1'15'         DC    7I1'16',7I1'17'         DC    2I1'18'REM      DC    18I1'0,1,2,3,4,5,6',I1'0,1'         END******************************************************************  SYSGBAS - Compute Graphics Base Address**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  INPUTS:*        SYSY - line number, 0 at bottom of screen**  OUTPUTS:*        MR0 - address of the first byte on line A**  NOTES:*        1) The Y register is not disturbed.******************************************************************SYSGBAS  STARTMR0      EQU   $C8MR1      EQU   $C9         LDX   SYSY         LDA   GBASL,X         STA   MR0         LDA   GBASH,X         ORA   SYSGBASE         STA   MR1         RTSGBASL    DC    I1<'$1FD0,$1BD0,$17D0,$13D0,$0FD0,$0BD0,$07D0,$03D0'         DC    I1<'$1F50,$1B50,$1750,$1350,$0F50,$0B50,$0750,$0350'         DC    I1<'$1ED0,$1AD0,$16D0,$12D0,$0ED0,$0AD0,$06D0,$02D0'         DC    I1<'$1E50,$1A50,$1650,$1250,$0E50,$0A50,$0650,$0250'         DC    I1<'$1DD0,$19D0,$15D0,$11D0,$0DD0,$09D0,$05D0,$01D0'         DC    I1<'$1D50,$1950,$1550,$1150,$0D50,$0950,$0550,$0150'         DC    I1<'$1CD0,$18D0,$14D0,$10D0,$0CD0,$08D0,$04D0,$00D0'         DC    I1<'$1C50,$1850,$1450,$1050,$0C50,$0850,$0450,$0050'         DC    I1<'$1FA8,$1BA8,$17A8,$13A8,$0FA8,$0BA8,$07A8,$03A8'         DC    I1<'$1F28,$1B28,$1728,$1328,$0F28,$0B28,$0728,$0328'         DC    I1<'$1EA8,$1AA8,$16A8,$12A8,$0EA8,$0AA8,$06A8,$02A8'         DC    I1<'$1E28,$1A28,$1628,$1228,$0E28,$0A28,$0628,$0228'         DC    I1<'$1DA8,$19A8,$15A8,$11A8,$0DA8,$09A8,$05A8,$01A8'         DC    I1<'$1D28,$1928,$1528,$1128,$0D28,$0928,$0528,$0128'         DC    I1<'$1CA8,$18A8,$14A8,$10A8,$0CA8,$08A8,$04A8,$00A8'         DC    I1<'$1C28,$1828,$1428,$1028,$0C28,$0828,$0428,$0028'         DC    I1<'$1F80,$1B80,$1780,$1380,$0F80,$0B80,$0780,$0380'         DC    I1<'$1F00,$1B00,$1700,$1300,$0F00,$0B00,$0700,$0300'         DC    I1<'$1E80,$1A80,$1680,$1280,$0E80,$0A80,$0680,$0280'         DC    I1<'$1E00,$1A00,$1600,$1200,$0E00,$0A00,$0600,$0200'         DC    I1<'$1D80,$1980,$1580,$1180,$0D80,$0980,$0580,$0180'         DC    I1<'$1D00,$1900,$1500,$1100,$0D00,$0900,$0500,$0100'         DC    I1<'$1C80,$1880,$1480,$1080,$0C80,$0880,$0480,$0080'         DC    I1<'$1C00,$1800,$1400,$1000,$0C00,$0800,$0400,$0000'GBASH    DC    I1>'$1FD0,$1BD0,$17D0,$13D0,$0FD0,$0BD0,$07D0,$03D0'         DC    I1>'$1F50,$1B50,$1750,$1350,$0F50,$0B50,$0750,$0350'         DC    I1>'$1ED0,$1AD0,$16D0,$12D0,$0ED0,$0AD0,$06D0,$02D0'         DC    I1>'$1E50,$1A50,$1650,$1250,$0E50,$0A50,$0650,$0250'         DC    I1>'$1DD0,$19D0,$15D0,$11D0,$0DD0,$09D0,$05D0,$01D0'         DC    I1>'$1D50,$1950,$1550,$1150,$0D50,$0950,$0550,$0150'         DC    I1>'$1CD0,$18D0,$14D0,$10D0,$0CD0,$08D0,$04D0,$00D0'         DC    I1>'$1C50,$1850,$1450,$1050,$0C50,$0850,$0450,$0050'         DC    I1>'$1FA8,$1BA8,$17A8,$13A8,$0FA8,$0BA8,$07A8,$03A8'         DC    I1>'$1F28,$1B28,$1728,$1328,$0F28,$0B28,$0728,$0328'         DC    I1>'$1EA8,$1AA8,$16A8,$12A8,$0EA8,$0AA8,$06A8,$02A8'         DC    I1>'$1E28,$1A28,$1628,$1228,$0E28,$0A28,$0628,$0228'         DC    I1>'$1DA8,$19A8,$15A8,$11A8,$0DA8,$09A8,$05A8,$01A8'         DC    I1>'$1D28,$1928,$1528,$1128,$0D28,$0928,$0528,$0128'         DC    I1>'$1CA8,$18A8,$14A8,$10A8,$0CA8,$08A8,$04A8,$00A8'         DC    I1>'$1C28,$1828,$1428,$1028,$0C28,$0828,$0428,$0028'         DC    I1>'$1F80,$1B80,$1780,$1380,$0F80,$0B80,$0780,$0380'         DC    I1>'$1F00,$1B00,$1700,$1300,$0F00,$0B00,$0700,$0300'         DC    I1>'$1E80,$1A80,$1680,$1280,$0E80,$0A80,$0680,$0280'         DC    I1>'$1E00,$1A00,$1600,$1200,$0E00,$0A00,$0600,$0200'         DC    I1>'$1D80,$1980,$1580,$1180,$0D80,$0980,$0580,$0180'         DC    I1>'$1D00,$1900,$1500,$1100,$0D00,$0900,$0500,$0100'         DC    I1>'$1C80,$1880,$1480,$1080,$0C80,$0880,$0480,$0080'         DC    I1>'$1C00,$1800,$1400,$1000,$0C00,$0800,$0400,$0000'         END******************************************************************  SYSPLOT - Plot Routine Common Variables**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.******************************************************************SYSPLOT  START                          plot jump vector         JMP   SYSPLOTSYSPLOT2 ENTRY                          alternate SYSPLOT vector for color map         JMP   SYSPLOTSYSCOLOR ENTRY                          current pen color         DS    1SYSX     ENTRY                          X position of pen         DS    2SYSY     ENTRY                          Y position of pen         DS    2SYSTEXT  ENTRY                          text output hook         DS    2SYSMAXX  ENTRY                          max X value on physical screen         DS    2SYSMAXY  ENTRY                          max Y value on physical screen         DS    2SYSCOLM  ENTRY                          color masks         DS    2SYSCBITS ENTRY                          number of bits per pixel in block         DS    1SYSGL    ENTRY                          graphics screen left         DS    2SYSGR    ENTRY                          graphics screen right         DS    2SYSGT    ENTRY                          graphics screen top         DS    2SYSGB    ENTRY                          graphics screen bottom         DS    2SYSGRED  ENTRY                          read jump vector         JMP   SYSGREDSYSAX    ENTRY                          X argument         DS    2SYSAY    ENTRY                          Y argument         DS    2SYSGBASE ENTRY                          high order bits of high res base address         DS    1         END         APPEND GR.4