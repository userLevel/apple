******************************************************************  SGUSE - Get Label Use**  Inputs:*        TLINE - text line*        X - disp to start of label**  Outputs:*        SYMBOL - contains symbols defined*        SYMKEY - contains symbol keys*        NSYM - number of symbols*        X - disp of first char past symbol******************************************************************SGUSE    START         USING USERGU1      LDY   #9                       init symbol         LDA   #' 'GU2      STA   SMBOL,Y         DBPL  Y,GU2         INY                            read symbolGU3      LDA   TLINE,X         JSR   SANID         BCC   GU4         STA   SMBOL,Y         INY         INX         CPY   #10         BEQ   GU4         CPX   #80         BNE   GU3GU4      LM    SMKEY,#3         STX   TX         JSR   SYMBL         LDX   TX         RTSTX       DS    1         END******************************************************************  SHIFT - convert to upper-case**  Inputs:*        A - character to convert**  Outputs:*        A - upper-case character******************************************************************SHIFT    START         CMP   #'a'         BLT   RTS         CMP   #'z'+1         BGE   RTS         AND   #%01011111RTS      RTS         END******************************************************************  SKPHX - Skip Hex Constant**  Inputs:*        X - disp in line*        TLINE - text line**  Outputs:*        X - disp of first char past hex constant*        C - set if not end of line******************************************************************SKPHX    START         USING USERKP1      INX         CPX   #80         BEQ   ERTS         LDA   TLINE,X         JSR   SNMID         BCS   KP1         CMP   #'A'         BLT   RTS         CMP   #'G'         BLT   KP1RTS      SEC         RTSERTS     CLC         RTS         END******************************************************************  SKPST - Skip String**  Inputs:*        X - disp in line*        TLINE - text line**  Outputs:*        X - disp of first char past string*        C - set if not end of line******************************************************************SKPST    START         USING USERKP1      INX         CPX   #80         BEQ   ERTS         LDA   TLINE,X         CMP   #''''         BNE   KP1         SEC         RTSERTS     CLC         RTS         END******************************************************************  SNMID - Identify Numbers**  Inputs:*        A - character to be checked**  Outputs:*        C - set if numeric, else clear******************************************************************SNMID    START         CMP   #'0'         BLT   RTS         CMP   #'9'+1         BLT   OK         CLC         RTSOK       SECRTS      RTS         END******************************************************************  SOPTP - Operand Type**  Returns a type code for the operand based on the operation*  code.**  Inputs:*        SYMBOL - op code**  Outputs:*        A - operand type*              0 - no definitions*              1 - general search*              2 - instruction*              3 - DC******************************************************************SOPTP    START         USING USER         LDY   #1                       ensure end is 2 blanks         LDA   #' '                      blanksPT1      CMP   SYMBOL+8,Y         BNE   PT5         DBPL  Y,PT1         LA    R0,TABLE                 scan tablePT2      LDY   #0                       check this entryPT3      LDA   (R0),Y         CMP   SYMBOL,Y         BNE   PT4         INY         CPY   #8         BLT   PT3         LDA   (R0),Y                    found it!         RTSPT4      ADD2  R0,#9                    next entry         CMPW  R0,#TEND         BLT   PT2PT5      LDA   #1                       not found         RTSTABLE    DE    ADC,2         DE    AND,2         DE    CMP,2         DE    EOR,2         DE    LDA,2         DE    ORA,2         DE    SBC,2         DE    ASL,2         DE    LSR,2         DE    ROR,2         DE    ROL,2         DE    BIT,2         DE    CPX,2         DE    CPY,2         DE    DEC,2         DE    INC,2         DE    LDX,2         DE    LDY,2         DE    STA,2         DE    STX,2         DE    STY,2         DE    JMP,2         DE    JSR,2         DE    CLI,0         DE    CLV,0         DE    DEX,0         DE    DEY,0         DE    INX,0         DE    INY,0         DE    NOP,0         DE    PHA,0         DE    PLA,0         DE    PHP,0         DE    PLP,0         DE    RTI,0         DE    RTS,0         DE    SEC,0         DE    SED,0         DE    SEI,0         DE    TAX,0         DE    TAY,0         DE    TSX,0         DE    TXA,0         DE    TXS,0         DE    TYA,0         DE    BRK,0         DE    CLC,0         DE    CLD,0         DE    TSB,2                             65c02 opcodes         DE    TRB,2         DE    STZ,2         DE    PHX,0         DE    PLX,0         DE    PHY,0         DE    PLY,0         DE    MNOTE,0         DE    ANOP,0         DE    EJECT,0         DE    ERR,0         DE    GEN,0         DE    MSB,0         DE    LIST,0         DE    SYMBOL,0         DE    PRINTER,0         DE    EXPAND,0         DE    DC,3         DE    USING,0         DE    ENTRY,0         DE    DATA,0         DE    PRIVDATA,0         DE    END,0         DE    PAGE,0         DE    START,0         DE    PRIVATE,0         DE    KEEP,0         DE    COPY,0         DE    APPEND,0         DE    MCOPY,0         DE    MDROP,0         DE    MLOAD,0         DE    MACRO,0         DE    MEND,0         DE    CPA,2TEND     ANOP         END******************************************************************  SYMBL - Symbol List**  Inputs:*        SMBOL - symbol to list*        SMKEY - symbol key*        NSYM - number of symbols**  Outputs:*        SYMBOL - contains symbol*        SYMKEY - contains symbol key*        NSYM - NSYM+1******************************************************************SYMBL    START         USING USER         LDA   NSYM                     quit if nsym > 24         CMP   #25         BGE   SM2         LM    R0,NSYM                  save symbol         LM    R1,#0         MUL2  R0,#10         ADD2  R0,#SYMBOL         LDY   #9SM1      LDA   SMBOL,Y         STA   (R0),Y         DBPL  Y,SM1         LDX   NSYM                     save symbol key         LDA   SMKEY         STA   SYMKEY,X         INC   NSYM                     nsym = nsym+1SM2      RTS         END