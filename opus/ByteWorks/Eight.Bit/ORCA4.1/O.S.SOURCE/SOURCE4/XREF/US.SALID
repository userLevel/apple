******************************************************************  SALID - Alphabetic Identification**  Inputs:*        A - character to check**  Outputs:*        C - set if alphabetic******************************************************************SALID    START         CMP   #'A'         BLT   RTS         CMP   #'Z'+1         BLT   ALPHA         CMP   #'~'         BEQ   ALPHA         CMP   #'_'         BNE   NOTALPHA    SEC         RTSNOT      CLCRTS      RTS         END******************************************************************  SANID - Alpha-numeric Identification**  Inputs:*        A - character to check**  Outputs:*        C - set if alpha-numeric******************************************************************SANID    START         JSR   SNMID         BCS   RTS         JSR   SALID         BCS   RTS         CLCRTS      RTS         END******************************************************************  SCMNT - Check for Comment**  Inputs:*        TLINE - text line**  Outputs:*        C - set for comment******************************************************************SCMNT    START         USING USER         LDA   TLINE         CMP   #'*'         BEQ   CM2         CMP   #';'         BEQ   CM2         CMP   #'!'         BEQ   CM2         CMP   #$C         BEQ   CM2         LDY   #79         LDA   #' 'CM1      CMP   TLINE,Y         BNE   CM3         DBPL  Y,CM1CM2      SEC         RTSCM3      CLC                            not a comment         RTS         END******************************************************************  SCPAP - Find COPY and APPEND**  Inputs:*        SYMKEY - 4 for opnd found*        SYMBOL - operation code*        TLINE - text line**  Outputs:*        CFLAG - 1 if copy found*        AFLAG - 1 if append found*        CNAME - file name******************************************************************SCPAP    START         USING USER         LDA   SYMKEY                   check for op code         CMP   #4         JNE   RTS         LDY   #7                       check for 'copy'CP1      LDA   SYMBOL,Y         CMP   COPY,Y         BNE   CP2         DBPL  Y,CP1         INC   CFLAG         BNE   CP4CP2      LDY   #7                       check for 'append'CP3      LDA   SYMBOL,Y         CMP   APPEND,Y         JNE   RTS         DBPL  Y,CP3         INC   AFLAGCP4      JSR   SFNPN                    find operand         JCC   ERTS         LDY   #0                       set file name         LDA   TLINE,X         CMP   #''''         BEQ   CP7CP6      LDA   TLINE,X         CMP   #' '         BEQ   RTS         STA   CNAME+1,Y         INY         CPY   #63         BEQ   RTS         INX         CPX   #80         BLT   CP6         BGE   RTSCP7      INX                            ... with tic mark         CPX   #80         BEQ   RTSCP8      LDA   TLINE,X         CMP   #''''         BNE   CP9         INX         LDA   TLINE,X         CMP   #''''         BNE   RTSCP9      STA   CNAME+1,Y         INX         CPX   #80         BGE   RTS         INY         CPY   #63         BLT   CP8         BGE   RTSERTS     LM    (CFLAG,AFLAG),#0RTS      STY   CNAME         RTSCOPY     DC    C'COPY    'APPEND   DC    C'APPEND  '         END******************************************************************  SFNOP - Find Op Code**  Inputs:*        TLINE - text line**  Outputs:*        C - set if found*        X - disp in TLINE******************************************************************SFNOP    START         USING USER         LDX   #0                       skip to space         LDA   #' 'FN1      CMP   TLINE,X         BEQ   FN2         INX         CPX   #40         BNE   FN1         CLC         RTSFN2      CMP   TLINE,X                  skip to char         BNE   FN3         INX         CPX   #40         BNE   FN2         CLC         RTSFN3      SEC                            opnd found         RTS         END******************************************************************  SFNPN - Find Operand**  Inputs:*        TLINE - text line**  Outputs:*        X - disp in TLINE*        C - set if found******************************************************************SFNPN    START         USING USER         JSR   SFNOP         BCC   ERTSFN1      CMP   TLINE,X                  skip to blank         BEQ   FN2         INX         CPX   #80         BNE   FN1ERTS     CLC         RTSFN2      CMP   TLINE,X                  skip to char         BNE   FN3         INX         CPX   #40         BLT   FN2         CMP   TLINE-1,X                single space?         BEQ   ERTS         CMP   TLINE+1,X         BEQ   ERTS         INX                            yup.FN3      SEC         RTS         END******************************************************************  SGFRQ - Get Frequency Count**  Inputs:*        TLINE - text line**  Outputs:*        SYMKEY - 4 for counters*        SYMBOL - symbol to count******************************************************************SGFRQ    START         USING USER         LDA   TLINE                    skip comments         CMP   #'.'         BEQ   GF3         CMP   #'>'         BEQ   GF3         JSR   SFNOP                    find opnd         BCC   GF3         LDY   #0                       save opndGF1      LDA   TLINE,X         CMP   #' '         BEQ   GF2         STA   SYMBOL,Y         INX         CPX   #80         BEQ   GF2         INY         CPY   #10         BLT   GF1GF2      LM    SYMKEY,#4                set symkey         INC   NSYMGF3      RTS         END******************************************************************  SGGEN - Get General Use**  Inputs:*        TLINE - text line*        X - disp to operand**  Outputs:*        SYMBOL - contains symbols defined*        SYMKEY - contains symbol keys*        NSYM - number of symbols******************************************************************SGGEN    START         USING USERGG1      LDA   TLINE,X                  scan for character         CMP   #' '         BEQ   RTS         JSR   SALID         BCC   GG2                      label use         JSR   SGUSE         JMP   GG4GG2      CMP   #''''                    skip strings         BNE   GG3         JSR   SKPST         BCS   GG4         RTSGG3      CMP   #'$'                     skip hex constants         BNE   GG3A         JSR   SKPHX         BCC   RTSGG3A     INX                            next characterGG4      CPX   #81         BLT   GG1RTS      RTS         END******************************************************************  SGINS - Get Uses From Instructions**  Inputs:*        TLINE - text line*        X - disp to operand**  Outputs:*        SYMBOL - contains symbols defined*        SYMKEY - contains symbol keys*        NSYM - number of symbols******************************************************************SGINS    START         USING USER         LDA   TLINE,X                  skip accumulator         CMP   #'A'                      addressing mode         BNE   GN1         LDA   TLINE+1,X         CMP   #' '         BEQ   RTSGN1      LDA   TLINE,X                  scan for character         CMP   #' '         BEQ   RTS         JSR   SALID         BCC   GN2         JSR   SGUSE                    label use         JMP   GN5GN2      CMP   #''''                    skip strings         BNE   GN3         JSR   SKPST         BCS   GN5         RTSGN3      CMP   #'$'                     skip hex constants         BNE   GN4         JSR   SKPHX         BCS   GN5         RTSGN4      CMP   #')'                     quit if ',' or ')'         BEQ   RTS         CMP   #','         BEQ   RTS         INX                            next characterGN5      CPX   #81         BLT   GN1RTS      RTS         END******************************************************************  SGLDF - Get Label Definition**  Inputs:*        TLINE - text line**  Outputs:*        SYMBOL - contains symbols*        SYMKEY - key to symbols (2)******************************************************************SGLDF    START         USING USER         MOVE  #$20,SMBOL,#10                  init data areas         LM    SMKEY,#2         LDA   TLINE         BEQ   RTS         CMP   #' '         BEQ   RTS         CMP   #'.'                     get sequence symbols         BEQ   GL0                       or symbolic parm         CMP   #'&'         BNE   GL0AGL0      LDX   #1         BNE   GL0BGL0A     LDX   #0                       read labelGL0B     LDY   #0GL1      LDA   TLINE,X         CMP   #' '         BEQ   GL2         STA   SMBOL,Y         INX         INY         CPY   #10         BNE   GL1GL2      JSR   SYMBL                    save labelRTS      RTS         END******************************************************************  SGLUS - Get Label Uses**  Inputs:*        TLINE - text line*        SYMKEY - 4 if op code found*        SYMBOL - op code**  Outputs:*        SYMBOL - contains symbols defined*        SYMKEY - contains symbol keys*        NSYM - number of symbols******************************************************************SGLUS    START         USING USER         LDA   TLINE                    do general search of continuation         CMP   #'>'                      lines         BNE   GL3         LDX   #1         LDA   #' 'GL1      CMP   TLINE,X         BNE   GL2         INX         CPX   #80         BNE   GL1         BEQ   RTSGL2      JSR   SGGEN         RTSGL3      CMP   #'.'                     skip sequence symbols         BEQ   RTS         LDA   SYMKEY                   skip lines without         CMP   #4                        op codes         BNE   RTS         JSR   SOPTP                    determine type and         CMP   #0                        call appropriate         BEQ   RTS                       subroutine         PHA         JSR   SFNPN         BCS   GL3A         PLA         RTSGL3A     PLA         CMP   #2         BGE   GL4         JSR   SGGEN         RTSGL4      BNE   GL5         JSR   SGINS         RTSGL5      JSR   SGTDCRTS      RTS         END******************************************************************  SGTDC - Get Uses from DC**  Inputs:*        TLINE - text line*        X - disp to operand**  Outputs:*        SYMBOL - contains symbols defined*        SYMKEY - contains symbol keys*        NSYM - number of symbols******************************************************************SGTDC    START         USING USERGT1      LDA   TLINE,X                  skip numbers         JSR   SNMID         BCC   GT2         INX         CPX   #81         BLT   GT1         RTSGT2      CMP   #'H'                     skip H, C, F and D         BEQ   GT3                       type DC statements         CMP   #'C'         BEQ   GT3         CMP   #'F'         BEQ   GT3         CMP   #'D'         BNE   GT5GT3      INXGT4      JSR   SKPST         BCC   RTS         LDA   TLINE,X         CMP   #''''         BEQ   GT4         CMP   #','         BNE   RTS         INX         CPX   #81         BLT   GT1         RTSGT5      INX                            skip tic marks         CPX   #81         BGE   RTS         LDA   TLINE,X         CMP   #''''         BNE   GT5         INX         CPX   #81         BGE   RTSGT6      LDA   TLINE,X                  scan for character         CMP   #''''         BEQ   GT9         JSR   SALID         BCC   GT7         JSR   SGUSE                    label use         JMP   GT8AGT7      CMP   #'$'                     skip hex constants         BNE   GT8         JSR   SKPHX         BCS   GT8A         RTSGT8      INX                            next characterGT8A     CPX   #81         BLT   GT1         RTSGT9      INX                            next DC         CPX   #81         BGE   RTS         LDA   TLINE,X         CMP   #','         BNE   RTS         INX         CPX   #81         BLT   GT1RTS      RTS         END         APPEND US.SGUSE