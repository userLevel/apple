         LIST  OFF         SYMBOL OFF         MCOPY /RAM/IO.MACROS         KEEP  B.IO         COPY  COMMON******************************************************************  SYSGET2 - Get a Two Byte Integer**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  OUTPUTS:*        SYSS1 - result**  NOTES:*        1)  The integer ends with the first non-blank, non-*              numeric character.*        2)  Leading signs are allowed.*        3)  Uses SYSNMID, SYSMUL2.******************************************************************SYSGET2  START         LDA   #0                       initialize the sign, line counter and         STA   LSIGN                     number         STA   SYSS1         STA   SYSS1+1RD0      JSR   SYSKBIN                  handle leading signs         LDX   SYSEOL         BNE   RD3         CMP   #' '         BEQ   RD0         CMP   #'+'         BEQ   RD1         CMP   #'-'         BNE   RD2         INC   LSIGNRD1      JSR   SYSKBINRD2      JSR   SYSNMID                  quit if this character is not a number         BCC   RD3         PHA         LM    SYSS2,#10                multiply the old result by 10         LM    SYSS2+1,#0         JSR   SYSMUL2         PLA                            add in the new digit         AND   #$F         CLC         ADC   SYSS1         STA   SYSS1         BCC   RD1                      next digit         INC   SYSS1+1         BPL   RD1ERTS     ERROR #7                       overflow         RTSRD3      JSR   SYSCRPB                  negate the number if there was a leading         LDA   LSIGN                     minus sign         BEQ   RD4         SEC         LDA   #0         SBC   SYSS1         STA   SYSS1         LDA   #0         SBC   SYSS1+1         STA   SYSS1+1RD4      RTS;;  Local variables;LSIGN    DS    1                        local sign flag         END******************************************************************  SYSGET4 - Get a Four Byte Integer**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  OUTPUTS:*        SYSS1 - result**  NOTES:*        1)  The integer ends with the first non-blank, non-*              numeric character.*        2)  Leading signs are allowed.*        3)  Uses SYSNMID, SYSMUL4.******************************************************************SYSGET4  START         LDA   #0                       initialize the sign, line counter and         STA   LSIGN                     number         STA   SYSS1         STA   SYSS1+1         STA   SYSS1+2         STA   SYSS1+3RD0      JSR   SYSKBIN                  handle leading signs         LDX   SYSEOL         BNE   RD3         CMP   #' '         BEQ   RD0         CMP   #'+'         BEQ   RD1         CMP   #'-'         BNE   RD2         INC   LSIGNRD1      JSR   SYSKBINRD2      JSR   SYSNMID                  quit if this character is not a number         BCC   RD3         PHA         LM    SYSS2,#10                multiply the old result by 10         MOVE  #0,SYSS2+1,#3         JSR   SYSMUL4         PLA                            add in the new digit         BVS   ERTS         AND   #$F         CLC         ADC   SYSS1         STA   SYSS1         BCC   RD1                      next digit         INC   SYSS1+1         BNE   RD1         INC   SYSS1+2         BNE   RD1         INC   SYSS1+3         BPL   RD1ERTS     ERROR #7                       overflow         RTSRD3      JSR   SYSCRPB                  negate the number if there was a leading         LDA   LSIGN                     minus sign         BEQ   RD4         SEC         LDA   #0         SBC   SYSS1         STA   SYSS1         LDA   #0         SBC   SYSS1+1         STA   SYSS1+1         LDA   #0         SBC   SYSS1+2         STA   SYSS1+2         LDA   #0         SBC   SYSS1+3         STA   SYSS1+3RD4      RTS;;  Local variables;LSIGN    DS    1                        local sign flag         END******************************************************************  SYSGET8 - Get an Eight Byte Integer**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  OUTPUTS:*        SYSS1 - result**  NOTES:*        1)  The integer ends with the first non-blank, non-*              numeric character.*        2)  Leading signs are allowed.*        3)  Uses SYSNMID, SYSMUL8, SYSSUB8.******************************************************************SYSGET8  START         MOVE  #0,SYSS1,#8              initialize the sign, line counter and         STA   LSIGN                     numberRD0      JSR   SYSKBIN                  handle leading signs         LDX   SYSEOL         BNE   RD3         CMP   #' '         BEQ   RD0         CMP   #'+'         BEQ   RD1         CMP   #'-'         BNE   RD2         INC   LSIGNRD1      JSR   SYSKBINRD2      JSR   SYSNMID                  quit if this character is not a number         BCC   RD3         PHA         LM    SYSS2,#10                multiply the old result by 10         MOVE  #0,SYSS2+1,#7         JSR   SYSMUL8         PLA                            add in the new digit         BVS   ERTS         AND   #$F         CLC         ADC   SYSS1         STA   SYSS1         BCC   RD1                      next digit         INC   SYSS1+1         BNE   RD1         INC   SYSS1+2         BNE   RD1         INC   SYSS1+3         BNE   RD1         INC   SYSS1+4         BNE   RD1         INC   SYSS1+5         BNE   RD1         INC   SYSS1+6         BNE   RD1         INC   SYSS1+7         BPL   RD1ERTS     ERROR #7                       overflow         RTSRD3      JSR   SYSCRPB                  negate the number if there was a leading         LDA   LSIGN                     minus sign         BEQ   RD5         LDX   #7         LDY   #0RD4      LDA   SYSS1,X         STA   SYSS2,X         STY   SYSS1,X         DBPL  X,RD4         JSR   SYSSUB8RD5      RTS;;  Local variables;LSIGN    DS    1                        local sign flag         END******************************************************************  SYSGETC - Get a Character**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  OUTPUTS:*        SYSS1 - character read******************************************************************SYSGETC  STARTRETURN   EQU   $0D                      RETURN key code         JSR   SYSKBIN         CMP   #RETURN         BNE   GC1         LDA   #' 'GC1      STA   SYSS1         RTS         END******************************************************************  SYSGETS - String Input**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  INPUTS:*        WR0 - address of string******************************************************************SYSGETS  START         LDY   #0GT1      JSR   SYSKBIN         STA   SYSLINE,Y         LDA   SYSEOL         BNE   GT3         INY         BNE   GT1GT2      JSR   SYSKBIN         LDA   SYSEOL         BEQ   GT2GT3      RTS         END******************************************************************  SYSPUT2 - Format a Two Byte Integer for Output**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  INPUTS:*        SYSS1 - number to format*        SYSS2 - size of output field**  NOTES:*        1)  Uses SYSDIV2.******************************************************************SYSPUT2  START         LM    FORMAT,SYSS2             save the format byte         LDA   SYSS1                    handle the smallest negative number         BNE   PT1                       as a special case         LDA   SYSS1+1         CMP   #$80         BNE   PT1         MOVE  BSTR,STRING,#L:BSTR         LM    CC,#L:BSTR         JMP   PT7PT1      LM    (NZ,CC),#0               variable initialization         LDA   DEN         STA   TR1         STA   SYSS2         LDA   DEN+1         STA   TR1+1         STA   SYSS2+1         LDA   SYSS1+1                  set leading sign         BPL   PT2         INC   CC         LM    STRING,#'-'         SUB2  #0,SYSS1,SYSS1PT2      JSR   SYSDIV2                  get a digit         LDA   SYSS1                    save the digit         BNE   PT3         LDX   NZ         BEQ   PT4PT3      LDX   CC         ORA   #'0'         STA   STRING,X         INC   NZ         INC   CCPT4      LDX   #1                       form the new denominatorPT5      LDA   SYSS1+2,X         STA   TR2,X         LDA   TR1,X         STA   SYSS1,X         LDA   N10,X         STA   SYSS2,X         DBPL  X,PT5         JSR   SYSDIV2         LDA   SYSS1                    quit if zero         ORA   SYSS1+1         BEQ   PT7         LDX   #1                       next digitPT6      LDA   SYSS1,X         STA   TR1,X         STA   SYSS2,X         LDA   TR2,X         STA   SYSS1,X         DBPL  X,PT6         BMI   PT2PT7      LDA   CC                       check for zero         BNE   PT7A         LM    STRING,#'0'         INC   CCPT7A     SEC                            print blanks to right justify the         LDA   FORMAT                    output         SBC   CC         BEQ   PT8         BCC   PT8         TAX         JSR   SYSPRBLPT8      LDY   #0                       write the numberPT9      LDA   STRING,Y         JSR   SYSCOUT         INY         CPY   CC         BLT   PT9         RTSDEN      DC    I2'10000'                initial denominatorN10      DC    I2'10'BSTR     DC    C'-32768'STRING   DS    L:BSTR+1                 string build areaCC       DS    1                        character counterNZ       DS    1                        non-zero flagTR1      DS    2                        temporary work spaceTR2      DS    2FORMAT   DS    1                        temporary location for field width         END******************************************************************  SYSPUT4 - Format a Four Byte Integer for Output**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  INPUTS:*        SYSS1 - number to format*        SYSS2 - size of output field**  NOTES:*        1)  Uses SYSDIV4, SYSSIG4.******************************************************************SYSPUT4  START         LM    FORMAT,SYSS2             save the format byte         LDA   SYSS1                    handle the smallest negative number         ORA   SYSS1+1                   as a special case         ORA   SYSS1+2         BNE   PT1         LDA   SYSS1+3         CMP   #$80         BNE   PT1         MOVE  BSTR,STRING,#L:BSTR         LM    CC,#L:BSTR         JMP   PT7PT1      LM    (NZ,CC),#0               variable initialization         LDX   #3PT1A     LDA   DEN,X         STA   TR1,X         STA   SYSS2,X         DBPL  X,PT1A         LDA   SYSS1+3                  set leading sign         BPL   PT2         INC   CC         LM    STRING,#'-'         JSR   SYSSIG4PT2      JSR   SYSDIV4                  get a digit         LDA   SYSS1                    save the digit         BNE   PT3         LDX   NZ         BEQ   PT4PT3      LDX   CC         ORA   #'0'         STA   STRING,X         INC   NZ         INC   CCPT4      LDX   #3                       form the new denominatorPT5      LDA   SYSS1+4,X         STA   TR2,X         LDA   TR1,X         STA   SYSS1,X         LDA   N10,X         STA   SYSS2,X         DBPL  X,PT5         JSR   SYSDIV4         LDA   SYSS1                    quit if zero         ORA   SYSS1+1         ORA   SYSS1+2         ORA   SYSS1+3         BEQ   PT7         LDX   #3                       next digitPT6      LDA   SYSS1,X         STA   TR1,X         STA   SYSS2,X         LDA   TR2,X         STA   SYSS1,X         DBPL  X,PT6         BMI   PT2PT7      LDA   CC                       set the end marker         BNE   PT7A         LM    STRING,#'0'         INC   CCPT7A     SEC                            print blanks to right justify the         LDA   FORMAT                    output         SBC   CC         BEQ   PT8         BCC   PT8         TAX         JSR   SYSPRBLPT8      LDY   #0                       write the numberPT9      LDA   STRING,Y         JSR   SYSCOUT         INY         CPY   CC         BLT   PT9         RTSDEN      DC    I4'1000000000'           initial denominatorN10      DC    I4'10'BSTR     DC    C'-2147483648'STRING   DS    L:BSTR+1                 string build areaCC       DS    1                        character counterNZ       DS    1                        non-zero flagTR1      DS    4                        temporary work spaceTR2      DS    4FORMAT   DS    1                        temporary location for field width         END******************************************************************  SYSPUT8 - Format an Eight Byte Integer for Output**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  INPUTS:*        SYSS1 - number to format*        SYSS2 - size of output field**  NOTES:*        1)  Uses SYSDIV8, SYSSIG8.******************************************************************SYSPUT8  START         LM    FORMAT,SYSS2             save the format byte         LDA   SYSS1                    handle the smallest negative number         ORA   SYSS1+1                   as a special case         ORA   SYSS1+2         ORA   SYSS1+3         ORA   SYSS1+4         ORA   SYSS1+5         ORA   SYSS1+6         BNE   PT1         LDA   SYSS1+7         CMP   #$80         BNE   PT1         MOVE  BSTR,STRING,#L:BSTR         LM    CC,#L:BSTR         JMP   PT7PT1      LM    (NZ,CC),#0               variable initialization         LDX   #7PT1A     LDA   DEN,X         STA   TR1,X         STA   SYSS2,X         DBPL  X,PT1A         LDA   SYSS1+7                  set leading sign         BPL   PT2         INC   CC         LM    STRING,#'-'         JSR   SYSSIG8PT2      JSR   SYSDIV8                  get a digit         LDA   SYSS1                    save the digit         BNE   PT3         LDX   NZ         BEQ   PT4PT3      LDX   CC         ORA   #'0'         STA   STRING,X         INC   NZ         INC   CCPT4      LDX   #7                       form the new denominatorPT5      LDA   SYSS1+8,X         STA   TR2,X         LDA   TR1,X         STA   SYSS1,X         LDA   N10,X         STA   SYSS2,X         DBPL  X,PT5         JSR   SYSDIV8         LDA   SYSS1                    quit if zero         ORA   SYSS1+1         ORA   SYSS1+2         ORA   SYSS1+3         BEQ   PT7         LDX   #7                       next digitPT6      LDA   SYSS1,X         STA   TR1,X         STA   SYSS2,X         LDA   TR2,X         STA   SYSS1,X         DBPL  X,PT6         BMI   PT2PT7      LDA   CC                       set the end marker         BNE   PT8         LM    STRING,#'0'         INC   CCPT7A     SEC                            print blanks to right justify the         LDA   FORMAT                    output         SBC   CC         BEQ   PT8         BCC   PT8         TAX         JSR   SYSPRBLPT8      LDY   #0                       write the numberPT9      LDA   STRING,Y         JSR   SYSCOUT         INY         CPY   CC         BLT   PT9         RTSDEN      DC    I8'1000000000000000000'  initial denominatorN10      DC    I8'10'BSTR     DC    C'-9223372036854775808'STRING   DS    L:BSTR+1                 string build areaCC       DS    1                        character counterNZ       DS    1                        non-zero flagTR1      DS    8                        temporary work spaceTR2      DS    8FORMAT   DS    1                        temporary location for field width         END******************************************************************  SYSPUTB - Format a Boolean Variable**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  INPUTS:*        SYSS1 - boolean value******************************************************************SYSPUTB  START         LDY   #0                       decide which string to use         LA    MR0,TRUE         LDX   #4         LDA   SYSS1         BEQ   PT1         LA    MR0,FALSEPT1      STX   SYSS2+1                  print blanks to right justify the         SEC                             string in the output field         LDA   SYSS2         SBC   SYSS2+1         BCC   PT2         BEQ   PT2         TAX         JSR   SYSPRBLPT2      LDA   (MR0),Y                  output the string         BEQ   PT3         JSR   SYSCOUT         INY         BNE   PT2PT3      RTSTRUE     DC    C'true',H'00'FALSE    DC    C'false',H'00'         END******************************************************************  SYSPUTC - Format a Character for Output**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  INPUTS:*        SYSS1 - character for output******************************************************************SYSPUTC  START         LDX   SYSS2                    print blanks to right justify the         BEQ   PC1                       character in the print field         DEX         BEQ   PC1         JSR   SYSPRBLPC1      LDA   SYSS1                    print the character         JMP   SYSCOUT         END         APPEND IO.1