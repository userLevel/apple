******************************************************************  SYSCV2F - Convert Two Byte Integer to Floating Point*  SYSCV2D - Convert Two Byte Integer to Double Precision**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  INPUTS:*        SYSS1 - two byte integer**  OUTPUTS:*        SYSS1 - floating point or double precision******************************************************************SYSCV2F  START         LDA   #0         BEQ   EN1SYSCV2D  ENTRY         LDA   #1EN1      STA   FLG         MOVE  #0,SYSM1+2,#7            initialize the unused bytes         LDY   #0                       handle negative inputs         LDA   SYSS1+1         BPL   CV1         SUB2  #0,SYSS1,SYSS1         INYCV1      LM    SYSM1,SYSS1+1            move the number         LM    SYSM1+1,SYSS1         ORA   SYSS1+1         BEQ   CV3         TYA                            set the sign         LSR   A         ROR   A         STA   SYSS1         LM    SYSE1,#$80               initialize the exponent         LM    SYSE1+1,#$0ECV2      LDA   SYSM1                    normalize         BMI   CV4         JSR   SYSROLD2         LDA   SYSE1+1         BNE   CV2A         DEC   SYSE1CV2A     DEC   SYSE1+1         JMP   CV2CV3      LM    SYSS1,#FZERO             set the zero flagCV4      DEC   FLG         BEQ   CV5         ASL   SYSE1+1         ASL   SYSE1         ROR   SYSE1+1CV5      RTSFLG      DS    1                        entry type flag         DC    R'SYSROLD'         END******************************************************************  SYSCV4F - Convert Four Byte Integer to Floating Point*  SYSCV4D - Convert Four Byte Integer to Double Precision**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  INPUTS:*        SYSS1 - four byte integer**  OUTPUTS:*        SYSS1 - floating point or double precision******************************************************************SYSCV4F  START         LDA   #0         BEQ   EN1SYSCV4D  ENTRY         LDA   #1EN1      STA   FLG         MOVE  #0,SYSM1+4,#4            initialize the unused bytes         LDY   #0                       handle negative inputs         LDA   SYSS1+3         BPL   CV1         SEC         LDA   #0         SBC   SYSS1         STA   SYSS1         LDA   #0         SBC   SYSS1+1         STA   SYSS1+1         LDA   #0         SBC   SYSS1+2         STA   SYSS1+2         LDA   #0         SBC   SYSS1+3         STA   SYSS1+3         INYCV1      LM    SYSM1+3,SYSS1            move the number         LM    SYSM1+2,SYSS1+1         LM    SYSM1+1,SYSS1+2         ORA   SYSS1+1         ORA   SYSS1         ORA   SYSS1+3         BEQ   CV3         TYA                            set the sign         LSR   A         ROR   A         STA   SYSS1         LM    SYSE1,#$80               initialize the exponent         LM    SYSE1+1,#$1ECV2      LDA   SYSM1                    normalize         BMI   CV4         JSR   SYSROLD2         LDA   SYSE1+1         BNE   CV2A         DEC   SYSE1CV2A     DEC   SYSE1+1         JMP   CV2CV3      LM    SYSS1,#FZERO             set the zero flagCV4      DEC   FLG         BEQ   CV5         ASL   SYSE1+1         ASL   SYSE1         ROR   SYSE1+1CV5      RTSFLG      DS    1                        entry type flag         END******************************************************************  SYSCV8F - Convert Eight Byte Integer to Floating Point**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  INPUTS:*        SYSS1 - eight byte integer**  OUTPUTS:*        SYSS1 - floating point******************************************************************SYSCV8F  START         JSR   SYSCV8D         JMP   SYSCVDF         END******************************************************************  SYSCVF2 - Convert Floating Point to Two Byte Integer*  SYSCVD2 - Convert Double Precision to Two Byte Integer**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  INPUTS:*        SYSS1 - unpacked real number**  OUTPUTS:*        SYSS1 - two byte integer******************************************************************SYSCVF2  START         JSR   SYSCVFDSYSCVD2  ENTRY         LA    SYSM1+8,0                initialize the integer         SEC                            set the shift count         LDA   #$FD         SBC   SYSE1+1         STA   SYSE1+1         LDA   #$7F         SBC   SYSE1         STA   SYSE1         BPL   CV3CV1      INC   SYSE1+1                  shift loop         BNE   CV2         INC   SYSE1         BEQ   CV3CV2      ASL   SYSM1+7         ROL   SYSM1+6         ROL   SYSM1+5         ROL   SYSM1+4         ROL   SYSM1+3         ROL   SYSM1+2         ROL   SYSM1+1         ROL   SYSM1         ROL   SYSM1+8         ROL   SYSM1+9         BPL   CV1         FERR  #FERR3         RTSCV3      LDA   SYSS1                    set the sign         BPL   CV4         SUB2  #0,SYSM1+8,SYSM1+8CV4      MOVE  SYSM1+8,SYSS1            move the result         RTS         END******************************************************************  SYSCVF4 - Convert Floating Point to Four Byte Integer*  SYSCVD4 - Convert Double Precision to Four Byte Integer**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  INPUTS:*        SYSS1 - unpacked real number**  OUTPUTS:*        SYSS1 - four byte integer******************************************************************SYSCVF4  START         JSR   SYSCVFDSYSCVD4  ENTRY         MOVE  #0,SYSM1+8,#4            initialize the integer         SEC                            set the shift count         LDA   #$FD         SBC   SYSE1+1         STA   SYSE1+1         LDA   #$7F         SBC   SYSE1         STA   SYSE1         BPL   CV3CV1      INC   SYSE1+1                  shift loop         BNE   CV2         INC   SYSE1         BEQ   CV3CV2      ASL   SYSM1+7         ROL   SYSM1+6         ROL   SYSM1+5         ROL   SYSM1+4         ROL   SYSM1+3         ROL   SYSM1+2         ROL   SYSM1+1         ROL   SYSM1         ROL   SYSM1+8         ROL   SYSM1+9         ROL   SYSM1+10         ROL   SYSM1+11         BPL   CV1         FERR  #FERR3         RTSCV3      LDA   SYSS1                    set the sign         BPL   CV4         SEC         LDA   #0         SBC   SYSM1+8         STA   SYSM1+8         LDA   #0         SBC   SYSM1+9         STA   SYSM1+9         LDA   #0         SBC   SYSM1+10         STA   SYSM1+10         LDA   #0         SBC   SYSM1+11         STA   SYSM1+11CV4      MOVE  SYSM1+8,SYSS1,#4         move the result         RTS         END******************************************************************  SYSCVF8 - Convert Floating Point to Eight Byte Integer*  SYSCVD8 - Convert Double Precision to Eight Byte Integer**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  INPUTS:*        SYSS1 - unpacked real number**  OUTPUTS:*        SYSS1 - four byte integer******************************************************************SYSCVF8  START         JSR   SYSCVFDSYSCVD8  ENTRY         MOVE  #0,SYSM1+8,#8            initialize the integer         SEC                            set the shift count         LDA   #$FD         SBC   SYSE1+1         STA   SYSE1+1         LDA   #$7F         SBC   SYSE1         STA   SYSE1         BPL   CV3CV1      INC   SYSE1+1                  shift loop         BNE   CV2         INC   SYSE1         BEQ   CV3CV2      ASL   SYSM1+7         ROL   SYSM1+6         ROL   SYSM1+5         ROL   SYSM1+4         ROL   SYSM1+3         ROL   SYSM1+2         ROL   SYSM1+1         ROL   SYSM1         ROL   SYSM1+8         ROL   SYSM1+9         ROL   SYSM1+10         ROL   SYSM1+11         ROL   SYSM1+12         ROL   SYSM1+13         ROL   SYSM1+14         ROL   SYSM1+15         BPL   CV1         FERR  #FERR3         RTSCV3      LDA   SYSS1                    set the sign         BPL   CV5         SEC         LDY   #8         LDX   #0CV4      LDA   #0         SBC   SYSM1+8,X         STA   SYSM1+8,X         INX         DBNE  Y,CV4CV5      MOVE  SYSM1+8,SYSS1,#8         move the result         RTS         END******************************************************************  SYSRANF - Pseudo Random Real Number**  By Mike Westerfield*  Copyright (C) June 1984, All rights reserved*  By the Byte Works, Inc.**  OUTPUTS:*        SYSS1 - result**  NOTES:*        1) The result is in the range [0.0..1.0)******************************************************************SYSRANF  START         JSR   SYSRANX         MOVE  SYSRANX+3,SYSM1,#3         SEC         ROR   SYSM1         LM    (SYSS1,SYSS2,SYSM2+1,SYSM2+2,SYSM2+3),#0         LM    (SYSE1+1,SYSE2+1),#$7F         LM    SYSM2,#$80         JMP   SYSSUBF         END         APPEND FP.3