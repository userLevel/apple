{\rtf1\mac\ansicpg10000\uc1 \deff0\deflang1033\deflangfe1033{\upr{\fonttbl{\f0\fnil\fcharset256\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fnil\fcharset256\fprq2{\*\panose 020b0604020202020204}Arial;}{\f2\fnil\fcharset256\fprq2{\*\panose 02070309020205020404}Courier New;}{\f3\fnil\fcharset2\fprq2{\*\panose 02000500000000000000}Symbol;}{\f4\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Times;}{\f5\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Helvetica;}{\f6\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Courier;}{\f7\fnil\fcharset256\fprq2{\*\panose 020b0503030404040204}Geneva;}{\f8\froman\fcharset77\fprq2{\*\panose 00000000000000000000}Tms Rmn;}{\f9\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}Helv;}{\f10\froman\fcharset77\fprq2{\*\panose 00000000000000000000}MS Serif;}{\f11\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\fnil\fcharset256\fprq2{\*\panose 02020502060305060204}New York;}{\f13\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}System;}{\f14\fnil\fcharset2\fprq2{\*\panose 05020102010804080708}Wingdings;}{\f15\froman\fcharset256\fprq1{\*\panose 00000000000000000000}FE Roman font face;}{\f16\fmodern\fcharset256\fprq1{\*\panose 00000000000000000000}FE Modern font face;}{\f17\froman\fcharset256\fprq1{\*\panose 00000000000000000000}FE Truetype Roman font face;}{\f18\fmodern\fcharset256\fprq1{\*\panose 00000000000000000000}FE Truetype Modern font face;}{\f19\froman\fcharset77\fprq2{\*\panose 00000000000000000000}Century;}{\f20\fnil\fcharset256\fprq2{\*\panose 020b0a06030101010103}Abadi MT Condensed Extra Bold;}{\f21\fnil\fcharset256\fprq2{\*\panose 020b0306030101010103}Abadi MT Condensed Light;}{\f22\fnil\fcharset256\fprq2{\*\panose 020b0509000000000004}Andale Mono;}{\f23\fnil\fcharset256\fprq2{\*\panose 05000000000000000000}Animals 1;}{\f24\fnil\fcharset256\fprq2{\*\panose 020b0a04020102020204}Arial Black;}{\f25\fnil\fcharset256\fprq2{\*\panose 020b0506020202030204}Arial Narrow;}{\f26\fnil\fcharset256\fprq2{\*\panose 020f0704030504030204}Arial Rounded MT Bold;}{\f27\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde Bk BT;}{\f28\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde BkOb BT;}{\f29\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}AvantGarde Dm BT;}{\f30\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}AvantGarde DmOb BT;}{\f31\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde Md BT;}{\f32\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde MdOb BT;}{\f33\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}Balloons;}{\f34\fnil\fcharset256\fprq2{\*\panose 02020602080505020303}Baskerville Old Face;}{\f35\fnil\fcharset256\fprq2{\*\panose 04030905020b02020c02}Bauhaus 93;}{\f36\fnil\fcharset256\fprq2{\*\panose 02020503060305020303}Bell MT;}{\f37\fnil\fcharset256\fprq2{\*\panose 02050806060905020404}Bernard MT Condensed;}{\f38\fnil\fcharset256\fprq2{\*\panose 02040602050305030304}Book Antiqua;}{\f39\fnil\fcharset256\fprq2{\*\panose 02050604050505020204}Bookman Old Style;}{\f40\fnil\fcharset256\fprq2{\*\panose 04030b070d0b02020403}Braggadocio;}{\f41\fnil\fcharset256\fprq2{\*\panose 020b0903060703020204}Britannic Bold;}{\f42\fnil\fcharset256\fprq2{\*\panose 03060802040406070304}Brush Script MT;}{\f43\fnil\fcharset256\fprq2{\*\panose 02040603050505030304}Calisto MT;}{\f44\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Capitals;}{\f45\fnil\fcharset256\fprq2{\*\panose 020b0502020202020204}Century Gothic;}{\f46\fnil\fcharset256\fprq2{\*\panose 02040604050505020304}Century Schoolbook;}{\f47\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Charcoal;}{\f48\fnil\fcharset256\fprq2{\*\panose 020b0806080604040204}Chicago;}{\f49\fnil\fcharset256\fprq2{\*\panose 04020805060202030203}Colonna MT;}{\f50\fnil\fcharset256\fprq2{\*\panose 030f0702030302020204}Comic Sans MS;}{\f51\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}CommonBullets;}{\f52\fnil\fcharset256\fprq2{\*\panose 0208090404030b020404}Cooper Black;}{\f53\fnil\fcharset256\fprq2{\*\panose 020e0705020206020404}Copperplate Gothic Bold;}{\f54\fnil\fcharset256\fprq2{\*\panose 020e0507020206020404}Copperplate Gothic Light;}{\f55\fnil\fcharset256\fprq2{\*\panose 04020505020e03040504}Desdemona;}{\f56\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Disney Print;}{\f57\fnil\fcharset256\fprq2{\*\panose 02090707080505020304}Engravers MT;}{\f58\fnil\fcharset256\fprq2{\*\panose 020b0504020202050204}Eurostile;}{\f59\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}Festive;}{\f60\fnil\fcharset256\fprq2{\*\panose 0204060206030a020304}Footlight MT Light;}{\f61\fnil\fcharset256\fprq2{\*\panose 05000000000000000000}FrenchScript;}{\f62\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Gadget;}{\f63\fnil\fcharset256\fprq2{\*\panose 02020404030301010803}Garamond;}{\f64\fnil\fcharset256\fprq2{\*\panose 02040502050405020303}Georgia;}{\f65\fnil\fcharset256\fprq2{\*\panose 020b0a04020203020204}Gill Sans Ultra Bold;}{\f66\fnil\fcharset256\fprq2{\*\panose 02030808020601010101}Gloucester MT Extra Condensed;}{\f67\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}GME Title-Regular;}{\f68\fnil\fcharset256\fprq2{\*\panose 02020502050305020303}Goudy Old Style;}{\f69\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier 1;}{\f70\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier 2;}{\f71\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier Bd 1;}{\f72\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier Bd 2;}{\f73\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier BdIt 1;}{\f74\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier BdIt 2;}{\f75\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier It 1;}{\f76\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier It 2;}{\f77\fnil\fcharset256\fprq2{\*\panose 04040505050a02020702}Harrington;}{\f78\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Helvetica Black;}{\f79\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Helvetica Compressed;}{\f80\fnil\fcharset256\fprq2{\*\panose 020b0806030902050204}Impact;}{\f81\fnil\fcharset256\fprq2{\*\panose 04020605060303030202}Imprint MT Shadow;}{\f82\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso GI1 SILDoulosL;}{\f83\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso GI1 SILDoulosL I;}{\f84\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso If1 SILDoulosL;}{\f85\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso If1 SILDoulosL I;}{\f86\fnil\fcharset256\fprq2{\*\panose 03010101010101010101}Kidprint;}{\f87\fnil\fcharset256\fprq2{\*\panose 040307050d0c02020703}Kino MT;}{\f88\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Lucida Blackletter;}{\f89\fnil\fcharset256\fprq2{\*\panose 02040602050505020304}Lucida Bright;}{\f90\fnil\fcharset256\fprq2{\*\panose 03010101010101010101}Lucida Calligraphy;}{\f91\fnil\fcharset256\fprq2{\*\panose 02060602050505020204}Lucida Fax;}{\f92\fnil\fcharset256\fprq2{\*\panose 03010101010101010101}Lucida Handwriting;}{\f93\fnil\fcharset256\fprq2{\*\panose 020b0602030504020204}Lucida Sans;}{\f94\fnil\fcharset256\fprq2{\*\panose 020b0509030504030204}Lucida Sans Typewriter;}{\f95\fnil\fcharset256\fprq2{\*\panose 020b0602060201020203}Lydian MT;}{\f96\fnil\fcharset256\fprq2{\*\panose 03020802060602070202}Matura MT Script Capitals;}{\f97\fnil\fcharset256\fprq2{\*\panose 02040503050201020203}Minion Web;}{\f98\fnil\fcharset256\fprq2{\*\panose 03090702030407020403}Mistral;}{\f99\fnil\fcharset256\fprq2{\*\panose 02070704070505020303}Modern No. 20;}{\f100\fnil\fcharset256\fprq2{\*\panose 020b0509030404040204}Monaco;}{\f101\fnil\fcharset256\fprq2{\*\panose 03010101010201010101}Monotype Corsiva;}{\f102\fnil\fcharset2\fprq2{\*\panose 01010601010101010101}Monotype Sorts;}{\f103\fnil\fcharset256\fprq2{\*\panose 020b0509000000000004}Monotype.com;}{\f104\fnil\fcharset2\fprq2{\*\panose 02000500000000000000}MT Extra;}{\f105\fnil\fcharset256\fprq2{\*\panose 020b0504020203020204}News Gothic MT;}{\f106\fnil\fcharset256\fprq2{\*\panose 04050602080702020203}Onyx;}{\f107\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Palatino;}{\f108\fnil\fcharset256\fprq2{\*\panose 02020502060505020804}Perpetua Titling MT;}{\f109\fnil\fcharset256\fprq2{\*\panose 040506030a0602020202}Playbill;}{\f110\fnil\fcharset256\fprq2{\*\panose 02060603020205020403}Rockwell;}{\f111\fnil\fcharset256\fprq2{\*\panose 02060903040505020403}Rockwell Extra Bold;}{\f112\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Sand;}{\f113\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}SportsFigures;}{\f114\fnil\fcharset256\fprq2{\*\panose 040409050d0802020404}Stencil;}{\f115\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Swing;}{\f116\fnil\fcharset256\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f117\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Techno;}{\f118\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Textile;}{\f119\fnil\fcharset256\fprq2{\*\panose 020b0603020202020204}Trebuchet MS;}{\f120\fnil\fcharset256\fprq2{\*\panose 020b0604030504040204}Verdana;}{\f121\fnil\fcharset2\fprq2{\*\panose 05030102010509060703}Webdings;}{\f122\fnil\fcharset256\fprq2{\*\panose 020a0a07050505020404}Wide Latin;}{\f123\fnil\fcharset2\fprq2{\*\panose 05020102010507070707}Wingdings 2;}{\f124\fnil\fcharset2\fprq2{\*\panose 05040102010807070707}Wingdings 3;}{\f125\fnil\fcharset2\fprq2 Zapf Dingbats;}{\f126\fnil\fcharset256\fprq2{\*\panose 05000000000000000000}ZapfDingbats BT;}}{\*\ud{\fonttbl{\f0\fnil\fcharset256\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fnil\fcharset256\fprq2{\*\panose 020b0604020202020204}Arial;}{\f2\fnil\fcharset256\fprq2{\*\panose 02070309020205020404}Courier New;}{\f3\fnil\fcharset2\fprq2{\*\panose 02000500000000000000}Symbol;}{\f4\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Times;}{\f5\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Helvetica;}{\f6\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Courier;}{\f7\fnil\fcharset256\fprq2{\*\panose 020b0503030404040204}Geneva;}{\f8\froman\fcharset77\fprq2{\*\panose 00000000000000000000}Tms Rmn;}{\f9\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}Helv;}{\f10\froman\fcharset77\fprq2{\*\panose 00000000000000000000}MS Serif;}{\f11\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\fnil\fcharset256\fprq2{\*\panose 02020502060305060204}New York;}{\f13\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}System;}{\f14\fnil\fcharset2\fprq2{\*\panose 05020102010804080708}Wingdings;}{\f15\froman\fcharset256\fprq1{\*\panose 00000000000000000000}FE Roman font face;}{\f16\fmodern\fcharset256\fprq1{\*\panose 00000000000000000000}FE Modern font face;}{\f17\froman\fcharset256\fprq1{\*\panose 00000000000000000000}FE Truetype Roman font face;}{\f18\fmodern\fcharset256\fprq1{\*\panose 00000000000000000000}FE Truetype Modern font face;}{\f19\froman\fcharset77\fprq2{\*\panose 00000000000000000000}Century;}{\f20\fnil\fcharset256\fprq2{\*\panose 020b0a06030101010103}Abadi MT Condensed Extra Bold;}{\f21\fnil\fcharset256\fprq2{\*\panose 020b0306030101010103}Abadi MT Condensed Light;}{\f22\fnil\fcharset256\fprq2{\*\panose 020b0509000000000004}Andale Mono;}{\f23\fnil\fcharset256\fprq2{\*\panose 05000000000000000000}Animals 1;}{\f24\fnil\fcharset256\fprq2{\*\panose 020b0a04020102020204}Arial Black;}{\f25\fnil\fcharset256\fprq2{\*\panose 020b0506020202030204}Arial Narrow;}{\f26\fnil\fcharset256\fprq2{\*\panose 020f0704030504030204}Arial Rounded MT Bold;}{\f27\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde Bk BT;}{\f28\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde BkOb BT;}{\f29\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}AvantGarde Dm BT;}{\f30\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}AvantGarde DmOb BT;}{\f31\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde Md BT;}{\f32\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde MdOb BT;}{\f33\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}Balloons;}{\f34\fnil\fcharset256\fprq2{\*\panose 02020602080505020303}Baskerville Old Face;}{\f35\fnil\fcharset256\fprq2{\*\panose 04030905020b02020c02}Bauhaus 93;}{\f36\fnil\fcharset256\fprq2{\*\panose 02020503060305020303}Bell MT;}{\f37\fnil\fcharset256\fprq2{\*\panose 02050806060905020404}Bernard MT Condensed;}{\f38\fnil\fcharset256\fprq2{\*\panose 02040602050305030304}Book Antiqua;}{\f39\fnil\fcharset256\fprq2{\*\panose 02050604050505020204}Bookman Old Style;}{\f40\fnil\fcharset256\fprq2{\*\panose 04030b070d0b02020403}Braggadocio;}{\f41\fnil\fcharset256\fprq2{\*\panose 020b0903060703020204}Britannic Bold;}{\f42\fnil\fcharset256\fprq2{\*\panose 03060802040406070304}Brush Script MT;}{\f43\fnil\fcharset256\fprq2{\*\panose 02040603050505030304}Calisto MT;}{\f44\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Capitals;}{\f45\fnil\fcharset256\fprq2{\*\panose 020b0502020202020204}Century Gothic;}{\f46\fnil\fcharset256\fprq2{\*\panose 02040604050505020304}Century Schoolbook;}{\f47\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Charcoal;}{\f48\fnil\fcharset256\fprq2{\*\panose 020b0806080604040204}Chicago;}{\f49\fnil\fcharset256\fprq2{\*\panose 04020805060202030203}Colonna MT;}{\f50\fnil\fcharset256\fprq2{\*\panose 030f0702030302020204}Comic Sans MS;}{\f51\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}CommonBullets;}{\f52\fnil\fcharset256\fprq2{\*\panose 0208090404030b020404}Cooper Black;}{\f53\fnil\fcharset256\fprq2{\*\panose 020e0705020206020404}Copperplate Gothic Bold;}{\f54\fnil\fcharset256\fprq2{\*\panose 020e0507020206020404}Copperplate Gothic Light;}{\f55\fnil\fcharset256\fprq2{\*\panose 04020505020e03040504}Desdemona;}{\f56\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Disney Print;}{\f57\fnil\fcharset256\fprq2{\*\panose 02090707080505020304}Engravers MT;}{\f58\fnil\fcharset256\fprq2{\*\panose 020b0504020202050204}Eurostile;}{\f59\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}Festive;}{\f60\fnil\fcharset256\fprq2{\*\panose 0204060206030a020304}Footlight MT Light;}{\f61\fnil\fcharset256\fprq2{\*\panose 05000000000000000000}FrenchScript;}{\f62\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Gadget;}{\f63\fnil\fcharset256\fprq2{\*\panose 02020404030301010803}Garamond;}{\f64\fnil\fcharset256\fprq2{\*\panose 02040502050405020303}Georgia;}{\f65\fnil\fcharset256\fprq2{\*\panose 020b0a04020203020204}Gill Sans Ultra Bold;}{\f66\fnil\fcharset256\fprq2{\*\panose 02030808020601010101}Gloucester MT Extra Condensed;}{\f67\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}GME Title-Regular;}{\f68\fnil\fcharset256\fprq2{\*\panose 02020502050305020303}Goudy Old Style;}{\f69\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier 1;}{\f70\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier 2;}{\f71\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier Bd 1;}{\f72\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier Bd 2;}{\f73\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier BdIt 1;}{\f74\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier BdIt 2;}{\f75\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier It 1;}{\f76\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier It 2;}{\f77\fnil\fcharset256\fprq2{\*\panose 04040505050a02020702}Harrington;}{\f78\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Helvetica Black;}{\f79\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Helvetica Compressed;}{\f80\fnil\fcharset256\fprq2{\*\panose 020b0806030902050204}Impact;}{\f81\fnil\fcharset256\fprq2{\*\panose 04020605060303030202}Imprint MT Shadow;}{\f82\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso GI1 SILDoulosL;}{\f83\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso GI1 SILDoulosL I;}{\f84\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso If1 SILDoulosL;}{\f85\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso If1 SILDoulosL I;}{\f86\fnil\fcharset256\fprq2{\*\panose 03010101010101010101}Kidprint;}{\f87\fnil\fcharset256\fprq2{\*\panose 040307050d0c02020703}Kino MT;}{\f88\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Lucida Blackletter;}{\f89\fnil\fcharset256\fprq2{\*\panose 02040602050505020304}Lucida Bright;}{\f90\fnil\fcharset256\fprq2{\*\panose 03010101010101010101}Lucida Calligraphy;}{\f91\fnil\fcharset256\fprq2{\*\panose 02060602050505020204}Lucida Fax;}{\f92\fnil\fcharset256\fprq2{\*\panose 03010101010101010101}Lucida Handwriting;}{\f93\fnil\fcharset256\fprq2{\*\panose 020b0602030504020204}Lucida Sans;}{\f94\fnil\fcharset256\fprq2{\*\panose 020b0509030504030204}Lucida Sans Typewriter;}{\f95\fnil\fcharset256\fprq2{\*\panose 020b0602060201020203}Lydian MT;}{\f96\fnil\fcharset256\fprq2{\*\panose 03020802060602070202}Matura MT Script Capitals;}{\f97\fnil\fcharset256\fprq2{\*\panose 02040503050201020203}Minion Web;}{\f98\fnil\fcharset256\fprq2{\*\panose 03090702030407020403}Mistral;}{\f99\fnil\fcharset256\fprq2{\*\panose 02070704070505020303}Modern No. 20;}{\f100\fnil\fcharset256\fprq2{\*\panose 020b0509030404040204}Monaco;}{\f101\fnil\fcharset256\fprq2{\*\panose 03010101010201010101}Monotype Corsiva;}{\f102\fnil\fcharset2\fprq2{\*\panose 01010601010101010101}Monotype Sorts;}{\f103\fnil\fcharset256\fprq2{\*\panose 020b0509000000000004}Monotype.com;}{\f104\fnil\fcharset2\fprq2{\*\panose 02000500000000000000}MT Extra;}{\f105\fnil\fcharset256\fprq2{\*\panose 020b0504020203020204}News Gothic MT;}{\f106\fnil\fcharset256\fprq2{\*\panose 04050602080702020203}Onyx;}{\f107\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Palatino;}{\f108\fnil\fcharset256\fprq2{\*\panose 02020502060505020804}Perpetua Titling MT;}{\f109\fnil\fcharset256\fprq2{\*\panose 040506030a0602020202}Playbill;}{\f110\fnil\fcharset256\fprq2{\*\panose 02060603020205020403}Rockwell;}{\f111\fnil\fcharset256\fprq2{\*\panose 02060903040505020403}Rockwell Extra Bold;}{\f112\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Sand;}{\f113\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}SportsFigures;}{\f114\fnil\fcharset256\fprq2{\*\panose 040409050d0802020404}Stencil;}{\f115\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Swing;}{\f116\fnil\fcharset256\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f117\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Techno;}{\f118\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Textile;}{\f119\fnil\fcharset256\fprq2{\*\panose 020b0603020202020204}Trebuchet MS;}{\f120\fnil\fcharset256\fprq2{\*\panose 020b0604030504040204}Verdana;}{\f121\fnil\fcharset2\fprq2{\*\panose 05030102010509060703}Webdings;}{\f122\fnil\fcharset256\fprq2{\*\panose 020a0a07050505020404}Wide Latin;}{\f123\fnil\fcharset2\fprq2{\*\panose 05020102010507070707}Wingdings 2;}{\f124\fnil\fcharset2\fprq2{\*\panose 05040102010807070707}Wingdings 3;}{\f125\fnil\fcharset2\fprq2 Zapf Dingbats;}{\f126\fnil\fcharset256\fprq2{\*\panose 05000000000000000000}ZapfDingbats BT;}}}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar\adjustright \loch\af4\hich\af4\dbch\f4\cgrid \snext0 Normal;}{\s1\keepn\widctlpar\adjustright \b\fs36\kerning28\loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 heading 1;}{\s2\keepn\widctlpar\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 heading 2;}{\s3\keepn\widctlpar\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid \sbasedon0 \snext0 heading 3;}{\*\cs10 \additive Default Paragraph Font;}{\s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext15 Plain Text;}{\s16\sb200\widctlpar\tqr\tx6110\adjustright \fs20\lang1024\loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 \sautoupd toc 1;}{\s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid \sbasedon15 \snext17 Code;}{\s18\qj\fi180\widctlpar\tx1080\tx2160\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid \sbasedon17 \snext18 Generated Code;}{\s19\li240\widctlpar\tqr\tx6110\adjustright \fs20\lang1024\loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 \sautoupd toc 2;}{\s20\li480\widctlpar\adjustright \loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 \sautoupd toc 3;}{\s21\li720\widctlpar\adjustright \loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 \sautoupd toc 4;}{\s22\li960\widctlpar\adjustright \loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 \sautoupd toc 5;}{\s23\li1200\widctlpar\adjustright \loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 \sautoupd toc 6;}{\s24\li1440\widctlpar\adjustright \loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 \sautoupd toc 7;}{\s25\li1680\widctlpar\adjustright \loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 \sautoupd toc 8;}{\s26\li1920\widctlpar\adjustright \loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 \sautoupd toc 9;}}{\*\revtbl {Unknown;}}{\info{\title Small-C}{\author Mike Westerfield}{\operator Mike Westerfield}{\creatim\yr2000\mo11\dy1\hr17\min5}{\revtim\yr2000\mo11\dy1\hr17\min5}{\printim\yr2000\mo11\dy1\hr17\min5}{\version2}{\edmins0}{\nofpages95}{\nofwords17881}{\nofchars101926}{\*\company Byte Works, Inc.}{\nofcharsws125172}{\vern99}}\margl3060\margr3060\margt2880\margb2880 \widowctrl\ftnbj\aenddoc\formshade\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot \fet0\sectd \linex-32767\headery2520\footery2520\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\b\fs48 \par \par \par \hich\af4\dbch\af4\loch\f4 Small-C\par }{\fs28 \hich\af4\dbch\af4\loch\f4 A Compiler for ORCA/M\par }{\par }{\fs36 \par \par \par \par \par \hich\af4\dbch\af4\loch\f4 by Mike Westerfield\par }{\par }{\fs24 \par \par \par \par \par \par \hich\af4\dbch\af4\loch\f4 Copyright 1985\par }{{\pict{\*\picprop\shplid1025{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex35\picscaley35\piccropl0\piccropr0\piccropt0\piccropb0\picw438\pich176\picwgoal8760\pichgoal3520\macpict\bliptag-1229934158\blipupi72{\*\blipuid b6b0b1b2b2eba5eae05d25da145947cc}0e220000000100b001b7001102ff0c00ffffffff000100000000000001b7000000b000000000000000a0008200a0303900a0008e001e0001000a0000000002d00240009800380000000000b001b80000000100b001b70000000100b001b7000115e200011ffffb0006300600c0000003fd000060fc0018e200043fff80000cfe0006300600c0000003fd000060fc0018e20004380380000cfe0006300600c0000003fd000060fc0018e20004300180000cfe0006300600c0000003fd000060fc0018e20004300180000cfe0006300600c0000003fd000060fc0019e20004300180000cfe0007300600c00000030cfe000060fc0019e20004300180003ffe0007300600c00000030cfe000070fc001ce2001838038381bf0ffc00300600c7fc1ff30c0ff800787fc1ff00001ce200183fffc7c18c1ffe00380600cfff3ff30c1ffc007cffe3ff80001ce200183fffe7c18c1c0e003c0600cfff38030c1c1c007ce0e38180001ce200183f00e7c18c1806003e0600ce0730030c180c007cc0630180001ce200183e0067c18c1806003e0600cc0330030c1800007cc0630180001be200153e0067c18c1c0e003e0600cc033003ff9800007cc063fe001ce200183e0067c18e1ffe003e0600ce033803ff9ff8007ce0638000001ce200183e0067c18f1ffc003e0600cf033c03e38ffc007cf063c0000020e7000010fd00183e0067c18f9f00003e0600cf833e03e1807c007cf863e0000021e7001d18003fc0003e0067c18f9f00003e0600cf833e03e1807c007cf863e0000021e7001d180030c0003e0067818f9f00003e0600cf833e03e1807c007cf863e0000022e8001e030c3830c0003e0067018f9f00003e0600cf833e03e1807c007cf863e1800022e8001e060cfc30c0003e0066018f9f06003e0600cf833e03e1987c007cf863e1800022e8001e0c07cc3fc0003f00e6038f9f06003f0f01cfc73e03e1987c007cf863e18e0022e8001e1807063800003fffe7ff8f9ffe003fffffcfff3e03e19ffc007cf863ff8e0022e8001e3807023800001fffc3ff870ffc001fffff87fe1c01c187f800387061ff0e000fe800047c030338c0fd00010380ed000fe80004ce03c13fc0fd00010180ed0012ec00070200000187c1e180fc00010180ed0013ee000801480020000303e1f0fb00010180ed0015ef000930140024c0000001f0f0fc000203ff80ed0014ef000438e0000043fe0001f8f0fc000103ffec000eef00087b01ec02678000007ce4000eef00083c7a00201f8000003ce4000ff000050733e0000207fe00001ce4000cf0000607c7f80001610ce1000cf00006079e01090092dce1000cf00006033c8832041c7ce1000cf0000646e8004000823ce1000cf00006fddd20402005d0e1000df00007fbf5c4801040ccc0e2000df00007f7f13080120967e0e2000df000072f8121801020b2e0e2000df000075f7e8880108af1c0e20011f1000b07be65404032012880000262e50011f1000b07be85c26020457c80002777e50012f1000c077cf93000c1029c5c0077ff30e60012f1000c017b0d848a08278e7c003f9f70e60012f1000c02fc02d0100018ef280771e1e0e60012f1000c02f402c40001201f3007fdff76e60012f1000c1ce801008096341f9003afbdbee60012f1000c1de801626b1e4c0d9116fbf01ee60012f1000c3de8018180ecdc0f973dffedece60012f1000c39e80116003f5e0bcf3bf9680ce60013f1000d0bc4026c401f5f0bce1ff7656780e70013f1000d0bc403f8700fafd1cc1f9c1d9f80e70012f1000c0bc30fdbe067e7d3c873e3e063e60012f1000c73cefbe73e33f867e4ffc7f35fe60013f1000df3cfff22ff1bf7bde4dfaff9adc0e70013f1000d73dfe746ff99ffffe7ef0ff9e1c0e70013f1000d17d7ffc5ffddecece7edeff9fd80e70012f1000c17feff45ffcdfedfe1e80ffa3fe60012f1000c17afdbc5ffcdebffe0e56ffb7fe60013f1000d67b9ffc57fcdffffe17d87f1ddc0e70013f1000df7fbff457f5debede7e061e279c0e70012f1000cf3c17a46be99e8ffe7ff500f7ee60012f1000c73cbfe23453adf47e53dadadbee60012f1000c13e3ff21be33bfcfe4df400337e60012f1000c0bc87f908065ffa3cefdededefe60012f1000c0bc1879800cf7f2bcbfff89be8e60012f1000c19f2018c03deff53c1ffed77f8e60012f1000c79f251860fbcff97caf37edfbce60012f1000c7ce440c180fafff798fde9677ce60012f1000c3cb480807ff0fff397867f5f80e60012f1000c04f400b000297fe786013dafc0e60012f1000c0274008040d87fe72000b7fec0e60011f1000b0e7a012000013fcf0000d2e6e50011f1000b0d2e01301f160f0e45804ae0e50011f1000b3f1d86e060c0e01c79404be0e50011f1000b6c9178c0c1e0021cfd8055e0e50011f1000b3d2ac05081f16238fdb04dc0e50011f1000b2c46370101f980703c52d680e50011f1000b1466cec103f880703faceae0e50011f1000b33f339a103f804e47fe9f2f0e50011f1000b35f1870107f841cf7f86c970e50012f2000c07ebe0c68107f8039b7fff9560e50012f2000c06f86321808ff00f257fffed40e50012f2000c0703e79800dfe31e06bfffdf60e50012f2000c03afffc6007fc078c7dffa50b8e50011f1000be7ffc3801f01e5f78ffe84b8e50014f4000ee000002fe7e080000388ffdfff36b8e50015f5000f0178000077e37210003c18ffa7e598a0e50015f5000f021c00009fc6e00519c07cfff7efc2a0e50015f5000f030e0001bc03c23000039fffc7d864a0e50015f5000f03070002febde506023f0ffff5a016b8e50015f5000f01830002747cf01f0b850fffcc6808b8e50015f5000f01c18003827e84320f8fffffc4d00fb8e50015f5000f40e10000027f900007cdffff9c9c07a0e50015f5000f60718000027ffd2a2fff7fff8eb80fa0e50015f5000f703f00000366ef2e3fffbfff2fa80720e50015f5000f780a000003fdffdc3ffffffe9f980738e50015f500005cfe000b01f9ffe7de7f5ffc3ff00f78e50015f500000efe000b01ffdff6fe3ff7f2ff400f70e50016f6001010072000000e5ffffffc1fff55ff201e40e50016f600101803e0000007fde7ff6c1ffff3ff187e40e50016f600101c01c0000007bf5f7ffc1ffd5ffebffef0e50016f600101e0180000006fdadbffc1ffffff117fcf0e50016f600010701fe000b02dbbadffb3fffffe45afd60e50014f600010380fe000307ffc07ffdff02fe1679e40016f700020701c0fe00031ffe3f7ffdff03c1aafb80e50017f700020bc0f8fe000439f77fafeffeff03bcd6f3c0e50017f7000210e070fe00031d5dff9ffeff04fd5b4bf780e50016f70002187060fe000a0c78ffdfeffcfffeeda5ece40016f700021838c0fe000a077fffdfde78f1fec0a3dce40015f700010c18fd000a0dfdffdfce38e1f900239ee40015f700010e0cfd000a1c007f9f1e0003a1c02736e40015f700010708fd000a39edffaf180001e3c02660e40016f8000240038cfd000a3c081e3280ffe013d84cf0e40016f80002c001f8fd000a0f6560f10f01fe07dcc978e40016f80002c00050fd000a039d9df03ba60f8385b330e40015fa000201e0e0fb0009026061f1fedfe6601e4fe30015fa0002021160fb0009065f5e33fdefd3d8599fe30015fa0002021860fb0009062dbc07ff1769241a67e30015fa0002821830fb00090f81ff1ff0f7fd7f09c0e30016fb000301860c30fb00090e6dff3ffb5ffd1d87e0e30016fc00040103830c30fa00086932fff9b7fd4ec3e0e30016fc00040102c30c18fa00087562fde7b7f97fe3c0e30015fc00040380c3041efa0007fde1fefdebfa2f71e2001909081e0207800380c18438fa00081af9c1fdadf67ff0b8e30019091833060cc00580618c40fa000802fb98df2e0feff8fce300180838210e084001c060ccf900080397787d45fbfff87ce3001808586196186000c06030f900080306f03ba007f83c38e3001707186186186000c030f80008030ef03f2a00b01e30e3001707186186186000e03cf80008034ef03c9fc1e40e10e300170718618618600060e0f8000801dee0386037ca071be300150618618618600068f600075e7039800fdc071fe300160618618618600070f7000803bf3c7a4003d8078fe300160618210608400080f700081fbf9ef48009d4078ce30014041833060cc0f500080fbfc18b8002db0788e30014047e1e1f8780f5000806bfff730f0aee0f8ce3000ff00009035fffe73fc0729f4780e4000ff00009017ffdce7fe6783fc780e4000ef00008037efbcc7fe2bfffc7e3000ef00008077fbfacfff43fffc6e3000ef000083f7fff5cfff0bfffc6e3000ff000093f7fffdcfffb3fffc380e4000ff00009077effecfff02effc380e4000ff00009037fffac7ff2bfffc780e4000ff00009017f83ee7ff83ffdc780e4000ef00008017f3dd63fc5fc3fc4e3000ef00008037e06f60f81710fc4e3000ef000080fbc037b0028e6e78ee3000ef000081fbc01798005e7178fe3000ef000080ebc0154c0214c3b8fe3000ef0000801bc017a702ad4938fe3000def00075c025d900c580318e3000def00075e00fe6030c80310e3000ef0000801cf01eb9fc8e80618e3000ef0000801ef837e000020063ce3000ef0000803e7fcfbbe12b00c3ce3000ef0000803d7cfebc1e14c3c7ce3000def00071bbfdf808057f8c8e3000def000719ff9700440ff080e3000def000705ff6c002153f180e3000def000706ffbe000217e3c0e3000def00071a7daa000841c3e0e3000def00073f367400081b86c0e3000def0007389cfe00108f0c40e3000bee0005476b0004541ce2000bee0005b32a8080187ee2000bee0005f8e1000060dee2000cef000601c63b94c38384e2000cef000601830e40140780e2000cef00060103c0e08019c0e2000bee000503b80200f0c0e2000aee00040714800f28e1000aee0004041d6d9a10e10008ed0002082307e00008ed00020c08c2e0000000a0008f00a0008300ff}\par \sect }\sectd \sbkodd\linex-32767\headery2520\footery2520\endnhere\sectdefaultcl \pard\plain \s15\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\b\fs24 \hich\af4\dbch\af4\loch\f4 Table of Contents\par }\pard \s15\qj\widctlpar\adjustright {\par }\pard\plain \s16\sb200\widctlpar\tqr\tx6110\adjustright \fs20\lang1024\loch\af4\hich\af4\dbch\f4\cgrid {\field\fldedit{\*\fldinst \hich\af4\dbch\af4\loch\f4  TOC \\o "1-2" }{\fldrslt Chapter 1 - Introducing Small-C\tab {\field{\*\fldinst  PAGEREF _Toc497732445 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400340035000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 5}}\par \pard\plain \s19\li240\widctlpar\tqr\tx6110\adjustright \fs20\lang1024\loch\af4\hich\af4\dbch\f4\cgrid Who Should Use Small-C\tab {\field{\*\fldinst  PAGEREF _Toc497732446 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400340036000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 5}}\par Small-C and Full C\tab {\field{\*\fldinst  PAGEREF _Toc497732447 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400340037000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 6}}\par \pard\plain \s16\sb200\widctlpar\tqr\tx6110\adjustright \fs20\lang1024\loch\af4\hich\af4\dbch\f4\cgrid Chapter 2 - Setting Up Small-C\tab {\field{\*\fldinst  PAGEREF _Toc497732448 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400340038000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 9}}\par Chapter 3 - Small-C Tutorial\tab {\field{\*\fldinst  PAGEREF _Toc497732449 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400340039000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 11}}\par \pard\plain \s19\li240\widctlpar\tqr\tx6110\adjustright \fs20\lang1024\loch\af4\hich\af4\dbch\f4\cgrid The First Program\tab {\field{\*\fldinst  PAGEREF _Toc497732450 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400350030000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 11}}\par Functions\tab {\field{\*\fldinst  PAGEREF _Toc497732451 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400350031000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 12}}\par Global Variables\tab {\field{\*\fldinst  PAGEREF _Toc497732452 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400350032000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 12}}\par Local Variables and Parameters\tab {\field{\*\fldinst  PAGEREF _Toc497732453 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400350033000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 14}}\par Recursion\tab {\field{\*\fldinst  PAGEREF _Toc497732454 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400350034000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 15}}\par The if Statement\tab {\field{\*\fldinst  PAGEREF _Toc497732455 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400350035000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 16}}\par Looping Statements\tab {\field{\*\fldinst  PAGEREF _Toc497732456 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400350036000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 18}}\par The goto Statement\tab {\field{\*\fldinst  PAGEREF _Toc497732457 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400350037000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 20}}\par The switch Statement\tab {\field{\*\fldinst  PAGEREF _Toc497732458 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400350038000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 21}}\par break and continue\tab {\field{\*\fldinst  PAGEREF _Toc497732459 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400350039000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 22}}\par Arrays\tab {\field{\*\fldinst  PAGEREF _Toc497732460 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400360030000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 23}}\par Pointers\tab {\field{\*\fldinst  PAGEREF _Toc497732461 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400360031000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 24}}\par Expressions\tab {\field{\*\fldinst  PAGEREF _Toc497732462 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400360032000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 25}}\par Interfacing to Assembly Language\tab {\field{\*\fldinst  PAGEREF _Toc497732463 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400360033000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 27}}\par \pard\plain \s16\sb200\widctlpar\tqr\tx6110\adjustright \fs20\lang1024\loch\af4\hich\af4\dbch\f4\cgrid Chapter 4 - Small-C Reference Manual\tab {\field{\*\fldinst  PAGEREF _Toc497732464 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400360034000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 31}}\par \pard\plain \s19\li240\widctlpar\tqr\tx6110\adjustright \fs20\lang1024\loch\af4\hich\af4\dbch\f4\cgrid Lexical Issues\tab {\field{\*\fldinst  PAGEREF _Toc497732465 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400360035000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 31}}\par The Preprocessor\tab {\field{\*\fldinst  PAGEREF _Toc497732466 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400360036000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 33}}\par The Program\tab {\field{\*\fldinst  PAGEREF _Toc497732467 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400360037000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 36}}\par Variable Declarations\tab {\field{\*\fldinst  PAGEREF _Toc497732468 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400360038000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 36}}\par Function Declarations\tab {\field{\*\fldinst  PAGEREF _Toc497732469 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400360039000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 37}}\par The while Statement\tab {\field{\*\fldinst  PAGEREF _Toc497732470 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400370030000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 39}}\par The do-while Statement\tab {\field{\*\fldinst  PAGEREF _Toc497732471 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400370031000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 40}}\par The for Statement\tab {\field{\*\fldinst  PAGEREF _Toc497732472 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400370032000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 40}}\par The if Statement\tab {\field{\*\fldinst  PAGEREF _Toc497732473 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400370033000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 41}}\par The switch Statement\tab {\field{\*\fldinst  PAGEREF _Toc497732474 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400370034000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 41}}\par The goto Statement\tab {\field{\*\fldinst  PAGEREF _Toc497732475 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400370035000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 42}}\par The return Statement\tab {\field{\*\fldinst  PAGEREF _Toc497732476 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400370036000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 43}}\par break and continue\tab {\field{\*\fldinst  PAGEREF _Toc497732477 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400370037000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 44}}\par Compound Statements\tab {\field{\*\fldinst  PAGEREF _Toc497732478 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400370038000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 44}}\par Expressions\tab {\field{\*\fldinst  PAGEREF _Toc497732479 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400370039000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 45}}\par Collected Syntax\tab {\field{\*\fldinst  PAGEREF _Toc497732480 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400380030000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 46}}\par Libraries\tab {\field{\*\fldinst  PAGEREF _Toc497732481 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400380031000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 52}}\par \pard\plain \s16\sb200\widctlpar\tqr\tx6110\adjustright \fs20\lang1024\loch\af4\hich\af4\dbch\f4\cgrid Chapter 5 - The Compiler\tab {\field{\*\fldinst  PAGEREF _Toc497732482 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400380032000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 55}}\par \pard\plain \s19\li240\widctlpar\tqr\tx6110\adjustright \fs20\lang1024\loch\af4\hich\af4\dbch\f4\cgrid Basic Structure of a Compiler\tab {\field{\*\fldinst  PAGEREF _Toc497732483 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400380033000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 55}}\par Intermediate Code, P-code, and Native Code\tab {\field{\*\fldinst  PAGEREF _Toc497732484 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400380034000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 56}}\par Compiling the Compiler\tab {\field{\*\fldinst  PAGEREF _Toc497732485 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400380035000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 58}}\par The Small-C Compiler\tab {\field{\*\fldinst  PAGEREF _Toc497732486 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400380036000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 60}}\par Executive\tab {\field{\*\fldinst  PAGEREF _Toc497732487 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400380037000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 65}}\par Preprocessor\tab {\field{\*\fldinst  PAGEREF _Toc497732488 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400380038000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 67}}\par Scanner\tab {\field{\*\fldinst  PAGEREF _Toc497732489 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400380039000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 68}}\par Parser\tab {\field{\*\fldinst  PAGEREF _Toc497732490 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400390030000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 72}}\par Compiling Declarations\tab {\field{\*\fldinst  PAGEREF _Toc497732491 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400390031000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 73}}\par Compiling Functions\tab {\field{\*\fldinst  PAGEREF _Toc497732492 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400390032000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 75}}\par Compiling Statements\tab {\field{\*\fldinst  PAGEREF _Toc497732493 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400390033000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 76}}\par Compiling Expressions\tab {\field{\*\fldinst  PAGEREF _Toc497732494 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400390034000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 84}}\par Code Generation\tab {\field{\*\fldinst  PAGEREF _Toc497732495 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400390035000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 85}}\par The Intermediate Code Instruction Set\tab {\field{\*\fldinst  PAGEREF _Toc497732496 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400390036000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 90}}\par The Run Time Stack\tab {\field{\*\fldinst  PAGEREF _Toc497732497 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003700330032003400390037000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 92}}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid }}\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \sect }\sectd \sbkodd\linex-32767\headery2520\footery2520\endnhere\sectdefaultcl \pard\plain \s1\keepn\widctlpar\outlinelevel0\adjustright \b\fs36\kerning28\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732445}\hich\af4\dbch\af4\loch\f4 Chapter 1 - Introducing Small-C{\*\bkmkend _Toc497732445}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732446}\hich\af4\dbch\af4\loch\f4 Who Should Use Small-C{\*\bkmkend _Toc497732446}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Small-C is basically an integer-only subset of the popular C programming language. As such,\hich\af4\dbch\af4\loch\f4  it shares a number of the strengths and weaknesses of C. C is generally used as a systems programming language, for those applications where a high level language must be used, yet efficiency is still of the utmost importance.\par \par \hich\af4\dbch\af4\loch\f4 C shares many structural si\hich\af4\dbch\af4\loch\f4 milarities with modern block-structured languages like Pascal, yet there are a number of features from Fortran. Unlike Pascal, C makes no attempt to protect the programmer from his mistakes - and this is perhaps the most distinctive feature of the languag\hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4 . C assumes the programmer knows what he is doing, and lets him get away with murder You can write self modifying code with C, index outside of array bounds, access a real number as an integer, and in general do things which, if you are not careful, will \hich\af4\dbch\af4\loch\f4 g\hich\af4\dbch\af4\loch\f4 ive very unpredictable results. The other side of all that is that you can do some very clever things with C, cutting the size and execution times of a program significantly. C, then, is a language for experienced programmers who are willing to sacrifice \hich\af4\dbch\af4\loch\f4 s\hich\af4\dbch\af4\loch\f4 ome safety for the very best performance a compiler can give.\par \par \hich\af4\dbch\af4\loch\f4 Small-C is a subset of the full language. Specific differences will be discussed later. For someone writing production code, Small-C will be a risky choice. Small-C is primarily intended to fil\hich\af4\dbch\af4\loch\f4 l three needs:\par \par }\pard \s15\qj\fi360\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 1.\tab Small-C shows how to install a compiler in the ORCA/M environment, and thus serves as an example to compiler writers who would like to bring a compiler up on ORCA/M.\par \par \hich\af4\dbch\af4\loch\f4 2.\tab Small-C comes with source code, and is written in itself. This make\hich\af4\dbch\af4\loch\f4 s it a valuable tool for anyone who would like to learn more about compilers, or who needs to implement a special purpose language.\par \par \hich\af4\dbch\af4\loch\f4 3.\tab Small-C, while not a full implementation, will be useful to those needing a compiler until full languages are available \hich\af4\dbch\af4\loch\f4 on ORCA/M.\par }\pard \s15\qj\widctlpar\adjustright {\par \hich\af4\dbch\af4\loch\f4 If you fall into one of those categories, then Small-C is for you. If you do not, another compiler would probably be a better choice.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732447}\hich\af4\dbch\af4\loch\f4 Small-C and Full C{\*\bkmkend _Toc497732447}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 This section is intended for those who already know C. If you do not, skip it for now. Af\hich\af4\dbch\af4\loch\f4 ter learning Small-C, you can come back and reread this section to find out what the differences are between Small-C and full C.\par \par \hich\af4\dbch\af4\loch\f4 As was mentioned before, Small-C is basically an integer-only subset of C. Small-C only includes three data types: the integer\hich\af4\dbch\af4\loch\f4 , the character, and pointers to either of these. Pointers use two bytes of memory. Characters use one byte of memory. Two and four byte integers are available, although all math is done using four byte mathematics routines.\par \par \hich\af4\dbch\af4\loch\f4 The array is the only structur\hich\af4\dbch\af4\loch\f4 ed data type available. All arrays are singly subscripted. Arrays must be arrays of integers or characters - arrays of pointers are not allowed.\par \par \hich\af4\dbch\af4\loch\f4 Small-C allows functions, but does not recognize typed functions. In Small-C, all functions return integers. P\hich\af4\dbch\af4\loch\f4 assed parameters are allowed, and follow normal rules.\par \par \hich\af4\dbch\af4\loch\f4 Like full C, global variables can be defined anywhere in the program, so long as they are not inside of a function definition. Global variables are assigned fixed memory locations. They cannot be expl\hich\af4\dbch\af4\loch\f4 icitly initialized, but due to the fact that they are allocated space via the ORCA/M DS directive, all start out as zero.\par \par \hich\af4\dbch\af4\loch\f4 Functions are fully recursive, since local variables and passed parameters are allocated on a stack frame. Local variables are not in\hich\af4\dbch\af4\loch\f4 itialized in any way. All local variables must be defined before any statements in a function - it is not possible to define local variables within a compound statement.\par \par \hich\af4\dbch\af4\loch\f4 All of the statements from full C are available in Small-C.\par \par \hich\af4\dbch\af4\loch\f4 Almost all of the operat\hich\af4\dbch\af4\loch\f4 ors from full C are in small C. The direct selection operator (.) and the indirect selection operator (->) are missing, but have no use without structures, anyway. Casts are also missing, but again, have little use when only characters and integers are av\hich\af4\dbch\af4\loch\f4 a\hich\af4\dbch\af4\loch\f4 ilable. The sequential evaluation operator (,), the conditional operator (? :) and the assignment operators that combine an operation with the assignment statement (+= - *= /= %= <<= >>= &= |=) are the only missing operators that might have some use in Sm\hich\af4\dbch\af4\loch\f4 a\hich\af4\dbch\af4\loch\f4 ll-C.\par \par \hich\af4\dbch\af4\loch\f4 In the preprocessor, there are only two commands from full C, and both have additional restrictions imposed. The #include facility is restricted to using quotes around the file name, so-there is no default library directory. In addition, an included\hich\af4\dbch\af4\loch\f4  file is not allowed to use the #include directive to include another file. #define is available, but it cannot use parameters, so it is restricted to simple text substitutions.\par \par \hich\af4\dbch\af4\loch\f4 Small-C has a few minor additions to the full language, all of which can be a\hich\af4\dbch\af4\loch\f4 voided if portability is an issue. The first is the #asm-#endasm directives, allowing inline assembly language. The second is a list of directives to make interfacing with the ORCA environment a little easier.\par \par \sect }\sectd \sbkodd\linex-32767\headery2520\footery2520\endnhere\sectdefaultcl \pard\plain \s1\keepn\widctlpar\outlinelevel0\adjustright \b\fs36\kerning28\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732448}\hich\af4\dbch\af4\loch\f4 Chapter 2 - Setting Up Small-C{\*\bkmkend _Toc497732448}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Small-C is d\hich\af4\dbch\af4\loch\f4 esigned to fit right in to the ORCA language environment. It comes on two disks. The first disk, Small-C, contains the files needed to compile Small-C programs. The second disk, which contains source code, does not concern us for now. It is discussed in C\hich\af4\dbch\af4\loch\f4 h\hich\af4\dbch\af4\loch\f4 apter 5.\par \par \hich\af4\dbch\af4\loch\f4 The description that follows assumes that you have already initialized ORCA/M, and are reasonably familiar with that program.\par \par \hich\af4\dbch\af4\loch\f4 The first step is to copy the compiler to the language prefix. The language prefix is where you have the assembler and \hich\af4\dbch\af4\loch\f4 linker (ASM6502 and LINKER). On the original distribution disk, this was /ORCA/LANGUAGES. The compiler is called CC. For example, if you are using a copy of the original distribution disks for ORCA/M, type\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 COPY /SMALL.C/CC /ORCA/LANGUAGES\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The next step i\hich\af4\dbch\af4\loch\f4 s to install the command CC as a language name. This is done with the COMMANDS utility. After typing\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 COMMANDS\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 (and possibly putting the /UTILITIES disk online) you will see a list of the current command table. Create a new command called CC, and identify\hich\af4\dbch\af4\loch\f4  it as a language with a language number of 7. Exit the COMMANDS utility and execute SYSGEN. make some change - it really doesn't matter what - then change things back the way they were and exit SYSGEN, saving the new system back to your boot prefix. Refe\hich\af4\dbch\af4\loch\f4 r\hich\af4\dbch\af4\loch\f4  to the ORCA/M reference manual if you do not know how to use COMMANDS and SYSGEN.\par \par \hich\af4\dbch\af4\loch\f4 The third step is to move the subroutine libraries into place. The subroutine libraries are in a file. called A..SMALLC.A. Copy this file to the subroutine library prefix (\hich\af4\dbch\af4\loch\f4 /LIBRARY on the ORCA distribution disks) and use COMPRESS to alphabetize the libraries. This is an important step - if the libraries are not in alphabetical order, you will get link edit errors.\par \par \hich\af4\dbch\af4\loch\f4 There are three macro libraries * one of these should be on \hich\af4\dbch\af4\loch\f4 the current prefix when doing a compile. C.MACROS will cause Small-C to produce native code programs, which are much faster than the alternative. For that reason, you should probably start with C.MACROS. C.PCODE causes Small-C to generate P-code, and link\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 in an interpreter. For large programs, P-code will be much smaller than native code. To generate P-code programs, copy C.PCODE to the prefix that you will compile from and rename it to be C.MACROS. The last macro file is called C.ABSOLUTE. It also generat\hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4 s P-code programs, but is tailored for compiling large programs from floppy disks. It is discussed in Chapter 5. The subject of P-code vs. native code is discussed more fully in Chapter 5.\par \par \hich\af4\dbch\af4\loch\f4 with these steps completed, you are ready to start writing C progr\hich\af4\dbch\af4\loch\f4 ams. The next chapter is a brief tutorial introduction to Small-C. If you are new to C or ORCA, start there. If you are already familiar with both C and ORCA, you may want to skip to Chapter 4, which is a reference manual for the Small-C language.\par \par \sect }\sectd \sbkodd\linex-32767\headery2520\footery2520\endnhere\sectdefaultcl \pard\plain \s1\keepn\widctlpar\outlinelevel0\adjustright \b\fs36\kerning28\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732449}\hich\af4\dbch\af4\loch\f4 Chapte\hich\af4\dbch\af4\loch\f4 r 3 - Small-C Tutorial{\*\bkmkend _Toc497732449}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732450}\hich\af4\dbch\af4\loch\f4 The First Program{\*\bkmkend _Toc497732450}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 In this chapter, we will learn Small-C using a series of increasingly sophisticated examples. The pace will be fast - it is assumed that you already know assembly language, and are therefore a fairly advanced prog\hich\af4\dbch\af4\loch\f4 rammer. Those wishing a more gradual pace can consult any of the fine books now on the market that teach C programming.\par \par \hich\af4\dbch\af4\loch\f4 We'll start right in with a Small-C program, and look at what we did after it runs. The first step is to make sure that all of the init\hich\af4\dbch\af4\loch\f4 ialization from Chapter 2 has been performed. In particular, C.MACROS should be on the current prefix - i.e., you should see it when you catalog the disk.\par \par \hich\af4\dbch\af4\loch\f4 The first step will be to enter the program. Each file created by the editor is stamped with a langu\hich\af4\dbch\af4\loch\f4 age ID number. This number tells the operating system which compiler or assembler to use to compile the file. If you do nothing, the Small-C program will be stamped as an ASM6502 file - and the assembler will have no idea what to do with the Small-C progr\hich\af4\dbch\af4\loch\f4 a\hich\af4\dbch\af4\loch\f4 m. The first step, then, is to type CC. This tells the system that the next file created with the NEW command is a C program. Now enter the editor in the normal way and enter the following program exactly as it reads. Be sure and use lowercase letters!\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 #k\hich\af6\dbch\af4\loch\f6 eep "tryit" \par \hich\af6\dbch\af4\loch\f6 main () \par \{\hich\af6\dbch\af4\loch\f6 print("Hello, world ... \\r");\}\par \par \hich\af6\dbch\af4\loch\f6 print(str) \par \hich\af6\dbch\af4\loch\f6 char *str; \par \{\hich\af6\dbch\af4\loch\f6 while(*str)putchar(*str++);\}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Exit the editor and save the file using the file name PROG1. Then type RUN PROG1, just like you would for an assembly language program. Small-C wi\hich\af4\dbch\af4\loch\f4 ll compile the program, producing an assembly language file called TRYIT. The assembler will be called automatically to assemble the program, after which the link editor will create an executable file, also called TRYIT (deleting the intermediate code fil\hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4 , but it was no longer needed).\par \par \hich\af4\dbch\af4\loch\f4 Finally, the program will be executed, printing\par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 Hello, world ...\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 on the screen. If this did not happen, Small-C is not initialized properly. Review each of the steps from Chapter 2 and this section and make sure they are a\hich\af4\dbch\af4\loch\f4 ll\par \hich\af4\dbch\af4\loch\f4 done correctly,\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732451}\hich\af4\dbch\af4\loch\f4 Functions{\*\bkmkend _Toc497732451}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 it w ill be a while before we understand all of the features of that first program. The second routine, though, is a good one to keep around - it lets you write any string to the CRT. Incidentally, routines are called functio\hich\af4\dbch\af4\loch\f4 ns in C. This is because every subroutine returns a value - even if we do not ask it to. More on that later.\par \par \hich\af4\dbch\af4\loch\f4 For right now, it is important to learn the structure of C programs. Like assembly language with ORCA, C programs are made up of a series of progr\hich\af4\dbch\af4\loch\f4 am segments. Each has a name, which appears as the first token of the function. Right after the name is a parameter list. The parameter list is a series of names enclosed in parenthesis. Look at the first function, }{\fs18 \hich\af6\dbch\af4\loch\f6 main}{\hich\af4\dbch\af4\loch\f4 . Note that it has a set of parenthes\hich\af4\dbch\af4\loch\f4 is, even though there are no parameters. C requires the parenthesis, whether or not there are any parameters.\par \par \hich\af4\dbch\af4\loch\f4 After the function header, any parameters used in the header must be defined. In Small-C, the parameters must be defined in exactly the same orde\hich\af4\dbch\af4\loch\f4 r that they appear in the parameter list. The compiler does not check your work here, so be very careful! Finally, the function body appears. The function body starts with a t, and is followed by local variable definitions and a series of statements. The \hich\af4\dbch\af4\loch\f4 w\hich\af4\dbch\af4\loch\f4 hole thing finishes up with a \}.\par \par \hich\af4\dbch\af4\loch\f4 You may notice in the example above that the first function is called }{\fs18 \hich\af6\dbch\af4\loch\f6 main}{\hich\af4\dbch\af4\loch\f4 . Although things would have worked just fine if }{\fs18 \hich\af6\dbch\af4\loch\f6 main}{\hich\af4\dbch\af4\loch\f4  were the second function, it is critical that there be a function somewhere in the program cal\hich\af4\dbch\af4\loch\f4 led }{\fs18 \hich\af6\dbch\af4\loch\f6 main}{\hich\af4\dbch\af4\loch\f4 . The name must be spelled with lowercase letters. That function is the first one executed when your program starts.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732452}\hich\af4\dbch\af4\loch\f4 Global Variables{\*\bkmkend _Toc497732452}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 our second program will introduce the concept of global variables. It will be fairly simple, and a little contri\hich\af4\dbch\af4\loch\f4 ved. We will set a global variable to a value, then call a second function that will print that value by calling yet a third function. The third function is actually useful. It is called printint, and we will use it to print integers.\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 #keep "tryit"\par \hich\af6\dbch\af4\loch\f6 int i;\par \hich\af6\dbch\af4\loch\f6 main()\par \{\hich\af6\dbch\af4\loch\f6 i = 0;\par \hich\af6\dbch\af4\loch\f6 while (i < 20)\par \hich\af6\dbch\af4\loch\f6     \{doit();\par \hich\af6\dbch\af4\loch\f6     i++;\par \hich\af6\dbch\af4\loch\f6     \}\par \}\par \par \hich\af6\dbch\af4\loch\f6 doit ()\par \{\hich\af6\dbch\af4\loch\f6 printint(i); \par \hich\af6\dbch\af4\loch\f6 putchar('\\r');\par \}\par \par \hich\af6\dbch\af4\loch\f6 printint(i) \par \hich\af6\dbch\af4\loch\f6 long i; \par \{\hich\af6\dbch\af4\loch\f6 long den;\par \par \hich\af6\dbch\af4\loch\f6 if(i)\par \hich\af6\dbch\af4\loch\f6     \{if( i < 0 ) \par \hich\af6\dbch\af4\loch\f6         \{putchar('-');\par \hich\af6\dbch\af4\loch\f6         i = -1;\par \hich\af6\dbch\af4\loch\f6         \}\par \hich\af6\dbch\af4\loch\f6     den 1000000000;\par \hich\af6\dbch\af4\loch\f6 while(i < den) den = den/1\hich\af6\dbch\af4\loch\f6 0;\par \hich\af6\dbch\af4\loch\f6 while(den)\par \hich\af6\dbch\af4\loch\f6     \{putchar(i/den+'O');\par \hich\af6\dbch\af4\loch\f6     i = i%den;\par \hich\af6\dbch\af4\loch\f6     den = den/10;\par \hich\af6\dbch\af4\loch\f6     \}\par \hich\af6\dbch\af4\loch\f6 else putchar('O');\par \}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Type it in and run the program. There are several things to learn from this program. First, global variables are any variable defined outside of a function.\hich\af4\dbch\af4\loch\f4  These variables are available to any function. What about }{\fs18 \hich\af6\dbch\af4\loch\f6 printint}{\hich\af4\dbch\af4\loch\f4 ? It uses }{\fs18 \hich\af6\dbch\af4\loch\f6 i}{\hich\af4\dbch\af4\loch\f4  as a parameter. The answer is that local variables have precedence if they have the same name as a global variable. Note that a global variable does not have to be defined befor\hich\af4\dbch\af4\loch\f4 e the first function - it can be defined between two functions as well. The only restriction is that it must be defined before the first function that will use it. Unless there is good reason to do otherwise, it is probably a good idea to put global varia\hich\af4\dbch\af4\loch\f4 b\hich\af4\dbch\af4\loch\f4 le definitions at the start the program - you know, style.\par \par \hich\af4\dbch\af4\loch\f4 The global variable shown is an integer. You can tell this because the line that defined it starts with the reserved word }{\fs18 \hich\af6\dbch\af4\loch\f6 int}{\hich\af4\dbch\af4\loch\f4 . You can also define character variables by changing the keyword to ch\hich\af4\dbch\af4\loch\f4 ar. Instead of }{\fs18 \hich\af6\dbch\af4\loch\f6 int}{\hich\af4\dbch\af4\loch\f4 , you could also use }{\fs18 \hich\af6\dbch\af4\loch\f6 short}{\hich\af4\dbch\af4\loch\f4 . In Small-C, short integers and the default integer size are both two bytes long. To get a four byte integer, }{\fs18 \hich\af6\dbch\af4\loch\f6 long}{\hich\af4\dbch\af4\loch\f4  is used. The printint function defines }{\fs18 \hich\af6\dbch\af4\loch\f6 den}{\hich\af4\dbch\af4\loch\f4  and }{\fs18 \hich\af6\dbch\af4\loch\f6 i}{\hich\af4\dbch\af4\loch\f4  as long integers. More than one variable can be\hich\af4\dbch\af4\loch\f4  defined on a single line, too. To do that, just separate the variables by commas. The entire definition must be followed by a semicolon (as all C statements are).\par \par \hich\af4\dbch\af4\loch\f4 Incidentally, you don't need to worry about mixing data types. Small-C automatically conver\hich\af4\dbch\af4\loch\f4 ts two byte integers, characters and pointers to four byte integers before using the values.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732453}\hich\af4\dbch\af4\loch\f4 Local Variables and Parameters{\*\bkmkend _Toc497732453}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Local variable definitions look just like global variable definitions. The only difference is that a local variable is defined ins\hich\af4\dbch\af4\loch\f4 ide the function that it is local to. Only the function that defined the variable can use it. There are actually two kinds of local variables, since parameters are also local to the function that defines them.\par \par \hich\af4\dbch\af4\loch\f4 Passed parameters in C are always passed by v\hich\af4\dbch\af4\loch\f4 alue. That means that a function cannot change the value that is passed to it. (Later, we will see a way to get around this.) The parameter name must appear in two places. In the parameter list, the name of the parameter appears, with parameters listed in\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 the order in which they are specified when the function is called. After the parameter list and before the character that starts the function body, each of the parameters must be defined. The parameters must be defined in the same order that they appeared\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 in the parameter list! As seen in our examples, the actual definitions look just like global definitions.\par \par \hich\af4\dbch\af4\loch\f4 Local variable definitions come right after the opening [, but before any statements. Our examples show that these look just like global variable def\hich\af4\dbch\af4\loch\f4 initions as well. The only difference is that only the function where they are defined can use them.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732454}\hich\af4\dbch\af4\loch\f4 Recursion{\*\bkmkend _Toc497732454}\par }\pard\plain \s15\qj\keepn\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard \s15\qj\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 C is a recursive language. When a functions is called, it sets up a special area for all of the passed parameters and local variables. If the f\hich\af4\dbch\af4\loch\f4 unction calls itself, a second area is set up, and each of the parameters and local variables are redefined.\par \par \hich\af4\dbch\af4\loch\f4 A few sections ago, we said that all code segments are functions in C, and that they return a value. That means that a functions can be used in an\hich\af4\dbch\af4\loch\f4  expression. The return statement lets you return a value. The value to return appears right after the keyword }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 return}{\hich\af4\dbch\af4\loch\f4 . It can be left out - in that case, you still return from the function, but its value is not predictable. In either case, the return state\hich\af4\dbch\af4\loch\f4 ment ends with a semicolon. Also note that C is case sensitive, and that }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 return}{\hich\af4\dbch\af4\loch\f4  is written in lowercase! }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 RETURN}{\hich\af4\dbch\af4\loch\f4  or }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 Return}{\hich\af4\dbch\af4\loch\f4  will not work, only }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 return}{\hich\af4\dbch\af4\loch\f4 .\par \par \hich\af4\dbch\af4\loch\f4 The following example combines the new return statement with recursion to print the factorials that can b\hich\af4\dbch\af4\loch\f4 e represented by the four byte integer size supported by Small-C. The function }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 printint}{\hich\af4\dbch\af4\loch\f4  from our last example is used to print the values.\par \par }\pard\plain \s17\qj\fi180\keepn\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 #keep "tryit"\par \hich\af6\dbch\af4\loch\f6 main()\par \{\hich\af6\dbch\af4\loch\f6 long i;\par \par \hich\af6\dbch\af4\loch\f6 for\tab (i = 1; i <= 12; ++i) \par \hich\af6\dbch\af4\loch\f6     \{printint(i);\par \hich\af6\dbch\af4\loch\f6     putchar(' '); \par \hich\af6\dbch\af4\loch\f6     printint(factoria\hich\af6\dbch\af4\loch\f6 l(i)); \par \hich\af6\dbch\af4\loch\f6     putchar ('\\r');\par \hich\af6\dbch\af4\loch\f6     \}\par }\pard \s17\qj\fi180\widctlpar\adjustright {\}\par \par }\pard \s17\qj\fi180\keepn\widctlpar\adjustright {\hich\af6\dbch\af4\loch\f6 factorial(i) \par \hich\af6\dbch\af4\loch\f6 long i;\par \{\par \hich\af6\dbch\af4\loch\f6 if (i == 1) return 1; \par \hich\af6\dbch\af4\loch\f6 else return factorial(i-1)*i;\par }\pard \s17\qj\fi180\widctlpar\adjustright {\}\par \par }\pard \s17\qj\fi180\keepn\widctlpar\adjustright {\hich\af6\dbch\af4\loch\f6 printint(i)\par \hich\af6\dbch\af4\loch\f6 int i;\par \{\hich\af6\dbch\af4\loch\f6 long den;\par \par \hich\af6\dbch\af4\loch\f6 if(i)\par \hich\af6\dbch\af4\loch\f6     \{if(i < 0) \par \hich\af6\dbch\af4\loch\f6         \{putchar('-'); \par \hich\af6\dbch\af4\loch\f6         i = -1;\par \hich\af6\dbch\af4\loch\f6         \}\par \hich\af6\dbch\af4\loch\f6     den 1000000000;\par \hich\af6\dbch\af4\loch\f6     while(i < de\hich\af6\dbch\af4\loch\f6 n) den = den/10;\par \hich\af6\dbch\af4\loch\f6     while(den)\par \hich\af6\dbch\af4\loch\f6         \{putchar(i/den+'O');\par \hich\af6\dbch\af4\loch\f6         i = i%den;\par \hich\af6\dbch\af4\loch\f6         den = den/10;\par \hich\af6\dbch\af4\loch\f6         \}\par \hich\af6\dbch\af4\loch\f6     \}\par \hich\af6\dbch\af4\loch\f6 else putchar('O');\par \}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732455}\hich\af4\dbch\af4\loch\f4 The if Statement{\*\bkmkend _Toc497732455}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 We have already used the if statement in some of the program examples - now we will take the time \hich\af4\dbch\af4\loch\f4 to examine it in detail. Like most high level languages, the if statement is used to conditionally execute a statement. The }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 if}{\hich\af4\dbch\af4\loch\f4  keyword is followed by an expression, enclosed in parenthesis, and a statement. The expression is evaluated. If the value of the \hich\af4\dbch\af4\loch\f4 expression is not zero, the statement is executed. if the value of the expression is zero, the statement is not executed.\par \par \hich\af4\dbch\af4\loch\f4 There are several unique and important points here. First, all expressions used to evaluate a condition in C are enclosed in parenthe\hich\af4\dbch\af4\loch\f4 sis. Since the closing parenthesis marks the end of the condition, there is no need for a then keyword. Second, C does not have a Boolean variable. In fact, there is very little distinction between characters and integers. If a value is zero, C treats it \hich\af4\dbch\af4\loch\f4 a\hich\af4\dbch\af4\loch\f4 s being the same thing as false. If it is not zero, it is treated as being true. Also, an assignment statement is not a statement at all, but an expression, so you can assign a value inside of a condition.\par \par \hich\af4\dbch\af4\loch\f4 Here are the conditional operators in C, as well \hich\af4\dbch\af4\loch\f4 as what they test for:\par \par }\pard \s15\qj\li1080\keepn\widctlpar\tx2160\adjustright {\ul \hich\af4\dbch\af4\loch\f4 Operator}{\tab }{\ul \hich\af4\dbch\af4\loch\f4 Condition}{\par \par }\pard \s15\qj\li1080\widctlpar\tx2160\adjustright {\hich\af4\dbch\af4\loch\f4 <\tab less than \par \hich\af4\dbch\af4\loch\f4 >\tab greater than \par \hich\af4\dbch\af4\loch\f4 <=\tab less than or equal \par \hich\af4\dbch\af4\loch\f4 >=\tab greater than or equal \par \hich\af4\dbch\af4\loch\f4 ==\tab equal \par \hich\af4\dbch\af4\loch\f4 !=\tab not equal\par }\pard \s15\qj\widctlpar\adjustright {\par \hich\af4\dbch\af4\loch\f4 As a test of what was just said, consider the value of }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 var}{\hich\af4\dbch\af4\loch\f4  after the following statement is executed:\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 if (var\hich\af6\dbch\af4\loch\f6  = 4) var = var+1;\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The correct answer is 5. When the condition is evaluated, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 var}{\hich\af4\dbch\af4\loch\f4  is assigned the value 4. This is also the result of the expression, and since it is not zero, it is treated as being true, so one is added to }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 var}{\hich\af4\dbch\af4\loch\f4 . To get the effect that was \hich\af4\dbch\af4\loch\f4 probably intended, you would write\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 if (var == 4) var = var+1;\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Like Pascal, C if statements can be followed by an else clause. If the expression evaluates to zero, the statement after the else is executed. For example, using our print routine, the followi\hich\af4\dbch\af4\loch\f4 ng function will write out a Boolean value.\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 printbool(b)\par \hich\af6\dbch\af4\loch\f6 int b;\par \{\hich\af6\dbch\af4\loch\f6 if(b) print("true"); \par \hich\af6\dbch\af4\loch\f6 else print("false");\par \}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 If you are a Pascal programmer, there are two stumbling blocks here that a BASIC programmer may never have a problem with. The first is that str\hich\af4\dbch\af4\loch\f4 ings in C are surrounded by the " character, not the ' character. The ' character is reserved for character values, not string values. Character values are converted to their integer equivalent and act like integers in expressions. Strings cannot be used \hich\af4\dbch\af4\loch\f4 i\hich\af4\dbch\af4\loch\f4 n an expression at all. The other point is that each C statement ends with a semicolon, and that semicolon is required. In Pascal, the semicolon is not a statement terminator, it is a statement separator. In the function above, leaving out any one of the \hich\af4\dbch\af4\loch\f4 s\hich\af4\dbch\af4\loch\f4 emicolons would give an error.\par \par \par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732456}\hich\af4\dbch\af4\loch\f4 Looping Statements{\*\bkmkend _Toc497732456}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 There are three kinds of looping statements in C. The easiest is the while loop, which starts with the keyword while, is followed by a condition, and ends with a statement. Like the if statement, the co\hich\af4\dbch\af4\loch\f4 ndition is an expression enclosed in parenthesis. The condition is evaluated. If it is true (non-zero), the statement is executed and the process repeats. if it is false, the statement after the while loop is executed. For example, the following sequence \hich\af4\dbch\af4\loch\f4 w\hich\af4\dbch\af4\loch\f4 ill use our }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 printint}{\hich\af4\dbch\af4\loch\f4  function to count to 100.\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 main() \par \{\hich\af6\dbch\af4\loch\f6 int i;\par \par \hich\af6\dbch\af4\loch\f6 i = 1;\par \hich\af6\dbch\af4\loch\f6 while (i <= 100)\par \hich\af6\dbch\af4\loch\f6     \{printint(i);\par \hich\af6\dbch\af4\loch\f6     putchar('\\r');\par \hich\af6\dbch\af4\loch\f6     i++;\par \hich\af6\dbch\af4\loch\f6     \}\par \}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 How does the while loop ever finish? After all, it is the statement after the while loop that gets executed. The\hich\af4\dbch\af4\loch\f4  answer lies in the brackets that surround the three statements. This causes them to be considered as a block of statements, like }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 begin}{\hich\af4\dbch\af4\loch\f4 -}{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 end}{\hich\af4\dbch\af4\loch\f4  in Pascal. The effect is that the call to }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 printint,}{\hich\af4\dbch\af4\loch\f4  the call to }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 putchar}{\hich\af4\dbch\af4\loch\f4  and the assignment to }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 i}{\hich\af4\dbch\af4\loch\f4  are executed before \hich\af4\dbch\af4\loch\f4 the condition is retested. This is called a compound statement. A compound statement can be used anywhere that a simple statement can be used.\par \par \hich\af4\dbch\af4\loch\f4 The next looping statement is a lot like the first. The difference is that the condition is tested after the sta\hich\af4\dbch\af4\loch\f4 tement has been executed once, not before. It is called the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 do-while}{\hich\af4\dbch\af4\loch\f4  loop. Pascal programmers should note that the loop is re-executed if the condition is true, not if it is false. Our last example, written with the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 do-while}{\hich\af4\dbch\af4\loch\f4  loop, would be\par \par }\pard\plain \s17\qj\fi180\keepn\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 main() \par \{\hich\af6\dbch\af4\loch\f6 int i;\par \par \hich\af6\dbch\af4\loch\f6 i = 1;\par \hich\af6\dbch\af4\loch\f6 do\par \hich\af6\dbch\af4\loch\f6     \{printint(i);\par \hich\af6\dbch\af4\loch\f6     putchar('\\r');\par \hich\af6\dbch\af4\loch\f6     i++;\par \hich\af6\dbch\af4\loch\f6     \}\par \hich\af6\dbch\af4\loch\f6 while (i <= 100);\par \}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The only tricky thing to note is that the condition must be followed by a semicolon, due to the fact that there is no statement there.\par \par \hich\af4\dbch\af4\loch\f4 The last looping statement is the o\hich\af4\dbch\af4\loch\f4 ne that will probably be familiar in some form to everyone who has used a high level language. On the other hand, it is very different from what you may be used to. The for statement is used for repetitive looping in C. Our example, rewritten with a for s\hich\af4\dbch\af4\loch\f4 t\hich\af4\dbch\af4\loch\f4 atement, is\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 main()\par \{\hich\af6\dbch\af4\loch\f6 int i;\par \par \hich\af6\dbch\af4\loch\f6 for\tab (i = 1; i <= 100; i++)\par \hich\af6\dbch\af4\loch\f6     \{printint(i);\par \hich\af6\dbch\af4\loch\f6     putchar('/r');\par \hich\af6\dbch\af4\loch\f6     \}\par \}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The syntax is a bit odd, so let's look at it carefully. Inside the parenthesis are three expressions separated by semicolons. After the expressions is the\hich\af4\dbch\af4\loch\f4  statement that will be executed while the loop is looping. The first expression is executed once, as the loop starts. It is used to set up the loop. The next expression is a condition that determines when the loop will stop. The condition is tested befor\hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4  the statement is executed, so it is possible to have a for loop that does not execute the statement at all. After testing the termination condition, the statement is executed, and finally the last expression is evaluated. The last expression is used to u\hich\af4\dbch\af4\loch\f4 p\hich\af4\dbch\af4\loch\f4 date the loop counter.\par \par \hich\af4\dbch\af4\loch\f4 The uses for each of the expressions are simply accepted standard uses. There is really nothing to keep you from putting an expression in that has nothing to do with the for loop. For example, this function will do the same thing as\hich\af4\dbch\af4\loch\f4  the one shown above:\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 main() \par \{\hich\af6\dbch\af4\loch\f6 int i;\par \par \hich\af6\dbch\af4\loch\f6 for (i = 0; i < 100; printint(i))\par \hich\af6\dbch\af4\loch\f6     \{putchar('\\r');\par \hich\af6\dbch\af4\loch\f6     i++;\par \hich\af6\dbch\af4\loch\f6     \}\par \}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 In fact, the for loop in C is defined in terms of the while loop. The first for loop is exactly equivalent to our example at the start of the se\hich\af4\dbch\af4\loch\f4 ction that showed a while loop!\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732457}\hich\af4\dbch\af4\loch\f4 The goto Statement{\*\bkmkend _Toc497732457}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 C supports the goto statement found in most high level languages. It consists of the keyword }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 qoto}{\hich\af4\dbch\af4\loch\f4 , followed by a label and a semicolon. The next statement executed is the one after the label that is bran\hich\af4\dbch\af4\loch\f4 ched to. Labels in C look like identifiers - they must start with a character and be followed by alpha-numeric characters. Numeric labels are not allowed.\par \par \hich\af4\dbch\af4\loch\f4 To define the label, simply code it followed by a colon. The label must be followed by a statement! \hich\af4\dbch\af4\loch\f4 if you are branching to the end of a subroutine, as in the example below, use the null statement - which is simply a semicolon.\par \par \hich\af4\dbch\af4\loch\f4 Note that Small-C requires that the colon follow right after the label, with no intervening spaces.\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 main() \par \{\hich\af6\dbch\af4\loch\f6 int i;\par \par \hich\af6\dbch\af4\loch\f6 i = 0;\par \hich\af6\dbch\af4\loch\f6 st\hich\af6\dbch\af4\loch\f6 art: if (i >= 100) goto end;\par \hich\af6\dbch\af4\loch\f6 i++;\par \hich\af6\dbch\af4\loch\f6 printint(i);\par \hich\af6\dbch\af4\loch\f6 putchar('\\r');\par \hich\af6\dbch\af4\loch\f6 goto start;\par \hich\af6\dbch\af4\loch\f6 end:;\par \}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732458}\hich\af4\dbch\af4\loch\f4 The switch Statement{\*\bkmkend _Toc497732458}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The switch statement is C's answer to the case statement of Pascal or the computed goto of BASIC and FORTRAN. It actually works more like a computed go\hich\af4\dbch\af4\loch\f4 to than a case statement, but looks more like a case statement than a computed goto!\par \par \hich\af4\dbch\af4\loch\f4 Let's start by examining how a switch statement is with the keyword }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 switch}{\hich\af4\dbch\af4\loch\f4 , followed by an expression enclosed in parenthesis. This is followed by a single statement, whi\hich\af4\dbch\af4\loch\f4 ch is almost always a compound statement.\par \par \hich\af4\dbch\af4\loch\f4 When the switch statement is encountered, the expression is evaluated. C then branches to the case label that matches the value of the expression. A case label is the keyword }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 case}{\hich\af4\dbch\af4\loch\f4 , followed by a constant and a col\hich\af4\dbch\af4\loch\f4 on. Case labels are only allowed in the statement after a switch statement.\par \par \hich\af4\dbch\af4\loch\f4 If there is no matching case label, the statement after the expression is skipped, unless a default label is coded. A default label takes the form of the reserved word }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 default}{\hich\af4\dbch\af4\loch\f4  fol\hich\af4\dbch\af4\loch\f4 lowed by a colon. only one default label can be used in a given switch statement.\par \par \hich\af4\dbch\af4\loch\f4 Note that, in both the case label and the default label, Small-C requires that the colon follow the label immediately, with no intervening spaces.\par \par \hich\af4\dbch\af4\loch\f4 A very important point is\hich\af4\dbch\af4\loch\f4  that the switch statement simply does a goto when branching to the case label or default label. Try the example below, and note that the input number determines how many asterisks would be printed. The point is that there is no imbedded goto before a cas\hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4  label - execution simply falls through the remainder of the statement!\par \par }\pard\plain \s17\qj\fi180\keepn\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 main()\par \hich\af6\dbch\af4\loch\f6 (int i;\par \hich\af6\dbch\af4\loch\f6 for (i = 1 ; i < 6; i = i+1\}\par \hich\af6\dbch\af4\loch\f6     \{switch (I)\par \hich\af6\dbch\af4\loch\f6         \{default:\par \hich\af6\dbch\af4\loch\f6         case 4: putchar('*');\par \hich\af6\dbch\af4\loch\f6         case 3: putchar('*');\par \hich\af6\dbch\af4\loch\f6         case 2: putchar('*');\par \hich\af6\dbch\af4\loch\f6         case 1:\hich\af6\dbch\af4\loch\f6  putchar('*');\par \hich\af6\dbch\af4\loch\f6         \}\par \hich\af6\dbch\af4\loch\f6     putchar('\\r');\par \hich\af6\dbch\af4\loch\f6     \}\par }\pard \s17\qj\fi180\widctlpar\adjustright {\hich\af6\dbch\af4\loch\f6     \}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732459}\hich\af4\dbch\af4\loch\f4 break and continue{\*\bkmkend _Toc497732459}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The situation with the switch statement would be a bit discouraging were it not for two other C statements that save us from the goto. The break statement is simply the keyword }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 br\hich\af6\dbch\af4\loch\f6 eak}{\hich\af4\dbch\af4\loch\f4  followed by a semicolon. When used, it exits the while, do-while, for loop or the switch statement that it appears in. The continue statement is the keyword }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 continue}{\hich\af4\dbch\af4\loch\f4  followed by a semicolon. It can only be used in the looping statements (while, do-whil\hich\af4\dbch\af4\loch\f4 e and for). It causes execution to continue from the end of the loop.\par \par \hich\af4\dbch\af4\loch\f4 For example, we could rewrite the switch example as\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 main()\par \{\hich\af6\dbch\af4\loch\f6 int i;\par \par \hich\af6\dbch\af4\loch\f6 for (i = 1; i < 6; i = i+1)\par \hich\af6\dbch\af4\loch\f6     switch (i)\par \hich\af6\dbch\af4\loch\f6         \{default: \par \hich\af6\dbch\af4\loch\f6         case 4:  print("****\\r");\par \hich\af6\dbch\af4\loch\f6                  bre\hich\af6\dbch\af4\loch\f6 ak;\par \hich\af6\dbch\af4\loch\f6         case 3:  print("***\\r");\par \hich\af6\dbch\af4\loch\f6                  break;\par \hich\af6\dbch\af4\loch\f6         case 2:  print("**\\r"); \par \hich\af6\dbch\af4\loch\f6                  break; \par \hich\af6\dbch\af4\loch\f6         case 1:  print("*\\r");\par \hich\af6\dbch\af4\loch\f6         \}\par \}\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732460}\hich\af4\dbch\af4\loch\f4 Arrays{\*\bkmkend _Toc497732460}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Small C supports singly subscripted arrays. An array is defined by placing a pair of \hich\af4\dbch\af4\loch\f4 square brackets around the number of array elements needed, and putting this after the name of the array when it is defined. Arrays can be global, local, or passed as parameters. Note that when an array is passed as a parameter, it is always passed by ref\hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4 rence, not by value - this means that passed arrays are not recursive, and that if a function changes an array value, it is changed for the calling function as well! our example illustrates that principal.\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 #keep "tryit" \par \hich\af6\dbch\af4\loch\f6 main() \par \{\hich\af6\dbch\af4\loch\f6 int a[10];\par \par \hich\af6\dbch\af4\loch\f6 init(a);\par \hich\af6\dbch\af4\loch\f6 prin\hich\af6\dbch\af4\loch\f6 tarray(a);\par \}\par \par \hich\af6\dbch\af4\loch\f6 init (arr)\par \hich\af6\dbch\af4\loch\f6 int arr[];\par \{\hich\af6\dbch\af4\loch\f6 int i;\par \par \hich\af6\dbch\af4\loch\f6 for (i = 0; i < 10; ++i) arr[i] = i+'O';\par \}\par \par \hich\af6\dbch\af4\loch\f6 printarray(arr) \par \hich\af6\dbch\af4\loch\f6 int arr[]; \par \{\hich\af6\dbch\af4\loch\f6 int i;\par \par \hich\af6\dbch\af4\loch\f6 for (i = 0; i < 10; ++i)\par \hich\af6\dbch\af4\loch\f6     \{putchar(arr([i]); putchar('\\r');\}\par \}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Notice that the array was defined as a[10]. Later, we access t\hich\af4\dbch\af4\loch\f4 he element a[0]. That is fine, since all C arrays are indexed from 0. If you recall, though, we said that the value between the square brackets is the number of array elements. Note that it is not the highest legal array subscript! Trying to access a[10] \hich\af4\dbch\af4\loch\f4 w\hich\af4\dbch\af4\loch\f4 ill cause a great deal of trouble. a[9] is the highest legal subscript in our example.\par \par \hich\af4\dbch\af4\loch\f4 Also, notice that when an array is passed as a parameter, the integer between the square brackets is optional. C does not prohibit indexing outside of the legal bounds \hich\af4\dbch\af4\loch\f4 of an array, so even if a subscript is coded, it is ignored. The brackets let the function know that the parameter is an array; you can use whatever subscript you like.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732461}\hich\af4\dbch\af4\loch\f4 Pointers{\*\bkmkend _Toc497732461}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Perhaps the greatest strength of C is its remarkable pointer handling capabi\hich\af4\dbch\af4\loch\f4 lities. Small-C supports pointers to characters or integers. Like full C, the name of an array is also a pointer - it is basically a read only pointer pointing to the first element in the array.\par \par \hich\af4\dbch\af4\loch\f4 A pointer always requires two bytes of storage. When it is d\hich\af4\dbch\af4\loch\f4 efined, it appears as an asterisk followed by the name of the pointer. If we have defined\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 int *ptr;\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 then }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ptr}{\hich\af4\dbch\af4\loch\f4  refers to the current value of the pointer, and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 *ptr}{\hich\af4\dbch\af4\loch\f4  refers to the integer value that the pointer points to.\par \par \hich\af4\dbch\af4\loch\f4 It is legal to add, subtract, incre\hich\af4\dbch\af4\loch\f4 ment and decrement pointers. When a pointer is a pointer to a character (which requires one byte of storage), these operations are identical to the same operations on an integer. When the pointer is a pointer to an integer (which requires two bytes of sto\hich\af4\dbch\af4\loch\f4 r\hich\af4\dbch\af4\loch\f4 age), the amount to change the pointer by is first multiplied by two. For long integers, the pointer would be changed by four, rather than two. Thus, adding one to a pointer will cause it to point to the next data element of the kind that it points to.\par \par \hich\af4\dbch\af4\loch\f4 Th\hich\af4\dbch\af4\loch\f4 is makes pointers work a great deal like arrays, and C in fact allows array and pointer accessing in much the same way. In C, if }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ptr}{\hich\af4\dbch\af4\loch\f4  is a pointer, or the name of an array, then }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ptr+4 }{\hich\af4\dbch\af4\loch\f4 is completely equivalent to }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ptr[4]}{\hich\af4\dbch\af4\loch\f4 .\par \par }\pard\plain \widctlpar\adjustright \loch\af4\hich\af4\dbch\f4\cgrid {\fs20 \hich\af4\dbch\af4\loch\f4 An additional operator which is a gr\hich\af4\dbch\af4\loch\f4 eat help is the & operator. When any identifier is preceded by a &, the value is the address of the location where the value is stored, not the value itself. For example, assuming }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ptr}{\fs20 \hich\af4\dbch\af4\loch\f4  is still a pointer to an integer, the following is equivalent to }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 i = i*2}{\fs20 \hich\af4\dbch\af4\loch\f4 .\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 ptr = &i; \par \hich\af6\dbch\af4\loch\f6 ptr[01 = *ptr*2;\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732462}\hich\af4\dbch\af4\loch\f4 Expressions{\*\bkmkend _Toc497732462}\par }\pard\plain \s15\qj\keepn\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard \s15\qj\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 Up to now, we have pretty much ignored the exact representation of an expression in C. This is because they work pretty much like expressions in other high level languages. Other than the pointer operators & and\hich\af4\dbch\af4\loch\f4  *, and the fact that = is an operator in an expression, things work very much like BASIC, Pascal and FORTRAN.\par \par \hich\af4\dbch\af4\loch\f4 The use of the = operator has been alluded to , but never fully explained. In C, the = operator requires an l-value on the left, and an expressi\hich\af4\dbch\af4\loch\f4 on on the right. An l-value is basically the C term for something that you can assign a value to. For example, 4 is not an l-value - you cannot change a constant. A variable, pointer, or array element, however, is an l-value, since values can be assigned \hich\af4\dbch\af4\loch\f4 t\hich\af4\dbch\af4\loch\f4 o all of these.\par \par \hich\af4\dbch\af4\loch\f4 Note that, since the = operator is an operator, a = 4 is an expression. Also note that the = operator is followed by another expression. That means that\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 a = b = c = d = e = 0;\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 is perfectly legal in C - all of the variables are set to zer\hich\af4\dbch\af4\loch\f4 o. It is also more efficient than five separate assignment statements.\par \par \hich\af4\dbch\af4\loch\f4 All expressions in C return a value. Thinking about how the above example must work, it is clear that the value of an expression containing an assignment operator is the value of the e\hich\af4\dbch\af4\loch\f4 xpression to the right of the = character.\par \par \hich\af4\dbch\af4\loch\f4 Other than those covered so far, the only really new operators in C are the increment and decrement operators. If an l-value is preceded by a ++, it is incremented, and the incremented value is returned. Followin\hich\af4\dbch\af4\loch\f4 g an l-value by a ++ still increments the l-value, but the value used in the expression is the original value. For example:\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 /* sample 1: */\par \hich\af6\dbch\af4\loch\f6 i = 5;\par \hich\af6\dbch\af4\loch\f6 a  = i++;\par \par \hich\af6\dbch\af4\loch\f6 /* sample 2: */\par \hich\af6\dbch\af4\loch\f6 i = 5;\par \hich\af6\dbch\af4\loch\f6 a = ++i;\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 In both samples, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 i}{\hich\af4\dbch\af4\loch\f4  ends up with the value 6. In the second sampl\hich\af4\dbch\af4\loch\f4 e, so does }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 a}{\hich\af4\dbch\af4\loch\f4  - but the first case will not set }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 a}{\hich\af4\dbch\af4\loch\f4  to 5, since the increment occurs after }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 i}{\hich\af4\dbch\af4\loch\f4  is used the expression.\par \par \hich\af4\dbch\af4\loch\f4 The }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 --}{\hich\af4\dbch\af4\loch\f4  decrement operator works like the increment operator, except that the value is decremented.\par \par \hich\af4\dbch\af4\loch\f4 Incrementing or decrementing a pointer to\hich\af4\dbch\af4\loch\f4  an integer will change its value by two, so that the pointer points to the next (or last) integer, not the next byte. Incrementing or decrementing a pointer to a long integer changes the pointer by four.\par \par \hich\af4\dbch\af4\loch\f4 Below are all of the operators available in C. The\hich\af4\dbch\af4\loch\f4  precedence tells which operator is evaluated first - precedence is what cause }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 1+2*3}{\hich\af4\dbch\af4\loch\f4  to be 7, instead of 9. Parenthesis can be used in the normal way to override operator precedence, so}{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6  (1+2)*3}{\hich\af4\dbch\af4\loch\f4  is indeed 9.\par \par }\pard \s15\fi-2880\li3240\keepn\widctlpar\tx1800\adjustright {\ul \hich\af4\dbch\af4\loch\f4 Operator}{\tab }{\ul \hich\af4\dbch\af4\loch\f4 Precedence}{\hich\af4\dbch\af4\loch\f4  \tab }{\ul \hich\af4\dbch\af4\loch\f4 Description}{\par \par \hich\af4\dbch\af4\loch\f4 -\tab 1\tab unary minu\hich\af4\dbch\af4\loch\f4 s\par \hich\af4\dbch\af4\loch\f4 !\tab 1\tab logical negation\par \hich\af4\dbch\af4\loch\f4 ~\tab 1\tab bitwise negation\par \hich\af4\dbch\af4\loch\f4 *\tab 2\tab integer multiplication\par \hich\af4\dbch\af4\loch\f4 /\tab 2\tab integer division\par \hich\af4\dbch\af4\loch\f4 %\tab 2\tab integer modulus\par \hich\af4\dbch\af4\loch\f4 +\tab 3\tab integer addition\par \hich\af4\dbch\af4\loch\f4 -\tab 3\tab integer subtraction\par \hich\af4\dbch\af4\loch\f4 <<\tab 4\tab bit shift left ("multiplies" by powers of 2)\par \hich\af4\dbch\af4\loch\f4 >>\tab 4\tab bit shift right ("divides" by powers of 2)\par \hich\af4\dbch\af4\loch\f4 <\tab \hich\af4\dbch\af4\loch\f4 5\tab test for less than\par \hich\af4\dbch\af4\loch\f4 >\tab 5\tab test for greater than\par \hich\af4\dbch\af4\loch\f4 <=\tab 5\tab test for less than or equal\par \hich\af4\dbch\af4\loch\f4 >=\tab 5\tab test for greater than or equal\par \hich\af4\dbch\af4\loch\f4 ==\tab 6\tab test for equality\par \hich\af4\dbch\af4\loch\f4 !=\tab 6\tab test for not equal\par \hich\af4\dbch\af4\loch\f4 &\tab 7\tab bitwise and\par \hich\af4\dbch\af4\loch\f4 ^\tab 8\tab bitwise exclusive or\par \hich\af4\dbch\af4\loch\f4 |\tab 9\tab bitwise or\par \hich\af4\dbch\af4\loch\f4 &&\tab 10\tab logical and\par \hich\af4\dbch\af4\loch\f4 ||\tab 11\tab logical or\par \hich\af4\dbch\af4\loch\f4 =\tab \hich\af4\dbch\af4\loch\f4 12\tab assignment\par }\pard \s15\qj\keepn\widctlpar\adjustright {\par }\pard \s15\qc\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 Table of C Operators\par }\pard \s15\qj\widctlpar\adjustright {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732463}\hich\af4\dbch\af4\loch\f4 Interfacing to Assembly Language{\*\bkmkend _Toc497732463}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Interfacing to assembly language with Small-C is actually quite simple. To call an assembly language function from Small-C, simply code a function call just as if you were calling a Sm\hich\af4\dbch\af4\loch\f4 all-C function, but don't include the function in the C part of the program. The compiler assumes that the linker will find the function. (Note: this is different from full C, where the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 extern}{\hich\af4\dbch\af4\loch\f4  qualifier is needed to prevent the compiler from flagging an er\hich\af4\dbch\af4\loch\f4 ror.)\par \par \hich\af4\dbch\af4\loch\f4 The assembly language part of your program can be appended right onto the end of the C part. The last include directive in the C program should point to the. assembly language file. The compiler will recognize that the file is not a C file due to th\hich\af4\dbch\af4\loch\f4 e language identification number, and pass control on to the assembler.\par \par \hich\af4\dbch\af4\loch\f4 The subroutines that are actually being called should start with NOP instructions. The NOP happens to correspond to the P-code that means "switch from executing P-code to executing na\hich\af4\dbch\af4\loch\f4 tive code." A jump to SYSCRET returns control to the C function that called you. A subroutine written this way will work with either native code or p-code.\par \par \hich\af4\dbch\af4\loch\f4 Global variables defined within the C program can be accessed from any assembly language subroutine\hich\af4\dbch\af4\loch\f4  that has a USING SYSCCOM directive. The assembly language subroutine can read or write any of these values.\par \hich\af4\dbch\af4\loch\f4 21\par \par \hich\af4\dbch\af4\loch\f4 Accessing passed parameters is a little more difficult. At $98 is a pointer which points to the top of the evaluation stack. The pointer points\hich\af4\dbch\af4\loch\f4  to the last used byte. Each parameter requires four bytes of storage. They are stacked in the same order that they were coded. Integers, characters and pointers are passed by value - the number on the stack is the actual value of the integer, character o\hich\af4\dbch\af4\loch\f4 r\hich\af4\dbch\af4\loch\f4  pointer. Arrays and strings are passed by reference - the address of the first element of the array or of the first character of the string is passed. (Strings appear in memory as a series of ASCII characters followed by a $00 byte.) All stacked values a\hich\af4\dbch\af4\loch\f4 r\hich\af4\dbch\af4\loch\f4 e four byte integers. The stack itself starts at a high memory value and builds down, much like the hardware stack on the 6502.\par \par \hich\af4\dbch\af4\loch\f4 Finally, the assembly language routine may want to return a value. To do this, simply place the return value on top of the stac\hich\af4\dbch\af4\loch\f4 k before the jump to SYSCRET. Remember - the value must be a four byte value. For example, the following assembly language subroutine implements a search for a character in a string. A call from C might look like\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 location = search ("This is a test string"\hich\af6\dbch\af4\loch\f6 ,'s',14);\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The search starts at the value specified by the integer, and the string is searched for the character. If it is found, the location is returned, otherwise a zero is returned. The assembly language function is:\par \par }\pard\plain \s17\qj\fi180\keepn\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 **********************************\hich\af6\dbch\af4\loch\f6 ******************\par \hich\af6\dbch\af4\loch\f6 *\par \hich\af6\dbch\af4\loch\f6 *  SEARCH - Search a String for a Character\par \hich\af6\dbch\af4\loch\f6 *\par \hich\af6\dbch\af4\loch\f6 *  Inputs:\par \hich\af6\dbch\af4\loch\f6 *        TOS-2 - address of string\par \hich\af6\dbch\af4\loch\f6 *        TOS-1 - character to search for\par \hich\af6\dbch\af4\loch\f6 *        TOS - start location\par \hich\af6\dbch\af4\loch\f6 *\par \hich\af6\dbch\af4\loch\f6 *  Outputs:\par \hich\af6\dbch\af4\loch\f6 *        SEARCH - location of character\par \hich\af6\dbch\af4\loch\f6 *\par \hich\af6\dbch\af4\loch\f6 *  Notes:\par \hich\af6\dbch\af4\loch\f6 *     \hich\af6\dbch\af4\loch\f6    Limited to 255 character strings\par \hich\af6\dbch\af4\loch\f6 *\par \hich\af6\dbch\af4\loch\f6 ****************************************************\par }\pard \s17\qj\fi180\widctlpar\adjustright {\hich\af6\dbch\af4\loch\f6 *\par \hich\af6\dbch\af4\loch\f6 SEARCH    START\par \hich\af6\dbch\af4\loch\f6 STP       EQU   $98          STACK POINTER\par \hich\af6\dbch\af4\loch\f6 DISP      EQU   $02          ADDR OF STRING\par \hich\af6\dbch\af4\loch\f6 CH        EQU   $06          CHARACTER TO SEARCH FOR\par \hich\af6\dbch\af4\loch\f6 STAD   \hich\af6\dbch\af4\loch\f6    EQU   $OA          START DISP FOR SEARCH\par \par \hich\af6\dbch\af4\loch\f6           NOP                SWITCH TO ASSEMBLY\par }\pard \s17\qj\widctlpar\adjustright {\hich\af6\dbch\af4\loch\f6             MOVE  (STP),DISP,#12 RECOVER PASSED PARMS\par }\pard \s17\qj\fi180\widctlpar\adjustright {\hich\af6\dbch\af4\loch\f6           LDY   #0           SKIP TO START POINTr\par \hich\af6\dbch\af4\loch\f6           LDX   DISP          QUITTING IF IT IS PAST\par \hich\af6\dbch\af4\loch\f6       \hich\af6\dbch\af4\loch\f6     BEQ   LB2           THE END OF THE STRING\par \hich\af6\dbch\af4\loch\f6 LB1       LDA   (STAD),Y\par \hich\af6\dbch\af4\loch\f6           BEQ   NOPE\par \hich\af6\dbch\af4\loch\f6           INY\par \hich\af6\dbch\af4\loch\f6           DEX\par \hich\af6\dbch\af4\loch\f6           BNE   LB1\par \hich\af6\dbch\af4\loch\f6 LB2       LDA   (STAD),Y     QUIT IF AT END OF STRING\par \hich\af6\dbch\af4\loch\f6           BEQ   NOPE\par \hich\af6\dbch\af4\loch\f6           CMP   CH           CHECK FOR MA\hich\af6\dbch\af4\loch\f6 TCH\par \hich\af6\dbch\af4\loch\f6           BEQ   MATCH\par \hich\af6\dbch\af4\loch\f6           INY\tab \tab   CHECK NEXT CHAR\par \hich\af6\dbch\af4\loch\f6           BNE   LB2\par \hich\af6\dbch\af4\loch\f6 NOPE      LDY   #$FF\tab   MATCH NOT FOUND ->\par \hich\af6\dbch\af4\loch\f6 !                             RETURN 0\par \hich\af6\dbch\af4\loch\f6 MATCH     INY\tab \tab   MATCH FOUND ->\par \hich\af6\dbch\af4\loch\f6           TYA                 RETURN LOCATION\par \hich\af6\dbch\af4\loch\f6           LDY   #0\par \hich\af6\dbch\af4\loch\f6           STA   (STP),Y\par \hich\af6\dbch\af4\loch\f6           TYA\par \hich\af6\dbch\af4\loch\f6           INY\par \hich\af6\dbch\af4\loch\f6           STA   (STP),Y\par \hich\af6\dbch\af4\loch\f6           INY                UPDATE STACK POINTER\par \hich\af6\dbch\af4\loch\f6           STA   (STP),Y\par \hich\af6\dbch\af4\loch\f6           INY\par \hich\af6\dbch\af4\loch\f6           STA   (STP),Y\par \hich\af6\dbch\af4\loch\f6           JMP   SYSCRET      RETURN TO C PROGRAM\par \hich\af6\dbch\af4\loch\f6           END\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 In \hich\af4\dbch\af4\loch\f4 addition to calling assembly language subroutines from Small-C, it is also possible to insert assembly language statements in line in a C function. To do this, code the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 #asm}{\hich\af4\dbch\af4\loch\f4  directive. This is followed by the assembly language statements. To switch back to\par \par \hich\af4\dbch\af4\loch\f4 C, code the #endasm directive. Generally, this should only be done if native code is being used. If p-code macros are being used, it will be necessary to write the assembly language portion using the intermediate code instruction set, described in chapte\hich\af4\dbch\af4\loch\f4 r 5.\par \par \hich\af4\dbch\af4\loch\f4 As an example, the following functions sets up high resolution graphics by clearing the screen and setting the pen position (x and y) to 0.\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 initgraph()\par \{\par \hich\af6\dbch\af4\loch\f6 x = x = 0;                     /* initialize cursor */\par \hich\af6\dbch\af4\loch\f6 #asm                           /* clear \hich\af6\dbch\af4\loch\f6 screen */\par \hich\af6\dbch\af4\loch\f6           LDA   #$20\par \hich\af6\dbch\af4\loch\f6           STA   1\par \hich\af6\dbch\af4\loch\f6           LDA   #0\par \hich\af6\dbch\af4\loch\f6           STA   0\par \hich\af6\dbch\af4\loch\f6           TAY\par \hich\af6\dbch\af4\loch\f6 LB1       STA   (0),Y\par \hich\af6\dbch\af4\loch\f6           INC   0\par \hich\af6\dbch\af4\loch\f6           BNE   LB1\par \hich\af6\dbch\af4\loch\f6           INC   1\par \hich\af6\dbch\af4\loch\f6           LDX   1\par \hich\af6\dbch\af4\loch\f6           CPX   #$40\par \hich\af6\dbch\af4\loch\f6           BNE   LB1\par \hich\af6\dbch\af4\loch\f6 #endasm\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \sect }\sectd \sbkodd\linex-32767\headery2520\footery2520\endnhere\sectdefaultcl \pard\plain \s1\keepn\widctlpar\outlinelevel0\adjustright \b\fs36\kerning28\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732464}\hich\af4\dbch\af4\loch\f4 Chapter 4\hich\af4\dbch\af4\loch\f4  - Small-C Reference Manual{\*\bkmkend _Toc497732464}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732465}\hich\af4\dbch\af4\loch\f4 Lexical Issues{\*\bkmkend _Toc497732465}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Small-C programs, like those of most high level languages, are written as a series of tokens. Each token is a unit of information, analogous to words or punctuation marks in English.\par \par \hich\af4\dbch\af4\loch\f4 All of the "words" that are\hich\af4\dbch\af4\loch\f4  predefined are written entirely in lowercase letters. This is a requirement of C - the language is case sensitive, and so does not recognize "A" and "a" as being the same character.\par \par \hich\af4\dbch\af4\loch\f4 Small-C is fairly lenient about its predefined words. They are not actua\hich\af4\dbch\af4\loch\f4 lly reserved, and if you are very careful, they can be used as symbols. Since full C makes these reserved words, it is not a good idea to use them as symbols. Hereafter, they will be referred to as reserved words in Small-C.\par \par \hich\af4\dbch\af4\loch\f4 The reserved words are:\par \par }\pard\plain \s17\qj\li720\widctlpar\tx1800\tx2880\tx3960\tx5040\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 asm\tab b\hich\af6\dbch\af4\loch\f6 reak\tab case\tab char\tab continue\par \hich\af6\dbch\af4\loch\f6 do\tab else\tab for\tab goto\tab if\par \hich\af6\dbch\af4\loch\f6 int\tab long\tab return\tab short\tab switch\par \hich\af6\dbch\af4\loch\f6 while\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 In addition, the following are reserved words in full C, and so should not be used in Small-C programs:\par \par }\pard\plain \s17\qj\li720\widctlpar\tx1800\tx2880\tx3960\tx5040\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 auto\tab default\tab double\tab enum\tab extern\par \hich\af6\dbch\af4\loch\f6 float\tab register\tab sizeof\tab static\tab struct \par \hich\af6\dbch\af4\loch\f6 ty\hich\af6\dbch\af4\loch\f6 pedef\tab union\tab unsigned\tab void\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Note that }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 asm}{\hich\af4\dbch\af4\loch\f4  is not a reserved word in full C, and that }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 entry}{\hich\af4\dbch\af4\loch\f4  and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 fortran}{\hich\af4\dbch\af4\loch\f4 , while not reserved words in standard C, are reserved in many implementations.\par \par \hich\af4\dbch\af4\loch\f4 Small-C recognizes the following tokens. Except for comments and string an\hich\af4\dbch\af4\loch\f4 d character literals, these are the only non-alphanumeric characters allowed.\par \par }\pard\plain \s17\qj\li720\keepn\widctlpar\tx1800\tx2880\tx3960\tx5040\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 !\tab %\tab ^\tab &\tab *\par \hich\af6\dbch\af4\loch\f6 ~\tab +\tab =\tab ~\tab |\par \hich\af6\dbch\af4\loch\f6 <\tab >\tab /\tab ++\tab --\par \hich\af6\dbch\af4\loch\f6 <<\tab >>\tab <=\tab >=\tab ==\par \hich\af6\dbch\af4\loch\f6 !=\tab &&\tab ||\tab (\tab )\par }\pard \s17\qj\li720\widctlpar\tx1800\tx2880\tx3960\tx5040\adjustright {\hich\af6\dbch\af4\loch\f6 [\tab ]\tab ;\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Small-C recognizes three kinds of constant. The first is the integer, which is a sequence of digits. Since ful\hich\af4\dbch\af4\loch\f4 l C treats an integer starting with a zero as an. octal number, it is a good idea not to start integers with a zero unless the value is zero.\par \hich\af4\dbch\af4\loch\f4 26\par \par \hich\af4\dbch\af4\loch\f4 Character constants consist of any keyboard character except the single quote mark, surrounded by single quote\hich\af4\dbch\af4\loch\f4  marks. More than one character can be enclosed in the quote marks, in which case the last is placed in the least significant byte of a four byte integer, the next to last character is placed next to the least significant byte, and so on for the third and\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 fourth characters. The remainder are ignored. Values from the ASCII character set are used. Thus, 'a' is equivalent to the integer 97, and 'ab' is equivalent to 24930 (which is 256*97+98).\par \par \hich\af4\dbch\af4\loch\f4 String constants consist of a series of characters enclosed in dou\hich\af4\dbch\af4\loch\f4 ble quote marks. A string is stored in memory as a series of one byte ASCII character code values, terminated by a zero byte. The double quote mark cannot be used inside a string.\par \par \hich\af4\dbch\af4\loch\f4 In both character constants and strings, the backslash character has specia\hich\af4\dbch\af4\loch\f4 l significance. It is used to allow placing characters inside of a string that normally could not be placed there. The character right after the backslash determines what value will be placed in the character constant or string. The characters recognized,\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 and the values they represent, are:\par \par }\pard \s15\qj\li720\widctlpar\tx2160\tx3600\adjustright {\ul \hich\af4\dbch\af4\loch\f4 Character}{\tab }{\ul \hich\af4\dbch\af4\loch\f4 Value}{\tab }{\ul \hich\af4\dbch\af4\loch\f4 Comment}{\par \hich\af4\dbch\af4\loch\f4 n\tab 10\tab newline\par \hich\af4\dbch\af4\loch\f4 t\tab 9\tab tab\par \hich\af4\dbch\af4\loch\f4 v\tab 11\tab vertical tab\par \hich\af4\dbch\af4\loch\f4 b\tab 8\tab back space\par \hich\af4\dbch\af4\loch\f4 r\tab 13\tab carriage return\par \hich\af4\dbch\af4\loch\f4 f\tab 12\tab form feed\par \\\tab \hich\af4\dbch\af4\loch\f4 92\tab character\par \hich\af4\dbch\af4\loch\f4 '\tab 39\tab character\par \hich\af4\dbch\af4\loch\f4 "\tab 34\tab character\par }\pard \s15\qj\widctlpar\adjustright {\par \hich\af4\dbch\af4\loch\f4 If the character after the backslash is not one of t above \hich\af4\dbch\af4\loch\f4 characters, the backslash is treated as a character. The specific effect of following the backslash by a character not in the above table is defined by C, so it is a good idea to always follow backslash by a character from the table.\par \par \hich\af4\dbch\af4\loch\f4 User defined tokens w\hich\af4\dbch\af4\loch\f4 ithin C always start with an alphabetic character and are followed by one or more alphanumeric characters. C is a little unusual in that the "alphabetic characters" include the underscore, and in that uppercase and lowercase letters, while both allowed, a\hich\af4\dbch\af4\loch\f4 r\hich\af4\dbch\af4\loch\f4 e distinct. Although symbols can be as long as desired, they must be distinct in the first eight characters.\par \par \hich\af4\dbch\af4\loch\f4 All of the following are valid C symbols, and all are different.\par \par }\pard\plain \s17\qj\li720\widctlpar\tx1800\tx2880\tx3960\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 main\tab MAIN\tab Main \tab n14\par \hich\af6\dbch\af4\loch\f6 averylongsymbol\tab with_underscore \par \hich\af6\dbch\af4\loch\f6 _start\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Although Small-C co\hich\af4\dbch\af4\loch\f4 nsiders the case of a letter to be significant, ORCA/M does not. This is important, since Small-C produces assembly language files that are then assembled by ORCA/M. If a symbol is global or if it is the name of a function, it must be resolved by ORCA/M. \hich\af4\dbch\af4\loch\f4 I\hich\af4\dbch\af4\loch\f4 f that is the case, make sure that the symbol is distinct from all other symbols, regardless of case. For example, do not create a program with two functions, one called }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 main}{\hich\af4\dbch\af4\loch\f4  and the other called }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 MAIN}{\hich\af4\dbch\af4\loch\f4 .\par \par \hich\af4\dbch\af4\loch\f4 C allows comments anywhere that a space would appear.\hich\af4\dbch\af4\loch\f4  A comment is any sequence of keyboard characters surrounded by a }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 /*}{\hich\af4\dbch\af4\loch\f4  at the beginning and a }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 */}{\hich\af4\dbch\af4\loch\f4  at the end. Comments can extend over more than one line. They are not recursive - that is, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 /* /* */ */}{\hich\af4\dbch\af4\loch\f4  is not a legal comment.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732466}\hich\af4\dbch\af4\loch\f4 The Preprocessor{\*\bkmkend _Toc497732466}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The Small-C pre\hich\af4\dbch\af4\loch\f4 processor is logically separate from the compiler itself. Its functions are performed before the compiler gets a chance to look at the line. This distinction is more important in full C, where a larger variety of preprocessor commands are available, but i\hich\af4\dbch\af4\loch\f4 t\hich\af4\dbch\af4\loch\f4  is still important to keep this fact in mind when thinking about the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 define}{\hich\af4\dbch\af4\loch\f4  directive.\par \par \hich\af4\dbch\af4\loch\f4 There are a total of six preprocessor commands. These can be grouped into two categories. The first category contains those commands which are found in full C. This in\hich\af4\dbch\af4\loch\f4 cludes }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 define}{\hich\af4\dbch\af4\loch\f4  and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 include}{\hich\af4\dbch\af4\loch\f4 . The second category consists of those commands which have been added to make it easier to work in the ORCA programming environment. While these are quite useful, they are not found in C on other operating systems, so they should \hich\af4\dbch\af4\loch\f4 not be used in code that will be ported to other machines. None are actually required to use Small-C. These include }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 list}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 keep}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 source}{\hich\af4\dbch\af4\loch\f4 , and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 org}{\hich\af4\dbch\af4\loch\f4 .\par \par \hich\af4\dbch\af4\loch\f4 The preprocessor commands are described in the paragraphs that follow. Each starts with a line that shows how \hich\af4\dbch\af4\loch\f4 the command would appear in a Small-C program. Although Small-C makes no strict requirement, most full C implementations require a directive to start in column 1 of the source line. Thus, it is a good idea to start commands in column 1. Small-C requires t\hich\af4\dbch\af4\loch\f4 h\hich\af4\dbch\af4\loch\f4 at the name of the command follow the # character with no intervening spaces. Small-C will ignore anything that appears after a valid preprocessor command on the line. Full C will generally give an error if anything but a carriage return appears on the li\hich\af4\dbch\af4\loch\f4 n\hich\af4\dbch\af4\loch\f4 e.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 #define mac string\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 This command defines a simple text substitution macro. }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 mac}{\hich\af4\dbch\af4\loch\f4  should be replaced by the name of the macro, which must be a valid identifier. After skipping any spaces, the string that appears between }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 mac}{\hich\af4\dbch\af4\loch\f4  and the end of the line will be\hich\af4\dbch\af4\loch\f4  substituted for }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 mac}{\hich\af4\dbch\af4\loch\f4  wherever }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 mac}{\hich\af4\dbch\af4\loch\f4  is used in a program. This is the method used to define constants in C. It can also be used as an effective way to document code.\par \par \hich\af4\dbch\af4\loch\f4 An example of the define command would be defining the constants true and false:\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 #define t\hich\af6\dbch\af4\loch\f6 rue 1\par \hich\af6\dbch\af4\loch\f6 #define false 0\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 #include "file-name"\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 include}{\hich\af4\dbch\af4\loch\f4  command causes Small-C to process all of the lines in the included file, then return to the original source file. Included files may not include other files. }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 File-name}{\hich\af4\dbch\af4\loch\f4  can be any valid ProDOS path na\hich\af4\dbch\af4\loch\f4 me. The quote marks surrounding the file name are required.\par \par \hich\af4\dbch\af4\loch\f4 If the file to be included is not a Small-C source file, Small-C will terminate all processing and transfer control back to ORCA/HOST. The end of the intermediate file will include an APPEND dire\hich\af4\dbch\af4\loch\f4 ctive to cause the assembler to process the file. This gives an effective way of combining Small-C and assembly language in a single program. For an example, see the compiler.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 #keep "file-name"\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The intermediate code is sent to the named output file, and \hich\af4\dbch\af4\loch\f4 when the compile is complete, it is passed on to the assembler. Assuming successful compilation and assembly, the final executable program will have the name given, and the intermediate code file will automatically be deleted.\par \par \hich\af4\dbch\af4\loch\f4 As with }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 include}{\hich\af4\dbch\af4\loch\f4 , the quote m\hich\af4\dbch\af4\loch\f4 arks are required. The file name can be any valid ProDOS path name, so long as the file name portion of the path name itself is ten characters or less. For example, /PROFILE/LONGNAME is fine, but /PROFILE/VERYLONGNAME is not. The reason for this restricti\hich\af4\dbch\af4\loch\f4 o\hich\af4\dbch\af4\loch\f4 n is that ORCA/M will need to append ".ROOT" to the file name you supply, and ProDOS allows a maximum of fifteen characters in a file name.\par \par \hich\af4\dbch\af4\loch\f4 This command must appear before the first function, and cannot appear more than once. It cannot be used if the KEEP\hich\af4\dbch\af4\loch\f4  parameter is used on the COMPILE command.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 #list on\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 list}{\hich\af4\dbch\af4\loch\f4  command can take an operand of }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 on}{\hich\af4\dbch\af4\loch\f4  or }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 off}{\hich\af4\dbch\af4\loch\f4 . If the operand is }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 on}{\hich\af4\dbch\af4\loch\f4 , all subsequent source lines are sent to the current output device. If the operand is }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 off}{\hich\af4\dbch\af4\loch\f4 , subsequent source lines are not listed.\hich\af4\dbch\af4\loch\f4  The default is on, listing all source lines.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 #org val\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 val}{\hich\af4\dbch\af4\loch\f4  is any constant value. Expressions are not allowed. The finished program will be located at the memory location specified by }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 val}{\hich\af4\dbch\af4\loch\f4 . This command must appear outside of a function.\par \par \hich\af4\dbch\af4\loch\f4 #source off\par \par \hich\af4\dbch\af4\loch\f4 The\hich\af4\dbch\af4\loch\f4  operand can be on or off, and defaults to }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 off}{\hich\af4\dbch\af4\loch\f4 . If }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 on}{\hich\af4\dbch\af4\loch\f4 , all source lines are placed in the intermediate code file as assembly language comment statements. This is useful for studying the code produced by the compiler, or for hand optimizing the output of th\hich\af4\dbch\af4\loch\f4 e compiler. If it will be necessary to look at the intermediate code file, do not do a link edit - doing a link edit will delete the intermediate code file!\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732467}\hich\af4\dbch\af4\loch\f4 The Program{\*\bkmkend _Toc497732467}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 A C program consists of a sequence of global variable declarations and function decla\hich\af4\dbch\af4\loch\f4 rations. Exactly one of the functions must be named }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 main}{\hich\af4\dbch\af4\loch\f4 .\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732468}\hich\af4\dbch\af4\loch\f4 Variable Declarations{\*\bkmkend _Toc497732468}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Variable declarations always start with one of the keywords }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 int}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 short}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 lonq}{\hich\af4\dbch\af4\loch\f4  or }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 char}{\hich\af4\dbch\af4\loch\f4 , and are followed by one or more variables, separated by commas. The declaration ends wit\hich\af4\dbch\af4\loch\f4 h a semicolon.\par \par \hich\af4\dbch\af4\loch\f4 Each variable in the declaration can be a symbol, a symbol preceded by an asterisk, or a symbol followed by a (possibly empty) array subscript. Symbols preceded by an asterisk are pointers to a value, rather than the value itself. If the sy\hich\af4\dbch\af4\loch\f4 mbol is followed by an array subscript, the value between the square brackets defines the number of elements that will be allocated for the array. The number is required for local and global variables, but not for variables passed as a parameter to a func\hich\af4\dbch\af4\loch\f4 t\hich\af4\dbch\af4\loch\f4 ion. A symbol with neither an asterisk or an array subscript represents a single value.\par \par \hich\af4\dbch\af4\loch\f4 Variables defined with the keywords }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 short}{\hich\af4\dbch\af4\loch\f4  or }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 int}{\hich\af4\dbch\af4\loch\f4  are two byte signed integers, ranging from -32768 to 32767, or pointers to or arrays of such integers.\par \par \hich\af4\dbch\af4\loch\f4 Variables defi\hich\af4\dbch\af4\loch\f4 ned with the keyword }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 long}{\hich\af4\dbch\af4\loch\f4  are four byte signed integers, ranging from -2147483648 to 2147483647, or pointers to or arrays of such integers.\par \par \hich\af4\dbch\af4\loch\f4 Variables defined with the keyword }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 char}{\hich\af4\dbch\af4\loch\f4  are one byte unsigned integers, ranging from 0 to 255, or pointers to or ar\hich\af4\dbch\af4\loch\f4 rays of such integers. Typically, these variables are used to hold character values, but C does not actually make any distinction between the two types. When used in an expression, a character value is completely equivalent to an integer, and an integer v\hich\af4\dbch\af4\loch\f4 a\hich\af4\dbch\af4\loch\f4 lue can be assigned to a character variable. only the least significant byte of an integer is used when assigning its value to a character - overflows are thus prevented.\par \par \hich\af4\dbch\af4\loch\f4 Pointers always require two bytes of storage, as do }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 short}{\hich\af4\dbch\af4\loch\f4  and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 int}{\hich\af4\dbch\af4\loch\f4  integers. }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 long}{\hich\af4\dbch\af4\loch\f4  int\hich\af4\dbch\af4\loch\f4 egers require four bytes of storage. Characters require one byte of storage.\par \par \hich\af4\dbch\af4\loch\f4 Note that arrays are defined by giving the number of elements to reserve space for, not the maximum subscript allowed. In addition, the first element in a C array is numbered 0, \hich\af4\dbch\af4\loch\f4 and there is no check for subscripts out of range. This leads to a very common and hard to find bug. If an array is declared as\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 int i[10];\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 and then the assignment\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 i[10] = 100;\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 is made, C reports no error, but the two bytes }{\i \hich\af4\dbch\af4\loch\f4 after}{\hich\af4\dbch\af4\loch\f4  the array have been cha\hich\af4\dbch\af4\loch\f4 nged, not the last element in the array! i[9] is the last valid element in the above array.\par \par \hich\af4\dbch\af4\loch\f4 Variables must be defined before they are used.\par \par \hich\af4\dbch\af4\loch\f4 Some valid declarations are shown below.\par \par }\pard\plain \s17\qj\li720\widctlpar\tx1800\tx2880\tx3960\tx5040\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 char ch, *chptr, charray[101;\par \hich\af6\dbch\af4\loch\f6 int i, *iptr, iarray[101; \par \hich\af6\dbch\af4\loch\f6 short s; \par \hich\af6\dbch\af4\loch\f6 long \hich\af6\dbch\af4\loch\f6 1;\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732469}\hich\af4\dbch\af4\loch\f4 Function Declarations{\*\bkmkend _Toc497732469}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 A function declaration consists of the function name followed by a list of parameters, separated by commas and enclosed in parenthesis. The parenthesis are required, even if there are no parameters. Next comes the declarations fo\hich\af4\dbch\af4\loch\f4 r any parameters used. Each parameter must have a declaration, and there can be no declaration for a variable that is not a parameter.\par \par \hich\af4\dbch\af4\loch\f4 The header is followed by the function body. The body starts with the \{ character. This is followed by zero or more loca\hich\af4\dbch\af4\loch\f4 l declarations, then by zero or more statements. After all of the statements, the end of the body of the function is marked with a \} character.\par \par \hich\af4\dbch\af4\loch\f4 C parameters are always passed by value. If a function must change the value of a variable, the only way to do \hich\af4\dbch\af4\loch\f4 so is to pass a pointer to the variable, rather than the variable itself. If a string is used as a parameter to a function, a pointer to the string constant is actually passed, not the string itself.\par \par \hich\af4\dbch\af4\loch\f4 C functions are fully recursive. Parameters and local v\hich\af4\dbch\af4\loch\f4 ariables are unique to a particular call to a function. Keep in mind, however, that global variables are not recursive - changing their value effects all functions!\par \par \hich\af4\dbch\af4\loch\f4 Each C program must contain a function called }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 main}{\hich\af4\dbch\af4\loch\f4 . When the C program is executed, execut\hich\af4\dbch\af4\loch\f4 ion starts with }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 main}{\hich\af4\dbch\af4\loch\f4 , regardless of where main appears in the program.\par \par \hich\af4\dbch\af4\loch\f4 Small-C requires that parameters be defined in the order in which they are listed in the parameter list.\par \par \hich\af4\dbch\af4\loch\f4 Functions do not need to be defined before they are used. In fact, they do not\hich\af4\dbch\af4\loch\f4  have to be defined at all - if a function is not defined, Small-C assumes that the link editor will find it later. This is different than full C, which requires that a function appear in a program if it is used. Full C allows for functions to be defined \hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4 lsewhere by using an }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 extern}{\hich\af4\dbch\af4\loch\f4  qualifier, which tells the compiler that the function will be resolved later.\par \par \hich\af4\dbch\af4\loch\f4 Below are some valid C functions. In fact, they form two valid C programs. The first is the shortest legal C program.\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 main() \{\}\par \par \hich\af6\dbch\af4\loch\f6 long i;\par \hich\af6\dbch\af4\loch\f6 main()\par \{\hich\af6\dbch\af4\loch\f6 for\hich\af6\dbch\af4\loch\f6  (i = 1; i < 10; ++i)\par \hich\af6\dbch\af4\loch\f6     \{printint (power(2,i));\par \hich\af6\dbch\af4\loch\f6     putchar ('\\r');\par \hich\af6\dbch\af4\loch\f6     \}\par \}\par \par \hich\af6\dbch\af4\loch\f6 power (a,b)\par \hich\af6\dbch\af4\loch\f6 long a,b;\par \hich\af6\dbch\af4\loch\f6 (if (b <= 1) return a;\par \hich\af6\dbch\af4\loch\f6 else return power (a,b-l)*a;\par \}\par \par \hich\af6\dbch\af4\loch\f6 printint(i) \par \hich\af6\dbch\af4\loch\f6 int i; \par \{\hich\af6\dbch\af4\loch\f6 long den;\par \par }\pard \s17\qj\fi180\keepn\widctlpar\adjustright {\hich\af6\dbch\af4\loch\f6 if(i) \par \hich\af6\dbch\af4\loch\f6     \{if(i < 0) \par }\pard \s17\qj\fi180\widctlpar\adjustright {\hich\af6\dbch\af4\loch\f6         \{Putchar('-'); \par \hich\af6\dbch\af4\loch\f6         i = -1;\par \hich\af6\dbch\af4\loch\f6     \hich\af6\dbch\af4\loch\f6     \}\par \hich\af6\dbch\af4\loch\f6     den 1000000000;\par \hich\af6\dbch\af4\loch\f6     while(i < den) den = den/10;\par \hich\af6\dbch\af4\loch\f6     while(den)\par \hich\af6\dbch\af4\loch\f6         \{putchar(i/den+'O');\par \hich\af6\dbch\af4\loch\f6         i = i%den;\par \hich\af6\dbch\af4\loch\f6         den = den/10;\par \hich\af6\dbch\af4\loch\f6         \}\par \hich\af6\dbch\af4\loch\f6     \}\par \hich\af6\dbch\af4\loch\f6 else putchar('O');\par \}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732470}\hich\af4\dbch\af4\loch\f4 The while Statement{\*\bkmkend _Toc497732470}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 C provides three looping statements. The while statem\hich\af4\dbch\af4\loch\f4 ent is used when a repetitive loop is needed that will terminate when a condition is false, and that condition must be tested before the body of the loop is executed for the first time. It is coded as the keyword }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 while}{\hich\af4\dbch\af4\loch\f4 , followed by an expression enclosed i\hich\af4\dbch\af4\loch\f4 n parenthesis, and then a statement. The expression is first evaluated. If the value of the expression is non-zero, the statement is executed, and the process repeats. If the value of the expression is zero, the statement after the while statement is exec\hich\af4\dbch\af4\loch\f4 u\hich\af4\dbch\af4\loch\f4 ted.\par \par \hich\af4\dbch\af4\loch\f4 Examples:\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 /* an infinite loop */\par \hich\af6\dbch\af4\loch\f6 while (1);\par \par \hich\af6\dbch\af4\loch\f6 /* an inefficient way to set i to zero */\par \hich\af6\dbch\af4\loch\f6 while (--i);\par \par \hich\af6\dbch\af4\loch\f6 /* write the string pointed to by str */\par \hich\af6\dbch\af4\loch\f6 i = 0; \par \hich\af6\dbch\af4\loch\f6 while (str[i]) putchar(str[i++]);\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732471}\hich\af4\dbch\af4\loch\f4 The do-while Statement{\*\bkmkend _Toc497732471}\par }\pard\plain \s15\qj\keepn\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard \s15\qj\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 The do-while statement is very much lik\hich\af4\dbch\af4\loch\f4 e a while statement, except that the condition is tested at the end of the loop. Thus, the loop body is always executed at least once.\par \par \hich\af4\dbch\af4\loch\f4 Syntactically, the do-while loop takes the form of a do keyword, followed by a statement, the keyword }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 while}{\hich\af4\dbch\af4\loch\f4 , an expressi\hich\af4\dbch\af4\loch\f4 on enclosed in parenthesis, and a semicolon. The statement is executed, then the expression is evaluated. If the value of the expression is non-zero, the process repeats. If the value of the expression is zero, the statement after the do-while statement i\hich\af4\dbch\af4\loch\f4 s\hich\af4\dbch\af4\loch\f4  executed.\par \par \hich\af4\dbch\af4\loch\f4 Examples:\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 /* another way to set i to 0 */\par \hich\af6\dbch\af4\loch\f6 do i--; while (i);\par \par \hich\af6\dbch\af4\loch\f6 /* raise 2 to the power 10 */\par \hich\af6\dbch\af4\loch\f6 i = 1; \par \hich\af6\dbch\af4\loch\f6 p = 10;\par \hich\af6\dbch\af4\loch\f6 do i = i*2; while (--p);\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732472}\hich\af4\dbch\af4\loch\f4 The for Statement{\*\bkmkend _Toc497732472}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The for statement is used when an iterative loop is needed. The for statement is a bit mor\hich\af4\dbch\af4\loch\f4 e flexible than the counterpart in most other high level languages, and also a bit more confusing.\par \par \hich\af4\dbch\af4\loch\f4 Semantically, the for statement takes the form of the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 for}{\hich\af4\dbch\af4\loch\f4  keyword, followed by three expressions enclosed in parenthesis and separated by semicolons. This i\hich\af4\dbch\af4\loch\f4 s all followed by a statement.\par \par \hich\af4\dbch\af4\loch\f4 When the for statement is encountered, the first expression is evaluated. Next, the second expression is executed. If the result of the second expression is non-zero, the statement and third expression are evaluated (in that\hich\af4\dbch\af4\loch\f4  order), and the process repeats, starting with the evaluation of the second expression. If the value of the second expression is zero, the statement after the for statement is executed.\par \par \hich\af4\dbch\af4\loch\f4 The for statement\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 for (exprl; expr2; expr3) stmnt; \par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 is actually co\hich\af4\dbch\af4\loch\f4 mpletely equivalent to\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 exprl; \par \hich\af6\dbch\af4\loch\f6 while (expr2) \par \hich\af6\dbch\af4\loch\f6     \{stmnt; \par \hich\af6\dbch\af4\loch\f6     expr3;\par \hich\af6\dbch\af4\loch\f6     \}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732473}\hich\af4\dbch\af4\loch\f4 The if Statement{\*\bkmkend _Toc497732473}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The if statement is used to execute a statement only if a condition is true. It has two forms: with and without an else clause.\par \par \hich\af4\dbch\af4\loch\f4 With an else clause, the if sta\hich\af4\dbch\af4\loch\f4 tement takes the form of the keyword }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 if}{\hich\af4\dbch\af4\loch\f4 , an expression enclosed in parenthesis, a statement, the keyword }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 else}{\hich\af4\dbch\af4\loch\f4 , and another statement. The expression is first evaluated. If it is zero, the statement after the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 else}{\hich\af4\dbch\af4\loch\f4  is executed, otherwise the statement after \hich\af4\dbch\af4\loch\f4 the expression is executed.\par \par \hich\af4\dbch\af4\loch\f4 Without an else clause, the if statement takes the form of the keyword }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 if}{\hich\af4\dbch\af4\loch\f4 , followed by an expression enclosed in parenthesis, and a statement. The expression is evaluated. If it is non-zero, the statement after the expression i\hich\af4\dbch\af4\loch\f4 s executed, otherwise the statement is skipped.\par \par \hich\af4\dbch\af4\loch\f4 Examples:\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 /* write the status of a flag */\par \hich\af6\dbch\af4\loch\f6 if (flag) putstring("true"); \par \hich\af6\dbch\af4\loch\f6 else putstring("false");\par \par \hich\af6\dbch\af4\loch\f6 /* call the function doit if i = 47 */\par \hich\af6\dbch\af4\loch\f6 if (i == 47) doit();\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732474}\hich\af4\dbch\af4\loch\f4 The switch Statement{\*\bkmkend _Toc497732474}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The switch statement is \hich\af4\dbch\af4\loch\f4 basically a computed goto. Syntactically, it is the keyword }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 switch}{\hich\af4\dbch\af4\loch\f4 , followed by an expression enclosed in parenthesis and a statement. Within the statement (which is generally compound statement) two new kinds of labels are allowed. The first is the case l\hich\af4\dbch\af4\loch\f4 abel. A case label is the keyword }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 case}{\hich\af4\dbch\af4\loch\f4 , followed by an integer or character constant, a colon, and a statement. The second special label is the default label. it consists of the keyword }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 default}{\hich\af4\dbch\af4\loch\f4 , followed by a colon and a statement.\par \par \hich\af4\dbch\af4\loch\f4 When the switch stateme\hich\af4\dbch\af4\loch\f4 nt is encountered, the expression is evaluated. If any case label has a value that matches the value of the expression, control is transferred to the statement after the case label. If no case label has a value that matches the expression, but the default\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 label is coded, control is transferred to the statement after the default label. If no case label has a matching value and there is no default label, the statement after the expression is skipped.\par \par \hich\af4\dbch\af4\loch\f4 Two case labels cannot specify the same constant. more tha\hich\af4\dbch\af4\loch\f4 n 100 case labels are allowed in any switch statement. Switch statements can contain other switch statements. In that case, case and default labels refer to the innermost switch statement.\par \par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 switch (i)\par \hich\af6\dbch\af4\loch\f6     \{case 0: \par \hich\af6\dbch\af4\loch\f6      case 2: \par \hich\af6\dbch\af4\loch\f6      case 4: \par \hich\af6\dbch\af4\loch\f6    \hich\af6\dbch\af4\loch\f6   case 6: \par \hich\af6\dbch\af4\loch\f6      case 8: print ("even");\par \hich\af6\dbch\af4\loch\f6               break; \par \hich\af6\dbch\af4\loch\f6      default: \par \hich\af6\dbch\af4\loch\f6          switch (i)\par \hich\af6\dbch\af4\loch\f6              \{case 1: case 3: case 5: case7: \par \hich\af6\dbch\af4\loch\f6                  print ("odd prime"); \par \hich\af6\dbch\af4\loch\f6                  break; \par \hich\af6\dbch\af4\loch\f6               case 9: \par \hich\af6\dbch\af4\loch\f6                  print ("o\hich\af6\dbch\af4\loch\f6 dd");\par \hich\af6\dbch\af4\loch\f6               \}\par \hich\af6\dbch\af4\loch\f6     \}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732475}\hich\af4\dbch\af4\loch\f4 The goto Statement{\*\bkmkend _Toc497732475}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The goto statement allows control to be transferred to some statement other than the one that would normally be executed next.\par \par \hich\af4\dbch\af4\loch\f4 Syntactically, a goto statement is the keyword }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 goto}{\hich\af4\dbch\af4\loch\f4 , followed by a label name a\hich\af4\dbch\af4\loch\f4 nd a semicolon. Label names follow the same coding rules as identifiers.\par \par \hich\af4\dbch\af4\loch\f4 The destination for a goto is a label name, followed by a colon and a statement. The label name specified in a goto statement must appear exactly one time as a destination label with\hich\af4\dbch\af4\loch\f4 in the function that contains the goto statement.\par \par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 main ()\par \{\hich\af6\dbch\af4\loch\f6 int i;\par \par \hich\af6\dbch\af4\loch\f6 i = 0;\par \hich\af6\dbch\af4\loch\f6 top: if (i > 10) goto end;\par \tab \hich\af6\dbch\af4\loch\f6    printint (i);\par \tab \hich\af6\dbch\af4\loch\f6    putchar(.\\r');\par \tab \hich\af6\dbch\af4\loch\f6    ++i;\par \tab \hich\af6\dbch\af4\loch\f6    goto top;\par \hich\af6\dbch\af4\loch\f6 end:;\par \}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732476}\hich\af4\dbch\af4\loch\f4 The return Statement{\*\bkmkend _Toc497732476}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The return statement allows a function to return to t\hich\af4\dbch\af4\loch\f4 he function that called it before the end of the function is reached. It also allows a function to return a specific value.\par \par \hich\af4\dbch\af4\loch\f4 Syntactically, the return statement is the keyword }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 return}{\hich\af4\dbch\af4\loch\f4 , possibly followed by an expression, and finishing with a semicolon. If t\hich\af4\dbch\af4\loch\f4 he expression is present, it is evaluated, and the value of the function is the value of the expression. If no expression is given, the returned value is not predictable.\par \par }\pard \s15\qj\keepn\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s17\qj\fi180\keepn\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 main ()\par \hich\af6\dbch\af4\loch\f6     \{printint (power(2,10));\}\par \par \hich\af6\dbch\af4\loch\f6 power (x,n)\par \hich\af6\dbch\af4\loch\f6 int x,n;\par \par \hich\af6\dbch\af4\loch\f6     \{if (n ==\hich\af6\dbch\af4\loch\f6  1) return x; \par \hich\af6\dbch\af4\loch\f6      else return power (x,n-l)*x;\par }\pard \s17\qj\fi180\widctlpar\adjustright {\hich\af6\dbch\af4\loch\f6     \}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732477}\hich\af4\dbch\af4\loch\f4 break and continue{\*\bkmkend _Toc497732477}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The break and continue statements allow a loop to be exited, or for the next loop to start, without the use of a goto statement.\par \par \hich\af4\dbch\af4\loch\f4 Syntactically, the break statement is the keyword }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 break}{\hich\af4\dbch\af4\loch\f4  followed by a semicolon. It can appear in the statement part of a while, do-while or for loop, or in the statement part of a switch statement. The continue statement is the keyword }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 continue}{\hich\af4\dbch\af4\loch\f4  followed by a semicolon. It can appear in the statement part\hich\af4\dbch\af4\loch\f4  of a while, do-while or for loop.\par \par \hich\af4\dbch\af4\loch\f4 In the four statements that follow, a break would be equivalent to "goto b1;", while a continue is equivalent to "goto c1;".\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 while (test) (stmnt(); cl:;) bl:; \par \par \hich\af6\dbch\af4\loch\f6 do (stmnt(); cl:;) while (test); bl:; \par \par \hich\af6\dbch\af4\loch\f6 for (i = 1; i<10; \hich\af6\dbch\af4\loch\f6 ++i) \{stmnt(); cl:;\} bl:; \par \par \hich\af6\dbch\af4\loch\f6 switch (i) \{stmnt();\} b1:;\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732478}\hich\af4\dbch\af4\loch\f4 Compound Statements{\*\bkmkend _Toc497732478}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Anywhere that a statement is allowed, a compound statement may be used, instead. A compound statement is a \{, followed by zero or more statements, and ending with a ). Generally, \hich\af4\dbch\af4\loch\f4 the compound statement is used to cause several statements to be treated as one when determining the size of a loop or the extent of a conditional statement. Examples of compound statements are included throughout chapters 3 and 4.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732479}\hich\af4\dbch\af4\loch\f4 Expressions{\*\bkmkend _Toc497732479}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 A Small-C \hich\af4\dbch\af4\loch\f4 expression consists of one or more terms separated by binary operators, optionally preceded by a unary operator. Parenthesis can be used to modify the precedence of operators.\par \par \hich\af4\dbch\af4\loch\f4 Small-C operators, in order of precedence, are:\par \par }\pard \s15\fi-2880\li3240\keepn\widctlpar\tx1800\adjustright {\ul \hich\af4\dbch\af4\loch\f4 Operator}{\tab }{\ul \hich\af4\dbch\af4\loch\f4 Precedence}{\hich\af4\dbch\af4\loch\f4  \tab }{\ul \hich\af4\dbch\af4\loch\f4 Descripti\hich\af4\dbch\af4\loch\f4 on}{\par \par \hich\af4\dbch\af4\loch\f4 -\tab 1\tab unary minus\par \hich\af4\dbch\af4\loch\f4 !\tab 1\tab logical negation\par \hich\af4\dbch\af4\loch\f4 ~\tab 1\tab bitwise negation\par \hich\af4\dbch\af4\loch\f4 *\tab 2\tab integer multiplication\par \hich\af4\dbch\af4\loch\f4 /\tab 2\tab integer division\par \hich\af4\dbch\af4\loch\f4 %\tab 2\tab integer modulus\par \hich\af4\dbch\af4\loch\f4 +\tab 3\tab integer addition\par \hich\af4\dbch\af4\loch\f4 -\tab 3\tab integer subtraction\par \hich\af4\dbch\af4\loch\f4 <<\tab 4\tab bit shift left ("multiplies" by powers of 2)\par \hich\af4\dbch\af4\loch\f4 >>\tab 4\tab bit shift right ("divides"\hich\af4\dbch\af4\loch\f4  by powers of 2)\par \hich\af4\dbch\af4\loch\f4 <\tab 5\tab test for less than\par \hich\af4\dbch\af4\loch\f4 >\tab 5\tab test for greater than\par \hich\af4\dbch\af4\loch\f4 <=\tab 5\tab test for less than or equal\par \hich\af4\dbch\af4\loch\f4 >=\tab 5\tab test for greater than or equal\par \hich\af4\dbch\af4\loch\f4 ==\tab 6\tab test for equality\par \hich\af4\dbch\af4\loch\f4 !=\tab 6\tab test for not equal\par \hich\af4\dbch\af4\loch\f4 &\tab 7\tab bitwise and\par \hich\af4\dbch\af4\loch\f4 ^\tab 8\tab bitwise exclusive or\par \hich\af4\dbch\af4\loch\f4 |\tab 9\tab bitwise or\par \hich\af4\dbch\af4\loch\f4 &&\tab 10\tab logical and\par \hich\af4\dbch\af4\loch\f4 ||\tab 11\tab logical or\par \hich\af4\dbch\af4\loch\f4 =\tab 12\tab assignment\par }\pard \s15\qj\keepn\widctlpar\adjustright {\par }\pard \s15\qc\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 Table of C Operators\par }\pard \s15\qj\widctlpar\adjustright {\par \hich\af4\dbch\af4\loch\f4 In addition, an l-value may be preceded by one of the following modifiers:\par \par }\pard \s15\qj\fi-1440\li1800\keepn\widctlpar\adjustright {\ul \hich\af4\dbch\af4\loch\f4 Modifier}{\tab }{\ul \hich\af4\dbch\af4\loch\f4 Description}{\par \par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 *}{\tab \hich\af4\dbch\af4\loch\f4 Causes the value pointed to, rather than the value of a pointer, to be used.\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 &}{\tab \hich\af4\dbch\af4\loch\f4 The value is the addr\hich\af4\dbch\af4\loch\f4 ess of the l-value, rather than the l-value.\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 --}{\tab \hich\af4\dbch\af4\loch\f4 The l-value is decremented, and the decremented value is used in the expression.\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ++}{\tab \hich\af4\dbch\af4\loch\f4 The l-value is incremented, and the incremented value is used in the expression.\par }\pard \s15\qj\widctlpar\adjustright {\par \hich\af4\dbch\af4\loch\f4 L-values can also be followed by }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 --}{\hich\af4\dbch\af4\loch\f4  or }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ++}{\hich\af4\dbch\af4\loch\f4 .\hich\af4\dbch\af4\loch\f4  In that case, the l-value is still changed, but the original value is used in the expression.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732480}\hich\af4\dbch\af4\loch\f4 Collected Syntax{\*\bkmkend _Toc497732480}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The following syntax diagrams summarize the syntax of the Small-C language.\par \par }{{\pict{\*\picprop\shplid1026{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw174\pich29\picwgoal3480\pichgoal580\macpict\bliptag-1020287281\blipupi72{\*\blipuid c32fa6cffd6ecf5a4a1a7afe67033bf5}0d6800000000001d00ae001102ff0c00ffffffff000000000000000000ae0000001d00000000000000a101f200163842494d000000000000001d00ae4772897068af626a001e0001000a00000000001d00ae0098005c00000000007702d500000000007702d500000000001d00ae000002a50002a50002a50002a5000cf3000060fc0002600040bc0011f6000b1000007002000001006000c0bc000ff60009300000f0020000010070ba000df60003300000f8fc000030ba000df6000330000198fc000070ba0012f6000330000108fc0005780000060010bf0014f60002700c01fe0008f80300fe01c00f01f8bf001d19000200700f807c0f800003f03e01000e01fc0780fe01c01f81fcbf001d1900e700f81f82fc1f800007f03e01000e01fc0780fe01c01fc3fcbf001d1900ff00fc1f87fc1fc00007f01e03c00e01fe03007801c000c3bebf001d1900ff003c0a07d038c00000f00107f006010601007000c020c306bf001d1900ff000cc0078030e00000300187f006030201007000c0606306bf001d1900bb0006c0078030e0000030c183f002030201007000c0606306bf001d1900bb001ec007007060001830ff83c002030201003000c0606306bf001d1900bb007ec007007060001810ff818002030201003000c0606302bf001d19009b00fec006002060001810ff8100020102010030004060e302bf001d19019b00fec006002060001010f1010002010201003180c060e302bf001d19019b000ec006003060001010c0018002010201803380c060c307bf001d19019b0306e0060030e0000030c0018006030203803f81e023c307bf001d19019b030ee006003fc00001f07f83800f030203c01f01f01f8306bf001d1901db00fe3f86001fc00007f07f83000f830207e01f03f01f8306bf001d19019b80fe1f86001f800007f03f81000f810207e00e01f00f0002bf001a16009300fe1f80000f800007f01f80000f000003c00001c0bc000afe00007cfa000040b10002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50002a50006af000002f8000cbe000403300047bff4fffa000dcc00052f0007dffc7ce7fffa0012d700025c8033feff00fefe00001fe1fffa0022e90006020000ff9e1ff1effffe00001feeff053fffc0002ff8fe0003c0000407fa0029f8000008fe000601003b3ffc03fffd00000fe9fffe00001ffbff07fdf8ffffc0002bdcf0000003fa0019fc00001ff3fffd00001fe9fffe00031c000004e5000001fa0029fc00003ff3ff0080fe00001ffcff00fcfeff07d0f8fffc0001b980fb000007fe000018e2000001fa001dfc00003ff4ff01fbc0fe00021c7ff8ec000003fe000018e2000001fa002bfc00003ffd00051e1ec0002380fd0000c0fe000018ea000002fe000018fa000040fb000018f1000001fa0025fc0000c0f30000c0fe000018ea000002fe000318000010fd0000c0fb000018f1000001fa002afc0000c0ef000018f7000510000001c008fa000003fe000318000018fd0000c0fb000018f1000001fa0034f5000006fa000030fe000018fd0002600020fe000510002003c018fa000003fe000318000030fd0000c0fb000018f1000001fa003dfd000001fe0006800200000f0040fc000030fe000018fd0002600020fe000410000003e0f9000003fe000318000030fd0000c0fb000018f1000001fa0048fd000801000009800300000ffa000018fe000018fb000020fe00041000000670f9000003fe000318000038fd000060fb000038fc000b3f00000f01f803e01c000001fe000004fe004ffd000903000009800300001f80fb00000cfe000018fb000030fe00043800000630f9000003fe002018000038001800007e00f801e01e01f80001fc0f807f08181f03f807f03e000001fe00000cfe004efd000906000009800200001180fb00000cfe000018fb000070fe00033c000006f800240300000818000038007c00087f00f803e03f03f80001fc0f807f0c181f03fc07f01e000001fe00000efe0056fd00090600000d800200003080fb00000cfe000018fd000f4007f03803c07f00e006003801e007c0fe00240300000c18000038207c08187f01f803e1fe03f80001f80fc0ff0c183f811e0ee007000001fe00000efe0057fd00080400000fc006000030fd00030800000cfe000018fd000fe007f07c07e07f00e006003801f00fc0fe00130300000c18000038607e0c187f81fc00f1f00078fd00106083081820c1061800030000018000000ffe005afd00140c00001fe03f01c03001c01f807c00000c00000818fd000fe00ff07c0fe07f00f006003801f03fc0fe00130300000e18000038c0830c18e1c20c0019c00038fe0014206183081860c1071800038000018000000f80000059fd00140c00003fe07f03c03001e01f807c00000c00001c18fd000fe007f07c0ff03e00f00fc03800787880fe00130300000e38000038c0830c18e0c6040019c00038fe000d3061810c187fc3031800ff800001fdff0280000059fe0015080c00003fe0ff07e03001e03f807c00000400001e18fd000e700070800c181800601fc018041878fd00240300001f38000019c0c70c1860c20400798000180001f03fe1830c187fc3031800ff800001fdff02c0000059fe00150c0c00001fc00703f07e00c03c000200000200001e18fd000e700031830c181800601fc018041c78fd002403ffeffff800001f80ff0c1860c20603ff8008180001f03fe1030c187fc3071800ff800001fdff028000005afe00150e1800000fc00308387f004030608200000300001f38fd000e700031ff0c181800200f801807fc70fd000003feff27f800001f80ff0c18c0c60603ff8008180001f83fe0030c187fc3071800fe000001e0003fff80000059fe00150e3800000fc10308387f004030618700000380e03ff8fd000e701031ff0c1818002006001807fc60fd000003feff24f800001f81ff0c38c0c60607fb80081800007c38007f0c387003071800c00000018000000ffe0059fe00111f3800001fe1030ff87c00403061ff000003feff00f8fd000e701021ff0c1818002006001807f860fd000003feff20f800001f81f007f8c0c206043980081800000c30007f0c386003071800c0000001fe00000ffe005a0001feff10f800001fe1030ff83800403061ff000003feff00f8fd000e601031fe0c18180030060018078060fd00240300001f38000018c1c003f8e0c60e0c1980083800000800007f047800030700607c000001fe00000ffe005a0003feff10f800001fe1820ff83000603021ff000003feff00f8fd000e601831e00c18180030060018040060fd00240300000e18000018c0c001f861c39c063b8000780000f80fe00703f81fc30707f07f000001fe00000efe005a0001feff14f800001fe1020ff03000603061e000000380101f38fd000e601831c00c1818c07006001c000060fd00280300000e18000038207e0078ff81fc07ff8003f80003f80fe00303f81fc30207f03f8000018000000cfe0059fe00151ff800000fc1020c0030006010618000000300000e18fd000e701870800c181fc07006001c006060fd00280300000e18000010207f00187f01f803fd0003f80007f80fe00301c81fc30003f03f00000380000008fe0052fe00150f1800000f8103080030006030618000000600001e18fd000ef81ff07f08180fc0f806003e01f860fd001c0300000c18000038207f00387f01f803f80001f00003f0038003000007fa00010180fb0048fe00150e1000000f800f01203000f03060fe00000400001c18fd000ef80ff07f08180f80f804003e01f860fd000e0300000818000010003e00f8380030f7000003f700010180fb0042fe00000efe00110fc0ff07f03000f03060ff00000c00001818fd000df80ff03f08080700f804003e01f8fc000003fe000018fc000101f0f4000001f700010180fb0038fe00110c0400000f80ff07f83001f830207f00000cfe000018fd0003f807e01efd000020f7000003fe000018fc000103e0e900010180fb002cfd00100c000005807f03f03000f810003e00000cfe000018ea000003fe000018fc000101e0e900010180fb001ffd00000cfc000101e0f900000cfe000018ea000003fe000038e2000001fa001afd00000ef200000cfe000018ea000003fe000018e2000001fa001afd00000ef2000018fe000018ea000003fe000018e2000001fa001bfd000006f2000030fe000018ea000003fe000018e200010180fb0020fd000003f2000030fe000018ea000003fe000018e700060c000136600f80fb0024fd000003f2000060fe000018ea000003fe000018f20005f8090fd7fffdf7ff01df80fb001aed000040fe000018ea000007fe00041f80831bdfe5ff0080fb001fed0000c0fe000018f30005801003a3d972fdfffe00001fe4ff023ffffffa0020fc000080f30000c0fe00041e00083377edfffe00001ff0ff04fe0487ff80f00022f40007c0000dfbfe0eff80fe00001fe9fffe000007feff07f2bdfff000020e10e50018fc00003ff3ff0080fe00001ff0ff06effffffc01fffed60017fc00003ff3fffd00000ffcff07f11c1ffe00007370cb000dfc00003ff7ff03d4f9fffeb90006fc000001ab0002a50002a50002a50002a50002a50002a50002a50002a50002a50002a5000000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1027{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw113\pich42\picwgoal2260\pichgoal840\macpict\bliptag636594560\blipupi72{\*\blipuid 25f1a9808ab197e34779280f2649dae6}0b3a00000000002a0071001102ff0c00ffffffff000000000000000000710000002a00000000000000a101f200163842494d000000000000002a00714772897068af626a001e0001000a00000000002a00710098003c0000000000ad01d70000000000ad01d700000000002a0071000002c50002c50002c50002c50002c50002c50002c50002c5000f0200000cfc000502000c00f006d300110400000c000cfe000506000c00f806d300100400000c000cfe000406000800f8d2000efd00000efe000407000001fcd2000efd00000cfe0004070000018cd2000efd00000cfe00040700000188d200151100001c00fc0700fc0fc01801800e007001f0d700151100003c01fc0f81fc0fc03c01000e00f81ff0d700151100003c01fc1f81fe0fe03c03800e00f81ff0d700141000001c03fc1fc1ee0fc01c03e00601b81fd600141000001c060c30418307000c03f00601021ed600141000000c060c30e18303000c07f00603861ed600141000000c060c3fe18302000c03f00603ff1cd600141000000c060c3fe18302000c03800603ff18d600141000000c060c3fe18302000c01000603fe18d600141000000c06043f418306000c01800603fe18d600141000000c060438038307100c018006038018d600141000000c070c30018307381c038007018018d600141000001e039c32018303f01e01800f01fc18d600141000001f03fc1fe18303f03e01000f80ff18d600141000003f01fc1fe18301e03f01800f80ff18d600141000001f01fc0fe18001e03e01000f007e18d6000ffd0001100ffe000080fc00000cd50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50011f7000b724000e708003e6fff7fffffdb000afc00000ff1ff0080dc000afc00000ff1ff0080dc000afc00000ff1ff0080dc0013fc00040f8016dff8fb000074fd00010380dc000bfc00000ef200010180dc000bfc00000cf200010180dc000ffc00000cfb0000c0f900010180dc0012fc00000cfc000301c00001fb00010180dc0012fc00000cfc000301e00001fb00010180dc0011fc00000cfb0002c00001fb00010180dc0011fc00000cfb0002400001fb00010180dc0012fc00000cfb000340000180fc00010180dc0018fc00000cfb0005600c01c000e0fe00010180df00021000001afc00000cfd00070780603f81f801f0fe00010180df00023000001bfd0001060cfd00070fc0603f81f801f0fe00010180df00023800001bfd0001060cfd000707c0603fc1fc01f0fe00010180df00023c00001afd0001070cfc000660603841ce000cfe00010180df00023c00001afd0001070cfc00066060306187000cfe00010180df00023c00002dfd00010f9cfc00066060306107007cfe000701e2c3e7f004f87ffdff05fdfe7fffcff7f8ff00f3f9ff02fe00001b050000ffcffffcfd000703e06030610301fcfe000001ddff0100001b010001feff00fcfd000707f06030610301fcfe000001ddff01000023010003feff00fcfd00070ff06030618303fcfe000001f6ff00dfedff05bfbffffe000026010001feff00fcfd00071ff0603fc18203fcfe000601c77fc01c1840e800000efe00023c000024050000e0000ffcfd00071870603fc183071cfe0004018000000ce6000006fe00023c000022fd00010f0cfd00071870603f8183071cfe0004018000001ce6000006fe000238000022fd00010f0cfd00071fe0f03e018707fcfe0004018000003ee6000006fe000238000022fd00010e0cfd00070ff1f030018703fcfe0004038000003ee6000006fe000230000022fd00010e0cfd00070ff1f030018303fcfe0004038000003fe6000006fe00021000001efd00010e0cfd000707e1f030010201fcfe0004018000007fe6000006fb0018fc00000cfb0001e030fa000501800000ff80e7000006fb0017fc00000cfa000030fa000501800000ff80e7000006fb0016fc00000cfa000010fa0004018000007fe6000006fb0012fc00000cf20004018000001ce600000efb0012fc00000cf20004018000001ce600000efb0012fc00000cf20004018000000ce600000efb0012fc00000cf200040180000008e600000efb0012fc00000cf200040180000008e600000efb0012fc00000cf20004038000001ce600000efb0016fc00000ef6000842f4001bff80000018e6000006fb0011fc00000ff1ff038000001ce6000006fb0010fc00000ff1fffe00000ce600000efb0010fc00000ff1fffe00001ce6000006fb001dfc000f0ffc9ffffc75e7ffe0001fff0700f818fd00001ce6000006fb000ae800001ce6000006fb000ae800001ce600000efb000ae800001ce600000efb000ae800001ce6000006fb000ae800001ce6000006fb000ae800001ce6000006fb000ae800000ce6000006fb000ae800000ce6000006fb0011e800050c001ffff97fedff02fe000efb000de800020c003fe9ff010006fb000de800021c003fe9ff010006fb001ae800020c003ffcff00dff8ff0a9e1fffe009ffffe86f0006fb000ee800020c0038ea0002030006fb000ee800020c0030ea0002030006fb000ee800020c0030ea0002030006fb001ae800021c0030fe000401e0000180f7000004fd0002030006fb001ae800021c0030fe000401e0000180f700000cfd0002030006fb001ae800021c0030fe000401e0000180f7000004fd0002030006fb0015e800021c0030fd0003e0000180f20002030006fb0015e800020c0030fd000360000180f20002030006fb0015e80002080030fd000360000180f20002030006fb0021e80002080030fd0015601f01f800f03c000010007800f01c00fc000003000efb0022e8001c0c003000000780603f81fc00f87e06043de07c0df81c00fe0000030006fb0022e8001c0c003000000f80603fc1fc00f8ff060c3fe0fc1df81c01fc0000030206fb0022e8001c0c0030000007c0603fc1fe007cff060e3fe0fc0ff01c03fc0000030606fb0022e800020c0030fe0010606038c183000c71860e3fe1820f000c03fe0002030e04fb0022e800020c0030fe00102060302183000cc1860c3f61830e000c03fe0002030e06fb0022e800020e0070fe00106060302183001cc1860c3761ef1e000c03fe000203ffbefb0022e800160ffff0000007e06030218300fec1860c3761ff0c000c02fe000203fffefb0022e800160ffff000000fe06030618301fec1860c3763ff0c000c03fe000203fffefb0022e800160ffff000000ff06038e18301fec0860c3761fe0c000c02fe000203fffcfb0022e8001607fff000001ff0603fc183033ec1861c3761c00c000c03fe000203ff80fb001fe600143000001860603fc183070ec1863c3761800c000c07fe0001030ffa001fe600143000003c20e03fc183070ec1873c3761c008000e03fe0001030efa001fe600193000001fe0f03f818303fec183fc3760fe1c001f01fc00000307fa001fe600193000000ff1f83c018301fec183fc3f60ff1c001f01fc00000307fa001fe600193000000ff1f838018301fec081ec37607f18001f01fe00000303fa001ee600183000000fe0f030018300fcc001c006607e00000c00fc000003f9000ee6000030fc000030f0000003f9000ee6000010fc000030f0000001f90006ce000001f90006ce000003f9000ae6000010ea000003f9000ae6000030ea000003f9000ae6000010ea000003f9000ae6000010ea000003f9000ae6000030ea000003f9001de600013c02fe00107e878107000e180678fafc7f9fc1fffe87fefff90008e600003fe9fff90008e600003fe9fff9000ae600003feaff00fef90012e600070a1031e680000067fb000165c0f00002c50002c50002c50002c50002c50002c50002c50002c50002c50000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1028{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw64\pich63\picwgoal1280\pichgoal1260\macpict\bliptag37644060\blipupi72{\*\blipuid 023e671ce2d17c70cf288e40cd328ed2}0fd200000000003f0040001102ff0c00ffffffff000000000000000000400000003f00000000000000a101f200163842494d000000000000003f00404772897068af626a001e0001000a00000000003f004000980022000000000107010b000000000107010b00000000003f0040000002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0009fe0003e0000180e60009fe0003f0000180e60009fe0003f0000180e60009fe000370000180e60009fe000370000180e60009fe000370000180e6000a060003c0300101f8e6000c080007c0301fc1fc00f0e8000c080007e0701fc1fc01f8e8000c080003e0701fe1fe00f8e8000c08000070701fe1c3007ce8000c0800003070186183000ce8000c0800007070102183001ce8000c080003f87010218300fee8000c080007f86010618300fee8000c080007f06018618300fee8000c080001f0701fe18300fce8000c08000870701fc183000ce8000c08000d70701fc183030ce8000c08000ff8f01f818303fce8000c08000ff0f81c018301fee8000c080007f0f830018301fce8000c080007f07830018000fce80006fd000030e40006fd000038e40006fd000030e40002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df0002df000af4000060fe000080f10008f800f3ff00f8f70008f800f3ff00f8f70008f800f3ff00fcf70015f9000f019007ffc0000fe40000f0e00003a406f7000af9000003f3000006f7000af9000003f3000004f7000ef9000006f7000403fc000001f70015f9000604001b002004c0fe00053607fc010001f70016f900060c001b007006c0fe00063f07fc1b800180f80016f900060c001b007807c0fe00063f007c1b8000c0f80016f9000618001b00f807c0fe000637000c1b0000e0f80016f9000618001b00f80ec0fe000637000c1b8000e0f80016f9000618001f01dc06c0fe00063700081b800060f80016f9000638001f030e0fc0fe00063f00301b800060f8001bfa00072030001f03060fc0fe00063700301b800060fb00020600001bfa000720300013030604c0fe000622003001000060fb000206000017fa0005303000000206fa000060fe000030fb000207000017fa0005386000000206fa0000c0fe000030fb000207800017fa00057cc00000030efa0000c0fe000018fb00020f80001e0000feff0837fffeffc0000003fefb00010180fe00021fffdffcff01c000170000faff04c0000003fefb000001fd00001ffaff01c000170001faff04c0000003fefb000003fd00001ffaff01c0001d0000fcff06efffc0000003fefb000003fd00091ffffc7ffffff01fc0001dfd00081f0000ffc00000030efb000006fd000038fe0005c000000780001dfd00080c000078e000000206fb000006fd000030fe0005c000000780001efd00080c0000787000000206fb000107f0fe000930000001e0000007000021fd00080c0000703000000306fe000401800007fcfe000960000001e0000006000021fd00100c000060300000030600001801800007fcfe0009c0000003f000000600001efd000b0c0000603000000206000018fe000107fcfe0004c0000003f0fc0012fd00000cfe000030f2000440000007f8fc0012fd00000cfe000030f20004c0000007f8fc0012fd00000cfe000038f20004c0000007f8fc0013fd00000cfe00001cf300050180000001f0fc0013fd00000cfe00000cf300010180fe0000c0fc0013fd00000cfe00000ef300010380fe0000c0fc0012fd00000cfe000006f3000003fd0000c0fc0012fd00000cfe000002f3000006fd0000c0fc000ffd00000cef000006fe000101c0fc001dfd00000cfd000efefc0863b3800078d0000263c0007cfe000101c0fc0011fd00000cfd00f3ff00f8fe000101c0fc0011fd00000cfd00f3ff00f8fe000101c0fc0011fd00000cfd00f3ff00f0fe000101c0fc0019fd00000cfb000316800007fe000430c0000320fc0000c0fc000afd00000cea0000c0fc000afd00000cea0000c0fc000bfd00000ceb000101c0fc000bfd00000ceb000101c0fc000afd00000cea0000c0fc000bfd00000ceb000101c0fc000bfd00000ceb000101c0fc000bfd00000ceb000101c0fc000afd00000cea0000c0fc000afd00000cea0000c0fc000afd00000cea0000c0fc000bfd00000ceb000101c0fc000bfd00000ceb000101c0fc000bfd00000ceb000101c0fc000afd00000cea0000c0fc000afd00000cea0000c0fc000afd00000cea0000c0fc000bfd00000ceb000101c0fc000bfd00000ceb000101c0fc000bfd00000ceb000101c0fc000bfd00001ceb000101c0fc000afd00001cea0000c0fc000bfd00000ceb000101c0fc000bfd00000ceb000101c0fc000bfd00000ceb000101c0fc000bfd00000ceb000101c0fc000afd00000cea000080fc0018fd00001cfa000505100000011cfc000060fe000101c0fc0011fd00001cfd00f3ff00f8fe000101c0fc0010fd00000cfd00f3ff00f8fd000080fc0010fd00000cfd00f3ff00fcfd000080fc001dfd00000cfe000f030007cf8000083c000001800003c80efd0000c0fc0012fd00000cfe000003f300000efd0000c0fc0012fd00000cfe000007f3000006fd0000c0fc0015fd00000cfe000006f50002010001fe00010180fc001efd00000cfe00060e001b000004c0fe000a0600001b000180000001c0fc001efd00000cfe00060c001f00000fc0fe000a3600001f000180000001c0fc001efd00000cfe00061c001f00000fc0fe000a3600001f8001c0000001c0fc001efd00000cfe000618001f00000dc0fe000a3600001b8000c0000001c0fc001efd00000cfe000630001b00000dc0fe000a3600001b8000c0000001c0fc001efd00000cfe000610001b00080fc0fe000a3603e01b8000c0000001c0fc001efd00000cfe000630001b003e0fc0fe000a3707f8130000e0000031c0fc001efd000a0c00002030001f003e0fc0fe000a3607f8130000e0000031c0fc001efd000a0c000060300013003f0cc0fe000a2603f803000060000031c0fc001afd00040c00007860fe000003fa000070fe00043000003980fc001bfd00040c000078e0fe00010380fb000030fe00043000003fc0fc001bfd00040e000078c0fe00010780fb000060fe00043c00007fc0fc001bfd00000ffeff00e0fe00013f80fb0000c0fe00003ffeff0080fc001bfd00000ffeff00e0fe00017f80fb0000c0fe00003ffeff0080fc001bfd00000ffeff00c0fe00017f80fb0000c0fe00003ffeff0080fc001cfd00040ff9f3ffc0fe0001ff80fc00010180fe00043feffc7f80fc001bfd00040e00007cc0fe0001c380fc000003fd00043800003fc0fc001cfd00090c000078c0000001c380fc00010380fe00043000003dc0fc001cfd00040c00007860fe0001ff80fc000107f8fe000460000039c0fc001efd00040c00007030fe00087f80001001800007f8fe0004e0000031c0fc001efd00041c00006030fe00083f80001801800007f8fe0004e0000031c0fc001efd00041c00006030fe00083f00001000800007f8fe0004c0000001c0fc0012fd00001cfe000030f20004c0000001c0fc0012fd00001cfe000030f20004c0000001c0fc0012fd00000cfe000038f20004c0000001c0fc0013fd00000cfe00001cf300050180000001c0fc0013fd00000cfe00000cf300050180000001c0fc0013fd00000cfe00000ef3000003fe000101c0fc0013fd00000cfe00000ef3000006fe000101c0fc0013fd00000cfe000007f300000efe000101c0fc0013fd00000cfe000007f300000efe000101c0fc001efd00000cfe000f03ffc80efffecf5cfffcdfddfff3fffcfe000101c0fc0013fd00000cfe000001f3ff00f8fe000101c0fc0013fd00000cfe000001f3ff00f8fe000101c0fc0010fd00000cfd00f3ff00f0fd0000c0fc0014fd00000cfc00010724f7000060fd000101c0fc000bfd00000ceb000101c0fc000bfd00000ceb000101c0fc000bfd00000ceb000101c0fc000bfd00000ceb000101c0fc000bfd00000ceb000101c0fc000bfd00000ceb000101c0fc000afd00000cea0000c0fc000bfd00001ceb000101c0fc000bfd00001ceb000101c0fc000bfd00001ceb000101c0fc000bfd00001ceb000101c0fc000bfd00001ceb000101c0fc000bfd00000ceb000101c0fc000bfd00000ceb000101c0fc000bfd00001ceb000101c0fc000bfd00001ceb000101c0fc000bfd00001ceb000101c0fc000bfd00001ceb000101c0fc000bfd00001ceb000101c0fc000bfd00001ceb000101c0fc000bfd00001ceb000101c0fc000bfd00001ceb000101c0fc000bfd00001ceb000101c0fc000bfd00001ceb000101c0fc000bfd000008eb000101c0fc000bfd000008eb000101c0fc000bfd00000ceb000101c0fc000ffd00000cf9000004f4000101c0fc0011fd00000cfd00fbff00fcf6000101c0fc0013fd00000cfe000001fbff00fef6000101c0fc0013fd00000cfe000001fbff00fef6000101c0fc0016fd00000cfe000703c011ffc000073ff6000101c0fc0014fd00000cfe000003fb00010380f7000101c0fc0014fd00000cfe000006fb00010380f7000101c0fc0016fd00000cfe0002040002fd000101c0f7000101c0fc0017fd00000cfe00080c001b00000dc000c0f7000101c0fc0017fd000008fe00080c003f00000dc000c0f7000101c0fc0017fd00000cfe00081c003f00000fc00060f7000101c0fc0017fd00001cfe000838001f00000fc00060f7000101c0fc0017fd00000cfe000830001f00000dc00070f7000101c0fc0017fd00000cfe000830001f00000dc00070f7000101c0fc0017fd00000cfe000830001f00000fc00070f7000101c0fc0017fd000c1c00006070003f00000dc00070f7000101c0fc0017fd00060c000060700013fe0002c00030f700010180fc0013fd00040800007060fa000018f700010180fc0013fd00040c000078e0fa000018f700010180fc0013fd00040e000078c0fa00000cf700010380fc0017fd00000ffeff00c0fa00001ffeff01fe7ffbff00c0fc0017fd00000ffeff00c0fa00001ffeff01fe7ffbff00c0fc0016fd00000ffeff00c0fa00001ffdff003ffbff0080fc001afd00040fe8f8ffc0fa000c1f0ffff0600bfe00003fe00080fc000bfa000178c0fa00001cf0000bfa000170e0fa000018f0000bfa000170e0fa000030f0000bfa00016070fa000030f0000bfa00016030fa000070f0000af9000030fa000070f0000ef9000430000003fefe000060f0000ef9000430000003fefe000060f0000ef9000438000003fcfe0000e0f0000ef900041800000180fe0000c0f0000af900000cfa0000c0f0000bf900000cfb00010180f0000bf900000efb00010180f0000af9000007fb000003ef000af9000003fb000003ef000df9000301fffffdfeff00feef000af9000001fbff00feef0008f800fbff00feef000cf800063feffffdfcfff8ef0002df0002df0002df0002df0002df0002df0002df000000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1029{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw66\pich48\picwgoal1320\pichgoal960\macpict\bliptag2069742794\blipupi72{\*\blipuid 7b5dc4ca4a9db3678075fa7f92929a15}0b8e0000000000300042001102ff0c00ffffffff000000000000000000420000003000000000000000a101f200163842494d000000000000003000424772897068af626a001e0001000a0000000000300042009800240000000000c901130000000000c901130000000000300042000002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0007fe00010380e20009fe000307800004e4000dfe000303800006f6000020f0000dfe000303800006f6000030f0000dfe000301800006f6000020f00009fe000301800006e4000a0600001e01800007e4000e0a00001f01807e07f001c1f8e800181400001f0180ff07f003e1f800006781e007c0e001c0f200181400000301807f07f803e3fc1010e783f067c0f007f0f20017fe00118180e186180003fc1030ef83f07fc0f007f0f2001814000001c180c1860c0003061810df87e07f007007e0f2001612000003c180c1860c0013021810db8400780070f000171300001fc180c0860c01f3061810db860078007010f100171300003fc180c1860c03ff061010db87f878006010f100171300003fc180e1860c07ff021010d987f870006010f1001713000001c180ff060c07f7021030db87f860002010f1001713000041c180ff060c0037061030db87f060002010f1001713000061c180fe060c0037061070db840060006010f100171300003fc3c0fc060c00760610f0fb840060007018f100171300003fc7e0e0060c07ff0607f0fb818060007018f100181400001fc7e0c0040c07ff0607f0fb83f86000f81fc0f200181400000782c0c0040003f20007b09b03fc6000f80fe0f20013fc0000c0fc000903300101f86000f80fe0f2000ffc0000c0f800056000007007e0f20002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd000cf9000001feff02f8fff8ec000cf9000001f4ff02f8c030f6000af9000003f1ff00e0f7000df9000303e0003ff4ff00e0f70012f900010380f9000701fff301bfffffe0f7000bf900010380f20000e0f7000bf900010380f2000060f7000ef9000003fb000030f8000060f70011f9000003fb000378000040fb000060f70012f900010380fc000378000060fb000060f70011f9000003fb000338000060fb000060f70011f9000001fb000318000060fb000060f70011f9000001fb000318000060fb000060f70012f9000003fc00046018004060fb000060f70016fa00010183fd000701f01807e07f001cfd000060f70016fa00010183fd000703f01807e07f003cfd000060f70016fa000101c3fd000701f01807f07f003cfd000040f70019fa000101c3fc000618180e187f800efd000040fb000008fe001e080007ffbff7800003e3fc000618180c18608003fd000040fb00000cfe001901000ffafffc00063c180c1860c003fd000040fb00000efe001a010007fafffd000701f8180c1860c00ffd000060fb00001efe001f030000200ffcfffd000703fc180c0860c03ffd00077ffffffc6000023ffe001afc0003f00003fffd000703f8180c1060c03ffd00007ffafffe001cfc0003600001e3fd00070438100ff060c01ffd00007ffaff028000001efc0003600001c3fd00070418100fe060c003fd000471fff85feffefffe001efc000360000183fc000618180fe060c183fd0007600000030004001ffe001ffc000360000183fd000701f83c0fc060c0fffd000360000003fe00001efe001ffc000360000103fd000703f87c0c00e0c07ffd0007600000078000001efe001ffc000360000003fd000701f87c0c0060c07ffd0007600000078000001cfe001efc000360000003fc0006803c0c0000803ffd00076000000fc0000018fe0015fc000360000003fa00000cf900046000000fc0fb0015fc000360000003fa00000cf900046000001fe0fb0015fc000360000003fa000008f900046000001ff0fb0011fc000360000003f100046000001fe0fb0011fc000360000003f100046000000780fb0010fc000360000003f1000340000003fa0010fc000360000003f1000340000003fa0010fc000360000003f1000340000003fa0012fc000560000003ff24f3000340000003fa0016fc000360000003faff02cffec0fb0003c0000003fa0010fc000360000003f1ff03e0000003fa0010fc000360000001f1ff03e0000003fa0014fc000060fc000318fd80eff7ff03c0000003fa0014fc000060f5000a01df80000ffe3f80000003fa000afc000060eb000003fa000afc000060eb000003fa000afc0000e0eb000003fa000afc0000e0eb000003fa000afc0000e0eb000003fa000afc000060eb000003fa000afc0000e0eb000007fa000afc0000e0eb000007fa000afc0000e0eb000007fa000afc000060eb000003fa000afc000060eb000007fa000afc000060eb000007fa000afc000060eb000007fa000afc0000e0eb000007fa000afc0000e0eb000007fa000afc0000e0eb000007fa000afc0000c0eb000003fa000afc0000c0eb000003fa000afc0000e0eb000007fa000afc0000e0eb000007fa000afc0000c0eb000006fa000afc0000c0eb000006fa000afc0000c0eb000002fa000afc0000c0eb000002fa000afc0000c0eb000006fa000afc0000c0eb000006fa000afc0000c0eb000007fa000efc000040fd000038f0000006fa0014fc0000c0fe000007f8ff02803660fb000007fa0012fc0000c0fe000007f3ff00c0fe000006fa0012fc000040fe000003f3ff00e0fe000006fa001afc0000c0fe00081000000c0003fff73bfbff00e0fe000006fa0017fc0000c0fe000018f800050700001bfff0fe000006fa0012fc0000c0fe000030f3000030fe000006fa0016fc0000c0fe00042000000780f7000010fe000006fa001cfc0000c0fe00056000100f804cfd00011007fe000008fe000006fa001cfc0000c0fe00056000b80f806cfd0005b80f804c000cfe000006fa001dfc0000c0fe0005c0003807c04cfe000601b80f80cc000cfe000006fa001dfc0009c00000018000b800606cfe000601b802c0cc0006fe000006fa001dfc0009c00000018000b830606cfe000601b800404c0002fe000006fa001dfc0009c00000018001b830606cfe000601b020604c0003fe000006fa001dfc0009c00002018001b830e06cfe000601b02060cc0003fe000006fa001dfc0002c00003fe00033830e06cfe000601b02060cc0003fe000006fa001dfc0009c000038000001011e04cfe000601302060dc0003fe000006fa001bfc0003c0000386fe000133e0fc00053000e0cc0003fe000006fa0017fc0003c00003c6fe000133e0fb00011fe0fb000006fa0017fc0003fff807fefe00013fe0fb00011fe0fb000006fa0019fc00feff00fefe00013e60fb00010fe0fe000380000006fa0018fc00feff00fefe00013c60fa0000e0fe0003c000000efa0018fc00037ffffffefe00013c60fa000060fe00feff00fefa0016fa000107cefe00013860fa000040fe00feff00fefa0012fa00010386fe00013060f600feff00fefa0018fa00010386fe00011060fb00010180fe0003e33fea40fa0015fa00010303fe00011ec0fb00010380fe0000c0f70015fa000603018000001fc0fb00001ffe00010180f70018fa000d02018000000f800001000c00003efe00010380f70016f9000c018000000f800001800800003efe000003f60015f900070180000002000001fd00003efe000003f6000bf900010180f3000003f60006e9000003f6000af8000040f3000007f6000af8000040f3000007f6000af8000060f300000cf6000af8000020f300000cf6000af8000030f3000008f60006f8000010e7000af8000007f3000030f6000ff800000ffaff01c3e0fc000030f6000af800000ff3ff00e0f6000af8000007f3ff00c0f6000ff60005643c0507fffefaff00c0f6000aed00048000ffff80f60002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0002dd0000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1030{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw82\pich31\picwgoal1640\pichgoal620\macpict\bliptag-913988459\blipupi72{\*\blipuid c985a495181ab652a40fb45d505a1699}08a200000000001f0052001102ff0c00ffffffff000000000000000000520000001f00000000000000a101f200163842494d000000000000001f00524772897068af626a001e0001000a00000000001f00520098002c0000000000810157000000000081015700000000001f0052000002d50002d50002d50002d50002d50002d5000afb000008fb000004e3000d010003fd00000cfb00000ee3000e02000380fe00000cfb00000ee3000e02000380fe00000cfb00000ee3000e02000380fe00000cfb000008e3000e02000380fe00000cfb00000ce3001d120003820700000fc00000700000fe00000e01c0fc000340000010f1001f1b0003870781831fe01c00f807c1fe00007f07e01f8e0c0b07f007c07cf1001f1b0003870fc1838fe03e00fc6fc1fe00007f07e01f8e0c1f07f80fe07cf1001f1b00030e0fc1838ff03e007c7fc1fe00007e07c01f8e0c1f07fc1fe03ef1001f1b00038c1c01830e101200067f800e0000600e000f8e1c1e078e1fe007f1001f1b00038c1c21830c1800800770000e0000800c00018e1c000706380187f1001f1b0003801fe1830c18c1801ff0000e0001c00e30c18e1c20c6063801c7f1001f1b0003e01fe1838c18c180ff60060e0000f80ff0c18c1c7fc7063001fff1001f1b0003e03fe1838c18c180ff40060e0000fc0ff0c1861c7fc7063001fff1001f1b0003f01fe0831c18c180ff40070e00007c0ff0c18e1c7fc6063001fff1001f1b0003f83e401f1c18c181ff40070e00007e0e20778c1c7dc6063001f6f1001f1b00039c18007f1c18c1830740070e0000030c003f841c6006063001c0f1001f1b00038e1e007f1c00c183af40030e0000030c003f801c40060e300180f1001f1b00038e0fc03f0fe07101ffc003fe0000f807e03f81dc6007061801fef1001f1b0003860fe0070fe03e00ffc003fe0001fc07f00f83dc3fc6061fc1fff1001f1b0003860fe0030fe03e00fe4001fc0001fc03f00183dc1fc2040fe0fff1001f1b00030007e03c03c03e007e4001fc0000fc03f00181c81fc0000fe07ff10015fc00007cf7000b6000000180000180000e0020f1000bfc00007ef400010180ea000bfc00007cf400010180ea0006fc000038db0002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d5001efb0011fff0400fff300f9dc80003f0800020980001f90003700001fff9001bfc000001f5ff00f9fdff0dbffffcc1feffff9ffffffbffffe0fa000efc000001ecff00fef9ff00e0fa0022fc00170340ff7ffffeffff0007fffe47ffffe3fff9f3007fffe47ffbff01f3c0fa0012fc000003ed00081800001dfc00007fc0f8000afc000003e3000018fa0006dd000018fa000efc000004f6000001ef00001cfa0015fc00000cf6000301800003f80000c0fc00000efa0014fc00001cf50002800003f80000c0fc000006fa0012fc000038f3000003f80000c0fc000007fa0012fc000038f3000003f80000c0fc000003fa0013fc000030f3000003f80000c0fc00010180fb0026fc0005300000070fc0fe00121f000c03003007c00001800400000380e00038fe00010180fb0027fd0021603000001f8fe000c0003f811f0780fc07e01c07e00f800007f0fe007c07c0000180fb002afd0024603000001f8fc041c0003f839f0780fe0fe01c07e00f800007f0ff007c27c0000380000002fe002afd000070fe00200f8e0041c0003f83c60380fe07c01c07801f80000ff0ff007c77c0000180000003fe002afd000078fd0022cc18e0c0003843c00380ef83801c07001f00000c00f1801030800001800000038000002bfd000178c0fe0018cc18e0c0003063c00180c183000c06043060001c00c1800278fe0006c00000038000002d010007feff1cc000000dcc18e0c0003063c00180c183000c060c3060001c00c1801678fe0006e0000007c000002b01000ffeff1cc000001fcc18c0c0003063800180c1830004060c3060001c00c1807f70fe00fdff02c000002b01000ffeff1cc000001fd818c1c0003063800180c1830004060c0060001c00c180ff60fe00fdff02e000002b21000f8018ffc000001fdc1841c0003843800180c1830004060c0060001800c1c0ff60fe00fdff02e000002bfd0001fdc0fe0018d8181f80003f83800180c183000c060c0fe0001800c181ff60fe0006ff80007fc000002bfd001d78c0000020dc183f80003f83000180c182180c060c0fe0001800c0818620fe0006e0000007c000002afd001c78e000003fdc183fc0003f83000380c180180e060c0fe0000800c18186fd0006c00000038000002bfd0027707000003fdc1807c00038038003c1c180e01e060c07e00007c0c180ff20000001c00000038000002afd0024e07000001fcc1801800030030003c1c180e01e060c00600007f0c080ff2000000380000003fe002afd0012603000001fc00001800030010003c0c180e01efe000e600007f0c080fe2000000380000003fe0025fc00093000000e00000e000070fa000a1c000007c00003e000003efe00040380000002fe0017fc000030fc00031f000070f700010f80f800010380fb0017fc000030fc00031f000030f700010f80f800010380fb0012fc000018fc00000ef400000ff7000007fa000afc00001ce3000007fa000afc00001ce300000efa000afc00000ce300000efa0006dd00001cfa0006dd000018fa0017fc000901ffe0003fe000000c60fc000006f2000078fa0020fc000001fbff00dffcff12fc63fffe7e0eff9fe1fffffe7dfffdfdc7fff0fa000efc000001edff00fbf8ff00c0fa001afb00087fcffffe60fffffef7fbff04bffffe71dff7ff0080fa0021fa001b01b800007fdc00006fa0001dff0001ee000007f780007ff80003ffe0f80002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d50002d5000000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1031{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw134\pich32\picwgoal2680\pichgoal640\macpict\bliptag-1738435583\blipupi72{\*\blipuid 9861940196704c21ef8fff0993da1934}0bec0000000000200086001102ff0c00ffffffff000000000000000000860000002000000000000000a101f200163842494d000000000000002000864772897068af626a001e0001000a000000000020008600980046000000000087022f000000000087022f0000000000200086000002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb000ffc00010180f900000cfd000010d0001206000001c00001c0f900001cfd000030d0001606000003c00001c0fe000003fd00001cfd000030d0000e06000007c00001c0f900001ccb000e06000007700000c0f900000ccb000e06000006300000c0f900000ccb001506000006200000c0fc00033800000cfa00007cd3001b17000006003800c00f00000600fc00780c000007c0700380fed3001b1700000e003800c01f00000701fe03f80c02040fe0f007c0fed3001b1700000f003800801f00000701ff07f80c060c0fe07007e0ffd3001c1800001fc03800c00200000701c70ff00c060c1f807003e0c380d4001c0600001fc01800c0fe000e0301830c000c060c3000300031c380d4001c1800000fc01800c03380000301830c000c060c3c00300031c180d4001c1800000f801801c07fc0000301831c000c060c1f80301031c180d4001c0200000efe0012c07fc0000301838c000c060c1f80301831c180d4001c02000006fe0012807fc0000301838c000c060c0fc0301831c180d4001c02000006fe0012807f80000301838c000c061c07c03018318180d4001c18000006001800006000000301838c000c061c00e0301831c180d4001c18000006001c01c060000003018388000e003c00c0301831c180d4001c18000006003c01e03f800007818380300e01fc1fc0781f61c180d4001c1800000e003c03e03f80000fc18383f81f01fc3fc0780fe1c180d4001b1700000e007c01e03fc0000fc18383f81f01fc3f807c07c081d30018fd00123800c01f80000fc00101f80e000c3f807807c0d20002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0006f8000020c50039fb000003feff05df9ffffff83ffcff0080fd000207fff0fd00177ffff9f17fff8001fffc001fffc600fffc0007f7f00008fdfc00010ff0fb001cfb000007f3ff00e0fd000207fff8fd00e9ff00c0fe000203fff8fb001efb00000ff3ff00e0fd000207fff8fe000001e9ff00c0fe000207fff8fb003dfb000f1fff800049fe0006fff00037ff838ff0fc000102fcfe001001ff277ffff60fffff0fbffffc03ffffc5feff0575fffff1ffc0fe000207fffcfb0022fb000018f3000030fd000210000cfe00010180ed0003200000c0fe000210000efb001dfb000038f3000018fb00000efe00010180ea0000c0fe0002180006fb0021fb000070fa000008f4000006fe00010180fd000007ef0000c0fe0002380001fb0030fb000370009003fd00001cfe00032000000cfc00013703fe00010180fd00030700400ef20000c0fe000370020180fc0030fb000360009803fd00001cfe00036000000efd0002203701fe00010180fd00030f00600ff20000c0fe0002601701fb002dfb0002c00098fc00001cfe000320000006fc00013701fe00010180fd00030f80400ff20000c0fe00016037fa002cfc000301c00098fc00000efe000320000003fc000036fd00010180fd00031b800007f20000c0fd00003ffa0032fc000301c000f8fc00000efe000360000003fe000801801600c000000180fd000319800007f20000c0fe0003803f0040fc0034fc000401c001fc02fe0001300efe000360000003fe000801803700c000000180fd000338800003f20007c0000001803f0060fc003ffd00110201c003fe0f00fc03f80c000007e07c0003fe000801803700c000000180fd000d3800c00200780000780078300070fc0007c0000001803f00e0fc003ffd001103018003fe0f00fe03f80c02060fe07c0003fe000801803700c000000180fd000d3801e002007c0000fe00f87b80f8fc0007c000030180370060fc0042fd001d03038003fc0700ff03f80c02060fe0fe0003000003018002004000008180fd000d3e01e003007c0000fe00787fc1f8fc0007c000030180160040fe000180003afd000f03830001f80701ff04000c060607e186fd00010380fb0001c180fd000d7f00e00700780000fe00107fc3fcfc0003c0000383fa0001c0003ffd001503870001f80301c30c000c0204006187000080000380fc000201e380fd00037f00e007fd0005c100007fc30cfc0003c0000382fe000010fe0001c00041fd001507cf0001f80301830c000c02043061870000c00003c6fe0004300001f380fd00037f006007fd0005c180006fc21cfc0003400003c6fe000510000001e000441900007ffe7ffe0001fc0301810c000c06040021ff0000ffffeffefe00003ffeff0080fd000d3e00600701fe0000c1801a6fc3fcfc0003c0000ffefe000518001ffff00043010000feff10fe0003fe0301830c000c06062021ff0000feff00fefe00003ffeff0080fd000d3800600701fe00008180fe6ec3fcfc00feff00fefe00001ffeff01f000431500007ffffffe0003fc0301838c000c020e3031ff0000feff00fefe00003ffeff0080fd000d3800600701fe00008180fe6fc3fcfc00feff00fefe00001ffeff01f8004319000003ffffce0001f80301838c000c020e3061fe0000fd0007fefe00043e0003ff80fd000d3000600701fe000081807e6fc3fcfc00feff00fefe00051ffffcc1f00041fd001503860001f80301838c000c021e3061800000c00007cefe0004300001f380fd000c30006006018000008180066fc3fb0003703003cefe000518000001f00040fc0014070001b80301830c000c021e3061800000c00003c6fe0004300000e380fd00043000600701fe00048181066fc3fb0003c00003c6fe000530000001e00040fc0014038001b807818387f80e01fe18e1fc0001c0000383fe0004700000e180fd000c3000f00701c0000081819eefc3fb0003c0000387fe000530000001e00041fc001c01c0019807818383f81e01fe1fe0ff000380000383800000e00000c180fd000d3000f00f80fe00008181ffefc1fcfc0003c0000303fe000520000001c00041fc001c01c001f807c18383f81f01e60fe07f000300000303800000c000008180fd000d3001f00f80fe00008180ffefc1fefc000cc000030380000040000001c00041fc001c01e0009003800001f81f00c00fe07f000300000201800000c000000180fd000d1000f00f80fe00000100fe6f81fcfc000cc000030180000040000001800034fc000101e0fa000304000001fe000003fe000801800000c000000180fb0003f000007cfa0000f8fc0007c000000180000060fc0022fc000101e0f3000003fe000801800000c000000180ea0007c000000180000060fc0021fb0000e0f3000007fe000801800000c000000180ea0007c000000380000040fc001efb000060f3000006fd0000c0fc00010180ea0007c000000180000180fc0020fb000060f300000efd0002400001fe00010180ea0000c0fe000360000180fc001bec00000cfd0002600003fe00010180ea0000c0fe0002600001fb001dfb000018f300001cfd0002600003fe00010180ea0000c0fe000060f9001bfb000018f3000018fb000004fe00010180ea0000c0fe000030f9001dfb000038f3000038fb00000cfe00010180ea0000c0fe0002180006fb0031fb000f1b00ffbe0001fff00003f780001cbdf0fd000203fe1cfe000901dfffe000063e000028f3000103c0fe000038f90022fb00000ff3ff00e0fd000207fff8fe000001edff00c3feff00c0fe00021cfff8fb001efb000007f3ff00e0fd000207fff8fe000001e9ff00c0fe00020ffff8fb0029fb000f07fffff5ffff7f7ffffffc7fffffbfc0fd000203fff0fe000001e9ff00c0fe000207fff8fb003afa000e600000070000019e00001dc7000080fb000060fd0018f0001fff00003ffe0002ffe0007fff0003fff8001fffc000c0fe000207fc20fb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0006f3000020ca0002bb0002bb0000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1032{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw113\pich30\picwgoal2260\pichgoal600\macpict\bliptag1785401133\blipupi72{\*\blipuid 6a6b0f2d002cfadcc07604adf289a346}091a00000000001e0071001102ff0c00ffffffff000000000000000000710000001e00000000000000a101f200163842494d000000000000001e00714772897068af626a001e0001000a00000000001e00710098003c00000000007b01d500000000007b01d500000000001e0071000002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50006fc000030cb000905000018000078cb000905000038000078cb00090500007c000038cb00090500007e000038cb000905000066000038cb000e05000042000018f9000101c0d500130f00004003001801e00001f003e0c603c0d500130f00004007001803e00003f803e1cf03e0d500130f0000f007001803e00007f801f1ef03f0d500130f0000f803001801e00007f80011ff0030d500130f0001fc030018001000060c0019f70830d500130f0001fc0100180c3800060c0079f70ff0d500130f0000f80100180ff800060c03f9bf1ff0d500130f0000e00100180ff800060c03f9b71ff8d500130f0000400100180ff800060c07f9b71ff0d500120e0000400100180ff000060c07f9b71ed400120e0000e00100180c0000060c0c19b31cd400120e0000e00100180c0000060c0c3bf708d400130f0000e003803c0fe000060e03fbf70ff0d500130f00006007c03c07f000060e03fbb707f0d500130f00004007c07c07f800060c03f9b707f8d500130f00004007801c03f800060401f03207e0d5000afe000403000001f0cd0002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50002c50015dc000f7000000ffbc0003ffc423ffff800fff8fa0027fa001d010800000680000028000003ff80003fff8803fffc001ffff2707ffffff3f2ff00fcfa000ffb000037feff01f87fd9ff00fefa0012fb00007fdcff08e07fffff020fffe007fa0020fb00f4ff00f9feff109c7fffbe73fff0001fff80803ffc000074f5000007fa0019fb000f7ff0000ffe80007ffc00000ee00004d0e3000007fa0007cd00010380fb000fe400040180000040ef00010180fb0020fc000002f5000006fc000101f0fe00040fc01e00f0fc000010f500010180fb001efc000006f500000ffe0003100003f8fe00040fe03f01f8fc00011006ee001efc00000ef500000ffe0003180003f8fe00040fe03f01fcfc00011006ee0022fc00000cf5000007fe0003100003fcfe00040c1073820cfc00011006f5000040fb0022fc000018f5000007fe00031000030cfe0004081040860cfc00011006f5000060fb002bfc000018f5000006fe000330000204fe00040818408604fc000a3c07800000f00000030060fe000060fb0031fc000018f5000003fe000a7800020001e0180810c086fe000df800f83e07f00001fc00f0e781f0fe000060fe000280000039fc000018fe00031c0fc001fd00203c07007003f800020013e07c1818c086000001fc00f87f07f80001fc01f0f781f0fe000660000001c0000038fd00012038fe00283e1fc081800040c03e06007003f80002003fe07c1c18c082000001fe00f87f07f80001fc00f0ff8080fb000301c000003bfd00013038fe00283e1fe181800040c03c07007003f80003fc3fe03c1c18c083f00001ff00003c020c0001860000ff8208fe000610000001e000003bfd00013830fe00280f1fe1c1800040c00806003000380003f83c00001818c081f0000187000430020c0001030000f9860cfe000618000001e000003bfd00013860fe0028013830c1800060c00002003000100003f83c01001818c081f8000183000e300606000103001dd987fcfe00061fc1fffff000003bfd00013ce0fe002801b831c1800060c00302003008100007f03c01011818c080fc000183007e30060600010301fcd987fcfe00001ffeff02f800003d050003e0007fe0fe00281fb831c1800060c01f07003018100003803800031818c0800c00018300fe30060400030301fcd987fcfe00001ffeff02f800003d010007feff00e0fe00283fb83081800060007f07003018180003003001031818c0800c00018300fe30060400038303fdd987f8fe00061ffe0003f800003c010003feff00e0fe00277fb83083800060007f87003018380002003001011818c0800c0001fe013e30060c000107038ccb86fd000618000001f000003c010001feff00e0fe00277fb8303f800031003f07003018380002003001811818c0800c0001fe030630860c000107020cd986fd000638000001e000003d0500000ff87ce0fe0028c3b8307f80003b000307003008180002003001811c1841c60c0001fc020618c604000187001cd98410fe000638000001e000003bfd00013860fe002881b8307f80001f008307003008380006003001831e300187fc0001fc007e1f860c00030701fddd81fcfe000670000001c000003afd000038fd00280fb8303f80001f00ff0780380ff800060030007e0ff01f83f80001f800fe0f060c00010201fdd981fcfe00066000000180000037fd00013010fe00283fb8300380000e007f8fc07807f800060030007e0fe03f01f800018000de0f060400010201fdd980fcfe000060fb0034fd00012038fe001e3fb8200380000c007f8fc07c07f000060030007c0fe03e01f0000180007e06fb0003f8000008fe000060fb0028fc000018fe00033fb80007fd00073f07803c03f00002fe00033800001cfe00010180f10000e0fb001afc000018fe00031e00003efd000008f000010180f10000e0fb0013fc000010fb00003eeb00010180f10000e0fb000ffc000010fb00003eda000101c0fb000bfc000008d300010180fb000bfc00000ed300010380fb000afc00000ed3000007fa000afc000006d3000006fa000bfc000003d4000117fefa001cfc000003e900030400000cfe000733c0004ffee0067ffaff00fcfa0023fc0014030001e0e00017fc000077f80007fff2867fffdff6faff01fe3ff0ff00fcfa000ffc000001e6ff01fe3ff0ff00f8fa001bfb00e8ff137ffff43dfffff837fff000ffff0001fff80003fff80020fb00f8ff18f60ffffe01ffffe180fffc0003ffe0000ffb00001fc0000002ed0012fb000c7ff00000ff8000312000008080d80002c50002c50002c50002c50002c50002c50002c5000000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1033{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw212\pich32\picwgoal4240\pichgoal640\macpict\bliptag-809700452\blipupi72{\*\blipuid cfbcf39c0fe8acaa17cb5397692ef7ee}11da00000000002000d4001102ff0c00ffffffff000000000000000000d40000002000000000000000a101f200163842494d000000000000002000d44772897068af626a001e0001000a00000000002000d4009800700000000000850373000000000085037300000000002000d400000291000291000291000291000291000291000cfb0002040030f4000060a8001602000080fe00020e0030f400026000e0fa000004b2001602000080fe00020f0030f400026000e0fa000004b20010fb00000ff20002600060fa000004b20010fb000007f20002600060fa000004b20010fb000007f20002700060fa00000cb20024010001fd001206006000001c000003c07800e03c00007f0060fe000501f01e001c0fb30026220003800f00000600700fc03e000007c0fc03f07e06387f006000300003f83f01fc0f80b40026220003c03f00000700f01fc03e000007e0fe07f07e0ff87f806000300003f83f01fc1fc0b40026220001c07f80200700701fc07f000003e1fe07e07f0ff87f806010300003f07c01fc3fc0b400260f0001c07fc7fc0700701f00c380000033fe0007c30ff860c0601030fe0004e0001c30e0b400260f00018060c7fc0700301810c380000033fe000f830ed860c0601030000800c0060c70e0b400262200008040c3fc0700301830ff800000fbe00000e78cd860c0601030000c00c0060c7fe0b40026220000c040c0000600301830ff800003f9f007c1ff8cd860c0201030000c00c0860c7fe0b40026220000c060c0000600301830ff800007f0f807c1ff0cdc60c0201070000c00c0860c7fe0b400262200008060c0000600301830ff000003f0f807c1ff0cd860c0201ff0000c00c086047fc0b400250b00008060c0000600301830f6fe0012f00803e1c00cd860c0200ff0000c00c0860c70b30025210000c061c0000600301838c000000830040060800fd860c0600ff0000c00e1860c20b30026100001c0e1c0000700381830c000000c700efe000e0fd871c07007f0000e0073860c07c0b40026220001c0e0c00007807c18387f80000ffbfc07c03f0ffc7f80f800700007f87f83fc0fe0b40026220001e0e0c0000f807c18307f80000ffff81fc07f8ffc7f80f800200007f83f03fc1fe0b40026180003e0e000000f807c18303f800007fff81fc07f8dfc7f00f8fe000603f83f01fc0fc0b40025210001e04000000f803818301f000001f0f00fc01f00980000f807800001f00c00f801b3000f020000c0fe000007ef00010fc0ac0007e800010fc0ac0007e800010380ac000291000291000291000291000291000291000291000291000291000291000291000291000291000291000291000291000291000291000291000ab4000008fc000006e50022ca001402000009f600007ffc0037ffff80fffffc7ffffc71feff001ffbff00fee80010d500067fb0007fffe903deff00fee80021ea000c3c400fffc033ffffec3ffffffdfeff0787fffffe3fffffefdaff00fee80019ea00d3ff115a7dfffc008fbfdc13fff80000fff00003fee8001dea00e8ff0d4fffff007ffff0007fff00010030fe000080ed00000ee8001cea00feff10bffffff6c1fffe000fff70007fbe000020d6000006e8000aea0000c0c3000006e8000aea0000c0c3000006e8000aea0000c0c3000006e8000aea0000c0c3000006e8000aea0000c0c3000006e8000aea0000c0c3000006e8001bea0000c0c3000006fe000d01a3c000020e00003b7e0007fc36f90024ea0000c0db000d7ff1001fffffc3fffff3fffffdfbf9ff05800006000007f3ff0080fa0025ea0000c0ed0008c000000ffe0187fffefdfffd00000febff0580000600000ff3ff00c0fa0036fa001503900001cff80000db00007fff800000c0007ffff9c7feff027ffff5ebff0080fe00001febff0580000600000ff3ff00c0fa0046fc0001019ff4ff04e00000c001f6ff00feedff0080fe00011ffefeff26cbffffce07fff1c01fff00107fff0003ffe8c00006000007f000035fe0000bff000047f0000360fa0028fc000003f3ff04f00000c001e4ff03f85cff80fe0002380002ed0005600006000020f3000060fa003afc000003f3ff1af80000c001fc39ffffdb8ffffe001fffe0002ffe04007f40001c08f800010380fe000060eb0005700006000060f3000020fa0034fc001401efc00019c400001f8000007280001c0000c001c0e300010180fe000060f7000006f60005300006000060f3000030fa0031ed00050c0000c00180e300010180fe000060f700050f0000070010fb00083800060000c0000360fd000060fb000018fa0039fc00000cf30005040000c00180e300010180fe000080fb000020fe00050f0000070010fb00081800060001c0000360fd000060fb000018fa0034fc00001cf00002c00180e30005018000000180fb000020fe00030f800007f900080800060003800003e0fd000060fb000018fa003dfc000018fd000003f80007020000c001000001f6000001f10005018000000380fb000020fe000319c00007f900080e00060003800003e0fd000060f30044fc000030fd000013f80007030000e001000001fd00000cfb000003f100040180000003fa000020fe000318c00003f900080e00060003000003e0fd000060fb000004fa0047fc000030fd000013f80007018003f801800003fd00000cfb000003f100040180000003fa000060fe000318000003f900080e00060003000007f0fd0000e0fe000301000006fa0055fc000060fd000033f8000701c007f801800003fd00000cfb000003f100040180000002fe00100600f003e00001c018000003007007c01efe00140600060003000007f81e03f007e01e03f073800006fe000008fe005cfc0000e0fd000037f70006c003f801000003fd00000efb000003f9000c07003801f00c00000180000402fe00101f03f807e00003e01800000300780fe03ffe0014060006040700000ff81f07f00fe03f07f0f7800006fe000008fe0067fc0000e0fd00023f8010f90027c003f801000001000380000fc00e003c03e03f00001f01e01f82000f81fc03f81f00000180000602fe00101f03f807f00003e01800000300780fe03ffe0014070006060700000ff03f07f81fe01f07f0ff800006fe00001cfe006bfd000180e0fd00057f807c07e1cefc0027c001f0010000030207c0810fe01f007c37e07f00003f83e01fc3060f81fc03f83f00000180000602fe00281f83fc07f00007e03e00000300380ff007800000030006070c000007f07f879c1fe0018f00ff800003fe00001efe006afd0001c0c0fd00057fc07c0fe1fffc0026c001e0810000030607c1810fe01f003e3fe07f00003f83f03fc7060fc1fe03f07f800001800006fd002801c3060070000e187f00000300380c1841c00000030006070c000007e061860c30e001d800cf800001fe00001efe006bfd0001c0c0fd00057f803c0fe1fffc00278001e0830000030607e1810f701f80173f807f00000f043839c60610e1c70c004380000180000704fe002c60c3061070000c187f00000300180c1841c000000180060f9c000007f061c60c206001dc00cf8000018024001ffe0067fd0001e080fd00053f00003cc3fffa0010c0c30000030800618108184180033c0007fe0011041860c6063061831c004180000180000f0cfe002871c3063030000c187e00000300180c187fc0000003f88ffffc000007f87fc60c20600fcfc0cf800001fdfffe006bfd0001e180fd00053f00003003b7fc00122000c1e10000031818718108186080033c0103fe0011043860c60638e1031c007f800001e3ffffbcfe00147fc3063060000c183800000300180c187fc0000003feff10fc00000ff87fc60c20603f87c0df800001fdff0280000069fd0001e380fd00053f00033003b7fc00232023f1e3000003f81cf181081860c01f3801830000700ff860c7063fe1831c007fc00001feff00fcfe00147fc3063070000c181800000300180c187f80000003feff10fc00000ff87f860c20603f87e0cf800001fdfffe006d05001f8021ff80fd00057f803f1f01b7fc00003ffeff1f800003f81ff1810818e0c03f30018300003e0ffc60c60e3fe1831c007fc00001feff00fcfe00147fc3063060000c181800000300180c18ff80000003feff14fc000007f07f860c20601b81e0cd800001e0003ffffe006d01003ffeff0080fd00057f807f0f8137fc00003ffeff23800003f01ff1810818c0c07f70018300003e0ff860c70e3fe1831c007f800001ffe30ffcfe00107f83063020000c181800000300180c18e0fe00180380000f9c000007e06006042060018010cf8000018000001efe006d01001ffeff0080fd00057f807f0f813ffc00273ffe3fff800003f01fe1830818c0807f70018300003e0ff83fc71e3b81830c00ff000001fc00079cfe00106007063020000c181800000300380c18c0fe00180380000f0c000007e04006042060018030cf8000038000001efe006d010007feff0080fd00057f80ff07c1bffc00273e0003ff800003f818007f0818c080e33001830000010e001fc71e3001831c00c00000010000070cfe0010700706106000081818000003803c0c187ffe00030700000ffe000d03606f060c01e007c030cf800003fe00001efe006d0500000c01e380fd00053f018300e3bffc0027200001f38000011810007f0818e1c18330018700000184001fc73e0001830c00400000010000070efe00287e87061ff00003f038000007807c1c187f8000000600000e02000003603f860c0fe03fdfe0cf800007fe00001cfe006bfe000201e180fd00053700830063bffc0021600001e38000011c18007f0e786180c7f0018700000300301fc3fe0f81030ff07f80fd0001070efe00283fc7060fe00003f01800000fc07e1c183fc000000600000e03000003603fc60c0fe03fdfe0dd800006fe00001cfe006bfe000101e0fc000537006f07e3bffc0027600001e38000030e0fe01f0ff07f80fff001ff00007f03f801c1fe0fe18307f83f80000100000606fe00183fc3060fe00003e018000007c07e1c183f8000000e00000403fe000c203fc0000fe01f9fc059800006fe000008fe0066fd0001c0c0fd000537007f3fc3bffc0027c00001830000030e0fe0030fe03f007ff000ff0000ff03f800c1ee0fe10303f03f80000180000006fe00101fc00007e00003e010000007800808000cfe000006fe000007fd00071f800001c0000180fe000006fa004bfd000180e0fd000537007f3f81bffc0027c00001838000030607e0030fe01f007f30007f0000fe01f800c0c40fe00000e01f80000180000006fe000007ee00000efe000003f2000006fa0042fc0000e0fd000537007f3f8010fc0004c000008380fe000503c01e00c00efd00037e00007cfe0003c00000c0fb00040180000006ea00000cfe000002f200000cfa0029fc0000e0fa00001ffa0003c0000003fb00003ef30000c0f800040180000006ea000018ee00001cfa0029fc0000e0f2000380000003fb00007ef30000c0f800040180000002ea000018fd000080f3000018fa0023fc000040f2000380000003fb00003ee900010180e7000018fe000101c0f3000018fa001bfc000020ef000001e20005018000000180e60000c0f3000018fa0023fc000030f3000002fe000001e200010180fe0000c0eb000060fd0000e0f3000020fa0020ed000003fe00010380e300010180fe0000e0eb0000e0fd000060f3000020fa0025ed000006fe00010180e300010180fe000060ec000103e0fd0002700023f700020bc0e0fa0034ed00000cfe00010180e300010180fe00007ffe000d0ece08013ffc045ffff0b63fef87fcff00c0fd00033ffffffdf6ff00c0fa002dfc00000cf300000cfe00010180ec000a161800213fb8000fffcf80fe00003febff0080fd00001ff3ff0080fa0041fc00030c000640fb000508000003ff1cfe000f0183ffd014ff7ff807ffff1bfffffbcdfeff007ff4ff0080fe00001febff0080fd00001ff8ff00bffdff0080fa003afc000007f3ff00f8fe000001e1ff0080fe00001ffaff0ebf87ffffc1bffff380fffe38bffff8fc000e0ffc000ffff080bffc0001fff88003f9001ffc000003f3ff00f0fe000001e6ff040ffff3effffb00050eef00003870d6002afc000003f3ff00f0fe000001fdff08edbffffffe1ffffffbfeff0ce3fff8001fff80007cf0000077c7001efc000d03fff000ffff8001fff8081fff80fb000320000db8fe000040b20002910002910002910002910002910002910002910002910002910002910002910002910002910002910002910002910002910002910002910002910002910002910000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1034{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw89\pich47\picwgoal1780\pichgoal940\macpict\bliptag1689162540\blipupi72{\*\blipuid 64ae932cda27728412a615a7da899aea}0d0800000000002f0059001102ff0c00ffffffff000000000000000000590000002f00000000000000a101f200163842494d000000000000002f00594772897068af626a001e0001000a00000000002f0059009800300000000000c501710000000000c5017100000000002f0059000002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10007ea000101c0ea000f0600038008000018f1000103c0ea001508000380080000180020f70000c0fe000103c0ea001302000380fe000018f50000c0fe000101c0ea001202000380fe000018f50000c0fd0000c0ea001202000180fe000018f50000c0fd0000c0ea001802000180fe00031f000001fa00070f00e000400000c0ea001c180001801c00383f80601fc03e00001f80f03f81f801f03e00c0ea001c180001803c00fc3f80701fc07e00001fc1f03f81f81ff03e00c0ea001c180001801c01f83f80f01fe07e00001f81f83f81f81ff03e00c0ea001c140001800c00701c00701c701f000005801c3001e01efe0000c0ea001c140001800c0000180070183003800060000c3000c01efe0000c0ea001c180001800c0000180070383081800060060c3000c01e000180c0ea001c180001800c00e01800701830818000e0020c3000c01c000180c0ea001c180001800c01f01800301830818000e0020c3000c018008180c0ea001c180001800c01f81800301830838000e0060c3040c018008180c0ea001c180001800c00f818003018301f8000e0060c3060c018008180c0ea001c180001800c001c18003038307f800060060c3060c018008180c0ea001c180001801c001c0cc07018303f800060060c7040c638008380e0ea001c180001c01e007c0fc07838303f80003e03b870601e38000781e0ea001c180003e03e03f807c0f838300780001fc3f870603c38003f01f0ea001c180003e03e07f80780fc18300380001fc1f030403c18003f01f0ea001c180003c01e03f00300fc10001f80000fc1f000003800001e00e0ea0011fd000701e000003800003ffd0000c0e20006f600003fdd0006f600003edd0006f600001cdd0002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d1001efc000f01ffe0007fffff03fffff5fffff79fe0f900010e0ffdff00fef50010fc000003f3ff00e0f900003ffbfff50010fc000003f3ff00f0f900003ffbfff5001ffc000103f7feff0a87fffbcfffffe0c07ffff8f900063fffdfcfffe031f5000ffc00000cf3000018f300010180f6000efc00000cf300001cf2000080f60006ed00001ee60014f7000640380080000080fe00000efa000003ee001dfc000030fe000704c03800c0000180fe000006fa000003fa000020f6001dfc000030fe000206c038fe00010180fe000007fa000002fa000030f6001efc000020fe000206c038fe00010180fe00010380fb00000cfa000030f6001efc000040fe000206c018fe00010180fe00010180fb00000cfa000018f6001efc000040fe000207e018fe000101c0fe00010380fb00000cfa000018f60022fc000060fe00070ff01803800f83f0fe00010180fb00080c00003c07e0000018f60023fc000060fe00071ff01803c01fc3f8fe00010180fc0009100c00007e0ff0000018f60028fd00018040fe00071ff01803c01fc7f0fe00010180fc0009181c00007e0ff0000018fb000001fd0027fd0000c0fd00070fe01801c00f83f0fd0000c0fc00091c1800007f0ff800000cfb00010180fe0027fd0000c0fd000707e01801c06001c0fd000060fc00091c300000838e38000006fb000101c0fe0028fe000101e0fd000707e01801c0600180fd000060fc00091e300001838c18000006fb000101e0fe002e0400000383e3fd00070fe01800c03e0180fd00177c3007ffa1803ff00001818c18000007ccfffe000fffe7f0fe002801001ffeff0080fe00071ff01800c01f0180fd00007ffbff08f00001818c18000007faff00f0fe002601003ffeff0080fe00071ff01800c01f0180fd00faff08f00001818c18000007faff00f0fe002801003ffefffd00070fe01800c01f8180fd00faff0bf00001818c18000007fffffefeff019ff0fe002e04003f0003fffd00070fe01800c003c18cfd000ff0fec0079ffbfe700001838c18000007fe000438000003e0fe002dfe000101f3fd000707c01800c001c18cfd000fe000000700001e300000838c18000004fe000430000001e0fe002efe000201e180fe000707c01c01e001c1fcfd0006c000000700001efe00059f0c18000004fe000430000001e0fe002ffe000201c1c0fe000707c03c03f07f80f8fe0010018000000700001c0800007e0c18000008fe000478000001c0fe002ffe00020180c0fe000706c03e03f07f0078fe001001800000070000180c00007e0c18000018fe00047c00000180fe002efe00020180c0fe000706c07e03f03f0078fe001001800000070000100c00003e0c18000018fe0003fc000001fd0027fd000180c0fc00053c00e00f0020fe00040180000007fe00030c000008fd000018fe0000fefa001afc000040f300040380000007fe00000cfa000418000001fefa001afc000040f300040380000007fe00000cfa000438000001fefa001afc000060f3000003fe000007fe00000efa000038fe0000fefa001afc000030f3000006fe000007fe000006fa000030fe000038fa001afc000030f3000006fe000007fe000003fa000060fe000030fa0016fc000038f300000efe000007f6000060fe000030fa0016fc00001cf300001cfe000007f60000e0fe000030fa0016fc00000cf3000018fe000007f6000080fe000030fa0017fc000004f3000038fe000007f700010180fe000030fa0023fc000a03fff3ff7fffff07fffffefdff00f0fe000007fd00011f47fcfffd000030fa0018fc000003f3ff00f0fe000007fd00003ffbfffd000030fa001afc000001f3ff00f0fe000007fd00003ffcff00fefd000030fa0026fc000001fdff0a81ffffd04ffffd40ffffe0fe000007fd00063ffffefffffe80fd000030fa000ae9000007f2000030fa000ae9000007f2000030fa000ae9000007f2000030fa000ae9000007f2000030fa000ae9000007f2000030fa000ae9000007f2000030fa000ae9000007f2000030fa000ae9000007f2000030fa000ae9000007f2000030fa000ae9000007f2000030fa000ae9000007f2000030fa000ae9000007f2000030fa000ae9000007f2000030fa000ae9000003f2000030fa000ae9000007f2000030fa000ae9000003f2000030fa000ae9000007f2000030fa000ae9000007f2000030fa000ae9000007f2000030fa000ae9000007f2000030fa000ae9000007f2000030fa000ae9000007f2000030fa000ae9000007f2000030fa000ae9000007f2000030fa000ae9000003f2000030fa000ae9000003f2000030fa000ae9000003f2000030fa000ae9000003f2000030fa0012e9000003fb0004ff206017f6fd000030fa0010e9000007fd00003ffbfffd000030fa0010e9000007fd00003ffbfffd000030fa0012e9000007fd00003ffcff00f0fd000030fa0015e9000003fd00071fbc000eff800080fe000030fa000ee9000007f60000c0fe000030fa000ee9000003f6000080fe000030fa0014e9000003fe000001fe00021800c0fc000030fa0014e9000003fe000003fe00021c01e0fc000030fa0016e9000003fe000003fe00041c00f00020fe000030fa0016e9000007fe000002fe00041e01f00030fe000030fa0016e9000007fe00000cfe00046703780018fe000030fa0016e9000007fe00000cfe00046302180018fe000030fa0016e9000003fe00080c0001006202000018fe000030fa0016e9000003fe00080c0007806002000018fe000030fa0016e9000c030000180c0007c06007000018fe000030fa0016e9000c030000181c0007c0f00700000cfe000030fa0016e9000c0300001c180001e0fc0fc00004fe000030fa0016e9000c0300001e30001061fc0fe00006fe000030fa0016e9000c0380001f70001060fc0fe00006fe000030fa0016e9000c03fff03ff0003020f807c00007feff00f0fa0016e9000003feff08f00010606007000007feff00f0fa0016e9000003feff08f00010606006000007feff00f0fa0014e800feff0cf00010606006000007fffa31f0fa0010e6000a1f300030206006000007c0f7000fe600091e000018606007000006f6000fe600091e00001fc0600700000ef6000fe60009180c000fc0600700001cf6000ee500080c000fc06007000018f6000ee500080c0007804007000018f6000ae500000cfa000018f6000ae5000004fa000018f60006dd000018f60006dd000030f6000ae5000003fa000030f60006dd000060f60006dd0000e0f60006dd0000c0f60007de000101c0f6000de400070603defdc1ffff80f60008e400003ffbfff50008e400003ffbfff5000ce400063ffff86fffffbcf50002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d1000000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1035{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw89\pich30\picwgoal1780\pichgoal600\macpict\bliptag-94945886\blipupi72{\*\blipuid fa573da27ff4d6bde43bcdc2ec2867fb}07ec00000000001e0059001102ff0c00ffffffff000000000000000000590000001e00000000000000a101f200163842494d000000000000001e00594772897068af626a001e0001000a00000000001e00590098003000000000007d017100000000007d017100000000001e0059000002d10002d10002d10002d10002d10002d10006fd000001d6000bfd00010180fc000018dd000bfd00010180fc000010dd0007fd00010180d70007fd00010180d70007fd000103c0d700140b0003f00603f000007c000038fe000101e0e20014100003f01e07f00000fc01e07803e01c03f0e20014100003f01f03f00000fc03f07803f01c03f0e20014100000701b83e00001fe0fe03807f01c07f0e20013fe000d01838000018e1f00380ff01c07f0e20012fe000c4181000003071e00180e000c06e10014100001c07f81000003071c001804180c060ce20014100003e07f81800003071800180c180c060ce20014100003e07f81800003071000180c180c060ce20014100001f07f030000030710001804180c060ce200141000001870010000030710001803f80c060ce200140300001840fe0009030718001803f80c060ce20014100003b862003c00013e18001c03f80c060ce2001410000ff03f80780000fe38003e03f80e060ce2001410000fe03f80700000fc38007e00781f060ce2001410000fe03f80700000fc18007e00381f000ce20013030000e01efd00083810003c00f81e000ce20007f5000103f0df0007f5000103f0df0007f5000103e0df0007f5000101c0df0002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10010fc000a01793fff0001fb80000310e1001afc000003fdff03dffffffefeff03feffff80fd000273fff0ed001bfc000003f3ff00c0fe000007fbff09fcffffe400fffe000010fa0014fc000403ffffe47ff7ff00e0fe000007f1fffa0018f8000004fe000775000002ff0003e0fe000107eff2fffa0016ed000070fe00000efe0006f80001ffe0801ffbfffa0012fc000010f3000030fe00000cf2000003fa000efc000030ef000004f2000003fa0012fc000030fd000026f4000004f2000003fa001afc000070fd000026f8000008fe00000cfa000001fa000003fa001afc000060fd000026f800000cfe00000cfa000001fa000003fa001afc0000c0fd000036f8000006fe00000cfa000001fa000003fa001afc0000c0fd00003ef8000007fe00000cfa000001fa000003fa001cfc0000c0fd00027f0060fa000007fe00000cfa000001fa000003fa0020fc0000c0fd00057f81f00780f0fd000007fe00000cfa00010180fb000003fa0029fe00020180c0fd00057f83f02fc0f8fd000006fe00000cfe00003ffe000841fc03c00780000003fa0029fe0002018180fd00057f81e07fc0f8fd0004020000040cfe000c7f020018e1fc03e00f80000003fa0027fe000101c3fc00037f00087ff80001060cfe000c7f82043de1fc07e05f80000003fe000018fe0029fe000101e3fc00053f0408780204fa0001070cfe000879c20418e1f003e0fffe000001fe00001cfe002a04003f8003fffc00057f0c0c780604fa0001078cfe000860c6040061820030f0fe000001fe00001cfe002b01003ffefffc00057f8c0c700204fc0003e72f8fdcfe000860c7040261830830f0fe000003fe00001efe002c01001ffefffc0005ff8c0c600004fd000001feff00fcfe000860c6040363830ff0f0fe0004038000003efe002c010001fefffc0005ff0c0c60000cfd000001feff00fcfe000860c6041763830ff8e0fe000401fdfc3ffffe002afe000103e3fc00057e0c1c60007cfd000401fffc0ffcfe000860c6040761831ff0c0fe000003fdfffe002afe000101e0fc00057e040c6000fcfd000401c0000ffcfe000860c20c0763831ff0c0fe000003fdfffe002bfd0000c0fc00053e00186000fcfd0004018000079cfe000860c21c0663831e0040fe000401cfffc1fffe0027f700053e01f860003cfd0004018000070cfe000840c21c1663870800c0fe000001fe00001efe002bfc0000c0fd00053603f060000cfd0004030000070cfe000840c0fe3761fe0800c0fe000003fe00001efe002bfc0000c0fd00053603f060000cfd0004030000060cfe000840c1fc3761fe07f0c0fe000003fe00001cfe002bfd000101c0fc000401e000007cfd0004030000040cfe000840c1e43261fc07f040fe000003fe000018fe001ffc0000c0f80000f8fd000006fe00000cfc0005c00201fc07f0fd000003fa001afc000080f80000f8fd000006fe00000cf70000e0fd000003fa0012f20000f0fd000006fe00000cf2000003fa000efc000020ef00000cf2000003fa0012fc000020f3000008fe00000cf2000003fa000eed000008fe00000cf2000003fa000ae900000cf2000003fa000eed000030fe00000cf2000003fa000eed000020fe00000cf2000003fa001dfc000007feff0b9ffffffb403fff8181fdf8e0fe00000ef2000003fa001bfc000007f3ff00e0fe00090fffff1bc3fff0001f61fb000007fa0014fc000003f3ff00c0fe00000ff4ff02f91ffffa001afb000eff00001fff0003ffff003ffe4b3f80fe00000ff1fffa000fe900050700003ffffcf7ff00fefa000fe200096000000ff81c03fffffefa0002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10002d10000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1036{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw137\pich63\picwgoal2740\pichgoal1260\macpict\bliptag1807335771\blipupi72{\*\blipuid 6bb9c15bb41343d75319d3bd10e0cf17}177c00000000003f0089001102ff0c00ffffffff000000000000000000890000003f00000000000000a101f200163842494d000000000000003f00894772897068af626a001e0001000a00000000003f008900980048000000000107023b000000000107023b00000000003f0089000002b90002b90002b90006fb000008c00006fb00001cc00006fb000018c00006fb000018c00006fb000008c00006fb00000cc0000e02000078fe00041f80000030c4000e0a0001f83000c71fe01e00fcc4000e0a0003f83001ef1fe03f07fcc4000e0a0003fc3021ff0ff03f07fcc4000e0a00038e3021ff1e301f87c0c4000e0a00030e3020bf1c18018780c4000d090003063821bf1c184587c3000d090003063821bb1818ff86c3000d090003063061b71818ff86c3000d090003063061bf1818ff86c3000d090003063061b71818ff8ec3000d0900030e38e1b71838e006c3000d0900030638e1bf1c30c006c3000d090003061ff1bf1ff07f86c3000d090003060ff1bf1fe03f8ec3000d090003060fe1bf1fe03f8ec3000d090002000460320fe03f86c30006f9000007c20002b90002b90002b90002b90002b90002b90002b90002b90002b90002b90002b90002b90002b90002b90002b90002b90002b90002b90002b90002b90002b90002b90002b90002b90002b90015fa00fcff0001feff0907ffe0203ffff001c8e0d3000afb000001eeff00fed40008fb000001edffd40013fb000b01c3ffc6003fffe31ffffe7ff8ffd40012fb00010180f600070800003fcc0007ffd4000bfb00010180ef000006d4000bfb00010180ef000002d4000bfb00010180ef000002d4000bfb00010180ef000002d4000bfb00010180ef000002d4000bfb00010180ef000002d4000bfb00010180ef000002d4000bfb00010180ef000002d40019fb000301800007fdff0cfc30ffffe39c9f1f0003000002d4000ffb00030180000ff3ff02800002d4000ffb00030180000ff3ff02c00002d40016fb000a01800018001fffc0fffffdfaff02e00002d40011fb000301800018f5000403e6700002d4000ffb000301800010f30002700002d4000dfb00010180f10002300002d40018fb00010180fe0003100f8008fc00000ffe0002380002d4001afb00080380004000f80f80ccfe000801701f809800180002d4001afb000807e000c000f80f80ccfe000803701f80d8000c0003d4001afb00080ff0018000b80040ccfe0008037001c0d8000c0002d4001afb00080ff0018000b000606cfe0008033000c0d800060002d4001afb00080ff0018001f03060fcfe0008037060c0d800060002d4001afb000807e0018001f020e0fcfe000803f060c1d800060002d4001afb000807c0010001f031e0fcfe0008037060c0d800060002d4001afb000103c2fe00031031e04cfe0008037060c09800060002d40016fb00010183fd000120e0fc00022033c0fd000002d40015fb0002010386fe000132e0fb00041fe0000001d2001dfe0005c0000003c386fe000136e0fb00051fe000000180d600020c00001f080007ffff710ffffffefe00013e60fb00060fe00000018002d700020e00002501000ffbff00fefe00013c60fb000f01c0000001ff9fdfffc0100ff8000250e000020e00002b01000ffbff00fefe00013c60fa0003c0000001f1ff00effcff06c006ffff8000f8fe000038f600020f0000220800078001fffee30ffefe00013c60fa0003c0000001dbff08cffff007fff31f00001efd000401e00003cefe00013860fb00080180000001fffff79fd8ff0180002ffc0003c00003c6fe00013060fb000003fe00010180fd00110200003e08000fffe0007fff0187ffffe7dfebff0180002dfc0003c0000387fe000138c0fb000003fe00010180e8001401000003ffc0001fff0007fff0420fff06a1ff800021fc0008c00003038000001fc0fe00030800003ffe000001d9000601c000000f000020fc000fc00002038000001f800001001800007efe000006d800058000000f000021fc000fc00002018000000f800003800800007efe000006d9000601c000000f000020fc000ac00000018000000e000001fd00003cfe000006d9000603e000000e000016fc0004c000000180f3000006d9000603e000000c000016fc0004c000000180f3000006d9000603e0000008000013fc0000c0fe0000c0f300000ed9000107f0fc0013fc0000c0fe0000e0f300000cd900010ff8fc0013fc0000c0fe000060f3000018d900010ff8fc0013fc0000c0fe000070f3000018d9000103e0fc0012fc0000c0fe000030f3000030d8000080fc0012fc0000c0fe000030f3000060d8000080fc0014fc0000c0fe000103c0f4000060d900010180fc0015fc0000c0fe00000ff5ff028007e0d900010180fc0012fc0000c0fe00000ff3ff00c0d8000080fc0012fc0000c0fe00000ff3ff00c0d8000080fc001afc0000c0fc00070fff098ffff8003ffcff0080d900010180fc0010fc0000c0f1000107c0d800010180fc000bfc0000c0c600010180fc000bfc0000c0c600010180fc000afc0000c0c5000080fc000bfc0000c0c600010180fc000bfc0000c0c600010180fc000afc0000c0c5000080fc000afc0000c0c5000080fc000bfc0000c0c600010180fc000bfc0000c0c600010180fc000bfc0000c0c600010180fc000bfc0000c0c600010180fc000bfc0000c0c600010180fc000bfc0000c0c600010180fc000bfc0000c0c600010180fc0013fc0000c0f90004180007e1c0d300010180fc0019fc0000c0f900007ff3ff068700fff80000c8e400010180fc001afc0000c0f900e0ff09c2007fff6462b5c0000ff900010180fc0011fc0000c0f900d6ff0080fa00010180fc001afc0000c0f90007e3d9e0000fff0d01deff0080fa00010180fc0020fc0000c0f90000c0ef0009d9f8001fffc19f3ffe3df3ff0080fa00010180fc0019fc0000c0f90000c0dd00060df00001ffcf80fa00010180fc0014fc0000c0f90000c0d800010180fa00010180fc0014fc0000c0f90000c0d800010180fa00010180fc0014fc0000c0f90000c0d800010180fa00010180fc0014fc0000c0f90000c0d8000101c0fa00010180fc0014fc0000c0f90000c0d8000101c0fa00010180fc0014fc0000c0f90000c0d8000101c0fa00010180fc0019fc0000c0fe000507ffc00000c0d8000101c0fa00010180fc0029fc0000c0fe00050ffff00000c0fc000c1fffff77fffffcf4ef080004a0ea000101c0fa00010180fc002afc0000c0fe00050ffff00000c0fc00001fedff09dbfffff83fffc0001ffcfc000101c0fa00010180fc0025fc0000c0fe00051ffff80000c0fc00001fe4ff00fefc000501c00001fff8fe00010180fc0026fc0000c0fe00053000f80000c0fc00010fdfe5ff00fefc000501c00003fffcfe00010180fc0034fc0000c0fe000530000c0000c0fc001040000c000003fd00007ffe1c23fff0001ff4ff00fefb0004c00007fffcfe00010180fc002cfc0000c0fe000530000c0000c0fc000040ed000080fc00031ec70001fc000501c0000fc8fefe00010180fc0021fc0000c0fe000060fd0000c0de00010180fd000501c0000c0006fe00010180fc0022fc0000c0fe0005c018020000c0de00010180fd000501c0001c0006fe00010180fc0021fc0000c0fe0005c018030000c0dd000080fd000501c000180002fe00010180fc0034fc000980000001c018038003e0fd000001f500000cfc00070180000030000006fc000040fd000501c000300401fe00010180fc0034fc0009800000038018018007f8fd000002f500000cfc00070180000030000006fc000060fd000a01c000300c018000000180fc0034fc0009800000030018018007f8fd000006f500000cfc00070180000030000006fc000070fd000a01c000600c018000000180fc0034fc0009800000030018008007f8fd000006f500000cfc00070180000030000006fc000030fd000a018000e00e00c000000180fc0039fc0009c0000003801801c003f0fd000006fc00017802fc00000efc000701c0000030000006fc000030fd000a018000c00e006000000180fc003efc0009c0000603001800c003f0fe00010806fc00147c3f820600003f0fe007c01c0001fc00007e000006fc000018fd000a018000c00e006000000180fc003efc0003c0000603fe00028003e0fe00010c06fc0014fc3f830600007f0ff007c27e0001fe08007e000006fc000010fd0006018000800e0040fe000080fc003dfc0003c0000706fd000101c0fe00010e06fc00147c3f830600007f0ff007c37e0001fe08107e000006fc000018fd000a01c100c00e006000000180fc0039fc000380000784fd000101c0fe00010e08fb00107fc3060000be0ff80003fc0001fe08107ef9000018fd000a01c381c004006000000180fc003bfc0003e0000f8cfe00022001c0fe00010f18fc0011027043060001800e180033c0000183081838f900001cfd000a0181818000006000000180fc003afc00feff00fefe00073ffffa7803fbfff8fc00110e6043060001800c1c0033800001830c1830f900000cfd00020181c3fe00043000000180fc003afc00feff00fefe00003ffeff037ffffff8fc00117e6063060001800c1c00f3000001831c1830f900000efd00020181c3fe00041800000180fc0038fc00feff00fefe00003ffbff00f8fc00117e6043060001800c1c07f7000001831c1030f9000707fffffa001ff3e7fe00041c00200380fc0035fc0003f8381ffcfe00013f7ffcff00f8fc0011ff70430e0001800c1c07f7000001830c1030f900000ffafffe00001ffeff0080fc0036fa000107ccfe00073800003fc0003ff8fd001201be7003fe0001800c1807f7000001831c3030f900000ffafffe00001ffeff0080fc0036fa0001078efe00076000000300000f18fd001201866040fe0001800c180077000001831c3830f900000ffafffe00001ffeff0080fc003cfa00010786fe00076000000200000e18fd001301066040fe0001800c1c1837000001831c783180fa00070fc00001fb0003e7fe00041fe0003f80fc0037fa00010707fe0007c000000300000e0cfc00127f60407e0000f60c181ef7000001c308782380fa00000efe0003600003c3fe000018f80037fa000c06030000018000000300000c06fc0012ff60400e0000ff0c1c0ff7000001fe01f80f80fa00001cfe0003600003c3fe000038f80036fa000c0603000001c000000300000c06fc00117f60400e00007f8c1c0ff7000001fe03f80ff900001cfe0007f00001c180000038f80035f9000703800001c0000003fe000006fc00117e60001e00007f0c0c07f2000001fc03f80ff9000038fe0007f0000181c0000060f80032f9000703800001c0000003fe000006f90007fc00001e000001e0fe0003f8039006f9000b30000001f8000101c0000060f80024f900070380000180000003fe000006f90000f8eb000b30000001fc000001c0000040f80024f9000703c0000180000003fe000006f90000f8eb000430000003fcfe0003c0000040f80020f9000301c00003fe000003fe000003e2000430000003fcfe0003c0000040f80020f80002c00003fe000003fe00010380e3000470000003fcfe0003c0000040f80020f80002c00007fe000003fe00010180e3000060fe0000f0fe000360000080f80020f8000260000efe000003fe000101c0e3000060fe000060fe000370000180f8001cf600000cfe000003fd0000c0e3000040fe000060fe0002700001f70017f6000018fe000003df00010180fe000060fe000038f50027f800020ffff8fe000003fd00083fffffbfdf90001004ec00010180fe000060fe0002180006f7002cf800020ffff0fe000003fd00003ff2ff0afe01f4ff1fd8ffe440001efe000007fd000060fe000218000ef7001cf800020ffff0fe000003fd00003fe3fffd000060fe00020ffffef7001cf8000201cde0fe000003fd00001fe3fffd000060fe000207fffcf7001ef2000003fb00061000001fff8404ecff00fefd000060fe000207fffcf7001ef2000003e9000a088800007fec001fdc0638fd000060fe000203fff8f7000af2000003da000060f1000af2000003da000060f1000af2000003da000060f1000af2000003da000060f1000af2000003da000060f1000af2000003da000060f1000af2000003da000060f1000af2000003da000060f1000af2000003da000060f1000af2000003da000060f1000af2000003da000060f1000af2000003da000060f1000af2000003da000060f1000af2000003da000060f1000af2000003da000060f1000af2000003da000060f1000af2000003da000060f1000af2000003da000060f1000af2000003da000060f1000af2000003da000060f1000af2000003da000060f1000af2000003da000040f1000af2000003da000040f1000af2000003da000060f1000af2000003da000060f1000af2000003da000060f1000af2000003da000060f10015f2000003fe00000ff8ff030009ffc0eb000060f1001af2000003fe00001fecff00dffcff0487fffffc18fe0000e0f10012f2000003fe00001fe2ff00fcfe0000e0f1001af2000003fe00081f8007fff813fffffbeaff00fcfe0000e0f10020f2000003fe000018f100090cfe00007ef80007fff3fdff01bbfcfe000060f10012f2000003fe000018e200001cfe000060f10012f2000003fe000018e200000cfe000060f10016f2000003fe000018f800000eec00000cfe000060f1001cf2000003fe0002180018fa00000ffd000040f100000cfe000060f1001ff2000003fe0002180018fd00034000000ffd0000e0f100000cfe0000e0f1001ff2000003fe0002180018fd000360000007fd000060f100000cfe000060f1001ff2000003fe0002180018fd000360000007fd000060f100000cfe0000e0f1001ff2000003fe000218001efd000360000003fd000060f100000cfe000060f10025f2000003fe000f18001fc00f01f86000fc02001e00f07cfe000040f500000cfe0000e0f1002ef200240300000818001fc00f83f86000fe02001f03f87f000007e07c03e00001e03f007c0380000cfe0000e0f1002ef200240300000c18001fe00f83f860c1fc06001f03f87f00000fe07c07f08181f03f80fe07c0000cfe0000e0f1002ef200240300000e18001ff001c7f861c1fc07001f07f87f80000fc07c07f0c181f07f80fe07c0000cfe0000e0f1002ef200240300000e38001c3000cc006382000300008c006180000f000e0ff0c181f87f00fc0760000cfe0000e0f1002ef2002403c0001f3800183000ec00630200070000dc0040c0001001071831c180186043000060000cfe0000e0f1002ef2000003feff20f800183007ec007f00f0030001cc0041c0001001871811c1841c6043001870000cfe0000e0f1002ef2000003feff24f80018300fec007e00f802001fc3e041c0000f81ff1811c18ffc60e3001ff0000f000fc0e0f1002ef2000003feff20f80018300fec007e00f802001fc7e0c1c0000f81fe1831c18ff860c3001ff0000ffeff00e0f1002ef2002401f8403ff80018300fec007e00fc02001fc3e0e1c0000fc1fe1831c38ffc6043001ff0000ffeff00e0f1002bef00211f3800183000ec007f000c030003c1f0e1c00007c1fc0ff1838ff860c3001fe0000ffeff00c0f1002bef00251e3800183020ec0063000c030041c018e1c00000e10007f1878e0060c3001e00000fe0000fc0f10027ef00211e38001e603fe0c063800c070001c038e1c00000600007f0878c0060c3001c00000ced0027ef00211c18001fe01fe3f86181f80f801fc7f8e0c00007c07e03f0078c0060c0001e00000ced0027ef00211818001fc01fe3f86083f80f803fcff0e0c0001fc07e00703f83f860c0fe1fe0000ced0027ef00211818000fc00fc1f86043f80f801fcfe0e080001fc07f00303983f860c0fe0ff0000ced0026ee0002380001fe0008800000e007800f87e0fe000e1f801e00303903f840007e07e0000ced001cee000038f4000080fe00000ffe000a300001f800003c0700000ced000eee000038ec000010f800000ced000eee000038ec000010f800000ced000aee000038e200000ced000aee000038e200000ced000aee000038e200000ced000aee000038e200001ced000aee000018e200000ced0013ee00051efffc4013d0fe000008eb00000ced0014ee00001ff4ff06fbffffe01a03c0f600001ced000aee00001fe2ff00fced000aee00001fe2ff00fced0010eb000687f0001fff8000ebff00fced0011d9000b5cc000007fc0003ffe0001f8ed0002b90002b90002b90002b90002b90002b90002b90002b90002b90002b90000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1037{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw131\pich31\picwgoal2620\pichgoal620\macpict\bliptag1867935191\blipupi72{\*\blipuid 6f566dd77ebf395ac8040f98db02c851}0b5800000000001f0083001102ff0c00ffffffff000000000000000000830000001f00000000000000a101f200163842494d000000000000001f00834772897068af626a001e0001000a00000000001f0083009800460000000000810223000000000081022300000000001f0083000002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb000af5000004fd000008cd000d010010f7000004fd000018cd000d010018f7000004fd000018cd000d010038f7000006fd000018cd000d010018f7000006fd000018cd000d010038f700000efd00003ccd000e010038f700050fc01800003fcd0015110038003c01c07f00000f80000fc0fc00087fcd0015110018307c03e07f00000f81020fe0fe040c7fcd0015110038707c07f07f80001fc1830fc0ff040c3fcd0015110018407c07f07f800038e3830e00f9840c3ccd0015110018c0810c38e1c0003063020601c1840c18cd0019110018c0830e78e1c0003063020600c1840c18f8000040d7001511001801ff0ff861c0003063030600c18c0c18cd001511001f01ff0ff861c0003063020600c18e0c18cd001511001f01ff0ff861c0003063030600e38c1c18cd001511001f81ff0ff07f80003063070600ff0e3c18cd001511001fc1c00e007f000030630f0630fe0e3c18cd0016120018c1c00c00ff000038e39f0470fe073c1f80ce0016120018e1f000f0fe00001fc1ff01e0fe07fc0f80ce001612001870ff03f8e000001fc0ff01e0c003fc0f80ce0016120018307f03f8e000000f80ff01e0c003dc0780ce0014100018007f03f8e000000780760000c001c0cc000dfe00030e01f0e0fa0000c0ca000afb0000c0fa0000c0ca0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb000fcc0003ffe08080fe000203fbe0fa0017df0007083fdc003c3c0007f3ff00c0fe00020ffff8fa001cf100041ffc0001c0fd00020187f0fd00e9ff00c0fe00020ffff8fa0023fc000303fff740feff003ffaff00e0fd000207fff8fd00e9ff00c0fe00021efff8fa0027fc000007f3ff00e0fd00020ffff8fd00f4ff0bfe003ffc000267c00000c1c0fe000218000cfa0027fc000007f3ff00f0fd00020ffffcfd0005f3ffc0000fe0fb000008f60000c0fe000210000cfa0029fc000007fdff0af1fffce007ffe1001ff838fd000204000efe000101c0ea0000c0fe0002100006fa001ffc000008f3000018fd0002100006fe000101c0ea0000c0fe0002603403fa0027fc000018f3000018fd0002300003fe000101c0fd000307000006f20000c0fe000360360380fb0023ed00000cfd0002600203fe00010180fd000307802007f20000c0fe0003c0360180fb0028f800010880f8000006fd000760370380000001c0fd000307800007f20007c0000001803600c0fb002cfc000020fe00010d81f8000006fd00076037018000000180fd000307c00007f20007c0000001803600c0fb002dfc000060fe00020dc180f9000007fd0007c037004000000180fd000308c00003f20007c0000001803e00c0fb0031fc0000c0fe00020d8180f9000c0380000001803700e000000180fd000318400003f2000ac0000001803e00c0000001fe003bfc0000c0fe00020d8180f9000c0380000001c03700e0000001c0fd000d18002003003c00003f007818c078fc000ac0000001803600c0000003fe003cfc0000c0fe00020fc180f9000c0380000001803700e0000001c0fd000d1800e003007e00007f007c1de0fcfc000dc0000303803600e000000380000041fc0000c0fe00071fe18003c01e03f0fe000c0380000201803700c00000c1c0fd000d1800e003007e00007f807c3fe0fcfc0003c0000303fe00066000000380000040fc0000c0fe00073fe10107e03e07f0fe000c0380000301803600400000c1c0fd000c3c00e003007f00007f803c3fe1fb0003c0000387fe000630000003c0000041fe00020101c0fe00073fe18207e03e07f0fe000601800003800002fd0001e1c0fd000c3f0060030007000061c0013fe1fb0003c0000386fe000630000003c000003ffe00020181c0fe00071fe10003f07f07f8fd0003c00003c2fb0001f180fd000d7f0060030183000061c00337e386fc0003e20007c6fe00063e7e0087e0000041fe000201c380fe00070fc1000030c1860cfd0003c00003c6fe0004300000f180fd000d7f00600301df000040c007b7e3fefc00feff00fefe00003ffeff02f0000040fe000101c3fd00070fc18c0830c1860cfd0003f00007fefe00043e0001ff80fd000d3f00600301ff000060c03fb7e3fefc00feff00fefe00003ffeff02e0000040fe000103e7fd00071fc1dc0ff8f7860cfd0003fffefffefe00003ffeff0080fd000d1c00600301ff000060c07f37e3fefc00feff00fefe00063fff7fffe000004001001ffefffd00073fe1f80ff8ff860cfd00feff00fefe00003ffeff0080fd000d1800600301ff000060c0ff3763eefc0003e3004ffefe000638000003c000004001003ffefffd00073fe1f80ff8ff8618fd00feff00fefe00003ffeff00c0fd000d1800600301cc000060c0e737e180fc0003c00007c6fe000630000003c000004001003ffefffd00071fe1f80ff0ff07f8fd00feff00fefe00043cfff9f9c0fd000d180060030180000060c18337e180fc0003c00003c6fe000620000001c000004104003ff81ffffd00070fc1fc0c00e007f0fd0003400003e6fe0004380000f1c0fd000d180070030180000060c087b7e1fcfc0003c0000383fe000340000001fe003bfe000103effd00070fc18e0800c007f0fb000103c7fe0004300000e1c0fd000d1800f807807f000060c01fb7e0fefc0007c000038180000040fb0038fe000101e3fd00070dc18e0fc0e007f0fb00010383fb0001c1c0fd000d1800f80fc07f000060c03fb7e0fefc0007c0000301800000c0fb003ffe000201c380fe00070dc1870ff07f8780fe000c0180000301800000600000c1c0fd000d1800f80fc07f000060c07f36607efc0007c0000201800000c0fb003bfe00020383c0fe00060dc10707f03f86fd000c0380000301800000c00000c1c0fd000a1800780fc03f000040001ff90007c0000001800000c0fb0032fe00020101c0fe00060d810307f03f86fd000c0380000301800000c0000001c0fa00010380f30007c0000001800000c0fb002cfe00020101c0fd0005010000e00f06fd000c0380000001800000e000000180ea0007c0000001c00001c0fb0026fd000101c0f8000004fd000c0380000001800000c000000180ea0000c0fe000340000180fb0026fd000101c0f8000004fd000003fe000801c0000040000001c0ea0000c0fe000340000380fb001efd000101c0f3000007fd0002e00001fe000101c0ea0000c0fc000003fa001ffc000060f3000006fd000760000180000001c0ea0000c0fe0002300002fa001ffc000060f300000cfd0002600003fe000101c0ea0000c0fe0002180006fa001dfc000070f300000cfb000006fe000101c0ea0000c0fe00021c000efa0023fc000038f3000018fd0002100006fe000101c0ee000403c3c007c0fe00020ffbfcfa002cfc000018f3000030fd000218000efe000e01f000082d000608e80103fff2277ff7ff00c0fe00020ffff8fa001df00003600000f0fd00021ffffcfe000001e9ff00c0fe000207fff8fa0024fc000607fffab3ffff7ff9ff00e0fd00020ffff8fe000001e9ff0080fe000203fff0fa0020fc000007f3ff00e0fd00020ffff8fd00f4ff0af3c0fffe0003fee00007c7f3001cfc000003f3ff00e0fd000207fff0fd00087ffff0003ff9000006e40017fc000003fdff091bffffc005ffd0007ffcfb00009fd60007fa00011ff0c40002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb0002bb000000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1038{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw108\pich44\picwgoal2160\pichgoal880\macpict\bliptag-136408324\blipupi72{\*\blipuid f7de92fc3e43cda7dc010c281ea2cc52}107200000000002c006c001102ff0c00ffffffff0000000000000000006c0000002c00000000000000a101f200163842494d000000000000002c006c4772897068af626a001e0001000a00000000002c006c0098003a0000000000b901c10000000000b901c100000000002c006c000002c70002c70002c70002c70002c70002c70002c70002c7000d09003c00600000f0000004d1000f0b00fe0cf81f01f803e01f0e70d3000f0b00fe0ff81f01f817e01f0ef0d3000f0b00ff0ff83f81f81fe01f0ff8d3000f0b00f70ff07f830c3fc0019ff0d3000f0b00c38f0061c7043c0000dff8d3000f0b00c18f0060c6043c0001d9f0d3000f0b00c38e0060c60438001fdbb0d3000f0b00c38e0061c20e30001fdff0d3000f0b00c38e0061c30e30001fdff0d3000f0b00ff0e0040c3fe30002fdbb0d3000f0b00fe0e0040c1fe300060dbf0d3000f0b00fe0e006081fe3000409bf0d3000f0b00fe0e007e00fe30003fdbf0d3000f0b00e00e003f000c30003fdbb0d3000f0b00c00c003f000c30001fdbb0d3000f0b00c000001f001c30001f99b0d3000a0601c000000e01fcce000a0101c0fe000101f8ce00090100c0fd0000f8ce0005010080c90002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c7000ed40008c000003fee000c77c0fd002313000001c0066f0c0002ffe0007fd78677fffefe00f8ff00f7f0ff00fbfcff00e0fd000a02000007cfff00e0fd000d0200000fd2ff033fffffe0fd00260200000ff1ff18f9bffffff960fff8000ffff890fffe0003fff0003ff3818062f80000e0fd00130700000e3ffe000066f7000004df000060fd000a0200000ccf000060fd000a0200000ccf000060fd000a0200000ecf000060fd000a0200000ecf000060fd000a0200000ccf000060fd000a0200000ccf000060fd000a0200000ecf000060fd00160200000edd0008080000180001e84002fc000060fd001d0200000cfc000d1bffe39d9fdff000bffffc7ffff7e7fffc000060fd000e0200000cfc00d9fffc000060fd000e0200000cfc00d9fffc000060fd002f0200000cfc00f9ff1fbfeffffe1ffffffca1fffc00827f8000fffe0000dfc000079c00006df0000007fc000060fd00150200000cfc0003f000014ade000003fc000060fd00120200000cfc0000c0db000003fc000060fd00160200000cfc0000c0eb000004f2000003fc000060fd00220200000cfc000080f40000e0fd000010fe00001efa000008fa000003fc000060fd00290200000cfc000080f900050800002000f0fd000030fe00001efc0002020008fa000003fc000060fd00250200000efc0000c0f600022000f0fd000010fe00000efc000002f800010380fd000060fd00260300003f80fe000101c0f60002200070fd000030fe00000efc000002f8000003fc000060fd00250300007fc0fd0000c0f60002200070fd000030fe000006fc000007f8000003fc000060fd002a0300007fc0fd0000c0f60002200030fd000070fe000006fc000107c0fe000006fd000003fc000060fd00350300003fc0fd0000c0fc001c0c00201800387f003003800003f00e00f806003e03e00f0fe03801f03ffd000003fc00046000800000370200003ffc0000c0fe001f20601e01f03c007c3f803007c00007f03e01fc06003e1ff00f8fe03c01f07f80fe000003fc00046001800000380200001ffd000140c0fe001f20603f03f03c007c3f803007c00007f03e03fc06003f1ff00f87e03c03f07f80fe000003fc00046001c00000380200001ffd0001e0c0fe001f20e03f0fe03c007e7fc07007e00006f01f03e006001f9e000387001c031873c0fe000003fc00046001e00000390200000efd0001f1c0fe001f20e0019e000c000270c0701060000830c186000600039e0000c6001c060c60c0fe00010380fd00046001e00000390200000efd000171c0fe001f20e0019e000c00027060701070000830c18e00060003bc0000c6001c060c60c0fe000101c0fd0004f001f00000360200003ffd0001f9c0fe001f20e0039e000c00066060701ff0000c30ff8e0006001fbc000fc6000c040c60c0fe000001faff02f00000370001feff00fdfeff00c0fe001f30e01f9c000c007e6060301ff0000c30ff8c0006003fb8000fc6000c060c60c0fe000001faff02f80000330003faff0080fe001f70e03fd8000c007f7060301ff0000830ff8c0006007fb8001fc60008060c60c0fe000001faff02f80000370003faff0080fe001f30e03fd8000c007f6060301fe0000830ff8e0006007fb8000fc60008060c60c0fe000a03e000fffe0007bff000003b0203e1c3feff02c1ff80fe001f19c037d8001c000e60e0301800000c10c00c000600c3b80001c21008060c60c0fe000a0380000038000001e0000039fd0004380000f180fe001f1bc003f8001c000760c0301000000c30c004000e0083b80060c3381c061c60c0fe000001fe000638000001e0000039fd0004380000f180fe001f1f8041f8001c008770c07013e0000e780006000f007fb8003fc3f01e07f860c0fe000001fe00063c000001e0000039fd0004380000e1c0fe001f0f807fd8003e00ff7fc0f80fe0000ff83f83f80f807ff8001fc1f03e03f060c0fe000003fe00067c000001c0000039fd0004380000e180fe001f06003fd8003e00ff7f80f80ff00007f83f83fc1f803fb8001fc1e03e01f060c0fe000003fe00067e00000180000039fd0004380000c1c0fe001f06003fd8003e00fe3f80f807e00003f03f81f80f003f90001fc0e03e01f00040fe000003fe0000fefe00028000002afd000438000001c0fc00101f98001e007c3c007801c00000201f0078f900000cfa000003fe0000fffb0012fd00043800000180db000403800000fffb0012fd000038fe0000c0db000403800000fefb0012fd00041800000180db000003fe00007cfb0012fd00041800000180db000003fe000038fb0012fd00043800000180db000003fe000018fb0012fd00043800000180db000003fe000038fb0012fd000038fe000080db000003fe000038fb0012fd000038fe000080db000003fe000038fb001ffd000030fe0000c0e800070480000f80060060fe00025100fffe000038fb0019fd000030fe0009f7ff97feffffefbffff8e3fffe000038fb000efd000038fe00d9fffe000030fb000efd000038fe00d9fffe000018fb0024fd000038fe00f1ff0fcffffe079fff8300fff80003ff800018fe0001d0c0fb000018fb000ffd000038fc00010380da000038fb000afd000038d3000038fb000afd000038d3000038fb000afd000038d3000018fb000afd000038d3000038fb000afd000038d3000038fb000afd000038d3000038fb000afd000038d3000038fb000afd000038d3000018fb000afd000030d3000018fb000afd000038d3000038fb000afd000030d3000038fb000afd000030d3000038fb000afd000030d3000038fb000afd000030d3000038fb000afd000030d3000038fb000afd000030d3000038fb000afd000030d3000038fb000afd000030d3000038fb000afd000030d3000038fb000afd000038d3000038fb000afd000038d3000038fb000afd000030d3000038fb000afd000030d3000038fb000afd000030d3000018fb000afd000030d3000018fb000afd000030d3000018fb000afd000030d3000038fb0021fd000038fc0000c0f9000d060080007ffc0007fffd7bfffff3f2fffe000038fb000efd000038fe00d9fffe000038fb000efd000030fe00d9fffe000018fb001efd000338000001e7ff047c07fffc07feff05d7ffff271ffffe000038fb0024fd001638000001f03f9fffc0041ffc00073f80001fff000038e0ed000003fe000038fb0012fd000430000001c0db000003fe000018fb0012fd00043000000180db000003fe000018fb0024fd00043000000180fe000003fa000006f700001cfc0002020008fa000003fe000018fb0027fd000430000001c0fe00010780fd0002010006f700001efc0002060008fa000003fe000018fb002bfd000430000001c0fe00010780fd0002010006fb000030fe00001efc0002060008fa000003fe000018fb0027fd00043000000180fe00010fc0fd000001f9000030fe00000efc000002f8000003fe000018fb0028fd00043000000180fe000109c0fd00010180fa000030fe00000efc000002f8000003fe000018fb0028fd00043000000180fe000118c0fd00010180fa000030fe00000efc000007f8000001fe000038fb0030fd000430000001c0fe00011840fd000203c008fb000ff00c01f00e001c01e00607c01800e01ffd000003fe000018fb0035fd000438000001c0fe001f1800000fc03f87f01c00f81f800007f03e01f80e003e13f01f0fe03801f03f80fe000003fe000018fb0035fd0004300000c1c0fe001f1803021fc07f87f01e00f81fc00007f03e03fc06007e3ff01f0fe03c03f07f80fe000003fe000018fb0035fd0004300000c180fe001f1803061fe07f87f01e01fc3fc00007f03e03f80e003f3fe01f8fc03c07f87f80fe000003fe000018fb0035fd0004300000e180fe001f3f83071ff07f07e00e03fe38600008708306000e00073e0001c70018061c70c0fe000003fe000018fb0035fd0004300000e180fe001f7f83071830c0038006030e3020000830810c000e0003bc0000c60018060c60c0fe000003fe000038fb0035fd0004380000f180fe001f7f83071830c003800603063020001830c38c000e000fbc0003c600180e1c60c0fe000403fffff7f8fb0035fd00043dfff4ff80fe001f3f83071830c003000603063070000831ff8c000e003fb8001fc600180e1c60c0fe000003feff00f8fb0035fd00003ffeff0080fe001f1c03031830c003000603063070000811ff8c000e007fb8001fc60008061c60c0fe000003feff00f8fb0035fd00003ffeff0080fe001f1803071831c003000603063070001831ff0c000e007fb0003fc60008041c60c0fe000003feff00f0fb0035fd00003ffeff0080fe001f1803071831c003000603063070001830ff0c000400ffb0003fc20008041c60c0fe00040380000020fb0031fd00041e0001ff80fe001f18030f1831c003080603063070000830800e000600c3b00020c2100c061c60c0fe000003f7002efa0001f180fe001f18030f1830c003180e03063070000870800e000e0083b80001c3301c063c60c0fe000003f7002efa0001f180fe001f18031f1830e001f80f039e3070000ff07f07f01f00ffb0001fc1f03e07f860c0fe000003f7002efa0001e180fe001f1800ff18307f80f01f81fc30700007f07f83f81f007fb0001fc1e03e03f060c0fe000003f7002efa0001c180fe001f1800ff18307f80f01f80fc30600007f07f83f81f007fb0001fc1e03e03f060c0fe000003f7002cfa0001c1c0fe000a1800ff18303f80f00f00f8fe000f03f03f83f81f003f00001fc0c01e01e0fc000003f7001bfa00010180fc00086600000f0070000078fc000008ef000003f7000bfa00010180db000003f7000bfa00010180db000003f7000bfa00010180db000003f7000bfa00010180db000003f7000bfa00010180db000003f7000bfa00010180db000003f7000bfa00010180db000003f7000bfa00010180db000007f7001afa000101c0f30009fde800270898cf9fffeffeff007ff6fff70008fa000001d9fff70008fa000001d9fff70013fa000001e3ff09f9fffffbf7ffffc11ffef70018f90012fdfbffffc0c1ffffc00ffef00619fe000088f8e20002c70002c70002c70002c70002c70002c70002c70000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1039{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw234\pich98\picwgoal4680\pichgoal1960\macpict\bliptag745527353\blipupi72{\*\blipuid 2c6fd8390c960dedba0ce2b43f5c255f}2c0a00000000006200ea001102ff0c00ffffffff000000000000000000ea0000006200000000000000a101f200163842494d000000000000006200ea4772897068af626a001e0001000a00000000006200ea0098007a00000000019903cd00000000019903cd00000000006200ea000002870002870002870002870002870013fa000040fe000007fd00010180fe0000e09d0019fa0004e000030007fd00010180fe0000f0fc00022000c0a50017fa0004c000030007fd00010180fe0000f0fc000020a30015f80002030007fd00010180fe0000e0fc000020a30015f80002030003fd00010180fe000060fc000030a30015f80002038003fd00010380fe000060fc000030a30022fd001c100780c00183f803003c00001f80c007807000001e00607c01800601f0a800242000018100f84fc1e003c3fc03007c00001f81f00fc07001e03f01f0fe03c01f03f8a800242000018300f8cfc1e007e3fc03007c00003f81f00fe07003e13f01f8fe03c01f03f8a8002420000183007cff81e003e3fc03003e00003f83f00fc07003f1fe00f8fc03c01f83fca8002420000183800cfc00e001f386030003000073870003807000f9e0003c7001c00f830ca8002420000183800ef000e00033060300030000c18600200060001bc0000c2000c0608204a8002420000183000ef000600073060300ff0000c187f8200060003bc0005c2000c040c60ca8002420000183007ee000e003ff060300ff0000c187fc60006001fb8001fc2000c060c60ea800242000018300fec000e007ff060301ff0000c187fc20006003fb8001fc2000c060860ea800242000018700fec000e003f7060301ff0000c187fc60002003fb8001fc2000c0600604a80024200001c7007ec000e003ff060301e00000c187c060006003fb8000fc2000c060c604a800242000006e020ec000e0083f060301800000c18600200060001b80000c7100c040c604a800242000007c020ee000e0087f860300d00000c18600700070003b80001c3301c041c60ca800242000007c01fee001f00ffffc0780ff00007f83f83fc0f801ff8001fc3e01e03f860ca800242000003801ffc001f007fffc07c0ff00007f83fc1fe0f803fb8001fc1e03e03f8606a800242000003801fec001f007fbf80fc07f00003f83fc1fe0f803fb0001fc1e03e01f0604a80020fd001afec000f003f1f807c03f00003f81f80fc0f001f80001fc0001e01fa6000afd000018ec000060a20002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870024f8000701ffe567bfff1c20ed000007feff01fe82f7ff00f3fbff01f43cce00017ffffa0018f8000003fbff00f0ed00000feaff00fece0002ffff80fb0018f8000007fbff00f0ed00001feaff00fece0002ffff80fb001cf8000007fbff00f0ed00001ff3ff00f7f9ff00fece0002ffff80fb001cf800070c0000c000004078ed00001cea00000ecf0003018000c0fb0019f800000cfb000018ed000018ea000004cf0003038000e0fb0019f800000cfb00000ced000018ea000006cf0003070000e0fb0022f8000010fb00000eed000018f70005200000070020fa000006cf000306000070fb0028f8000030fb000006ed000018fd0002400060fe00052000c0070060fa000006cf000304000030fb0028f8000030fd0002200006ed000018fb000060fe00052000000f8060fa000006cf000304000038fb0024f8000070fd0002200003ed000018fb000060fe00043000000bc0f9000006cc000018fb0028f8000040fd000320000380ee000018fb000060fe000430000018c0f9000006cf00031800000cfb0028f8000040fd000370000380ee000018fb0000e0fe000470000018c0f9000006cf00031800000cfb002ff8000840002007007c000180ee000018fd000e4007e00003807e0100180060038007fd000006cf00031800000cfb0035f80008c000700fc0fe000180ee000018fd000fe00fe07c0fc0fe01c01800e007c09f80fe000006d00004201800800cfe000210000038f9000980c000701fc0fe000180ef00010818fe001001e00fe07c1fe0fe01c01800e007e0df80fe000006d00004301000800cfe000238000036f90009c08000700fe0fc000180ef00010e18fd000ee00fe07e1ff07c01c03e00e003e0fffd000006d0000030fe000004fe000218000037fa000a01e18000700c20700000c0ef00010e18fd000ee00061061c303001c07f00601061e2fd000004d000043840000006fe00021c000037fa000a01e30000300030600000e0ef00010f18fd000e6010618718302000c03f00601061e0fd000006d000043860000003fe00021c000047fa000a03f70000300830600000e0fa0000c0f700011ff8fd000e603061ff18306000c03f00601ee0e0fd00010780f800018001f0000010f0000c20003ce0000003ff0001fe000034010003faff078000301830600000edff00f8fd000e603061ff18306000c03c00601ff1c0fd000007cfff03e0010003fdff01000034010007faff070000301830600000edff00f8fd000e603061ff18306000c01800601ff1c0fd000007cfff03e0018003fdff01000035010007faff070000301830600000edff00f8fd000e603061fe18306000c01800601fe1c0fd000007cfff03e0018003feff02fe000074250007fc1fffff8f43ff0000301030600000ff9fffc408fffc04067ff83c7e3ffff803c7ce1f38fd000e403061c018306000c01800603801c0fd000707003ff1c0000780f9002c01f0e00007fea00007fe0007bff00067fe0001fff80005f600007bfc0007c17c00007fe00180030000013c000046fc000c700001f30000301830630000e0f700000cfe0005e00180000f18fd000e4010610018307100c01800701001c0fd000006d5000906001c00003c40018003fe00023c000045fc000c700001e38000701830238000c0f700000cfe0005e00180000e18fd000e6018e10018303300c01800700001c0fd000006d5000807000c000038000180fd00023c000045fc000c600001e180007810301f0000c0f700001efe0005f00180000e18fd000ef01fe07e18303f01e01800f80fe180fd00000ed5000807000c000038100380fd000218000047fc000c700001c0c0007810301e000180f700093e000001f00180000c18fe000f01f01fe07e18301f03e01800f80ff180fd000006d500090f800c0000301003000cfe000210000043fc000c60000180c0007810301e000380f700093f000001f80100000818fe000f01f00fe07f18301e03e01000f807e080fd000006d500090f800c0000301000000cfb0041fc000070fe0008c0007800000c000380f700097f800003fc0180000018fd0003f007e07efe000601c00000f80180fc00000ed500021fc00cfe00031800000cfb002dfc000070fe0000c0fb00010380f700097f800003fc0180000018ea00000ed500021fe00cfe00031800000cfb002dfc000070fe0000c0fb00010380f700097f800007fc0180000018ea00000ed500023fe00cfe00030800000cfb002cfc000070fe0000e0fb000003f600097f800003fc0180000018ea00000ed500021fe00cfe00030c000018fb002cfc000070fe000060fb000006f600001cfe0005e00180000018ea00000ed5000207800cfe00030c000030fb002cfc000070fe000030fb000006f600000cfe0005e00180000018ea00000ed5000206001cfe000304000030fb0029fc000070fe000030fb00000cf6000008fe0005600180000018ea00000ed5000206001cfb000030fb0029fc000070fe000018fb000008f600000cfe0005400180000018ea00000ed5000206001cfb000060fb002cfc000070fe000018fb000018f600000cfe0005e00180000018ea00000ed5000206001cfe0003010000c0fb002afc000070fe000008fb000018f600000cfe000560018000001cea00000cd5000206001cfc000101c0fb002efc000070fe000303ffee47feff00f8f600000cfe000560018000001feaff00fed5000206001cfd0002ffffc0fb002bfc000070fe000007fbff00f0f600000cfe000560038000001feaff00fed5000206001cfd0002ffff80fb002afc000070fe000003fbff00e0f600000cfe0005e0018000001feaff00fcd5000206001cfd00017ffffa003efc000070fe000001fbff00e0f600001cfe001de0018000000fffffe017fff0027fff8003ffff1f1fffc040ffff0103fff8d5000206001cfd000101fefa0016fc000070eb00000cfe0002600180ba000206001cf40016fc000070eb00000cfe0002400180ba000206001cf40016fc000070eb00000cfe0002600180ba000206001cf40016fc000070eb00000cfe0002600180ba000206001cf40016fc000070eb000008fe0002e00180ba000206001cf40016fc000070eb00001cfe0002e00180ba000206001cf40016fc000070eb00000cfe0002e00180ba000206001cf40016fc000070eb00000cfe0002c00180ba000206001cf40016fc000070eb00000cfe0002c00380ba000206001cf40016fc000060eb00000cfe0002c00380ba000206001cf40016fc000060eb00001cfe0002e00380ba000206001cf40016fc000070eb00001cfe0002c00180ba000206001cf40016fc000060eb00000cfe0002c00180ba000206001cf40016fc000060eb00000cfe0002c00180ba000206001cf40016fc000060eb00000cfe0002c00380ba000206001cf40016fc000060eb00001cfe0002c00380ba000206001cf40016fc000060eb00001cfe0002c00380ba000206001cf40016fc000060eb00001cfe0002c00180ba000206001cf40016fc000060eb00001cfe0002c00380ba000206001cf40016fc000060eb00000cfe0002c00380ba000206001cf40016fc000060eb00000cfe0002c00380ba000206001cf40016fc000060eb00001cfe0002c00380ba000206001cf40016fc000060eb00000cfe0002c00380ba000206001cf40016fc000060eb00000cfe0002c00380ba000206001cf40016fc000060eb00001cfe0002c00380ba000206001cf40016fc000070eb00000cfe0002c00380ba000206001cf40016fc000070eb000008fe0002c00180ba000206001cf40016fc000060eb00000cfe0002c00180ba000206001cf4004afc000060fe000f01fe0f87fffe400c7ff101fdfe000f80fe00000cfe0002c00380fe0002091f80fe000501dffffffe1ffeff02fbfffefdff080007ffeffcffff7ff8dc000206001cf4002afc000060fe000007f3ff00c0fe00001cfe0002c00380fe00023fffc0fe000007e9ffdc000206001cf4002afc000060fe000007f3ff00c0fe00000cfe0002c00180fe00023fffc0fe000007e9ffdc000206001cf4002afc000060fe000007f3ff00e0fe00000cfe0002c00380fe00023ffff0fe00000fe9ffdc000206001cf4003bfc000060fe000a0800000200003300001c84fe000103f0fe00001cfe0002c00380fe0002600070fe00000ef6000002f600000fdc000206001cf4002cfc000060fe000008f3000070fe00001cfe0002c00380fe0002c00030fe00000eea000007dc000206001cf40028fc000060ef000030fe00001cfe0008c00380000001c00010fe00000eea000007dc000206001cf40037fc000060ef000038fe00001cfe0008c00180000001800008fe00000efd0002300010fe000508000001e008fa000007dc000206001cf4003ffc000060fe000070fc000008f900001cfe00001cfe0008e0018000000380600cfe00000efd0002300018fe000518003001e00cfa000007dc000206001cf4003ffc000060fe000070fc00000cf900001cfe00001cfe0001e003fe00030300600cfe00000efd0002300038fe000518003001f008fa000003dc000206001cf4003cfc000060fe0000e0fc00000cf900000efe00001cfe0008c00380000006006406fe00000efb000038fe00041c00000378f9000003dc000206001cf4003cfc000060fe0000c0fc00000cf9000006fe00001cfe0008c0038000000602ec07fe00000efb000030fe00041c00000238f9000007dc000206001cf4003cfc000060fe0000c0fc00000cf9000006fe00001cfe0008c0018000000603fc07fe000006fb000070fe00041e00000638f9000003dc000206001cf40048fc000060fe0000c0fd00053e0f8003801cfd000006fe000018fe0008c0038000000e03fc03fe00000efd000f7003f01e03f03f806006001800400380fe000007dc000206001cf40048fc000460000001c0fd00057f0fe00f807cfd000006fe000018fe0008c0030000080e01f803fe00000cfd000f7007f83e07f03f807006003c01e027c0fe000003dc0002c6001cf40048fc000460000101c0fd00057f0fe00f86fcfd000006fe000018fe000cc0030000080e01f8020000060cfd000f7007f83f07f03f807007003c01e07fc0fe000003dc0002c6001cf40048fc00046000018180fd0005ff0ff007c7fcfd000003fe00001cfe0007c00100000c0c00f0fe0001070cfd000f7001f87f07f83f80700fc03c00007fc0fe000003dc0002e6001cf40047fc0003600001c3fd000601800e3000e7c0fd000001fe00001cfe000cc00100001e180060008000078cfd000e300830c18f0c1c00700fe01c040c7cfd000007dc0002e60018f40047fc0003600001c3fd000601801c38006780fd0004018000001cfe000cc00380001e10006000c000078cfd000e301830c18e0c1c00300fe01c060c78fd000003dc0002f6001cf40068fc0003703e03e7fd000501801c1800e7fc000401c000807cfe000cc003fc001ff000f001fc001ffcfd000e301830ff8e0c1800300fc00c07fc70fd002803f7f00008fc00003f700003e0000001f8000038200000c0340858f8029fff9060091027822bfe001cf40045fc00007ffefffd000501801c180feefc000001feff00f8fe0001c003feff03f800f800feff00fcfd000e301830ff8e0c18003007000c07fc70fd000003dcff02fe0018f40045fc00007ffefffd000501801c180feefc000001feff00f8fe0001c003feff03f801f801feff00fefd000e301830ff8e0c18003007000c07fc60fd000003dcff02fe001cf40045fc00007ffefffd000501801c180fecfc000001feff00f8fe0001c003feff03f801fc01feff00fcfd000e301830ff8e0c18003006000c07f860fd000003dcff02fe001cf40066fc00033c0007fffd000501800c381fecfc000301fffff0fd000cc003c00f9ff803fc01f01807dcfd000e301830c00e0c18003006000c0e0060fd00010380fd0022081e00000ce0000dff80003e800007e7e000000e000001c00007fe0000fff801fe001cf40041fa000103e7fd000501800c18306cfc00010180fb000cc00380000f3803fe01c000078cfd000e301830c00c0c18403006000c060060fd000003dc0002f60018f40040fa000101c3fd000501801c1838ecfc000001fa000cc00380000e1802ee018000078efd000e380df0000e0c0ee03807001e040060fd000003dc0002f6001cf40040fa000203c380fd0004fe1c181ffefc000002fa000cc00300001c0c0060010000070cfd000e7c0ff03f8e0c0fc07c07003e03fc60fd000003dc0002c60018f40040fa0002038180fd00047f1c181ffefc000006fa000cc0030000080e0060030000060efd000e7c07f83f8e0c07c07c06003f03fc60fd000003dc0002c6001cf40040fa00020300c0fd00047f18180fecfc000006fa000cc0030000080e0060070000020efd000e7c07f03f8e0c07807c06003f03fc60fd000003dc000284001cf4003ffa00020100c0fd00043e080007e4fc000006fa0001c003fe00030e000007fe00000efd000d3801e01f040003007800003e00e0fc000003dc000206001cf40024f8000080f3000006fa0001c003fe00030c000007fe00000eea000003dc000206001cf40024f80000c0f3000006fa0001c003fe00030e000007fe00000cea000003dc0002060018f40024f80000c0f300000efa0001c003fe000306000006fe00000cea000007dc0002060018f40024f80000e0f300001cfa0001c003fe00030300000cfe00000cea000003dc0002060018f40024f8000060f3000018fa0001c003fe00030380001cfe00000cea000003dc0002060018f40024f8000070f3000018fa0001c003fe00030380001cfe00000cea000007dc0002060018f40024f8000030f3000030fa0001c003fe000301c00038fe00000cea000003dc000206001cf40023f8000010f3000060fa0001c003fd0002c00030fe00000eea000003dc000206001cf4001fe9000060fa0001c003fd0002c00070fe00000eea000007dc000206001cf4002af8000303fffbdffcff06d1fdffffafc7c0fa0001c003fd00027fffe0fe00000fe9ffdc000206001cf40021f8000007f3ff00c0fa0001c003fd00023fffc0fe00000fe9ffdc000206001cf40021f8000007f3ff0080fa0001c003fd00023fffc0fe00000fe9ffdc000206001cf40029f8000003f3ff0080fa0001c003fd00021fffc0fe000607ffffe7effffdf0ff00fedc000206001cf40015f2000004f10001c003e4000008d7000206001cf4000de10001c003b9000206001cf4000de10001c003b9000206001cf4000de10001c003b9000206001cf4000de10001c003b9000206001cf4000de10001c003b9000206001cf4000de10001c003b90002060018f4000de10001c003b90002060018f4000de10001c003b9000206001cf4000ee10002c00380ba000206001cf4000de10001c003b9000206001cf4000de10001c003b9000206001cf4000de10001c003b9000206001cf4000de10001c002b9000206001cf4000de10001c003b90002060018f4000de10001c003b90002060018f4000de100018003b90002060018f4000de10001c003b90002060018f4000de10001c003b90002060018f4000de10001c003b90002060018f4000de10001c003b90002060018f4000de10001c003b9000206001cf4000de10001c003b9000206001cf4000ee2000201c003b90002060018f4000de10001c003b9000206001cf4000de10001c003b9000206001cf4000de10001c003b9000204001cf4000de10001c003b9000204001cf40029e10001c003fc001310038000040c67edf98006079c00c8a2ffbe001cd700010180fe000206001cf40020e10001c003fe00001feaff00fcfd0001ffffe100021fffe0fe000206001cf40021e10001c003fe00003feaff00fcfd0002ffff80e200023fffe0fe0002060018f40021e10001c003fe00003feaff00fcfd0002ffff80e200023fffe0fe0002060018f40034e10001c003fe00183c7ff0000d17c000383c0000018000040e00004ffe00007ffcfc0001ecc0e20002100070fe0002060018f40022e10001c003fe000030ea00000cfe0003030000c0e20002400038fe0002040018f40022e10001c003fe000030ea00000cfe000303000060e20002c00018fe0002060018f4002ce10001c003fe000030fd000040fa0001800ff800000cfe00030607f030e3000301c1fc1cfe0002060018f40032e10001c003fe000030fd0002c000c0fe00056000800f0040fa00000cfe0003060ff830e300030183fe0cfe0002060018f40033e2000201c003fe000030fd0002c000c0fe00056000800f0040fa00000cfe0003040ff838e300030383fe0efe0002060018f4002fe10001c003fe000030fb0000c0fe00046000001f80f900000cfe0003080ff038e300030701fe07fe00020e0018f40030e2000201c003fe000030fb0000c0fe000460000031c0f900000cfe0003100f001ce3000306001e03fe00020e0018f4002fe10001c003fe000030fb0000c0fe000460000030c0f900000cfe0003100f000ce3000306001e03fe0002060018f40034e10001c003fe000038fc000d01c0000780f803803000c0070004fd00000cfe0003100e000ce3000306000e03fe0002060018f40037e10001c003fe000030fe000f01c01fc0f81fc1fc03803001e00f819ffd00000cfe0003100e000ce400040c06001e03fe0002060018f40037e10005c00300001830fe000f03c01fc0f81fc1fc03803001e00fc1fffd00070c000030100e000ce400040c06001e03fe0002040018f40036e10005c00300001c30fe000f01c01fc1fc1fe0fc03807e01e00fc1fffd00070c000030000e000ee400030e04001efd0002040018f40034e10005c00300001c30fe000f01c000c1de1c607001807f00e020e1fcfd00070c000038400f0006e400030e08001efb000018f40035e10005c00300001e30fd000ec000c30e30606001807f00c03061e0fd00070c00003c400f0006e400030f18001efd0002040018f4004be10005c00300003ff0fd000ec000e30e30606001807e00e038e1c0fd00070e00007ee00f0007fe000004fe000301000002f9000620000002000020fe000a1f38001e00e000181e0018f40035e10001c003feff00f0fd000ec020c3fe30206001807800e03fe1c0fd00000ffeff03e00f0003e3ff03f8001e00feff02fe0018f40035e10001c003feff00f0fd000ec06043fe10306001803000603fe180fd00000ffeff03e00f0003e3ff03f8000e00feff02fe0018f40036e2000201c003feff00f0fd000ec06043fe30706001803000603fe180fd00000ffeff03e00f0003e3ff03f8000e00feff02fc0018f40050e2000601c001ffff1f70fd000dc020435830706001803000403881fc002b0f003fffe00e00038007fffc007ffe0001bfe00007fff800fff93c0fffe00a0cff8007e0d01fb8000e00fbf8fe000018f4003ce2000101c0fe00011e30fd000dc020c30030706301803000403001fc00070e00003ce00e0007fe000038eb00080300000f18000e00c0fd000018f4003de2000101c0fe00011e30fd000ec030c00030706301803000e0300180fd00070e00003c600f0006fe000018eb00080300000f18001e0080fd000018f4003de10000c0fe00011c30fe000f01e03fc07c30703f03c03001f01fe380fd00070c000038000ff006fe000018eb00080380000e08007e0180fd000018f4003de10000c0fe00011830fe000f03f01fc0fe10601e03e03001f01fe380fd00070c000038300ff80cfe000038eb00080780000c0401fe0380fd000018f4003ce10000c0fe00011830fe000f03f01fc0fe10201e03e03001f80fe180fd00070c000030100ff80cfe000038eb00070fc0000c0603fe03fc000018f4003ae10000c0fd000030fe000e03f00f807c10000803e03001f003c0fc00000cfe00031807f00cfe000038eb00071fe000000601fc03fc000018f40034e10000c0fd000030fe000101c0fa000380000020fa00000cfe00031000000cfe000018eb00071fe0000006000003fc000018f40029e2000101c0fd000030ea00000cfe00031800000cfe000018eb00071ff0000006000003fc000018f40029e2000101c0fd000030ea00000cfe000318000008fe000018eb00070fe0000007000003fc000018f40028e10000c0fd000030ea00000cfe00030c000030fe000018eb0007078000000380000cfc000018f40028e10000c0fd000030ea00000cfe000304000030fe000018eb000003fe00030180000cfc000018f40026e2000101c0fd000030ea00000cfb000030fe000038eb000003fe00030180000cfc000018f40024e10000c0fd000030ea00000cfb000060fe000038eb000003fd0002c0001cfc000018f40027e10000c0fd000030ea00000cfe0003030000c0fe000038eb000003fd0002400038fc000018f40027e10000c0fd000010ea00001cfe0003010001c0fe000038eb000003fd0002600070fc000018f4002fe10000c0fd00003ffeff04f7fc3fff9ff3ff01bffcfd0002ffff80fe000038eb000003fd00023fffe0fc000018f40026e1000080fd00003feaff00fcfd0002ffff80fe000038eb000003fd00021fffe0fc000018f40025e1000080fd00001feaff00fcfd0001fffffd000018eb000003fd00021fffe0fc000018f4003ae200010180fd00180ffffe19fffff2007fff861dfff0123fffe70077fffc97fff8fd00013bfffd000018eb000003fd00020f8180fc000018f40013e2000101c0da000018eb000003f5000018f40013e2000101c0da000038eb000003f5000018f40013e200010180da000038eb000007f5000018f40013e200010180da000038eb000003f5000018f40013e200010180da000038eb000007f5000018f40013e200010180da000038eb000007f5000018f40013e2000101c0da000038eb000003f5000018f40013e200010180da000038eb000003f5000018f40018e200010180da000038f00005010080000003f5000018f40017e10000c0da000038fe00f1ff03c0000003f5000018f40018e2000101c0da000038fe00f1ff03c0000003f5000018f40018e2000101c0da000038fe00f1ff03c0000003f5000018f40026e2000101c0da000038fe0013c001f1c0000fff0000e3e80007ffc000c0000003f5000018f4001ae2000101c0da000038fe0000c0f20003c0000003f500001cf4001ae2000101c0da000038fe000080f2000340000003f5000018f4001ae2000101c0da000038fe000080f2000340000003f5000018f4001ee2000101c0da000038fe0000c0fa000030fa0003e0000003f5000018f4001ee2000101c0da000038fe0000c0fa000038fa0003c0000003f5000018f4001ee2000101c0da000038fe000080fa000038fa000340000007f5000018f4001ee2000101c0da000038fe0000c0fa000010fa000360000003f5000018f4001ee2000101c0da000038fe0000c0fa000030fa000360000003f5000018f4001ee2000101c0da000438000001c0fa000038fa000360000003f5000018f40026e2000101c0da001038000001c0000007e000030c3f803c01f0fe0003e0000003f5000018f40026e2000101c0da001038000041c0000007f060439e3fc07c09f0fe0003e0000003f5000018f40026e2000101c0da00103800006080000007f86043fe3fc07e1df0fe000340000003f5000018f40025e2000101c0da000f100000608000000e386043fe3ce0361efd000340000003f5000018f40025e2000101c0da000f100000708000000c1c6003fe3860071efd000360000007f5000018f40025e2000101c0da000f180000f18000000c1c60036e3821871efd000360000007f5000018f40024e200010180da000f1fff87ffc000000c1c60436e3821ff1cfd00007ffefff5000018f40022e200010180da00001ffeff0b8000000c1c60c36e3021ff18fd00fdfff5000018f40022e200010180da00001ffeff0b8000000c1c60c3fe3061ff18fd00fdfff5000018f40024e200010180d9000e7fffff8000000c1c61c3fe3061fe18fd00037ffffc7ef5000018f4001fe200010180d7000cf38000000c0c61c37e30618018fd000060f2000018f4001fe200010180d7000c71c000000c0863c3ee30618018fd000040f2000018f4001fe200010180d7000c718000000c1c0fc3ee3fe1fc18fd000040f2000018f4001fe200010180d7000c61c000000c1c1fc3ee3fc0ff18fd000040f2000018f4001fe200010180d7000c41c00000040c1cc3ee1fc07f18fd000040f2000018f4001de200010180d7000141c0fd00051cc0401f807efc000040f2000018f40018e200010180d7000101c0f8000018fc0000e0f2000018f40014e2000101c0d700010180f20000e0f2000018f40014e2000101c0d7000101c0f20000c0f2000018f40014e200010180d7000101c0f2000040f2000018f40014e200010180d7000101c0f2000040f2000018f40014e200010180d7000101c0f2000040f2000018f40014e2000101c0d700010180f2000040f2000018f40013e2000101c0d6000080f20000e0f2000018f40013e2000101c0d60000c0f20000c0f2000018f4001fe200010180d60010fff0000ffff800fff00003fff11057ffe0f2000018f40011e200010180d600f1ff00e0f2000018f40011e200010180d600f1ff00e0f2000018f40017e200010180d600007ffaff00fbfaff00c0f2000018f40010e200010180d100010420e8000018f4000be200010180b6000018f4000be200010180b6000018f4000be200010180b6000018f4000be200010180b6000018f4000be200010180b6000018f4000be2000101c0b6000018f4000ff2000001f2000101c0b6000018f4000ff2000001f200010180b6000038f4000be200010180b6000038f4000be200010180b6000018f4000be200010180b6000038f4000be200010180b6000038f4000be200010180b6000018f4000be200010180b6000018f4000be200010180b6000018f4000be200010180b6000038f4000be200010180b6000018f4000be200010180b6000038f4000be200010180b6000038f4000be200010180b6000018f4000be200010180b6000018f4000be200010180b6000038f4000be200010180b6000038f4000be200010180b6000018f4000be200010180b6000018f4000be200010180b6000018f4000be200010180b6000038f4000be200010180b6000018f4000fe2000501800003fff0ba000018f4000fe2000501800007fff8ba000038f4000fe2000501800007fff8ba000018f4000fe2000501800007fffcba000018f4000fe200010180fe00000eba000018f4000fe2000501800010000eba000018f4000fe20005018000300002ba000038f4000fe20005018000700003ba000038f40010e2000601800060000380bb000018f40010e20006018000e0000180bb000038f40010e20006018001c00001c0bb000018f40010e20006018001800000c0bb000018f40010e20006018001c00000c0bb000018f40010e20006018001c00000c0bb000018f40011e20007018001c00000c060bc000018f40011e20007018001800000c060bc000018f40010e20002018003fd0000e0bc000018f40011e20002018006fe000120e0bc000018f40011e2000201c006fe000131e0bc000078f40019e2000601ffff0002003ffeff00fee5ff01fdfeddff00f8f40010e2000601ffff0006003fbbff00f8f40010e2000601ffff0006003fbbff00f8f40038e2000601ffff0006003feeff00fef9ff009ffcff00dffaff1ce63ffffe01fffdfbbfffeee2ffff204ffffe4201fff9e3ffff7effffe0f4000fe000050700060031e0ec000004c4000be000050700070031e0ae000be000050380060000c0ae000be0000503800c004060ae000be0000501800c00c060ae000be0000501800800c040ae000ae0000401800000c0ad000ae0000401800000c0ad000ae0000401c00000c0ad0009df0003e0000180ad0008df0002600003ac0008df0002600003ac0008df0002700007ac0008df000230000eac0008df000238000cac0008df00021c200cac0008df00021ffff8ac0008df00020ffff8ac0008df00020ffff0ac0008df000203ff80ac0002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870002870000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1040{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw190\pich30\picwgoal3800\pichgoal600\macpict\bliptag1705255360\blipupi72{\*\blipuid 65a421c06256dfaa75b86ef88763f747}0ed400000000001e00be001102ff0c00ffffffff000000000000000000be0000001e00000000000000a101f200163842494d000000000000001e00be4772897068af626a001e0001000a00000000001e00be0098006400000000007d031900000000007d031900000000001e00be0000029d00029d00029d00029d00029d00029d00029d00029d00029d000cec00001cfc0002020008bb001802000006fa00000cfb000060fe00001cfc0002020008bb00160200000efa00000cfb000060fe00001efc000002b900140200000ffc0002060008fb000060fe00000cb300170300000380fd000006f9000060fe00000cfc000002b9001c0300000180fd000006f9000060fe00000cfc000507c01000001fbe00230300001080fd000006fd00140e000003e01800f00c001003e00e0fc03800f03f80bf0020fa001a7e0f803c00f03f000007e07c03f80c003c03e01f0fc03801f03f80bf0022fc001c1f807f0fc03c01f03f80000fe07c03f80c003e37e01f0fc01c01f83fc0bf002521000010060c3fc07e0fe03c01f83f80000fe0f803f00c001f3c000187800c001c30e0bf00252100003e060c3fc03c0f801c00f820c0000060c000000c00033c000086000c060c3060bf00252100007f060c38e10006001c000c20400010618000000c00033c0000c2000c060c3060bf00252100007e060c30610006000c000c6040001061f008000e000f38000fc2000c060c3060bf00252100007e060c30610004000c000c6040001021ff08000e003f30001fc20008060c2060bf002521000038060c30610006000c000c6000001021ff08000e003f30001fc20008060c2060bf002521000030060c30610006000c000c6040001021fe080004003f30000fc6000c060c2060bf002521000010060c30638002000c000c6040001021c00800040003700000c2100c060c7060bf0024fe001e020c30630006000c000c6040001061800c00040003f00000c3101c060c7060bf0024fe001e021c30610006301c040c2040001061800c000e0007f00003c3e01e07f87060bf002521000010023e30600007381e071c6060001ff07e03f00f003fb0001fc1e03e01f83060bf00252100003001fc30607e03f03e03f86040000ff07f03f81f003fb0001fc0e01e01f82020bf00231f00001001fc30607f01e03f01f820400007f07f03f81f003f80001fc0c00e00f0bd001b1700001001ec30607f01c01e01f020000007c01e01f800001eb5000efd00080c00000c00800000c0aa00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d0007a500010180fb0012b1000838004fff0000fffff9fdff00fcfb000fc000003cfe00011c1febff00fcfb001ccf000a06800005e7801ffffe3f67fdff00fefe00003feaff00fcfb001ed7000303cfc003eeff00fefe00003ff4ff05f00fff000006fd00000cfb001de500011ff0fe000003e3ff01fe7efe000538fe600007feef00000cfb002bf000057ddc3843fff9fbff00fefe00000feeff0cf3f7cfff245087f80001000006fe000030ea00000cfb0020fc000003e9fffe00000ff9ff04fe080fff80ef000006fe000030ea00000cfb0021fc000007e9fffe00050fffc8001fc0e7000006fe000030ee000002fe00000cfb0033fc000007f3ff04f8e019ffc0fd000007fe000008e2000006fe0003300001c0fd0002018002fc000002fe000002fe00000cfb0035fc000707f63e3ffc040272f1000003fe000018e9000080fb000006fe0003300003c0fd00010180fb000006fe000002fe00000cfb0036fc000007ea000003fe000018fd00000efa000008f6000080fb000006fe0003300003e0fd00010180fb000006fe000002fe00000cfb0038fc000004ea000003fe000018fd00000efc0002040018f6000080fb000002fe000330000430fd00010180fb000006fe000006fe00000cfb003ffc000004f400010180f9000003fe000018fd00000ffc000004fa000010fc0000c0fb000002fe000330000c30fd000101c0fb000007fe00000efe00000cfb004ffc000004fd000010fc000508002003c008fa000003fe000018fd00000ffc000004fa000010fd000101c0fb000006fe000230000cfd000d0401e006000007800007f007003efe00000cfe000230000051fc000006fd0002100010fe000418000003e0f9000003fe000018fd000003fc000004fa000010fd000101c0fb000006fe001830000c008003e01f83f00e007c0fc00007f00f807e1810000cfe000230000053fc00000efb000018fe000418000001f0f9000003fe000018fd000001fc000006fa00091c001800601fc0f001e0fe001c06000010300004018187e01fc3f80f00fc1fe00003f80f80fe1810000cfe00023c000054fc00000cfb000018fe00041800000430f9000003fe000018f800121c0f801801e03f00001f803c00f01fc0f033e0fe001c0600001830000e01818ff03f83f00700fc1ff000070c0001861810000cfe00023c000055fc00000cfb000018fe000318000004f8000003fe000018fa00143f00fe0fc03801f03f00001fc07c00f03fc1f833e0fe001c0200001c30000fc1818f107001c00700021c3800060c10018718100004fe00023c00005cfc00000cfb000038fe00001efd00041801e007c0fe000003fe000018fd00162004043f80fe0fc03801f03f80001fc01e00f067c0f038fd00220200001c30001fc1818c18600180020002181800060c3041831810000700a0007e00005efc00000cfd000f7000f81e03f03f807000003c01f06fc0fe00040300000418fd00163004047fc0f00fc01800783cc0001860830000c1c2043cfd001c0200001e70001fc1818c1860008002010318180006043001831810000ffdff0100005efc00000cfd000f7803f81e07f03f80f004003803f07fc0fe00040300000618fd00167c040c70c000060018041820c0001021830004c1c20c38fd001c0300003ff0000f81c18c18600180020103181800060e3001821810000ffdff0100005ffd0001060cfd000e7803f81e07f03f00700f801c03f838fd00040300000f18fd0016fe040c204300040018060c2040001021ef001cc1c79c38fd000003feff1ef0000e01c18c18600180030103181800060e3001021c30000f9ffffffe00005ffd0001070cfd000e3807f80186081c00701fc01c001878fd00040300000f18fd0016fe040c206300040018060c0040001021ff00fcc0c3fe30fd000003feff18f0000e01c38c08600180020103181800060e30610207f00006fe00023c00005ffd0001070cfd000e100c180186081800201fc01c001c78fd000403c6105ff8fd00167c040c606300040008060c0040001821ff00fec0c3fe30fd000003feff18f0000601838c08600180020103181800060630610207f00006fe00023c00005ffd0001078cfd000e180c186186081800300fc01c03fc70fd000003feff00f8fd001630060c6063000400080e0c2040001821ff00fec0c3fc30fd001c0780001e30000c01838c08600084030103181800020c30400703f00006fe00023c00005ffd00010f9cfd000e380c187f86081800300e001807fc60fd000001feff00f8fd001630061c706300060008060c204000102180000ec1c30030fd001c0300001e30000c00878c1860008c07010718180007fc0600df00700004fe0002380000610500003ffffffefd000e380c187f860c18003006000807fc20fd000401fffe3ff8fd001630061c706300040008060c204000103080000641c20030fd001c0200001c30000e000f8c180f00fc07807e1c180007f80f807f00100006fe0002300000610500007ffffffcfd000e180c187f860c18003006000807f820fd000401fe400f98fd001630061c70620004301c060c204000103000001e03c01830fd001c0300001c30000c003f8c181f80780f807c1c180003f80f807f0010000cfe00021000005d010000feff00fcfd000e18080870060c180030060008060020fd00040100000718fd001620003c60600006701e073860400010303f00fe3fc0fc30fd001c0300001830000c003f8c181fc0780f807c08100003f007803e00e0000efb005805000030000ffcfd000e1008084006081c403006000c060020fd00040100000718fd00162001fc60607e03e03e01f860c00010203f00fe3fc0fe30fd001003000018380004001984000f8030020030f9000303e00006fb0048fd0001078cfd000d3808180006081cc07806001c07f0fc00040100000e08fc001501fc60607e01e03e01f020400010003f00fe1fc0fc30fd000002fe000030ed000303c00004fb0040fd0001078cfd000d3c00781f06080f807806001e03fcfc00040100000408fc000901cc20407e01e01e00f0fa00007cf9000003fe000030ed000303c0000efb0031fd0001070cfd000e7c03f83f860c0780fc06003e01fc60fd000001fe000008f60000c0ee000003fe000030ea00000efb002cfd0001060cfd000d7c03f83f860807807804003e01fcfc000003fe000018e2000003fe000030ea000006fb002cfd0001060cfd000d7c03f81f800003801000000c0020fc000003fe000018e2000003fe000030ea000004fb001afc00000cea000003fe000008e2000003fe000030ea000004fb001afc000004ea000003fe000008e2000003fe000030ea00000efb001afc000004ea000003fe000008e2000002fe000030ea00000efb0021fc000004ea000001fe000008e2000007fe000018f10007079e033ffffffefefb0022fc000006ea000003fe000008e2000007fe00081c000004607003ffdff2ff00fefb001efc000004ea000003fe000008e600047e703c5ffffe00001feaff00fcfb0029fc000004ea000003fe000008f50006064001c1effe7ff4fffe00001ff1ff07dffffffc1807c0b0fb0023fc000006ea000003fe00050e00003d80cfe6fffe00001ffcff06c7c0fffe0007f1ef001afc000004f2000808000006ffe00ffffffe00000fe3ff00fcde0020fc000a060004000005e000dffffef3fffe00000ff1ff063ef7fff0000008d60017fc000007e9fffe00000ffcff079f01fff0000cf580cc0013fc000007efff00fbfeff0080fd00010464c00014fc000007faff0af87fffff800076f8000180b50009fc000302000001a600029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d0000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1041{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw186\pich46\picwgoal3720\pichgoal920\macpict\bliptag-1401353898\blipupi72{\*\blipuid ac790956c5b352deb2424b29253f20e9}12e400000000002e00ba001102ff0c00ffffffff000000000000000000ba0000002e00000000000000a101f200163842494d000000000000002e00ba4772897068af626a001e0001000a00000000002e00ba009800620000000000c103090000000000c1030900000000002e00ba0000029f00029f00029f00029f00029f00029f00029f000a02000038fa000020aa00140200003cfc0002180070fc000040fd000003b500140200003cfc0002180060fc0000c0fd000003b500120200000efc000018fa0000c0fd000003b5001202000006fc000018fa0000c0fd000003b5001202000006fc000018fa000060fd000003b5001d1900008000000800f81e006003807c0000fe00f000e03f00e007c0b9001d1900008010007e01fc3f00f007c0fe00007f01f801f07f03e04fc0b9001d190000c01830fe03fc3f80f007c0fe00007f01f803f07f03e07fc0b9001c180000e01830ff03f83f007007c1ff00007f03f001f08701f07fb8001c180001f81830cf86001e007000618300006083040019830010f0b8001c180003f81830c18e001800300030810000e0860c0019810038f0b8001c180001f81830c18e0018003010208100006087fc00f9810ff8e0b8001c180001c01831c18e0018003010318300004087fe03f9810ff8c0b8001c180000c01831c1840018003010318300004087fe03f9810ff8c0b8001c180000c01871c18c001800301031838000e1c7fc07f9810ff0c0b8001c180000801871c18c001840301031838000e1c7000719810c00c0b8001c180000c018f1c18e0018e0301031838000e0c7000419830000c0b8001c180000c018f1c187001dc0700071838000e0c3f007f9ef81f0c0b8001c180000c00ff1c183f80fc07807e1838000e0c1fc03f87f83f8c0b8001c180000c007f1c183fc0780fc0fe183800060c1fc03f87f83f840b8001b1700008007f0c101fc0780fc07c081000060c0fe03f83f03f8b70018fe000903300000b007003807c0fc00050c01f00001f0b700029f00029f00029f00029f00029f00029f00029f00029f00029f00029f00029f00029f00029f00029f00029f00029f00029f00029f00029f00029f00029f00029f00029f00029f0013e5000901000003f7f80ffffe0ffdff00f8ca000ff7000501fe43ffff3fe7ff00f8ca000af7000003e2ff00f8ca0010f7000003e8ff06fdffffbc5ffff8ca001ff7001503ffff8d00fffc410ffff0107fff80003fc8000019d0f7000038ca000af7000003e2000018ca000af7000003e2000018ca000af7000003e2000018ca000af7000003e2000018ca000af7000002e2000018ca0010f7000003e2000018d3000203f8e8fb001cf7000003e2000018e8000a094020102be003f2ffd737f5ff00fefb001ef7000003e2000018fe00011780fe000703309ff7dffffffde1ff00fefb0024f7000003ef0009f0000e7ff0feffff8c7efe00051800003fff80fe00000fdaff00fefb002efb00041fff000003fe00000fe9fffe00051800007fffc0fe00000fe7ff0dfdf60ffffec007ff80001e00000efb0031fb00043fffc00002fe00001fe9fffe00051800007fffc0fe00000ffbff0cf3fffe061fff81c01fc0000002ed000006fb0028fb00027fffc0fc00001ff1ff07fde5ffffdfc9fffffe00051800007c0060fe00000eda000006fb002ffb00043fcfe00002fe00101dfffc0003fff080007800003c20000002fa000007fe0005180001800030d6000002fb002bfb00048000600003fe000018ea000003fe0005180001800030f0000003f8000038fa000010fa000006fb0037fc0005018000300002fe000010ea000002fe0005180003800018fe000008f6000301000780fd000040fe000038fa000010fa000006fb0037f90002300002fe000010f400010180f9000003fe0005180003010018fe00000cf80005400001000780fd000060fe000038fc00000cf1003df90002180002fe000010fd000040fc0005100040038010fa000003fe0005180006018008fe00000cf6000301000380fd000060fe000038fc00000cf10045fc00050200300c0002fe000010fd0002400020fe000530004003c010fa000003fe000418000601c0fd00000cf6000301800180fd000060fe000018fc00000cf8000002fb0043fc00090200300c000780000010fb000020fe000430000003e0f9000003fe000518000800c006fe00000cf6000301000180fd000060fe000018fc00000cf8000002fb004cfa00072006000fe0000010fb000060fe000030fe000060f9000003fe000518000800c006fe00000cf6000301800180fd000fe020000018000003803c1f807003e07efd000002fe000210000054fc00090c006006001fe0000010fb000060fe000030fe000020f9000003fe0005180008006006fe00000cfb001c700780c001c1f801801e00000fe07807f018007807c03c1f807803e07ffd000002fe000210000059fc00090c004006001fe0000010fb0000e0fe000038fb0002c00180fe000003fe0005180008003006fe00000cfe001f010200f04fc1c003e1fc01803e00000fe0fc07f01800f86fc03e3f807807e0fffd000002fe00021800005ffc00090c000007000fc0000010fd000fe003e03807c07e00c000007003e047c0fe000003fe00091810080030070000040cfe0020018301f8ffc1e003e1fc01803f00001fe07c0ff018007c7f801e1f803803f0e380fe000002fe00021c000060fd000a100c010002000fc0000010fe001001e00ff07c0fe07f01e00c007003f06fc0fe000003fe00fe18060030070000060cfe002003830070ff80e001f18e01801f80003fe00608001800047800000e00380c10e0c0fe000002fe00023c000061fd000a100c0180020007c0000010fe001001e00fe03c0fe07f00e00f007003f07fc0fe000003fe0009183c1800300100000708fe002001830004f800e0001b87018041800030e00618001800067000010c00180c1840c0fe000003fe00023e00005efd000a1808018000000380000c10fd000ee008e0180f003800e01f8030003878fd000003fe0009183c300030018000070cfe002001030004f000e0001b03018043800020438e180018000e7000070c0038081840c0fe000003fdff0100005efd000a1c00018001000300001e10fd000ee010610208103000603f80300c1870fd000003fe0009183e7000300180000fbcfe00200103003ef000e000bb830180ff80003063fe180018007e70003f0c0038181840c0fe000003fdff0100005efd000a1c30018001800300001e30fd000e6030618208183000401f80100c3870fd000d03ffff043ffff0003001ffaffffcfe0020038300fee0004003fb030180ff80003063fe18001800ffe0003f8c00180818c0c0fe000003fdff0100005dfd000a3e70018001e01f80003ff0fd000e603021ff08103000400f00100ff870fd000003fcff03f0003001feff00fcfe0020030301fec0004003fb830180ff80003063fe18001800ffe0007f8c00180c18c0c0fe000603ffc0007f00005d010003feff03f0018000fcff00f0fd000e603021ff08183000400c00180ff860fd000003fcff03f0003001feff00fcfe0020018701fec0004007fb8301807f00007063e018001801ffe000470c00180c18c0c0fe000002fe00023e00005d010007feff03f0018000fcff00f0fd000e603021ff08183000600c00100ff860fd000003fcff07f0007001fffe0ffcfe002001ce000ec000400c3b0301804000003043001800180107e000830c20380c18c0c0fe000002fe00021e00005e010007feff03f0018001fcff00f0fd000e603021fe08181000400c00100fa060fd000d03800f00003e30006001c000078cfd001fcc0204c000e00c3b030180c0000030400018001c0007e000830ee0380e38c0c0fe000002fe00021c0000600e0007f2807ff0004001f000001e1f30fd000e6030218008101000000c00100c0060fd000d03000400001e3000c00180000708fd001ffc000cc000e00c3b8f03804300003ce07c0e403e007fe0007f07e07c0ff0e0c0fe000002fe00021800005efd00051e70006001c0fe00011e10fd000e6010208008103180600c00180c0060fd000d03000400001c2000c00380000708fd001f7801fcc000f007fbfc03c03f80001fe0fe0ff03e00ffe0007f07c07c07f0c0c0fe000002fe000210000059fd00051c3000600180fe00010c10fd000e6000e00008101380600c003c07f060fd000d0300040000180800000300000608fd001e3001fec001f007fffc07c03f80001fe0fe07f03e00ffe0003f03c07c03e040fd000002fb0058fd000a1c380000038000000e0810fd000ef007f07f08180f80f00c007e03f860fd000d0300040000101801800600000408fd001d3001fcc001f003fbfc07c03f80000fe07e07f01e007e60001e01801801c0fc000002fb004bfd0004181c001003fe00021f1810fe000f01f807f07f08180f01f80c007e03f860fd0002010004fe000308010006fe000008fd00073000700000c003d0fe000008fb0000a0f1000002fb0036fd0004100c001003fe00021f0810fd000df807e03f08000601f800003c01f8fc0002010004fe000308000006fe000008da000002fb0030fd000010fe000002fe00023f8010fd00037000800cfd000020f70002030006fe00030c000006fe000008da000002fb0024fc000308000002fe00023f8010ea0002030004fe00030c000006fe00000cda000002fb0024fc00030c000002fe00027fc010ea0002030004fe00030e00000cfe00000cda000006fb0024fc00030c000006fe00023f8010ea0002030004fe00030700000cfe00000cda000006fb0024fc00030600000cfe00021f0010ea0002030004fe000303000018fe00000cda000006fb0021fc00030300000cfe00020c0010ea0002030004fe000003fb00000cda000006fb002cfc00030300000cfe00020c0010ea0002030004fe000301800020fe00000ce2000810000020000001fffefb0031fc000301800018fe0002040010ea000203000efe000301800060fe00000cee000b079fc180ffff8fcffffe7f7ff8fffb0027f9000030fe00020c0010ea000203000efd0002807fe0fe00070fc81fffcfe2fffde1ff00fefb002ef9000030fe00020c0018f8000a0f000001002000046f9f2ffeff02ef000cfd00027fffe0fe00000fdaff00fefb002afb00023fffe0fe00020c001fe9ff010004fd00027fffc0fe00000fe5ff09cfffe0003ffe00000f80f90031fb00027fffc0fe00020c001fe9ff010004fd00023fff80fe00000ffcff10fbf1fffc001fff80043e48000064000004e9001cfb00027fffc0fc00001fecff041ffffe0004fd000016fa000040d50020fb0002177fc0fc000c0fffffefe7ffe0001fff800070fa000040fc00000cc80006d900000ec8000af500000ce6000006c8000af500000ce6000006c8000af500000ce600000cc8000af500000ce6000004c8000af500000ce6000004c8000af500000ce6000004c8000af500000ce6000004c8000af500000ce6000004c8000af500000ce6000004c8000af500000ce6000006c8000af500000ce6000006c8000af500000ce6000006c8000af500000ce6000006c8000af500000ce6000006c8000af500000ce6000006c8000af500000ce6000006c8000af500000ce6000006c8000af500000ce6000006c8000af500000ce600000ec8000af500000ce6000006c8000af500000ce600000ec8000af500000ce6000006c8000af500000ce6000006c8000af500000ce6000006c8000af500000ce6000006c8000af500000ce6000006c8000af500000ce6000006c8000af500000ce6000006c8000ff500050c00001fffc0eb000006c8000ff500050400003fffe0eb000006c8000ff500050400003fffe0eb00000ec8000ff500050400007fff70eb000006c8000ff500050c0000400030eb000006c8000ff500050c0000c00018eb000006c8000ff50005040001c0000ceb000006c8000ff5000504000180000eeb000006c8000ff5000504000380000eeb000006c8000ff50005060003000007eb000006c8000ff50005040006000003eb000006c8000ff50005040006000003eb000006c8000ff50005040006000003eb000004c80011f500070400060000038080ed000004c80011f500070400060000030180ed000006c80011f5000704000e0000010180ed000006c80011f5000204000cfe00010380ed000006c80011f50002040018fe0001c380ed00000ec8001df50002060038fe000143c0f9000c6000000b9130e0fbe78fe7fffec80010f5000207fff8fe00007fecff00fec80010f5000607fff80018007fecff00fec80010f5000507fff8001800ecff01fa3cc8001cf5001207fff8001800fffff8003fff80001bc0000018fe000040c2000bf3000538001c00c7c0b3000bf3000518001c00c380b3000bf300050c0018018380b3000bf30005060030018180b3000bf30005060020038180b30009f3000306000003b1000af300040600000380b2000af300040600000380b20009f3000304000001b100029f0009f3000301800004b10009f300030180000cb10006f0000008b10008f20002400018b10008f20002400010b10006f2000040af0008f200023fffe0b10008f200023fffe0b10008f200021fffc0b10007f2000103b8b000029f00029f00029f00029f00029f00029f00029f00029f00029f00029f000000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1042{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw208\pich41\picwgoal4160\pichgoal820\macpict\bliptag517460876\blipupi72{\*\blipuid 1ed7d38c211099012e3dd87427766053}142c00000000002900d0001102ff0c00ffffffff000000000000000000d00000002900000000000000a101f200163842494d000000000000002900d04772897068af626a001e0001000a00000000002900d00098006e0000000000ab03630000000000ab036300000000002900d0000002930002930002930002930002930006ed000010a80010f90002040018fc000030fe000018a8001402000006fc0002060018fc000030fe000018a800140200000ffc0002060008fc000030fe000018a800130300000f80fd000006fa000030fe000018a800130300001980fd000006fa000030fe000038a800140300001880fd00010780fb00043e001001f8a8001a1600001080000f003e1fc03801e03e00003f007c03f80080aa001a1600001800043f807f1fe03803f07f00003f807e03f88080aa001a1600001802043f807f0fc03c03f07f00003fc0fe0078c080aa001a1600003c02043f003e07803c00387f800030e1c70038c080aa001a1600003e060430000007001c041860c0003061830818c080aa001a1600007f060c3000000600180c1860c00030618308188080aa001a1600007f060c3001000600080c186080003061030818c080aa001a1600003e060c3003800600080c1860c00030610308104080aa001a16000038060c3021800600080c1c60c00030210318180180aa001a16000018020c3063800600080c0c60c00030610318100780aa001a16000018020e306180061018040860c00030610208183fc0aa001a16000038021e30618006301c001860c00030610008383f80aa001a16000038031e30618002701c001860c0003fc07803f80780aa001a1600003803de3061fc01e03e03f060c0003fc07c03f80180aa001a1600003803ec3060ff01e03e03f060c0003f807c03f00180aa001a1600003801ec3060ff01e03e03e020c0003f807c01e00780aa00140c00001801e000607e00c03e00c0f900001fa9000dfd000340000010f400001fa90006ec00001fa90006ec00000ea9000293000293000293000293000293000293000293000293000293000293000293000293000293000293000293000ba9000502c000007fc0f1000eb30004500007ffebf7ff00f8f1000dbf0003ce5d0063eaff00fcf1000ac0000007e6ff00fcf10013c0000007efff09f100fffc00011c00001cf10017c0000007fdff052001fbe00060fe000004f400000cf1000ac0000007e600000cf1000ac0000004e600000cf1000ac0000004e600000cf1000ac000000ce600000cf1000ac0000004e600000cf1000ac000000ce600000cf1000ac000000ce600000cf1000fc000000ce600000cfb0001fffef90018c000000cf3000203ffc0f9ff02fe000cfc000201fffff90016c000040c00000237ecff02fe000cfc000201fffff9001aca000133f8f900020e001feaff02fe000cfc0003010f8f80fa0026d40002076337f9ff00fcf900020e001ff1ff09ef05fff800001806000cfc000303000180fa002add0004039bfdf87ff2ff00fcf9000b04001fffffe467ff800000e0f3000202000cfc000303000080fa001de70002dffc2ce6ff00fcf9000204001cea000202000cfc0001060ef80025f100000fe2ff08e007ffb80007fe001cf90002040018ea000202000cfc00030c1f0060fa002efb000203ffe0fa00003feaff03fe83fff8f500001cf90002040018f0000004fc000202000cfc00030c1f8030fa0036fb00020ffff0fa00003ff4ff05e38cff800002ed00000cf90002040018fb000308000004fa000006fc000202000cfb00020f8030fa0037fb00021ffff0fa00093ffffffc3ffffe001b80e300000cf90002060018fb000308000006fa000006fc000202000cfc00033007c038fa002cfb00021ffff8fa000038da00000cf900020e0018fb000308000006fa000006fa00000cfc00033003c018fa0036fb0002300018fa000030ea0000c0fc000030f800000cf900020f0018fb000308000006fa000006fc000202000cfc00033001c018fa003ffb000220001cfa000030f400001cf9000101c0fc000030f800000cf900023fc018fb00030c000006fa000006fc000202000cfc00033001c018fe000020fe0048fb000260060cfa000030f9000502000008003cf9000101c0fc000030f800000cf900027fc018fb00030e00000ffd00040200700fc0fd000202000cfc00033001c018fe000030fe004dfb0002c01f06fa000030f9000502000008001cfd000001fd0000c0fc000020f800001cf900023f8018fc000df81f800e0fc01e07380f01f80fc0fd000202000cfc00032001c01cfe000038fe004bfb0002c01f02fa000030f6000218001cfd000001fd0000c0fc000030f800000cf900023f0818fc000dfc3f801f0fc03e07b81f03fc1fc0fd000202000cfd0004600000e00cfe000038fe0051fc000301c03f02fa000030f6000208001cfd000003fd000040fc00053c00400380f0fd00000cf900021f0818fc000dfc3f801f0fc03e07fc1f03fe0f80fd000202000cfd00047080003006fe00003cfe0051fc000201803ef9000030f6000208000cfd000003fd000b4001800e00f07e00c00f81f8fd00000cf900021f0c18fc000c781e000f87000007fc30010606fc000202000cfd000478c0003006fe00007efe0052fc0002030078f9000030f600170e000c006000003f01c01f804003e01e01f07e01e00f81fcfd00000cf900020e0c18fb000b0c000186000005dc30430606fc000203000cfd0008ffc000f007ffc7f1fffe0055fc00040300780180fb000030fc001d03c01c02001e0fe00c01f000007f03e03f804003e13e00f87e00c01f81fcfd00000cf90002040e18fb000b0c000186000104dc00c30606fc000003faff03c001e007fdfffe0056fc00040300780180fb000030fd001e0c07c03e06001e0fe00c01f800007f03e01f804001c3be00087c00c0304106fd00000cf900020c0f38fb000b0c00078600ff04dc0fe30606fc000003faff03c001c007fdfffe005efc00040300780180fc00011030fe001f060c07e37e06001f0fe00c01f800007f00100000400003c0000c3000e0306006fd00000cfb000402001ffff8fd000d01f00c001f8600ff84dc3fe30606fc000003faff03c001c007feff00fefe0060fd0005060300780180fc00011810fe001f060002e3fc0700001c700c000c00008308184000600033c0000c200060304102fd00010fdff8ff00f8fd000d01f80c001f8600ff84dc3fc30206fc000b03883bff780005fcc001c006fe00003cfe005efd00050707007000c0fc00011c30fe001f06000033c003000098100c020c0001830c3840006001f3c0007c200060306102fd00000ff7ff00f8fc000cf80c001f8600ff04dc3e830306fc000003fe000718000078c003c006fe00003cfe005ffd0005070400800040fc00011c30fe001f060000338003000198100c07bc0001830ff840004003f38000fc2000e0306302fd00000ff7ff00b8fc000d0c0c00018600c004dc2003030630fd000003fe0007180000784003c00cfe000038fe0066fd0005070c01800060fc00011e70fe001f060c00338003000f98100c07fc0001830ff840004003f30001fc200060306302fd000b0f7fff007ff8000380000f18fc000d0c0c000186308004dc2001070630fd000003fe00073c000070200f8018fe000030fe0068fd000c0f9c01c000780001fd80877ff0fe001f060c03f20003001f98100c07fc0001830ff040006007f30003fc300040306102fd00000cfe00076000000300000e18fc000d040c600780f06204fc07810701e0fd000002fe00077e000060301f8018fe000030fe0068090000faa07ffc00f0007ffbff00f0fe001f060c07f60003001f98100c07fc0001830f80400060043300020c308040306102fd00000cfe00077000000300000e18fd000e01f007c01f81e03f04ec0fe10701e0fd000003fe00077e000060300f0018fe000030fe0064010000feff04fc0078007ffbff00f0fe001f061c07f70002001f98100c07f80001810c00400060083300020c3180e0204102fd00000cfe00077000000300000c18fd000e03f807c01f81c03f84ec0fe10201c0fd000003fe00007ffe000330060018fa0064010000feff04fc0078007ffbff00f0fe000b07380c370002000198100c04fe0010810c004000e0007300007c1b80f00fc107fd00000cfe0007f800000300000818fd000e03f803801f81c03f80480fc0000080fd000002fe0000fffe000330000018fa005f010000feff0bfc0078007056e00700001e30fe000a03b808370003000098180cfd0010070fe03000f003fb0000fc0f00f80f8303fd00000cfe0003f8000003fe000018fd000703e000000e000008f6000002fe0000fffe000330000018fa0053fd000c078c0078006000000300001e30fe001f01f0007f000380019ef01e00fc00007f07f03f81f003f30001fe0f01f80f8102fd00070c000001fc000003fe000018ea000002fe00007ffe000318000030fa0052fd000c070c0078006000000300001c30fe001e01f007ff0007801f9fe01f01fc00007f03f83f81f003fb0000fc0f00300780fc00070c000003fc000003fe000018ea000002fe000038fe00030c000030fa0048fd00030700007ffd00040300001830fd0015e007ff0007c01f8fe01f01fc00007f03f01f81e000f0f400070c000001fe000003fe000018ea000003fe000018fe00030c000030fa0042fd000c0603003f008000000300001030fd000ec007fb000780078fc00c01fc00001eed00000cfe0003fc000003fe000018ea000003fe000018fe000306000060fa0036fd00080403001f0080000007fe000030fb0002b00003e300000cfe000370000003fe000018ea000002fe000018fe0003030000c0fa002ffc000703001f0180000003fe000038da00000cfe000360000003fe000018ea000002fe000018fe0003030000c0fa002dfc00070300000180000002fe000030da00000cfe000360000003fe000018ea000007fe000018fc00010180fa002efc00070300000180000007fe000030da00000cfe000370000003fe000018ea00000ffe000018fd0002ffff80fa0034fc00070300000180000007fe000030da00000cfe000370000003fe000018f70005f80041bfc01cf9fffe000018fd0001fffff90031fb0002c00003fe000003fe000030da00000cfe000370000003fe00051c041feffe1fefff00fefe000018fd0001fffff9002ffb0002c00002fe000003fe000030da00003cfe000370000003fe00001fedff03cffffffcfe000018fd00010e30f90035fb0002c00002fe000003fe000030e3000301c3f81cfcff00fcfe000360000003fe00001ff3ff07dfffc00000680001fc000018f30034fb0002200008fe000003fe000030ec00011083f1ff00fcfe0013700000038000000ffffc000f7f000027e0000038f2000018f30028fb0002700008fe000003fe000018f8000513000067e9dfe9ff00f8fe000370000003e2000018f3002bfb0002700008fe000007fe00061f812f3ff8ffbfe8ff06fe3fffffc00dfffc000370000003e2000018f30027fb00023f7bf0fe000007fe00001fecff087ffffc383dfe000007f4000370000003e2000018f30025fb00021ffff0fe000003fe00001ff4ff06c07fffe0000204ea000370000001e2000018f30024fb00021ffff0fe000003fe00090fffff9e7fffb00007dcdf000370000003e2000018f30017fb00020fffe0fe000003d2000370000003e2000018f30011f5000003d2000370000003e2000018f30011f5000003d2000370000003e2000018f30011f5000003d2000330000003e2000018f30011f5000007d2000330000003e2000018f30011f5000003d2000330000003e2000018f30012f5000003d200047000000380e3000018f30012f5000003d200042000000380e3000018f30012f5000003d200047000000380e3000018f30012f5000003d200047000000380e3000018f30012f5000007d200047000000380e3000018f30012f5000003d200047000000380e3000018f30012f5000007d200047000000380e3000018f30012f5000003d200047000000380e3000018f30012f5000003d200047000000380e3000018f30012f5000003d200047000000380e3000018f30012f5000003d200047000000380e3000018f30012f5000003d200047000000380e3000018f30012f5000003d200047000000380e3000018f30012f5000003d200047000000380e3000018f30011f5000003d2000370000003e2000018f30011f5000003d2000370000003e2000018f30011f5000003d2000330000003e2000018f30012f5000007d200047000000380e3000018f30012f5000003d200047000000380e3000018f30012f5000003d200043000000380e3000018f30012f5000003d200043000000380e3000018f30011f5000003d2000330000001e2000018f30011f5000003d2000330000001e2000018f30011f5000003d2000370000003e2000018f30011f5000003d2000330000003e2000018f30011f5000003d2000330000003e2000018f30011f5000003d2000330000001e2000018f30012f5000003d200043000000180e3000018f30012f5000003d200047000000180e3000018f30012f5000003d200043000000380e3000018f30011f5000003d2000330000003e2000018f30012f5000003d200043000000380e3000018f30012f5000003d200043000000180e3000018f30012f5000003d200043000000180e3000018f30012f5000003d200047000000180e3000038f30019f5000003d200046000000180ee00030a01020dfaff00f8f30019f5000003d200047000000180fa00030101fda0eeff00f8f30013f5000003d20005f0000001f794e4ff00f8f3001ff5000003da000b780000ffff7ffffff0000001e9ff06f803fff8301e08f20023f5000003e50005800000fffffef4ff03f0000001f7ff00fefeff05bbfff8000620e70019f5000003ec0002bc068feaff09e0000001ffff0560fff8d90014f5000003f8000406000001f7e4ff021fbffcce000ff5000303d8cfafe0ff0280ff80c7000df5000003e9ff03f17bfff0bc000df5000003f1ff03f8000f03b40010f5000a01ffffe7fdfffc0007ff80aa0002930002930002930002930002930002930002930002930002930000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1043{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex89\picscaley89\piccropl0\piccropr0\piccropt0\piccropb0\picw343\pich258\picwgoal6860\pichgoal5160\macpict\bliptag-1248648189\blipupi72{\*\blipuid b5932403fbd16e31cd179b80f872207c}990e0000000001020157001102ff0c00ffffffff000000000000000001570000010200000000000000a101f200163842494d000000000000010201574772897068af626a001e0001000a0000000001020157009800b40000000004310595000000000431059500000000010201570000048100cd00048100cd00048100cd00048100cd000ffe000304000002fa0000048100dc000ffe000304000006fa0000068100dc000ffe000304000007fa0000068100dc000ffe00030c000007fa0000068100dc000ffe00030e000007fa0000068100dc00110700001c1f000007c0fb0000078100dc00150f00007e1fc01f0fe00c039c0700fc0fc08100dd00150f0000fe1fc01f0fe03e07bc0f81fc0fc08100dd00150f0001fe1fc01f8fe03f07fc0f81fe0fc08100dd00150f0003800f8007c7c07f87fc07c1de0fc08100dd00140e0003000e0001c7004187fc00e182078100dc00140e0003a00c0003c7004386fc00e103068100dc00140e0001f80c000fc6007fc6fc01e103068100dc00140e0001f80c001fc6007fc6fc3fe103068100dc00140e0000fc0c001fc600ffc6fc3fe103068100dc00140e00007e0c001fc700ff86fc3fe183068100dc00150f00000e0c0001c718e006fc3f018306308100dd00150f00000c040061c738c006fc30030306308100dd00150f0001f801e03fc3f0ff87fc30030702f08100dd00150f0003f803e03fc1f03f87fc1fe30703f08100dd00150f0003f803c03fc1e03fc6fc1fe30703e08100dd00150f0003f801801fc1e03f80fc1fe30301c08100dd0012fc000a0f00001f80000fe10001c08100dd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd0016c2000001feff08fdfffff97feffe7ddbf5ff00c0a6000ac2000003e9ff00e0a6000ac2000003e9ff00e0a6000cc2000203ff9febff00e0a60012c200010380f4000040fb00032c000060a6002cfe00001ffdff06f83fffeffffffefeff09fbfffefc1901f1ef0402fd0003f8000001e6000003e9000060a6001efe00003fd8ff0c1ffffcc34bcf00c3e3d0300020fc000003e9000060a6001afe00003fccff00fcfc000003fd000007f2000020fe000060a6001ffe00007fccff00fefc000003fe0001800ffd000060f7000030fe000060a6004403000001fffa000004fe000008fa0014b000019fe0001fff0007fffd9193ffff9fffff8fe7f4ff00fefc000003fe0002800f80fe000360000018fa000030fe000060a6002803000001ffd1000580000001801efc000003fd000107c0fe000360000018fa000030fe000060a6002303000001fecc00000efc000003fd000111c0fe000360000018fa000030fe000070a60022fe0000fccc00000cfc000003fd00011080fe000360000018fa000070fe000060a60027fe00007ccc00000efc0015030000038030000007c0f800303f007000c00003007efe000060a60027fe000078cc000004fc001503000003c010000007e0fc00f83f00f83de07c0fe0fefe000060a6002dfe000030cc000004fd00160102000003c03800000ff0fc00fc7f01f83fe07e0fe0fefe000060aa0003018000002dfe000030cc000004fd00160182000003c07e00000fe0fc007c3f01fc3fe07e0ff07efe000060aa0003018000002dfe000078cc000004fd001601c2000001c07f000018007000063c030c3fe0060c3078fe000060aa00030180000042010007feff00eff4ff0efbffff7e7ffffc4087ee000c43ff80ea000006fd000103e7fe0011807f0000100060000618020c37e102083870fe000060aa000301c000004c01000fd7ff038dfffff7feff070c41fffc00000ff0fe000103fffe0011c07f00001f8060001e1803cc37e1cf0c3830fe000a718106de0000ff80004014e2000002fe000080d8000303e000003f01000fc3fffe0011c03800001f8060007e1803fe37e1ff083830fe00007fc4ff1d9bfffffbdc1bffa0003ffc080cf9c179effc00020ff00103d50007f00000310500078e09fffcfeff01f3f7ccfffe0011803000000fc06000fe1803fe37e1ff181830fe00007fbdff00f7eeff02f0000044fc0000e0f7001bc00000600000262000007f80001fdf0101ffff301fffc0ddffffe3f7edfffe00118030000007c06000fe1803fe37e1fe081830fe00007fa9ff02f000006ffc0000c0d100090123c0000ffff80003fffe00118030000007e060018e1803f837e1f8081830fe00107fffc65fbff8707fffe0007ffe070ffff9feff001efeff007ffeff0007fcff17f8023fffc0487ffc0027fff0211fff80007fbc0007fffd3ffeff001ffcff00f9ecff02f000003afc0000c0d0000003fd0003e00003e7fe00018030fe00106061030e18c30037e18008383180000070b900049c000007d8fa0006f0000007e0000033fc0000c0d000010380fe001c400003c3000001c0300000026063038e18c38037e18008383180000060ad000630000003e0000033fc0000c0d000010780fe001c400003c2000003e03000001fe01f01fe0f83fc3ff0ff08383f80000060ad000630000001c0000033fc0000c0d0000107c0fe001860000382000003e03000003fc01e01fe0f81fe7ff0ff08381ffe000060ad000678000001c0000033fc0000c0d0000107c0fe0018e0000383000003e03000003fc01c00fe0701fe37e07f08181efe000060ad00067800000180000033fc0000c0d000010fe0fe000760000103000003e0fe000d1f800c00fc0700fc02407f00000efe000060ad0006fc0000018000001bfc0000c0d000011ff0fe0003e0000003e9000060ae000101fefb001bfc0000c0d000011ff0fe0003e0000003e9000060ae000101fefb001bfc0000c0d000010fe0fe0003e0000003e9000060ae000101fefb001bfc0000c0d000010380fe0003e0000003e9000060ae000101fcfb0019fc0000c0d0000003fd0003e0000003e9000060ad000078fb0019fc0000c0d0000001fd0003e0000003e9000060ad000030fb0019fc0000c0d0000003fd0003e0000003e9000060ad000010fb0019fc0000c0d0000003fd0003e0000003e9000060ad000030fb0019fc0000c0d0000003fd0003e0000003e90000e0ad000030fb002efc0000c0d0000003fd001ce0000003fffff7f1ffffefffff8c210fff6e7cfffe382bffe1dbffffe0ad000030fb0019fc0000c0d0000003fd0003e0000003e9ff00e0ad000030fb0019fc0000c0d0000003fd0003e0000003e9ff00e0ad000030fb001dfc0000c0d0000003fd0003e0000003fdff00fbeeff00e0ad000030fb002afc0000c0d0000003fd0000e0fe000d800001a000000120000030000008fd000380000020aa000030fb0012fc0000c0d0000003fd0000c091000030fb0012fc0000c0d0000003fd0000c091000030fb0012fc0000c0d0000003fd0000c091000030fb0012fc0000c0d0000003fd0000e091000030fb0012fc0000c0d0000003fd0000e091000030fb0012fc0000c0d0000003fd0000e091000030fb0016fc0000c0fe000007d4000003fd00006091000030fb002cfc0003c0000001fbff00fefbff0a3f81fffef7ffffe16263defc000107c0f2000003fd00004091000030fb001dfc0003c0000007e9fffd00020fffe0f2000003fd0000e091000030fb001dfc0003c0000007e9fffd00021ffff0f2000003fd00004091000030fb0029fc000fc0000007f6887fff707fffefdffffffdf5fffd00023ffff0f2000003fd0000c091000030fb0022fc0003c0000006ed000330180007fd00023f0038f2000003fd0000c091000030fb001ffc0003c0000006ea000003fd0002600008f2000003fd0000c091000030fb001ffc0003c0000006ea000003fd0002600008f2000003fd0000e091000030fb0025fc0003c0000006f500022001c0f9000003fd000240000cf2000003fd0000e091000030fb002cfc0003c0000006fb000018fe000408003001e0f9000003fe000301800006f2000003fd0000e091000030fb002cfc0003c000000efb000018fe00040c000001e0f9000003fe000301800006f2000003fd0000e091000030fb0029fc0003c000000efb000018fe000408000001f0f9000003fb000003f2000003fd0000c091000030fb002afc0003c0000006fb000018fe00040c00000230f9000003fb00010180f3000003fd0000c091000030fb002dfc0003c0000006fb000038fe00040e00000630f9000003fe00040200000180f3000003fd0000e091000030fb0034fc0003c0000006fd000f3001f81e01e01f0030060038004001c0fe000003fe00040600000180f3000003fd0000e091000030fb0034fc0003c0000206fd000f7803f81f07f03f807006003801e007c0fe000003fe00040600100180f3000003fd0000c091000030fb0034fc0003c000070cfd000f7803f83f07f03f807006003c01f03fc0fe00080300000c0600300180f3000003fd0000c091000030fb0030fc0003c0000704fd000f3807f87787f83f80700f801801f83fc0fe00040300000e04ef000043fd0000c091000030fb002ffc0003c000078cfd000e3804384187081c00300fc018003878fd00040300000e0cef000063fd0000e091000030fb002ffc0003e000078cfd000e380818e1860c1c00300fc008001c78fd00040300000f08ef000073fd0000e091000030fb0032fc00feff00fcfd000e180c18ffc60c18003007c00806bc70fd00040380001f98fe000040f30000fffd0000c091000030fb0052fc00feff00fcfd000e180818ffce0c08003007800c07fc70fd000003feff00f8fe000f7ffffffd5c3fe0e000274000021801fffd0000c0fe0008011000008004000001f1000001fe00010188b3000030fb0037fc00feff00fefd000e180c18ffce0c08003006000807fc60fd000003feff04f80030007ff2fffd0003c0000001e1ff0080b5000030fb0039fd000001feff00fefd000e180c18ff860c08003006000807f860fd000003feff04f80020007ff2fffd0003e0000003e1ff00c0b5000030fb0038fc0003e00007defd000e180c18f0060c000030060008079060fd000403ffff7ff8fe00007ff2fffd0003e0000003e1ff00c0b5000030fb005efc0003c000078efd000e380018600604004030060018000060fd00040380000f18fe000040fa00071800000ff00003fffd0024c0000003e0001bf60041fdfc00079ff0241ffb0100fdffbdffffe1007fff0301fff4403fc0b5000030fb003bfc0003c000070efd000e38003860060c00c03806001c000060fd00040300000f18fe0000c0f30000fffd0003c0000003e2000101c0b5000030fb003afc0003c000070efd000e7c03f83f060c07c07806003e01f860fd00030300000efd0000c0f3000077fd0003c0000003e200010180b5000030fb0045fc0003c000060efd000e7e03f83f860c0780f806003e03f860fd00030300000efe00010180f3000077fd0003c0000003fe0002200180fe000008ec00010180b5000030fb004ffc0003c0000604fd000e7c03f81f860c07807804003e01f860fd00080300000c0400000180f30000e3fd0003c0000003fe00026003c0fe00001cfa000330000008fa00041800000180b5000030fb004efd000401c0000004fc000c03f00c000003003000000c01f8fc000003fe00040600000180f3000003fd0003c0000002fe00026003c0fe00001efa000330000008fa00041800000180b5000030fb003cfd000401c0000004ea000003fe00040600000180f3000003fd0003c0000003fc0000e0fe00001efa000330000008fa000418000001c0b5000030fb003dfd000401c0000004ea000003fe00040600000180f3000003fd0003c0000003fd00010460fe00000cfa000330000018fa000418000001c0b5000030fb003dfd000401c0000004ea000003fe00040200000380f3000003fd0003c0000003fd00010c60fe00000cfa000330000018fa00041800000180b5000030fb003bfd000401c0000004ea000003fe000303000003f2000003fd0003c0000003fd00000cfd00000cfa00033c00001cfa00041e00000180b5000030fb0045fd000401c0000004ea000003fe000301800006f2000003fd0003c0000007fe001de00c000003e00c007e07c00003f07f007c3f807c0e300f03f03f800001c0b5000030fb0042fd0004018000000eea000003fb000004f2000002fd0003e0000307fe001de00c000003e00c00fe07c00003f87f007c3f807c0e781f07f03f800001c0b5000030fb003ffd000401c000000eea000003eb000003fd0003e0000382fe001de01f000007f00c00fe0fc00007f07f007e3f80fe0ff83f87f83f800001c0b600010630fb0045fd000401c000000eea000003fd0002400018f2000003fd0003e00003c7fe001de01f800006300c01b00660000f007e000e1f01cf0ff863878c1e00000180b600010630fb0045fd000401c000000fea000007fd0002600038f2000003fd0003c00003c7fe001d601f800004380c03001060000c003800071c01830df861c60c1c000001c0b600010730fb004cfd000401c000000ff1ff01f7f9feff020ffffffd00023c7ff0f2000003fd0003e00003effe001d601f80000e780c038018f0000e003000071801c70df863860c18000001e0b6000107f0fb0068fd000401c0000007e9fffd00023ffff0f2000003fd00fdfffe001c601f00000ff80e03f81ff00007c030003f1801ff0df87fce0c18000001feff03dffffffbfeff00def7ff04bc0ffffff6e5ff17fe7ffff8003cfff87fecf070032101e06d4e100bfca00ff0fb003efd000401c0000007e9fffd00021fffe0f2000007fd00fdfffe001c600c00000ff80c01f81ff00007e030007f1801ff0df87f8e0c18000001b4ff00f0fb0052fd000101c0fc0011effe0007fff07f7fffcffffffc8f7ffffffcfeff00fefd00020fffe0f2000007fd00fdfffe001c600c00000ff80c00fc1fe00003f03000ff1801ff0df87f860c18000001b4ff00f0fb005afd000101c0d0000007fd0003fe87dffffe001e600c00000f000c00fe3fe00001f03000ff0801f80df87f060c18000001ff9ffdff028ffffbfeff01fe1ff1ff13fdddffff041fffc007ffff80187ffc01f1ffdfdce6ff00f0fb003cfd000101c0d0000003fd0003e00003e7fe0009700c00000c000e000e38fe0010383001870861800df860060c08400001c0bd000040fb00010ff0fb0038fd000101c0d0000003fd0003c00003c7fe0009700c00000e000e000e18fe0010383981870c61c00df860060c0ce0000180b600010ff0fb0038fd00010180d0000003fd0003c00003c2fe001df00c000007f00e001c0fe00003f01f80ff0fe1fe0df87f8e0c0fc0000180b600010f70fb0038fd00010180d0000003fd0003e0000386fe001df80c000007f81f03fc0ff0000ff01f80ff07c0ff1df83f8e0c07c0000180b600010e30fb0038fd00010180d0000007fd0024e0000302000001f80c000003f81f03f80ff0000fe00f007f0780ff1df83f8e0c0780000180b600010630fb0038fd000101c0d0000007fd0003c0000307fe0000f8fe001903f81f03f807e0000fc00f007f07807f00b01f84000780000180b600010430fb0025fd00010180d0000007fd0003c0000007fe000030ec00070c000001000001c0b5000030fb001bfd00010180d0000007fd0003c0000007e2000101c0b5000030fb001bfd00010180d0000007fd0003e0000003e200010180b5000030fb001bfd000101c0d0000007fd0003c0000007e200010180b5000030fb001bfd000101c0d0000007fd0003c0000007e200010180b5000030fb001bfd00010180d0000007fd0003c0000007e200010180b5000030fb001bfd00010180d0000007fd0003c0000007e2000101c0b5000030fb001bfd00010180d0000007fd0003c0000007e200010180b5000030fb001bfd00010180d0000006fd0003e0000007e200010380b5000030fb0029fd00010180d0000006fd0003e0000003f8ff04fe0dffffcffaff033ffff4f3faff00c0b5000030fb001afd00010180d0000006fd0003e0000003e1ff0080b5000030fb001afd00010180d0000006fd0003c0000007e1ff00c0b5000030fb0022fd00010180d0000006fd0003e0000003f9ff00f5fbff00fbf1ff0080b5000030fb0013fd00010180d0000006fd0000e091000030fb0013fd00010180d0000006fd0000e091000030fb0013fd00010180d0000006fd0000e091000030fb0013fd00010180d0000006fd0000c091000030fb0013fd00010180d0000007fd0000c091000030fb0013fd00010180d0000006fd0000e091000030fb0013fd00010180d0000006fd0000c091000030fb001afd00010180fd000392000018d8000006fd0000c091000030fb002efd00010180fe00000ff3ff0080fe000f07ffcffffc10ffffe021ffff0800f984f6000006fd0000e091000030fb0029fd00010180fe00001ff3ff0080fe00000ff2ff00fefd00021fffe0fe000006fd0000e091000030fb0027fd00010180fe00001ff3ff00c0fe00000ff1fffd00021fffe0fe000006fd0000c091000030fb0036fd00010180fe000f30007ffe0001fe76003fffc003fffde0fe00000ffbff00eff8fffd00023ffff0fe000006fd0000c091000030fb0029fd00010180fe000030f3000060fe00000cf2000007fd00024001f0fe000006fd0000c091000030fb0029fd00010180fe000060f3000060fe00000cf2000007fd0002e00018fe000006fd0000c091000030fb0029fd00010180fe0000c0f3000030fe00000cf2000007fd0002c00018fe000006fd0000c091000070fb0029fd00010180fe0000c0f3000018fe00000cf2000003fd0002c0001cfe000006fd0000c091000070fb002efd0005018000000180f3000018fe000018fa000001fa000003fe00030180000cfe000007fd0000c091000070fb002efd0005018000000180f300000cfe00001cfa000001fa000003fe00030380000efe000007fd0000c091000070fb002dfd00040180000003f200000cfe00000cfa000001fa000003fe000303000007fe000006fd0000c091000070fb002dfd00040180000003f2000006fe00000cfa000001fa000003fe000306000003fe000006fd0000c091000070fb0031fd00040180000003fc000030f8000006fe00000cfa000001fa000003fe000306000003fe000006fd0000c091000070fb003dfd00040180000003fc0005fc00e03f01e0fd000006fe000008fe00001efe000301f001c0fd000003fe000306000003fe000006fd0000c091000070fb003efd00040180000403fc0005fe01f07f03e0fd00040600000808fe000c7e040839e3fc03e00f80000003fe000306002003fe000006fd0000c091000070fb003ffd00040180000602fd000601fe01f0ff03f0fd00040600000c08fe0013ff060c3fe3fc03e00f8000000300000806003003fe000086fd0000c091000070fb003ffd00040180000704fd0006038000f9c003f0fd00040200000e08fe0013ff060c3fe3fe03f0ff8000000300001c0e002003fe0000c6fd0000c091000070fb003cfd0004018000078cfd000603000019800038fd00040300000e18fe0008e1060c3fe1860830fefe00040300000e0cfb0000e6fd0000c091000030fb003ffd000401c0000f9cfd000603000019800838fd00040180000f18fe0008c1860c37e1071830f0fe00040300000e18fe0003400000e6fd0000c091000030fb003ffd000001feff00fcfd000603000038780ff8fd000401e0001ffcfe0008c1860c37e3030cf0e0fe00040300001f38fe0003c00000fefd0000c091000030fb0092fd000001feff00fcfd0006030001f87c0ff8fd000001feff00fcfe0008c1860c36e3031ff0e0fe000003feff00f8fe0003ffefc1fefd0000c0fe000f01ffffcfffe0701ff3c00c81e13cc8c0fd000201f7f0fc00163e3ffe7ff80fff323ffbc00001df00001f6b40803fe006fc000008fc00183fffff807be7dcdffffe3ff99fcfb7b87fffffcf17c1ffbe40eb000030fb0063fd000001feff00fcfd0006070003f87e0ff8fd000001feff00f8fe0008c0860c76e1031ff0c0fe000003feff03f8003000feff00fefd0000c0fe000007f3ff00e0fd000203fffcfd00007feaff00e0fe000201fffcfd00007feaff00fceb000030fb0063fd000401fc7efffcfd0006070007f83e0ff0fd000003feff00f8fe0008c1860c77e3031ff0c0fe000003feff03f8003000feff00fefd0000e0fe00000ff3ff00f0fd000207fffcfd00007feaff00e0fe000203fffefd00007feaff00feeb000030fb0062fd000401c0000fdcfd000503000638070efc000403e0010f98fe0008c1841c77e3031c00c0fe000403fffdfff8fe00feff00fefd0000c0fe00030ffffffdf6ff00f8fd000207fffefd00e9ff00f0fe000207fffefd00007feaff00feeb000030fb008afd0004018000070cfd000503000418070cfc00040380000f18fe0008c1841c77e3031800c0fe00040380001f38fe0003c00001fefd0000c0fe0002180010fd000040fa000018fd00020c0087fd0018e3008000381c00000c3000031c400033be0003f0f00005c3e0fe00020601fffd00067c0006bc000034fe000020f8000002fe00003ceb000070fb0063fd0004018000070efd000603f000783e0780fd00040300000e18fe0008c1843c7fe3870800c0fe00040300001e38fe0003c00000fefd0000c0fe000018f3000018fd0002180007fd0000e0ea000070fe00020c0003fd000070ea00000ceb000070fb0064fd00040180000e07fd000601fc03fdfe07f0fd00040600000c18fe0008c181fc7fe3fe03f0c0fe000b0700001e1c000001c00000e6fd0000c0fe000018f300000cfd0002180003fd0000e0ea000070fe00031c000380fe000060ea00000ceb000030fb006efd00040180000603fd000601fe03fdfc07f0fd00040600000c18fe0008c181fc7fe1fc07f0c0fe000b0700001c1e000003800000e6fd0000c0fe000030fa0001801cfc000006fd000338010180fe0000e0ea000070fe0003180001c0fe000060f8000008f400000ceb000030fb007bfd00040180000002fc0005fe03f9fc03f8fd000006fe000008fe0008c181fc7641fc07f0c0fe000b0300001c0e000003800000c6fd0000c0fe000060fd0004010001801cfc000006fd0003700380c0fe0000e0f3000001f9000070fe0003380800c0fe000060fb000320000018fa000008fc00000eeb000070fb0077fd00040180000003fa0003c00003e0fd00000efe000018fd000601c00001f801e0fd000b030000080e000003800000c6fd0000c0fe000060fd0004010000801cfc000002fd0003700380c0fe0000c0f3000001f9000070fe0003700c00c0fe000060fb000320000018fa000008fc00000eeb000030fb0063fd00040180000003f200000efe00001cf2000003fe00030e000003fe000006fd0004c0000001e0fd0004018000000cfc00010380fe0003e00700e0fe0000c0ea000070fe0003700c0060fe000060fb000330000018fa000018fc00000ceb000030fb0063fd00040180000003f200000cfe000018f2000003fe000306000003fe000006fd0004c0000001c0fd000001fe00000cfc00010180fe0003c00e0070fe0000e0ea000070fe0003e0060070fe000060fb000330000018fa000018fc00000eeb000070fb0064fd0005018000000380f300000cfe000018f2000003fe000306000003fe000006fd0004c000000180fd0004018000000cfc00010180fe0003c00e0070fe0000c0ea000070fe0003c0060030fe000060fb00036000001cfa00001cfc00000ceb000070fb0075fd0005018000000180f3000018fe000008f2000007fe000307000007fe000006fd0004c000000180fd000401f801000cfc00010180fe0003c01c0070fe0000c0fe000a02000007000300e001c020f8000070fe0003c0020030fe000060fd000503e07c00003efb0001603ffc00000ceb000070fb0081fd00050180000001c0f3000018fe000018f2000007fe000303800006fe000006fd0004c0000301c0fe00072001fc03800c00f8fe00010180fe0007801c0070000060c0fe000f0f81021fe00f81f00fe07e03003c07e0fd000b70000080c003003000002060fd000e07f0fe007c3f00fc0e701e07f03f80fd00000ceb000070fb0082fd00010180fe0000e0f3000030fe000018f2000007fe00030180000cfe000006fd0004c0000301c0fe00073021fc03800c00f8fe000c0180000101c0180070000060c0fe000f0fc3071fe0ff81f00fe0fe07007e0fe0fd000b70000080c001003000003060fd000e07f1fe00fc7f80fc1e703e07f83f80fd00000cec00010460fb0080fd00010180fe000060f3000060fe000018f2000006fe000301c0001cfe000006fd0004c000038180fe00073061fe03800400fcfd000bc000018180180030000070c0fe000f1fc18f1ff0ff83f81fe0fe0700fe0ff0fd000b700000c1c001803800003060fd000d0ff0fe007e3f00fc1ff03f07f83ffc00000eec00010660fb007efd00010180fe000060f30000e0fe000018f2000006fd0002c00018fe000006fd0003c00003c3fd00073061ff018004000cfd000b400001c380180018000070c0fe000f3fc0ce1ff0f8071c1803800780ef0f78fd000b700001c18001801800003860fd000d0f407000073e01860ff041877c1cfc00000eec00010760fb0089fd00010180fe000f3ff9e37f3360001b60000004040003e0fe00001cf2000006fd0002c00038fe000006fd0003c00003c7fd000730638301800c020efd000b600003c300180018000078c0fe000f30e0fc1c38f0061c3003800301c30c38fd000b700001e38001801c00003860fd000d18007000071801871ff841860c18fc00000eec00010f60fb0082fd00010180fe00001ff3ff0080fe00001ff6ff04fbfffff8fffd00027ffff0fe000006fd0003f00003fefd000730638301800c039efd000b700003e70038001c0000ffc0fe000f35e0fc1c38f007fc3f01c00301830c18fd000b7e0001f78001001e00007ce0fd000d1f8060001f1803ff19f87f860c18fc00000eec00010ff0fb007afd00010180fe00001ff3ff0080fe00000ff1fffd00023ffff0fe000006fd00feff00fefd000732618301800c03fefd00007ffeff030018001ffeff00c0fe000f3fe0781c38e007fc1f80f80301830c18fd00007ffeff030001801ffeff00e0fd000d0fc060007f1803ff19b07f860c18fc00000febff00e0fb0078fd00010180fe00000ff3fffd00000ff1fffd00023fffe0fe000006fd00feff00fefd000732610301800c03fefd00007ffeff030018001ffeff00c0fe000f3fe0381818e007fc1f80fc0301838c18fd00007ffeff030001801ffeff00e0fd000d0fc06000fe1803ff19b0ff860c18fc00000febff00e0fb008bfd00010180fc000c3ffc0000df80000f380001fffcfc0003ffff3e7ffcff009ffcff00fefd00023fffc0fe000006fd00feff00fefd000726618301800c03fcfd00007ffeff030018001ffeff00c0fe000f3fe0781c38c007fc0fc0fc0301818c18fd00007ffeff030003801ffeff00e0fd000d07e02000fe1803fe19b0ff860c18fc00000febff00f0fb0074fd00010180db000004f7000006fd0003fc0007fefd00072761830180040380fd000b71ffb7ff000c001e7ffdffc0fe000f3fc07c1ff0c007c003c01e0301838c18fd000b7edfffff0007001ffb9fffe0fd000d07f070019f1843c019b8e0060c1cfc00020ffb0dfeff00eff4ff03f3ffffe0fb0067fd00010180d0000006fd0003c00003c6fd000637e18301800c03fc000be00003e7000c001c000079c0fe000f3000fc1fe0c0060000e0070301831c18fd000b700001f30006001c00007ce0fc000d707103071863801df8c0060c1840fd00000eec00010ff0fb0067fd00010180d0000006fd0003c00003c7fd00063fe38101c00e03fc000be00003c3000e0018000078c0fe000f3800cc1fe0c0060000e00e0381870c18fd000b700001e3800e001c00003ce0fc000d703f030f1ce3801db8e0060c08c0fd00000eec00010f70fb0069fd000001cf000006fd0003c00003c3fd00073fe38103e01e03fcfe000c01c00003c180070038000070c0fe000f3fe1c61fc0c003f80fe1fe07c1ff0c18fd000b700001e1800e001800003860fd000e0ff03f00ff0fc1fe1fb07f860c07c0fd00000cec00010f70fb0066ca000006fd0004c000038180fe00073fe38103e01f01fefe000c01c0000381c0078030000060c0fe000f1fe3871c00c003fc3fc3fe07c0fe0c18fd000b700001c0c01c003000007060fd000e1fe01f00ff0f80ff1fb87f860c0780fd00000cec00010e70fb0066ca000006fd0004c000030180fe00073de38003e01f01fefe000c0180000301c0038070000060c0fe000f1fe3831c00c001fc3f83fc07c07e0c18fd000b700001c0c018003000007060fd000e1fe01e00fe0780ff1db03f860c0780fd00000cec00010c70fb0069fd000001cf000006fd0004c000030180fe000718010003c01f00fcfe00080180000001c0010060fe0000c0fe00030fe3001cfe0008fc3f81f807c01c0018fd000b70000080e000003000003060fd000d0fc00e007e07007e00100f840003fc00000cec00010c70fb0049fd00010180d0000006fd0004c000000180f300080180000001c0000070fe0000c0fe00030100001cfd000007f6000070fe0003e0000030fe000060fd000002ef00000ceb000070fb003efd00010180d0000006fd0004c0000001c0f300080180000001c0000070fe0000c0fb00001cf1000070fe0003e0000030fe000060ea00000ceb000070fb003dfd00010180d0000006fd0000c0fe0000c0f3000003fd0003e00000e0fe0000c0fb000008f1000070fe0003e0000070fe000060ea00000eeb000070fb0039fd00010180d0000006fd0000c0fe0000e0f3000006fd0003600000c0fe0000c0ea000070fe0003700000e0fe000060ea00000ceb000070fb0039fd00010180d0000006fd0000c0fe000060f3000006fd0003600001c0fe0000c0ea000070fe0003300000c0fe000060ea00000ceb000070fb0039fd00010180d0000006fd0000c0fe000070f3000006fd0003200001c0fe0000c0ea000070fe0003380000c0fe000060ea00000ceb000070fb0039fd00010180d0000006fd0000c0fe000038f3000008fd000310000380fe0000c0ea000070fe00030c000180fe000060ea00000ceb000070fb0038fd00010180d0000006fd0000c0fe000038f3000008fd0002180007fd0000c0ea000070fe00030c000380fe000060ea00000ceb000070fb0033fd00010180d0000006fd0000c0fe000018ee0002180007fd0000e0ea000070fe00020f0003fd000070ea00000ceb000070fb005ffd00010180d0000006fd0000c0fe000007fdff0afe7ffff1e1dffffff3ffe0fd00021ffffcfd0004fbfffffc7ffbff0dfe0dffff9dbfffffbc7fffe981f0fe000207fffffd00007ff9ff00f7feff017ffbfcff04fee7fffffceb000070fb0035fd00010380d0000006fd0000c0fe000007f3ff00e0fd000207fffcfd00e9ff00f0fe000207fffefd00007feaff00feeb000070fb0035fd00010380d0000006fd0000c0fe000007f3ff00e0fd000207fffcfd00e9ff00f0fe000203fffefd00007feaff00fceb000070fb0049fd00010380d0000006fd0000c0fe000003faff00f3fbff00c0fd000207fff8fd00007feaff00e0fe000201fffcfd00003ffaff03effffff9feff018fdffcff029f7ffceb000070fb001cfd00010380d000000efd0000c0d400011024d7000008eb000070fb0013fd00010180d0000006fd0000c091000070fb0013fd00010380d0000006fd0000c091000070fb0013fd00010380d0000006fd0000c091000070fb0013fd00010380d0000006fd0000c091000070fb0013fd00010380d0000006fd0000c091000060fb0013fd00010380d0000006fd0000c091000070fb0017fd00010380fd000080d5000006fd0000c091000070fb0023fd00010380fe00001ff6ff02fdfefffc000203f780ea000004fd0000c091000070fb001ffd00010380fe00001ff3fffc00021fffc0ea000004fd0000c091000070fb0021fd00010380fe00003ff3ff0080fd00023fffe0ea000006fd0000c091000070fb0029fd00010380fe000179e1feff03cfffe001fbff00c0fd00023fffe0ea000006fd0000c091000070fb0021fd00010380fe000060f30000c0fd0002400070ea000006fd0000c091000070fb0021fd00010380fe000060f3000040fd0002c00030ea000006fd0000c091000070fb0021fd00010380fe0000c0fc000040f40002800018ea000006fd0000c091000070fb002afd000b0380000001800000300000f0fe0005060040000030fb00001cea000006fd0000c091000070fb002dfd000b0180000001800000300000f0fe00050f0040000030fe00030180000cea000006fd0000c091000070fb002dfd000001fe000703800000300000f8fe0005070060000018fe00030300000eea00000efd0000c091000070fb002dfd000003fe000003fe0003300001fcfe000507006000001cfe000306000006ea00000efd0000c091000070fb002dfd000003fe000006fe00033000011cfe000503006000000cfe000306000007ea00000efd0000c091000070fb002efd000003fe000006fe0003f0000108fe00050300f000000cfe000306000003ea000004fe000101c091000060fb002efd000003fe001006000003f03c00000380000200fc00000cfe000304000003ea000004fe000101c091000060fb002dfd000003fe001006000007f03e000007c2040300fc00000cfe000304000003ea000004fd0000c091000060fb002dfd001b0380000c06000007f03f000007c6040300fc00000c00000800002003ea000004fd0000c091000060fb002dfd00170300000e0c00000ff01f03e001e6040300f000000600000cfe000001ea000004fd0000c091000060fb002efd001c0380000f1c000018708387f00036040300e000000700001e1000000180eb00000cfd0000c091000060fb002efd001c03e0000f3800001830c387f00036040300e000000300001e30000001c0eb00000cfd0000c091000060fb002efd000003feff18f800001830ff87e003f60603006000000380201ff0000001f0eb00000efd0000c091000060fb0061fd000003feff10f800001830ff838007f606030060000003feff03f8000001f5ff0bfdffffbf9ffffd21fffff01ef800041e0e00f320fc0002033f80f8001703c79fff7002017784002f82e005fff0407fdfa0017bee08f9000001cc000060fb003ffd000003feff10f800001830ff800007f604030060000003feff03f8006001eaff00fef9000007f3ff00e0fa00000feaff00fcfa000203fffcce000060fb0043fd001401fb713ff800001830fe000007f60e030040000003feff03f8006001eaff00fcfd000080fe00000ff3ff00e0fa00001feaff00fcfa000203fffcce000060fb0052fa00261f380000183080000010761e02006200000300021f38000001ebe7a0003fff100fffffe09ffffefeff008ffcff00fcfd0000c0fe00000ff3ff00f0fa00001feaff00fcfa000207fffece000060fb0063fa00050f1800001830fe001010361e03006300000700001e10000001c0ef000003fe000078fd0000c0fe000a180000700001c070000006fd000018fa00081c01f0000011000018fe000804d0000067c0000378fe00003cfa00020c002ece000060fb003dfa00140f1c00001cf80002000df73e07007f00000700001efe00010180e60000c0fe000018f3000018fa000018ea00000cfa00020c0003ce000060fb003cfa00140e0e00000ff87f82000ff1fe07803e00000e00001cfe000003e50000c0fe000030f3000008fa000018ea00000cfa0002180003ce000060fb003dfa00180c06000007f07f820007f1fe0f801e00000c00000804000003e50000c0fe000060f3000004fa000018ea00000cfa0003300001c0cf000060fb0045fa00110806000007f03f000007e0ce0f801c00000cfe000304000003e50000c0fe000060fc000003f9000006fa000018f2000030fa00000cfa0003300001c0cf000070fb0041f9000506000003e007fc000007fd00000cfe00030c000007e50000c0fe000060fc000003f9000007fa000018f2000030fa00000cfa0003700000c0cf000070fb0034f9000006f200000cfe000304000007e50000c0fe0000c0fc000003f9000003fa000018ea00000cfa0003600000e0cf000070fb0035f9000006f200000cfe000304000007e50004c000000180fc000003f900010380fb000018ea00000cfa0003c0000070cf000070fb002df9000003eb000006e50004c000000180fc000003f9000001fa000018ea00000cfa0003c0000070cf000070fb004af900010180f3000030fe00030300000ce50004c000000180fe000cc00007e0000018038000000380fb000018f80009c00800000f8060030078fd00000cfa0003c0000030cf000070fb0050f900010180f3000030fe00030300000ce50014c000000180000001f03c0fe000403e1fc000000380fb000018fd000ef83043f811f03e01f81fc0f007c0fcfd00001cfb000480c0000030cf000070fb0051f9000101c0f3000060fb000018e6001501c000030180000003f07c0fe060c37e3fe000000180fc00010c18fe000f01f830e3f81bf07e03fc1fc0f00fc1fefd00000cfc00050180c0040030cf000070fb004df80000c0f30000c0fb000038e50003c0000303fe00091fe07e0fe060c3fe3fe0fe000080fc00010c18fd000ef839e3fc1fe0fe03fc3fc0e00fe1fffd00000cfb00048180000038cf000070fb004ce90000c0fd0002c00030e50003c0000387fe00091e0087070060c3f01830fe0000c0fc00010e18fd000e1c1dc3ee1e00c306007000601861fffd00000cfc000501c380000018cf000070fb0056f800041ffe000060f800010180fd0002c00060e50003c00003c6fe00091c0083030060c3c01830fe000060fc00010e38fe000f020c0f83063c00c306007000601871c7fd00000cfc000101e3fe000018cf000070fb007bf800003ff3ff0080fd00027fffe0e50003c00007eefe00091c00c7020060c3801830fe0000f0fc00011ff8fe000f031c0f03063c00cf87e03c0020187183fd00020e0180fe000103e7fe00001cfe000022fe0020b540000bff03e87ffe7f49ffc8e09ffd00414c1010007ffee21338000003300002f7000070fb004af800003ff3fffc00027fffc0e500feff00fefe00091c01ff030060c3801830fe00007ffbff00f8fe000f03fe0703063c00ff87f03f0020387183fd00000ffafffe00001fcfff00f0fb004bf800001ff3fffc00023fffc0e500feff00fefe00091801ff030060c3001830fe00007ffbff00f8fe000f03fe0603063800ff83f01f8030303183fd00000ffaff030004001fcfff00f0fb0053f6000c7fe0000097e0007ffe00007fe0fc00020fff80e500feff00fefe00091801ff030060c3001830fe00faff00f8fe000f03fc0f038c3801ff03f01f8030383183fd00000ffaff030006001fcfff00f0fb006bc50003f80007fefe00093801c0030061c3003030fe0007f7dff00731fc1f38fe000f03d80f83fc3801fe007801c020303183fd00160e000e63f800ffff0006001e001effc0003f2000000780f500150e1c0000ffd803dfffe0007ffe0003ffc0033eff0003fcff00f0fb004bc50003e00003c6fe0009180180020861c3003030fe0007c000000700001f18fe000f03000f83fc3800c0001800c020187183fd00000cfe0007700001e30006001cd300003ffeff00f0fb0047c50003c0000386fe0009380080031801c2003030fe0007c000000700001e18fe000f03001b83f83000e0001c01c07018e183fd00000cfe0007700001e180060018cf000070fb0047c50003c0000383fe00143000ff00f80dc20038300000018000000300001c18fe000f01fc30c3f838007f07f87f80f80fe183fd00000cfe0007700001e1800c0030cf000070fb0047c5001bc000030380000030007f00f01fc70018300000018000000700001818fe000f01fe30638038007f8ff07f80f80fc183fd00000cfe0007f80001c0c0080030cf000070fb0047c5001bc000020180000030007f00f01cc60010300000038000000700000818fe000f01fc30230010007f8ff07f00f80fc183fd00000cfe0007f8000180c0080030cf000070fb0042c50004c000000180fd00033f00e008fb00040380000007fe000018fd0002fc0003fe00083f07e03e00f807c001fd000b0c000001fc000080c0000030cf000070fb002dc50004c000000180f300040380000007fe000018fb000003f100041c000003fefe0003c0000070cf000070fb002dc50004c000000180f300040380000002fe000018fb000003f100041c000003fefe0003c0000070cf000070fb002dc50004c0000001c0f3000003fe000007fe000018fb000002f100041c000003fcfe0003c0000060cf000070fb0029c50000c0fe0000e0f3000006fe000007fe000018ea00000cfe0000f0fe0003300000e0cf000070fb0029c50000c0fe0000e0f300000efe000007fe000018ea00000cfe000070fe0003300000c0cf000070fb0029c50000c0fe000060f300000cfe000007fe000018ea00001cfe000070fe0003100001c0cf000070fb0029c50000c0fe000070f300001cfe000007fe000018ea00001cfe000060fe00030c000180cf000070fb0029c50000c0fe000030f3000018fe000006fe000018ea00001cfe000070fe00030c000380cf000070fb0029c6000101c0fe000010f3000038fe000006fe00001cea00001cfe000070fe00020c0007ce000070fb002bc50000c0fe000307fffffbf6ff00f0fe000007fe00001feaff00fcfe000060fe000207ffffce000070fb0028c50000c0fe00000ff3ff00e0fe000006fe00001feaff00fcfe000070fe000207fffece000070fb0028c50000c0fe000007f3ff00e0fe000006fe00001feaff00fcfe000070fe000207fffcce000070fb0044c50000c0fd000eff7fffffe1ffff000fffe3f83fffc0fe000007fe000007feff0b7bffff7fffffe7bffffcf81ffcff03be3ffff8fe000070fe000201bffcce000070fb0012c50000c0eb000007e2000060c8000070fb0012c50000c0eb000007e2000060c8000070fb0012c50000c0eb000007e2000060c8000070fb0013c6000101c0eb000006e2000060c8000070fb0013c6000101c0eb000006e2000060c8000070fb0013c6000101c0eb000006e2000060c8000070fb0013c6000101c0eb000007e2000060c8000070fb0012c50000c0eb000006e2000060c8000070fb0012c50000c0eb000007e2000060c8000070fb0012c50000c0eb000007e2000060c8000070fb0013c6000101c0eb000007e2000060c8000070fb0013c6000101c0eb000007e2000060c8000070fb0012c50000c0eb000007e2000060c8000070fb0012c50000c0eb000007e2000060c8000070fb0012c50000c0eb000006e2000060c8000070fb0012c50000c0eb000006e2000060c8000070fb0013c6000101c0eb000006e2000060c8000070fb0013c6000101c0eb000006e2000060c8000070fb0013c6000101c0eb000007e2000060c8000070fb0013c6000101c0eb000007e2000070c8000070fb0013c6000101c0eb000007e2000070c8000070fb0013c6000101c0eb000007e2000060c8000070fb0013c6000101c0eb000007e2000060c8000070fb0013c600010180eb000007e2000060c8000070fb0013c6000101c0eb000007e2000060c8000070fb0013c6000101c0eb000007e2000060c8000070fb0013c6000101c0eb000007e2000060c8000070fb0012c5000080eb000007e2000060c8000070fb0012c5000080eb000007e2000060c8000070fb0012c50000c0eb000007e2000070c8000070fb0013c6000101c0eb000007e2000070c8000070fb0013c6000101c0eb000007e2000060c8000070fb0013c6000101c0eb000007e2000060c8000070fb0013c6000101c0eb000007e2000070c8000070fb0012c50000c0eb000006e2000070c8000070fb0012c50000c0eb000006e2000070c8000070fb0012c50000c0eb000007e2000060c8000070fb0013c6000101c0eb000007e2000060c8000070fb0013c6000101c0eb000007e2000060c8000070fb0013c6000101c0eb000006e2000060c8000070fb0013c6000101c0eb000006e2000060c8000070fb0013c6000101c0eb000006e2000060c8000070fb0013c6000101c0eb000006e2000060c8000070fb0013c6000101c0eb000006e2000060c8000070fb0013c6000101c0eb000006e2000060c8000060fb0013c6000101c0eb000006e2000060c8000060fb0013c6000101c0eb000006e2000060c8000060fb002dc6000101c0eb0008078020342000000380fc0012380e00003f8040002e00002802006cd00001e0c8000060fb0017c6000101c0eb000007f0ff003ff4ff00e0c8000060fb0017c6000101c0eb000007f0ff00bff4ff00e0c8000060fb0013c6000101c0eb000003e2ff00e0c8000060fb0029c6000101c0e9000008fb000b1f80000344000001c0000008fe0007800010c78000012fc7000060fb000bc6000101c091000060fb000bc6000101c091000060fb000ac50000c091000060fb000bc6000101c091000060fb000bc6000101c091000060fb000bc6000101c091000060fb000bc6000101c091000060fb000bc6000101c091000060fb000bc6000101c091000060fb000bc6000101c091000060fb000bc6000101c091000060fb000bc6000101c091000060fb000bc6000101c091000060fb000bc6000101c091000060fb000bc60001018091000060fb000bc6000101c091000070fb000bc6000101c091000070fb000bc6000101c091000070fb000bc6000101c091000070fb000bc6000101c091000060fb000bc6000101c091000070fb000bc6000101c091000070fb000bc6000101c091000060fb000bc6000101c091000060fb000bc60001018091000060fb000bc60001018091000060fb000ac500008091000070fb000ac500008091000070fb0020c600010180fe000003fcff00b8fcff03f3fff7c0fd000203fff8ab000070fb0019c6000101c0fe000007f3ff00e0fd000207fff8ab000070fb0019c6000101c0fe000007f3ff00e0fd00020ffffcab000070fb0019c6000101c0fe000007f3ff00f0fd00020ffffeab000070fb0019c6000101c0fe000010f3000038fd000210000eab000070fb0019c6000101c0fe000030f3000018fd0002300007ab000070fb0019c600010180fe000030f3000018fd0002300007ab000060fb001ac6000101c0fe000060f300000cfd000360000380ac000060fb0022c6000101c0fe0000e0fe000060fc000006fd00000efd000360000180ac000060fb0022c600010180fe0000e0fe000060fc000006fd000006fd0003c00001c0ac000070fb0023c600050180000001c0fe000060fc000006fd000003fe000401c00000e0ac000060fb0023c60005018000000180fe000060fc000006fd000003fe000401800000e0ac000060fb0023c6000501c000000380fe000060fc000006fd000003fe00040180000060ac000060fb0025c6000501c000000380fe00067f000001800006fd000003fe00040180000060ac000060fb0027c6000501c000020380fe00077f803e07c00f860cfe00080300000201800c0060ad00010c60fb0026c600040180000603fd00077f817e07c00f860cfe00080300000301800c0060ad00010c60fb0023c600040180000703fd00067f83fe07c00fc6fd000601800003830008ab00010e60fb0025c600040180000786fd000760c3e80800006610fd0003c0000382fe000010ad00010fe0fb0024c50003c000078efd00076003c01830006630fd0003c0000386fe000038ad00010fe0fb006ec6000401c0000ffefd00076003c01df000ef70fd0003e00007cefe000318000010fe00017880fd000c1df3e0008e0c10000061c001e0fb0011358000001ffc09fbfe4007ffee7f9fffffe7faff17bfffffeffffdff7ffffe3fff399ffffffdc007ffc3fffbeffeff02cfffe0fb0023c6000001feff00fefd00076043801ff00fefe0fd00feff00fefe00001facff00e0fb0023c6000001feff00fefd00076043001ff00fefe0fd00feff04fe000c001facff00e0fb0047c6000001feff00fefd000760c3001ff01fefe0fd00feff04fe001c001fd7ff13bfffffe5fc7ffe0e1dfffc0107fff8f8ffff19a3fbff00fdfaff097ffff1fbfff87fffffe0fb004bc6000401e0000ffefd000760c3001c001ceff0fd0029f3fd87ce001c001c03e000007e0000037e04001fe000001f000023e0000023e000038000007ffc00001afe000004d300011fe0fb0025c6000401c000078efd000760c3001800306e30fd0007c00003c6001c0018ad00010fe0fb0025c600040180000786fd000771c3000c0020ee30fd0007c00003c7001c0030ad00010ee0fb0026c600040180000707fd00077f87000ff01fee18fe0008018000038300380070ad00010c60fb0026c600040180000603fd00077f83000ff00fee0cfe0008038000070180300060ad00010c60fb0027c60005018000060380fe00073f830007f00fee0cfe0008038000020180300060ad00010c60fb0025c600040180000203fd00071f020003e00fc408fe0008038000000180000060ac000060fb001ac600040180000001f200080380000001800000e0ac000060fb001ac600040180000001f2000003fe000401800000e0ac000060fb0017c60005018000000180f3000007fa0000e0ac000060fb001ac600010180fe0000c0f3000006fd0003600001c0ac000060fb001ac600010180fe0000c0f300000efd000360000180ac000060fb001ac600010180fe0000e0f300000cfd000360000380ac000060fb0019c6000101c0fe000060f3000018fd0002300007ab000060fb0019c600010180fe000030f3000030fd0002300007ab000060fb0015c600010180ef000030fd0002100006ab000060fb0022c600010180fe000907fffedffffff1bdff7ffcff00e0fd000207fff8ab000060fb0019c600010180fe00000ff3ff00e0fd00020ffff8ab000060fb0019c600010180fe00000ff3ff00c0fd00020ffff8ab000060fb0023c600010180fd000abffffff7fffffe343fffe1feff0080fd000207ffc0ab000060fb000bc6000101c091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc6000101c091000070fb000bc6000101c091000070fb000bc6000101c091000070fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000070fb000bc60001018091000060fb000bc6000101c091000060fb000bc60001018091000060fb000bc6000101c091000060fb000bc6000101c091000060fb000bc6000101c091000060fb000bc6000101c091000070fb000bc6000101c091000070fb000bc6000101c091000070fb000bc6000101c091000070fb000bc6000101c091000070fb000bc6000101c091000070fb0024c600010180fe000f07ffefc3fffffe0ffffff3fbff9fffc0fd000203fff0ab000070fb0019c600010180fe00000ff3ff00e0fd000207fff8ab000070fb0019c600010180fe00000ff3ff00e0fd00020ffff8ab000070fb0021c600010180fe00011efbfbff07f43ffffff8fffff0fd00020ffffcab000060fb0019c600010180fe000030f3000030fd0002100006ab000060fb0019c600010180fe000030f3000018fd0002300006ab000060fb0019c600010180fe000070f3000008fd0002200003ab000060fb0020c600010180fe000060fc000202000cfb00000cfd000360000180ac000060fb0020c600010180fe0000c0fc000206000cfb00000efd000360000180ac000060fb001ec600010180fe0000c0fc000006f9000006fd0003c00001c0ac000060fb001fc60005018000000180fc000006f9000007fe000401800000e0ac000060fb001fc60005018000000380fc000002f9000003fe000401800000e0ac000060fb001fc60005018000000380fc000007f9000003fe000401800000e0ac000060fb0026c60014018000000380007c0700f807400803f000003c0003fe00040180000060ac000060fb0027c6001c01800002038001fe0f81fc0ee01c03f830207c000380000201800c0060ad00010c60fb0027c6001c01800006030001fc0fc1fc0ee01c07f83020fe000180000303800c0060ad00010e60fb0027c6001801800007030003fc1fc1fe0fc01c07fc3020fe000180000383fe000030ad00010f70fb0027c60018018000078600060010618207000c060c3020830000c0000386fe000030ad00010fe0fb004ac60018018000078e00060030618302000c060c3021870000c00007cefe000038d70012400000040300027fd80006efe00007fe078828f7000030fe000a1d000010dc00061a003fe0fb002ac6001801f3ffbffe00060030618302000c06063021ff0000fe78fffefe00043fffd9fffbb0ff00e0fb0026c6000001feff10fe00060030630306000c06063061ff0000feff04fe000c001facff00e0fb0026c6000001feff10fe00060030610202000c06043061ff0000feff04fe000c001facff00e0fb0073c6001401ffff9ffe00060030610306000c06043061ff0000feff04fe001c001ffcff0cfdeeffffe387fffe91dfffe3bffbff03fcbfffd3feff14f12ffffffcffff8100fff8000fecc00023c0000004fe001503800000c00001c4c00005fc000060fe0007ff000001fe000509c000003fe0fb0027c6001c01e0000fdc00060030610306000c060630e1c00000e00007ce001c0018ad00010f60fb0027c6001c01c000078e00060030610302180c060630e1800000c00003c6001c0030ad00010f60fb0027c6001c018000078600020030410302100e060e01e0180000c000038700180030ad00010e60fb0027c6001c01800007030000fc1f818301f01e060e07f07f00010000030180380060ad00010c60fb0027c6001c01800006030000fe0f810301e01e06040f707f00030000030180300060ad00010c60fb0026c6001401800006030000fc0f800201e01e06040f007f0003fe00040180300060ac000060fb0020c60008018000000300003c06f800023e0003fe00040180000060ac000060fb001ac600040180000003f2000003fe000401800000e0ac000060fb001bc6000501c000000180f3000003fe000401800000c0ac000060fb001bc60005018000000180f3000006fe000401c00001c0ac000060fb001ac600050180000001c0f300000efd000360000380ac000060fb001ac600010180fe0000e0f300000cfd000360000380ac000060fb001ac600010180fe0000e0f300000cfd000320000380ac000070fb0019c600010180fe000070f3000018fd0002200006ab000070fb0019c600010180fe000030f3000010fd0002300006ab000060fb001ac600010180fe00010341f4000030fd0002180018ab000060fb0019c600010180fe00000ff3ff00e0fd00021ffff8ab000060fb0019c600010180fe00000ff3ff00c0fd00020ffff8ab000060fb0019c600010180fe00000ff3ff00c0fd000207fff8ab000060fb0020c600010180fc000c7ffe0205fb400002ff000019bdfc000101e0aa000060fb000bc60001018091000070fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb000bc60001018091000060fb0026c600100180000001ffff200b38e06e07f8000010fa000301000004fb00011fe0b30000e0fb0018c60004018000000fe9ff0080fe00020ffff0b3000060fb0018c60004018000000fe9ff00c0fe00020ffff0b30000e0fb0018c60004018000000fe9ff0080fe00020ffff8b30000e0fb002dc60007018000000f000026fe0012070000019f80007ff00003ffe0000fff000380fe00020f8018b3000060fb0019c60004018000000cea00010180fe000230001cb3000060fb0019c60004018000000cea00010180fe000230000cb3000060fb001bc60004018000000cf2000004fa00010180fc00000eb30000e0fb001dc60004018000000cf200000cfa00010180fe0002c00006b30000e0fb001dc60004018000000cf200000cfa000101c0fe0002800002b30000e0fb0017c60004018000000cf2000004fa000101c0ad0000e0fb001ac60004018000000cea000801c000000300000180b40000e0fb001ac60004018000000cea000801c000000300000180b40000e0fb0025c60004018000000cfd00031000000cfb000080f9000801c000000300000180b4000060fb002dc60004018000000cfd000f7c08087f023c07803f03f81c01f01f80fe000801c000020300100180b4000060fb002dc60004018000040cfd000f7c1c187f037e07c07f03f83c01f83f80fe000801c000060300180180b4000060fb002ec60004018000070cfd000ffe08387f83fc0fc03f07f81c01f83fc0fe00080180000703001800c0b500010860fb002ec60004018000070cfd000f87027061c7f81fe00007e01c00fc31e0fe00040180000702fe0000c0b500010ee0fb002fc60004018000070cfe00100183066040c7c01061800c000c000c2060fe00040180000784fe0000e0b500010fe0fb0033c6000401c0000fbcfe001001ff03e040c7803060800c000c040c2060fe0004018000078cfe000070d8000002df00011fe0fb0042c6000001feff00fcfe001001ff03c040c7803fe07e07e00c040c2060fe000001feff04fc0010007ff0ff00f7d6ff10cf4236fefffffdf01ffffffefffff9ffe0fb002ec6000001feff00fcfe001001ff01c040c3003fe07e03e00c040c2060fe000001feff04fc0018007fb4ff00e0fb002ec6000001feff00fcfe001001ff01c060c2003fe07e03e00c060e2060fe000001feff04fc0018007fb4ff00c0fb005bc6000401ff7ffffcfe001001fe03e07f86003fc00601f00c060c2060fe000f01ffff7ffc0010007fffecffffed103feaff17bfddffffc5bfffc00a3fff3781fff8000fffc0007fff0edffbff00dff8ff00f7feff03dfffffc0fb002ec600040180000f9cfe0010010003e07f060030000300380c060c3060fd0007c00007cc00100060b500011fc0fb002fc60004018000078cfe0010010007f07f070010000300180c060c7060fe0008018000078e00300060b500011fc0fb002ec60004018000070cfd000ffe06707e07001fc07f03f01e07fc2060fe0008018000078e003000c0b500011ec0fb002ec60004018000060cfd000fff0c386007000fe1fe0ff03f03f82060fe00080180000707007001c0b500011ce0fb002ec60004018000060cfd000f7f0c184002000ff1fe0fe03f01f82060fe00080180000603006001c0b500011ce0fb002cc60004018000040cfd000d3e08004000000fe0fc0fe01f01f0fc0008018000020300200180b5000118e0fb0028c60004018000000cfa000340000001fe000380000060fc0008018000000300000180b40000e0fb001ec60004018000000cfa000040f20008018000000300000180b40000e0fb001ec60004018000000cfa000040f20008018000000300000180b40000e0fb0019c60004018000000cea00070180000001800003b30000c0fb0019c60004018000000cea00010180fe0002c00007b30000c0fb0019c60004018000000cea00010180fe0002c00006b30000c0fb0019c60004018000000cea00010180fe0002e00006b30000c0fb0019c60004018000000cea00010180fe0002700008b30000c0fb0019c60004018000000cea00010180fe0002300018b30000e0fb002cc6000d018000000e0ff20000d0083c05c0fe0005200001ff0180fd000201c7c0fe0002061ff8b30000e0fb0018c60004018000000fe9ff0080fe00020ffff0b30000e0fb0018c60004018000000fe9ff0080fe00020ffff0b30000c0fb0018c60004018000000fe9ff0080fe00020fffe0b30000c0fb002cc6001d018000000700000180000009000011c000004dc40000ff80001bd7000380fd00018040b30000c0fb000bc600010180910000e0fb000bc600010180910000c0fb000bc600010180910000e0fb000bc600010180910000e0fb000bc600010180910000e0fb000bc600010180910000c0fb000bc600010180910000c0fb000bc600010380910000c0fb000bc600010180910000c0fb000bc600010180910000c0fb000bc600010180910000c0fb000bc600010180910000c0fb000bc600010180910000c0fb000bc600010180910000c0fb000bc600010180910000c0fb0017c600010180f6000003fdff009febff00f8b90000c0fb0013c600010180f6000007e6ff00fcb90000c0fb0013c600010180f6000007e6ff00fcb90000c0fb002bc600010180f6000a07fffff3dfffff7fffffe3feff00cffeff0adffffffc667fffc04ffffcb90000c0fb0013c600010180f6000007e600001cb90000c0fb0013c600010180f6000007e600001cb90000c0fb0013c600010180f6000007e600001cb90000c0fb0013c600010380f6000006e600001cb90000c0fb0013c600010180f6000006e600000cb90000c0fb0013c600010180f6000006e600000cb90000c0fb0013c600010180f6000007e600001cb90000c0fb0013c600010180f6000007e600000cb90000c0fb001ec600010380f6000007ed0007028200b0d960000cfa000060c10000e0fb0023c600010380fe00020fffe0fc0002070007eaff02fe000cfc000201fffec10000e0fb0023c600010180fe00021ffff0fc000207000feaff02fe001cfc000201ffffc10000e0fb0023c600010180fe00021ffff0fc000206000feaff02fe001cfc000201ffffc10000c0fb0038c600010180fe00023000f8fc001c06000f8000fffc0003fff0003ffc0000eff15007df80003c70000e001cfc000303fc0f80c20000c0fb0024c600010180fe0002600018fc000206000cea000207001cfc000306000180c20000c0fb0024c600010380fe000260000cfc000206000cea000207001cfc0003060001c0c20000c0fb0024c600010180fe0002c01f0efc000206000cea000206001cfc00030c1e00e0c20000c0fb002fc600010180fe0002c01f07fc000206000cfb00030c000002fa000002fc000207001cfc0003181f00e0c20000c0fb002fc600070180000001c03f07fc000206000cfb00030c000006fa000006fc000207001cfc0003181f0060c20000c0fb0030c600080180000001803e0380fd00020f800cfb00030c000006fa000006fc000207001cfc0003381f8070c20000c0fb0030c60008018000000300780180fd00023fc00cfb00030c000006fa000006fc000206000cfc000370078038c20000c0fb0030c60008038000000300780180fd00023fc00cfb00030c000006fa000006fc000206001cfc00036003c038c20000c0fb0035c60008038000000300780180fd00023fc00cfb00041f00040780fe00040300000780fd000206001cfc00036003c038c20000c0fb0037c60008038000000300700180fd00021f800cfc000dfc1f801f0fe01f039e0781f80fc0fd000206001cfd0004406003c038c20000c0fb0037c60008038000040300f001c0fd00021f840cfc000dfc3fc01f0fe01f039e0fc1fc0fe0fd000206001cfd0004406003c018c20000c0fb0039c60008018000060600f000c0fd00020f040cfd000e01fc1f801f0fe01f83fe0fc1fc0fc0fd0002060008fd000460e001e018c3000118c0fb0039c60008018000070e018000c0fd00020e0e0cfd000e03d81f000187800183fe18e1fe0780fd0002060008fd000460e000e00cc300011dc0fb0038c600080180000f0c01800060fd0002060f1cfd000d03000c0000c60041c36e10618606fc000206000cfd000470c000600cc300011fc0fb0059c600080180000f9c00c00070fd00020e0f1cfd000d03000c0003c600e1c36e1ce18206fc000207001cfd0004f98000e00cf80000c0fa0001a03cfe001401f7ffe003ffbe38103f40e0027f00012f8000018cee00011fc0fb0032c6000001feff04fc00f0007ffbff00fcfd000d01f00c001fc600ffc76e1fe18206fc000007faff038003c00fc2ff00c0fb0032c6000001feff04fc00f0007ffbff00fcfd000d01f80c001fc600ffc76e1fe18306fc000007faff038003c00fc2ff00c0fb0031c6000001feff04fc00f8007ffbff00f8fc000cf80c003fc600ffc76e3fe38706fc000007faff03c003c00fc2ff00c0fb006cc6000f01fc7e3ffc0078007e0f1fffe2183ff8fc000d7c0c003f8600e9876e3f81870610fd001e07ffd03c3fffc1ff8003c00effe001ffff0001fff8000fffc00003ff00019efe000006f7000005fc0018059f0000037fc000dff80007fe01e00ffc003dffa0003effc0fb003ac6000f0180000f9c0078007000000380000f18fc000d0c0c60418610c0076e3001830630fd000006fe0007300000f18003c00ec300011fc0fb003ac6000f0180000f1c0078006000000300000f18fc000d1c0c6061861840076e3803830630fd000006fe0007100000f1c003800cc300011fc0fb003bc6000f0180000f0e003e00c000000300000e0cfd000e01fc07e03fc3702f836e1fc38303e0fd000006fe00073c0000e0c00f801cc300011dc0fb003bc6000f0380000e06003f01c000000300000e08fd000e03f807c03fc1f03fc7ee0fe38301e0fd000006fe00077c0000e0e01f0018c3000119c0fb003bc6000f0380000c06003f018000000300000c0cfd000e03f803c01fc1e03fc66e0fe18201e0fd000006fe00077c0000c0603f0018c3000119c0fb003ac6000b0380000002001e0180000003fe00001cfd000e03f003801f81c01f804407e10001e0fd000006fe0000fefe0003603e0038c20000c0fb0028c6000b018000000600000180000003fe00001cea000406000001fffe000360000038c20000c0fb0028c6000b018000000700000180000003fe00000cea000406000001fffe000360000038c20000c0fb0028c6000b038000000700000380000003fe000008ea000006fe0000fefe000360000070c20000c0fb0028c6000b038000000380000380000003fe000008ea000006fe000038fe000330000060c20000c0fb0028c600070380000001800007fe000003fe00000cea000006fe000030fe0003180000e0c20000c0fb0028c600010380fe0002c0000ffe000003fe00001cea000006fe000030fe00031c0000c0c20000c0fb0028c600010380fe0002e0000efe000003fe00000cea000006fe000030fe00030c0001c0c20000c0fb0028c600010380fe000260001cfe000003fe00000cea000006fe000030fe000306000180c20000c0fb0027c600010380fe0002600018fe000003fe00000cea00000efe000030fe0002060003c10000c0fb0037c600010380fe00021ffff8fe000003fe00001ffcff0bf0e3fb8787fffffe1ff7fffbfbff00fefe000030fe000207ffffc2000101c0fb0027c600010380fe00021ffff0fe000003fe00000feaff00fefe000030fe000203fffec10000c0fb0027c600010380fe00021fffe0fe000003fe00000feaff00fefe000030fe000201fffec10000c0fb0034c600010380fe00020fffe0fe000003fe00080ff42fffffe5fffffcf7ff00e1feff01801efe000030fe000201ff9cc1000080fb0013c600010380f8000003e2000030bb0000c0fb0013c600010380f8000003e2000030bb0000c0fb0013c6000003f7000003e2000030bc000101c0fb0014c600010380f8000003e2000030bc000101c0fb0014c600010380f8000003e2000030bc000101c0fb0014c600010380f8000003e2000030bc000101c0fb0014c600010380f8000003e2000030bc000101c0fb0012c6000003f7000003e2000030bb0000c0fb0012c6000003f7000003e2000030bb0000c0fb0013c6000003f7000003e2000030bc000101c0fb0013c6000003f7000003e2000030bc000101c0fb0014c600010380f8000003e2000030bc000101c0fb0014c600010380f8000003e2000030bc000101c0fb0013c6000003f7000003e2000030bc000101c0fb0014c600010380f8000003e2000030bc000101c0fb0014c600010380f8000003e2000030bc000101c0fb0013c6000003f7000003e2000030bc000101c0fb0014c600010380f8000003e2000030bc000101c0fb0013c6000003f7000003e2000030bc000101c0fb0013c6000003f7000003e2000030bc000101c0fb0013c6000003f7000003e2000030bc000101c0fb0013c6000003f7000003e2000030bc000101c0fb0014c600010380f8000003e2000030bc000101c0fb0014c600010380f8000003e2000030bc000101c0fb0014c600010380f8000003e2000070bc000101c0fb0014c600010380f8000003e2000070bc000101c0fb0013c6000003f7000003e2000070bc000101c0fb0013c6000003f7000003e2000070bc000101c0fb0013c6000003f7000003e2000070bc000101c0fb0014c600010380f8000003e2000030bc000101c0fb0014c600010380f8000003e2000030bc000101c0fb0014c600010380f8000003e2000030bc000101c0fb0013c6000003f7000003e2000030bc000101c0fb0013c6000003f7000003e2000030bc000101c0fb0013c6000003f7000003e2000030bc000101c0fb0013c6000003f7000003e2000070bc000101c0fb0013c6000003f7000003e2000030bc000101c0fb0013c6000003f7000003e2000030bc000101c0fb0013c6000003f7000003e2000030bc000101c0fb0013c6000003f7000003e2000030bc000101c0fb0013c6000003f7000003e2000030bc000101c0fb0013c6000003f7000003e2000030bc00010180fb0013c6000003f7000003e2000030bc00010180fb0013c6000003f7000003e2000030bc000101c0fb0013c6000003f7000003e2000030bc000101c0fb0013c6000003f7000003e2000030bc000101c0fb0013c6000003f7000003e2000070bc000101c0fb001cc6000003f700010380eb00080800000f84000001f0bc000101c0fb0013c6000003f7000003e2ff00f0bc000101c0fb0013c6000003f7000003e2ff00f0bc000101c0fb0013c6000003f7000003e2ff00f0bc00010180fb002fc6000003f7002001f3e3ffffd001fffff01fffe1c67fff9feffff807bfffc1ebfffe000667e00060bc00010180fb000bc600000391000101c0fb000bc600000391000101c0fb000bc600000391000101c0fb000bc600000391000101c0fb000bc600000391000101c0fb000bc600000391000101c0fb000bc60000039100010180fb000bc60000039100010180fb000bc600000391000101c0fb000bc600000391000101c0fb000bc600000391000101c0fb000bc60000039100010180fb000bc60000039100010180fb000bc60000039100010180fb000bc60000039100010180fb000bc60000039100010180fb000bc60000039100010180fb000bc60000039100010180fb000bc60000039100010180fb000bc60000039100010180fb000bc60000039100010180fb000bc60000039100010180fb000bc60000039100010180fb000bc60000039100010180fb000bc60000039100010180fb000bc60000039100010180fb000bc60000039100010180fb000bc60000039100010180fb0056c6000003fd000403c000001cfa0017e000000e4000001e00003f8e97017ff0001fcf835ffffe1efd00061ffe1fc7ffffe0faff00fefc00021fbfc0fe000003edff033fff6047fc000044fb00019810fe00010180fb0039c6000003fd00001ffbff0080fe000007e9fffd00003ff3fffc00023fffe0fe000003e9ff00c0fe000207fff8fd000203fffcfe00010180fb003bc6000003fd00003ffbff0080fe00000fe9fffd00003ff3ff0080fd00023fffe0fe000003e9ff00c0fe00020ffff8fd000203fffcfe00010180fb003bc6000003fd00003ffbff00c0fe00000fe9fffd00007ff3ff00c0fd00027ffff0fe000003e9ff00c0fe00020ffff8fd000203fffcfe00010180fb0068c6000003fd000760007ff80000ffc0fe00180e01fff000036600003ffe0001ffa0003cff00003ffc000f3ffd000ff001dde00000600000389e00001801c0fd0002fd9078fe000003f5000060fb0005078000043fc0fe00021f0ff8fd000204071cfe00010180fb003dc6000003fd0000e0fb000060fe00000cea000007fd0000c0f30000c0fd0002c00038fe000007e90000c0fe0002180006fd00020c0006fe00010180fb003ec6000003fd0000e0fb000030fe00000cea000007fd0000c0f30000e0fe000301c00018fe000007e90000c0fe0002300006fd00020c0003fe00010180fb0047c6000003fd0000c0fb000038fe00000cea000007fe00010180fd000408000c01e0fc000070fe000301c0180cfe000007e90000c0fe0002700007fd00071800038000000180fb0058c6000003fe00040180000040fe000018fe00000ef8000003fa000006fc000007fe00010380fd000418000c01e0fc000070fe00030380180efe000007f2000006f90000c0fe000360300380fe00073000018000000180fb005bc6000003fe000401800000c0fe000018fe00000efb00030c000003fa000006fc000007fe00010380fd000418000c01e0fc000038fe00030380380efe000007f2000006f90000c0fe000360300380fe0007300001c000000180fb0056c6000003fe000403800000c0fe00000cfe00000efb00030c000003fa000006fc000007fe000007fc000018fe0000e0fc000038fe000307003007fe000007e90000c0fe0003c01801c0fe0007600001c000000180fb0056c6000003fe000007fe0000c0fe000006fe00000cfb00030c000003fa000006fc000007fe000006fc00000cfe0000e0fc00001cfe00030e007003fe000007e90007c0000001801c00c0fe0007e00000e000000180fb0056c6000003fe000006fe0000c0fe000006fe00000efb00030c000003fa000007fc000007fe000004fc00000cfe000060fc00001cfe00070e00600380000007e90007c0000001801c00c0fe0007c000006000000180fb006cc6000003fe000806000001e070000006fe00000cfb00050f000007c008fc00010fc0fd000007fe000006fc00051fc03c006002fd00001cfe00070e00e00380000007fd000e1c00003c001e03c01f00f80400300ffc0007c0000001800e00c0fe0007c000006000000180fb0073c6000003fe00080600001fc0f8000006fe00000cfc000dfc1fc01f07e01f018c0fc1fc0fe0fd0004030000080efe000801811fe03c00600f80fe000b1c0000180e00c00380000307fd000f3e060c7f813f07e03f81fc0e00f81fc0fd0012c0000001800e00c0000080c000006000000180fb0073c60010030000080600001fc0f80000060000060cfc000dfe1fc01f0ff01f83de0fc1fc1fe0fd00040700001c0efe000801831fe03c00e00fc0fe000b0c0000180e01c00380000306fd000f7f061c7f81ff07e03f83fc1e01fc1fc0fd0012c0000301800600e00001c0c006006000003180fb0073c600100300000c0600001fc0fc0000060000060cfc000dfe1f801f8fe01f83fe0fe1fe0fe0fd00040700001c0efe000801831ff03c00e01fc0fe000b0e00001c1c01c00180000386fd000f7f063c7fc1fe0ff03f83fc0e01fc1fe0fd0012c0000303800600600001c08004007000003180fb0073c600100300000e0c00003fc01e0000030000070cfc000df81f0007878033c3fe1ef1df0780fd00040700001e1cfe000801830e701c00e03ce0fe000b0600001e1801c001c00003c6fd000fc383f871c3c00c30c007000c030e3ee0fd000ac0000383000700600000c1fe00043000003980fb0074c600100300000e18000060c20e0000018000070cfd000d03000c0000830060c3fe38718306fc00040300001e18fe000801831c381c00e038e0fe000b0700001e3801c000c00003c6fe001001c383f06063c00c30c006000603061830fd000ac00003c6000700700001e1fe00043800003f80fb0073c600100300000f18000060c2060000018000078cfd000d03000c0000c30071c3663c718306fc00040780001f78fe0008018318381c00e039e0fe000b0780003f7801c000f00007fefd000fff81f02063c01ff0f003c00603073830fd000ae00003c6000700700001e3fe00041800003f80fb0073c6000003feff0cf8000060c206000001fffb9ffcfd000d03f00c000fc3007fc3363ff18306fc000007feff00f8fe0008019318181c00e03fe0fe000007feff03f801c000feff00fefe001001ff80e06063801ff87e03f00603061830fd00feff07fe0006003fffe3fffe00041fffe07f80fb0073c6000003feff08f8000060c306000001feff00fcfd000d01f80c001fc3007fc3763ff18306fc000007feff00f8fe000801bb18181c00603fe0fe000003feff03f801c000feff00fefe001001ff80e060e3801ff03f01f00603061830fd00feff04fe0006003ffeff030004001ffeff0080fb0072c6000003feff08f80000604206000001feff00fcfc000cf80c001fc3007fc37e3fe18306fc000007feff00f8fe000801bb1c381c00603fe0fe000007feff03f801c000feff00fefe001001ff81e070c3801ff03f01f80603061830fd00feff04fe0006003ffeff030006001ffeff0080fb0072c6000c03f8e7fff80000604606000001feff00fcfc000cf80c001fc3007f837e3fc18306fc000407e90ffff8fe000801bf18381c00603fc0fe000007feff07f800e000fbfffffefd000ff603f07fc3801e000780180603063830fd0007e7fffffe000e003ffeff070006001ff7ffff80fb0072c600100380001f38000060430600000180000f9cfc000d040c3021c30870037e3801830630fd00040700001f38fe000701ff18381c006038fd000b0700001e38006000c00003c6fd000fc003f07f83800c0003800c0603063830fd0012e00007ce000c00300003f3000e001800007f80fb0072c600100300001e18000060c3060000018000078cfc000d0e0e7060c31860037e3801830770fd00040700001e18fe000701ff18381c00e038fd000b0700001e18007001c00003c6fd000fe003307f83000c0003801806030e1830fd0012c00003c6001c00300001e3000e001800003f80fb0073c600100300000e1c000071c18e0000038000070cfc000d3c0fe07fc3f87f837e3fe18303f0fd00040700001e1cfe000801ff18381e00f03fc0fe000b0e00001e1c00700180000386fd000fff06387f038007f03f83f80f01fc1830fd0012c00003c3003800700001e1800e003000003f80fb0074c600100300000c0c00003fc0fc0000020000060cfd000e03fc07e03fc3f03fc3fe1ff18303e0fd00040700001c0efe000801ff18383e01f01fe0fe000b0c00001c0c00380380000306fd000f7f8e1c70038007f0ff07f00f01fc1830fd0012c0000381803800600001c1c01c002000003980fb0074c600100300001c0e00001fc1f80000060000060cfd000e03f803c03fc1f01fc3fe0ff38301e0fd00040700001c0efe000801ff18383f01f81fe0fe000b1c0000180e00180380000306fd000f7f860c60030007f0fe07f01f00f81830fd0012c0000301803000c00001c0c018006000003180fb0073c600100300001c0600001fc0f80000060000040cfd000e03f803c01fc0e01fc3660ff18301e0fd0004070000080efd0007cf18103e01f00fe0fe00001cfe00070e00180380000006fd000f3f040070000003f07e03f00f00f81030fd0012c0000301802000c0000180c000006000002180fb005ac6000003fe00040600000f80fe000006fe00000cfd000b01e000000f80000780000380fa000007fe00000ef8000060fc00001cfe00070e00000380000006fa000060f10007c0000001800000c0fe0007c000006000000180fb0043c6000003fe000006fa000006fe00000cea000007fe00000ef200001cfe00030e000003fe000006fa000060f10007c0000001800000c0fe0007c000006000000180fb003fc6000003fe000006fa000006fe00000cea000006fe00000ef200001cfe00030e000007fe000007e90007c0000001c00001c0fe0007e00000e000000180fb003fc6000003fe000003fa000008fe00000cea000007fe000007f2000038fe00030700000efe000007e90007e0000001c00001c0fe0007700000e000000180fb003fc6000003fe000003fa000018fe00000cea000007fe000003f2000030fe00030300000efe000006e90000c0fe0003e0000380fe0007300001c000000180fb0041c6000003fe00010380fb000018fe00000cea000007fe00010380f3000030fe00030380001cfe000006e90000c0fe000360000380fe00073000018000000180fb0040c6000003fe000101c0fb000010fe00000cea000006fe00010180f3000070fe00030180003cfe000006e90000c0fe0002700003fd00071800038000000180fb0040c6000003fe000101c0fb000020fe00000cea000006fe000101c0f30000c0fe000301c00038fe000006e90000c0fe0002300006fd0002180003fe00010180fb003dc6000007fd0000c0fb000060fe00000cea000006fd0000c0f30000c0fd0002c00030fe000007e90000c0fe000238000cfd00020c0007fe00010180fb0060c6000003fd000070fb000060fe00010fc0ed000207401efd000078fe000b44010022e05c21d0480a1fc0fd0002c000f0fe001307e721bffffe23fff003cff7c02073fe0003de84fe00024001c0fe00021e000cfd00020f600efe00010180fb0041c6000003fd00007ffbff00c0fe00000ffcff00fdf0ff00fefd00003ff3ff0080fd00027fffe0fe000007e9ff00c0fe00021ffffcfd000207fffefe00010180fb003bc6000003fd00003ffbff00c0fe00000feaff00fefd00003ff3fffc00027fffe0fe000007e9ff00c0fe00020ffff8fd000207fffcfe00010180fb0044c6000003fd00003ffbff0080fe00000feaff00fefd00003ff3fffc00023fffc0fe000003fbff00fefeff01e67ff5ff00c0fe00020ffff8fd000207fffcfe00010380fb0056c6000003fd00071ffffffe0b0fff80fd001703fffc029ffff9e0ffff0403fff0407fffc000fff8000f7cfc000d017fe0000c5fc0003ffc00000f60fc00010730e60001041ffc00010fe0fc000107f0fe00010380fb000bc60000079100010380fb000bc60000079100010180fb000bc60000079100010180fb000bc60000079100010380fb000bc60000079100010380fb000bc60000079100010380fb000bc60000079100010180fb000bc60000079100010380fb000bc60000039100010380fb000bc60000039100010380fb000bc60000079100010380fb000bc60000079100010380fb000bc60000079100010380fb000bc60000079100010380fb000bc60000079100010180fb000bc60000079100010180fb000bc60000079100010380fb000bc60000079100010380fb000bc60000079100010380fb000bc60000079100010380fb000bc60000079100010380fb000bc60000079100010380fb000bc60000079100010380fb000bc60000079100010380fb000bc60000079100010380fb000bc60000079100010380fb000bc60000079100010380fb000bc60000079100010380fb0026c6000007fe00001ffeff0f1f7ff3fd9ffff049e9de1f7ffffffd37fdff00fead00010380fb0015c6000007fe00001ff4ff00bff7ffad00010380fb0011c6000007fe00001fe9ffad00010380fb0023c6000006fe00053ffe7fffffeffaff0b67fffe79dfffff0ffffe000fad00010380fb0013c6000007fe00003cea000007ad00010380fb0013c6000007fe000038ea000003ad00010380fb0013c6000007fe000038ea000003ad00010380fb001dc6000007fe0003380001c0fb000304000001f7000003ad00010380fb0020c6000006fe0003380001e0fb000306000001fa000303000003ad00010380fb0020c6000006fe0003380003f0fb000306000001fa000303000003ad00010380fb0020c6000007fe0003380003f0fb000306000003fa000303000003ad00010380fb001fc6000006fe000338000630fb000306000003fa000303000002ad000003fa0020c6000006fe000338000630fb00040600000380fb000303000003ad000003fa0026c6000006fe0018380006001c007800007e0f800603e006000001807c07e00003ad000003fa0026c6001c06000008380006003e04f80000ff1fc00f87f00f039c07c0fc07e00003ad000023fa0026c6001c0600001838000e007e0ffc0000ff1fc00f87e00f03de07c1fe07e00002ad000023fa0026c6001c0600001c30000f807f0ff80000fe0fc007c3e00f83fe0fc1fe07e00003ad000033fa0026c6001c0600001c30001fc0c10f800001800f0000438000c3fe0061c307000003ad00003bfa002ac6001c0600001e38001fc0c18f00000100060000630020c36e10618303000003d0000004df00007ffa0050c600250782403ff0001fc0c18f000001d0040001e3007fc36e18e1830300000380cffde3c7fdff1f3ffcff05fc50fffbd99feaff00feedff14efe3fffbc03ccefc40e127fff183fffe333ffbc9fffa0024c6000007feff05f0000f80c18efe000ff806000fe3007fc36e1fe18303000003acfffa0024c6000007feff05f0000600c18cfe000ffc06000fe3007fc3661fe18303000003acfffa0046c6000007feff05f0000600c18cfe000ffc06000fe3007fc3663fc18303000003daff12effff8e9fffeb47ffff9460ffff0007fff10fbfeff03dfffffeff1ff03febffffffa0044c6000907e0003ff0000600c18cfe00180e0e0001e3007003661e01838308000380c0000f8700000f40fb00044000000180fc000002d3000006fe00010240fb0000fffa0026c600090600001e30000e00c30cfe000f06063030e30860036630018383180002ad00007ffa0026c600090600001e30000e00c30cfe000f0e063010e39860036610018303380002ad00007bfa0026c6001c0600001c30000600fe0c000001fc03f01fe1f83fc76e1fc18301f80002ad000073fa0026c6001c06000018300006007e0c000001fc03e01fe0f01fc36e0fe18301f00002ad000063fa0027c6001c06000018300006007e0c000001fc03c00fe0f01fc22c0fe10301f00006ad00016380fb0026c600040600001030fe00003cfd000ff801c00780600e000007c00000e00006ad00010380fb0013c6000006fe000030ea000002ad00010380fb0012c6000006fe000030ea000006ad000003fa0012c6000006fe000030ea000006ad000003fa0012c6000006fe000030ea000006ad000003fa0013c6000006fe000030ea000006ad00010380fb0013c6000006fe000030ea000007ad00010380fb0013c6000006fe000030ea000006ad00010380fb0012c6000006fe000030ea000006ad000003fa0012c6000006fe000038ea00000ead000003fa001bc6000006fe00003ffcff01fb7ffbff00fdf8ff00fead000003fa0012c6000006fe00003feaff00fead000003fa0012c6000006fe00003feaff00fead000003fa0025c6000006fe00001ffdff13781fffe1f9fffdbc1bfff7e7fffff107fffff7fead000003fa000ac600000691000003fa000ac600000691000003fa000ac600000691000003fa000bc60000069100010380fb000bc60000069100010380fb000bc60000069100010380fb000bc60000069100010380fb000bc60000069100010380fb000bc60000069100010380fb000bc60000079100010380fb000bc60000079100010380fb000bc60000079100010380fb000bc60000069100010380fb000bc60000069100010380fb000bc600000e9100010380fb000bc60000069100010380fb000bc60000069100010380fb000bc60000079100010380fb000bc600000f9100010380fb000bc60000069100010380fb000bc60000069100010380fb000bc60000069100010180fb000bc60000069100010180fb000bc60000069100010180fb000bc60000069100010180fb000bc60000069100010380fb0025c6000006e2000c40024be82003fffdf83ffffe3ffeff00f8fd00027fff80c800010380fb0027c6000006fd000002fa0006fc00607b7ec03efd00001feaff00fcfd00027fffc0c800010380fb001fc600000efd00003ff3fffd00001feaff00fcfd0002ffffc0c800010380fb0021c600000efd00007ff3ff0080fe00003feaff00fcfd0002efffc0c800010380fb0034c600000efd00007ff3ff0080fe00003ffcff0ef9ffffef8003fff8000ffa00002180fe00003cfe0003018000e0c800010380fb002ec6000006fd000ffe8ffffc207fffc03067fe00018d01c0fe00013802eb00000cfe000301800060c800010380fb0023c6000006fe000101c0f30000e0fe000038ea00000cfe000307000070c800010380fb002dc6000006fe000101c0f30000e0fe000030fd000020f90002070060fa00000cfe000306000038c800010380fb0032c6000006fe00010180f3000070fe000030fd0002600020fe00053000c00f0060fa00000cfe00030600001cc800010380fb0035c6000006fe000003f90000c0fb000030fe000038fd0002600030fe00057000c00f8060fa00000cfe00030e00000cc800010380fb0034c600000efe000007f90000c0fb000038fe000030fd0002600070fe00043000c01fc0f900000cfe00031c00000ec800010380fb0031c600000efe000007f90000c0fb00003cfe000030fb000060fe000430000019c0f900000cfe000318000006c8000001fa0032c600000efe00000efa000101c0fb00001cfe000030fb000060fe000430000018c0f900000cfe000318000007c8000023fa0036c600000efe00000cfa000101c0fb00000cfe000030fb000060fe00047c000018c0fe00001cfd00000cfe00031800c006c8000033fa0038c6000006fe00000cfa000101e0fb00000cfe000030fd000ec007e07807e0fe01c01800e00f81bffd00070c0000301800c006c8000073fa003ec6000006fe00000cfd000603e01f01f807c0fd00041c00001830fe000f01e00fe07c0fe0fe03c03801e00fc1fffd00070c0000301800c007c800007bfa003ec60004060000100cfd000603e01f01f807c0fd00040c00001830fe000f01e00ff0fe0fe0fe03c03c00e01fe1fffd00070c0000383000c007c800007ffa0054c60004060000180cfd000607e03f81f807e0fd00040e00001c30fe000f01e01ff0fe0ff07801c07f00f018e1f2fd00070c00003c70000003e40014091000007cb6207fe0d9c0c7e80045dc03fe3fffbcf9fffa0043c600040600001c0cfd000607e03f81e00fe0fd00040600001e30fd000ee01071870c387001c07f00603861e0fd00080c00003c7000000180f7000301c0402fd6fffa003dc600040600001c10fd00060c0071c1c01070fd00040700001e30fd000e601071870c307001c07f006038f1c0fd00070f16007ef0000001c7ff0080fb0045c600040600003c70fd00060c1860c0c03070fd00040700003ff0fd000e603071ff18307000c03e00703ff1c0fd00000ffeff03e000c001cfff08fef3fffff0fc7fff80fb0057c6000407101c7ff0fd00060c18e0c0c03030fd000007feff00f0fd000e603071ff1c307000c03800603ff180fd00000ffeff03e000c001ebff118e0fffe0400ff60c01ef80000d8f80001180fe000040f400017f80fb004ac6000007feff00f0fd00060c1860c0c03030fd000007feff00f0fd000e603831ff1c307000c03800603fe180fd00000ffeff03e000c001f9ff0877fffc000fffc00010d900017b80fb003fc6000007feff00f0fd00060c1860c1c01030fd000003feff00f0fd000e603071ff1c307000c03800603cc180fd00080e1c0cffe000c00180c900017b80fb003ec6000407fffffe70fd00060ff860c1c01030fd000403bfff7ff0fd000e603063c01c307100c0380060380180fd00080c00003c7000c00180c9000073fa003dc6000407c0003ff0fd000603f860c0c63030fd00040700001e30fd000e6010638018303380c0380070380180fd00070c00003c7001c003c8000073fa003ec600040700003e30fd000603f860c0c63870fd00040700001e30fd000ef01ee1e818383f81e03800f81fe180fd00070c0000383803c006c800012380fb003ec600040600003e38fd000603f861c0fe1ef0fd00040e00001c30fd000ef81fe0ff18381f03e03801f80fe180fd00070c00003818038006c800010380fb003ec600040600003c3cfc0005383f807c0ff0fd00040c00001830fe000f01f80ff0ff18381e03f03801f80fe180fd00070c00003018018006c800010380fb003ec60004060000380cfc0005381f00780fe0fd00040c00001830fe000f01f80fe07f08101e01e03000f807e180fd00070c00003018000006c800010380fb0036c600040e0000100cfc0005381f003807c0fd00000cfe000030fd0003f000003efe000101e0f700000cfe00031c000006c8000003fa002fe9000080df00000efe00000cfd000603f80f00000180fd00000cfe000030ea00000cfe00031c000006c8000003fa002cea00010180df00000efe00000cfd000103f0f800000cfe000038ea00000cfe00031c00000ec800010380fb0027c600000efe00000cfd000103e0f800001cfe000038ea00000cfe00030e00001cc800010380fb0026c6000006fe00000efd000101c0f8000038fe000030ea00000cfe00030600001cc8000003fa0021c6000006fe000007f2000030fe000030ea00000cfe000307000038c8000003fa0022c6000006fe000007f2000070fe000030ea00000cfe000303800070c800010380fb0022c6000006fe000003f20000e0fe000030ea00000cfe000301800070c800010380fb0023c6000006fe00010380f30000e0fe000038ea00001cfe000301e000e0c800010380fb002ec600000efe000101c0f4000101c0fe000038fa0007013060ff2003ff63f9ff00fcfd0002ffffe0c800010380fb0028c6000006fd0000c0fa0007e0001c3ffe00ffc0fe00003feaff00fcfd0002ffffc0c800010380fb001fc6000006fd00f2ff0080fe00003feaff00fcfd00027fffc0c800010380fb001fc600000efd00007ff3fffd00003feaff00f8fd00021fff80c800010380fb0024c600000efd00007ff3fffd000f1fffff39efffe9f67fff80007ff00006b800010380fb001dc6000006fd000a078ffffe00007f00000178fe000020a400010380fb000bc60000069100010380fb000bc60000069100010380fb000bc60000069100010380fb000bc60000069100010380fb000bc600000e9100010380fb000bc600000e9100010380fb000bc600000e9100010380fb000ac600000e91000003fa000ac600000e91000003fa000bc600000e9100010380fb000bc600000e9100010380fb000bc600000e9100010380fb000bc600000e9100010380fb000bc60000069100010380fb000bc60000069100010380fb000bc600000e9100010380fb000bc600000e9100010380fb000bc600000e9100010380fb000bc600000e9100010380fb000bc600000e9100010380fb000bc60000069100010380fb000bc60000069100010380fb000bc600000e9100010380fb000bc600000e9100010380fb0016c600000ebc00040100000c00f1ff00c0ec000003fa001fc600000ece000310000038fd000207dfc0fe000001e9ff00e0ec000003fa0025c600000ee000062000003fffd6fef2fffd00021fffe0fe000003e9ff00e0ec00010380fb003bc6000006f50002400080fe00000efc00021fffc0fe000003e9ff0080fe00021ffff0fe000003f3ff0af7f7ffffdffffffe007fe0ec00010380fb0037c6000006fd00007ff3fffc00023fffe0fe000007e9ff0080fe00023ffff0fe000003feff06f1ee3ffe0000c8f30000e0ec00010380fb0033c600000efd00007ff3ff0080fd00027fffe0fe000007edff04f007ffff80fe00027c0678fe00010380ea000060ec000003fa0034c600000efd00f2ff0080fd0002fffff0fe000607ffffc009ffe8f000010380fe0002700018fe00010380ea000060ec000003fa0047c600000efe000b01ef3ffffe03bfffc04643f0fe000101c0fd0002e00030fe000007ea00010380fe0002e0001cfe000003fb00040180000040fa0000c0fc000060ec000003fa003dc600000efe000101c0f30000c0fe000301c00030fe000006ea00070380000001e0400efe000003fb000401800000e0fa0000c0fc000060ec000003fa003dc600000efe000101c0f30000e0fe000301800018fe000006ea00070380000001c0e006fe000003fb000403800000e0fa0000c0fc000070ec000003fa0041c600000efe00010180f3000070fe00030380100cfe000006f2000018fa00070380000001c0e007fe000003fb000401800000c0fa0000c0fc000070ec000003fa0049c600000efe000003fb00050c0080000180fe000070fe00030300180cfe00000ef2000018fa000b038000000380700780000003fb000401800000e0fa0000c0fc000070ec000003fa0046c600000efe000007fb00050c01c0000180fe000078fe00030700380efe00000eea000b038000000700700380000003fb000403800000e0fb000101e0fc000060ec000003fa0049c6000006fe00000ffb00050401c0000180fe000038fe00030e007007fe00000eea000b038000000700380380000003fb000c03e00001f003c00001e03f01f8fc000060ec000003fa0049c6000006fe00000efa000401c0000180fe00001cfe00030c00e007fe00000eea000b038000000700380180000003fc000d3f87f003e1fc07e07781f07f83fcfc000060ec000063fa0058c600000efe00000cfa000401c00001c0fe00001cfe00030c00e007fe00000efa000b7c00780f003c07e03001e03ffd000b0380000407001c0180000183fc000d3f87f003e1fc07e0ff83f87f83f8fc000060ec000073fa005cc6000006fe00000cfa000401e00101f0fe00001cfe00030c01c007fe000006fd000f7c0810fe02fc1f80fe07f07803f07f80fe000b0380000c07001c0180000183fc000d3f87e003e1f80ff0ff83f87fc1f0fc000060ec00007ffa0060c600000efe00000cfe00087f0c001c03f807f1fcfe000b1c0000180c01c00300000306fd000f7c0838fe07fc1f80fe0ff07807f07f80fe000b0380000e06000c01c0000183fc000d7f03c00070f00c30ff861c70c1c0fc000060ec00007ffa0066c600040e0000101cfe00087f1c181c03f80ff1fefe000b1c0000181c0180030000030efd000ffc0c30ff07fc3f80fe1fe03807f87fc0fe000b038000070e000c00e00001c7fc000d6003800030e01c38df861c70e0c0fc000070f2000080fe0002e4007ffa005ec600040e0000381cfe00087f1c181c03f80fe1fffe000b0c00001c180180018000078efd000ffe0ee0ff878031c1801c00380e3873c0fe000b038000071c000c00e00001e7fc000d7001800078c01ff8dd87fc70e0c0fc00007febfffa005fc600040600003c38fe0017fe1c181c01e01bc1c38000000600001c380380008000038efe0010018607c0c18f8030c1801800180c1860c0fe000b0180000f98000c00ff8003fffc000d7e018003f0c01ff8dd8ff870e1c0fc00007febfffa005dc6001f0600001c30000001c00c180c01c03001838000000700001e30038000c00007cefe001001cf07c0c18f003fc1f01f80180c18e0c0fe000701ffff7ff8000c00fdfffc000d3f018007f8c01ff8df8ffc70e1c0fc00007febfffa0069c6001f0600003e70000001c01c180c01c03001838000000780003ff0038000f0001ffefe001001ff0380c18f007fc1f80fc0180c1ce0c0fe000003feff03fc000c00fdfffc000d3f018007f8c01ff0ff8ff86060c0fc00007ff6ff0ac0907fff02a7fe0000107ffa005fc6001407c000fef0000001fc1c180c01c03001c380000007feff03f0038000feff00fefe001001ff0380c18e007fc0fc0fc0180c1ce0c0fe000003feff03fc001c00fdfffc000d3f81800f78c01e00ff8f003060c6fc000070ec00007ffa0061c6000007feff00f0fe000cfc1ff80e01c030018380000007feff03f0038000feff00fefe001001ff0380e38e007fc0fc07e0180c18e0c0fe000003feff07fc001800f8003ffffc000d03838c0c38e31c00dd86007060c6fc000060ec00007ffa0061c6000007feff00f0fe000c7e1ff80e01c03801c380000007feff03f001c001feff00fefe001001fe07c0ff0e007c003e03f0180c1860c0fe000b0380001f9c003000e00003e3fc000d03c1dc1e38e71c00df87f07060fefc000060ec000073fa0061c6000007feff00f0fe00177e1ff80c01c03801c380000007dfff3ff001c001e26407defe001001c007c0ff0e007000060070180c18e0c0fe000b0380000f1c007000e00003c3fc000d3f81f80ff87c0ff0ff87f860607efc000060ec000063fa0061c6000407c0007ff0fe0017071ff80c01c63801c38000000700001e7800e001c00007cefe0010018006e0fe0e0078000e00f03c0e38e0c0fe000b0380000f0e007000c00003c3fc000dff81f007f87c07f0df83fc60607cfc000060ec000063fa0061c600040700003e70fe0017071ff80e01ce3801838000000600003e38006003c000078efe001001fc0c30fe0e003fc0fe1fe07c07f0e0c0fe000b0380000e0700e00180000383fc000dff00f007f83c07f0df81fc606038fc000060ec000003fa005ec600040e00003c38fe00173f1ff81e00fc1fc1838000000e00001c3c0070038000070efe001001ff1c38e00c001fc3fc1fc07e07f0e0c0fe000b0380000e0700e00180000183fc000a7f00f003f03801e08980f0f9000060ec000003fa0054c600040e00003c3cfe0017fe1ff81f00fc1ff1838000001c0000181c0038070000070efd000fff1c38e006001fc3f81fc07e03f060c0fe000b0380000e0700400180000003fc00003eef000060ec00010380fb0051c6001f060000381c000001fc1ff81f00780ff1838000001c0000181c00300700000206fd000fff1810e004000fc1f80f807c006000c0fe000c03800000070000018000000380ea000060ec00010380fb0043c600100e0000381c000001fc0e781f00780ff181fe00001cfe00030c000007fe00000efd00031c0000c0f2000b038000000700000180000003e9000060ec000003fa003fc600040e0000101cfe0007f000000e000003e0fd00001cfe00030c000007fe00000efa0000c0f2000b038000000780000380000007e9000060ec000003fa0034c600000efe00001cf200001cfe00030e000007fe00000efa0000c0f200070380000003800007fe000003e9000060ec000003fa0030c600000efe00000cf2000018fe00030e00000efe00000eea00070380000003800007fe000003e9000060ec000003fa0030c6000006fe00000ef2000038fe00030700000cfe00000eea00070380000001c00006fe000003e9000060ec000003fa0030c6000006fe00000ff2000070fe00030700000cfe00000eea000003fd0002e0000efe000003e90000e0ec00010380fb0037c6000006fe000007f2000070fe00030300001cfe00000eea00010380fe0002e0001cfe000003ef000607b80023efbfe0ec00010380fb0038c600000efe000007f20000e0fe000301800038fe000006ea00010380fe0002700038fe000703f000009ffffff7f0ff00e0ec00010380fb0039c6000006fe00010380f4000101c0fe000301800030fe00000ff000070100003536020780fe00027ff7f8fe000003e9ff00e0ec00010380fb003bc600000efe00010180f4000101c0fe000301c00070fe000a0fc0006e90070fffffbd7ff3ff0080fe00023ffff0fe000003e9ff00e0ec000003fa0042c600000efa000c03be000230600080ffbc647f80fd0002ffffe0fe00000fe9ff0080fe00021ffff0fe000003f5ff0cefffffc03fff030ffff0001fc0ec000003fa002fc600000efd00007ff3ff0080fd0002ffffe0fe00000fe9fffd00020fffe0fe000701fb9fffe0001be0da000003fa002ac600000efd00007ff3fffc00027fffc0fe000007f7ff00fdfcff07e0205fffe000f97ec800010380fb0021c600000efd00007ff4ff00fefc00027fff80fd00053fbf8000ffe0b6000003fa0018c600000efd000a0ff3fff00003ff800023fea0000003fa000ac600000e91000003fa000ac600000e91000003fa000ac600000e91000003fa000ac600000e91000003fa000ac600000e91000003fa000ac600000e91000003fa000ac600000e91000003fa000ac600000e91000003fa000ac600000e91000003fa000ac600000e91000003fa000ac600000e91000003fa000ac600000e91000003fa000bc600000e9100010380fb000bc600000e9100010380fb000ac600000e91000003fa000ac600000e91000003fa000ac600000e91000003fa000ac600000e91000003fa000ac600000e91000003fa000ac600000e91000003fa000ac600000e91000003fa000bc600000e9100010380fb000ac600000e91000003fa000bc600000e9100010380fb000ac600000e91000003fa000ac600000e91000003fa000ac600000e91000003fa000ac600000e91000003fa0010c600000efd00027fff8098000003fa0010c600000efd00027fffc098000003fa0010c600000efd0002ffffc098000003fa0010c600000efd0002ffffe098000003fa0011c600000efe000301c000f098000003fa0011c600000efe000301c0007098000003fa0011c600000efe00030380007898000003fa0011c600000efe00030380003898000003fa0011c600000efe00030700001c98000003fa0012c600000efe00030700001c9800010780fb0011c600000efe00030e00000e98000003fa0011c600000efe00031c00000e98000003fa0011c600000efe00031c00000698000003fa0011c600000efe00031c00400698000003fa0014c600070e0000301c00c0069b00033a8c000ffa001dc600070e0000381c00c007b9000ac00239089ffffeff2ffff8eafffa0016c600070e00003838000007c70003019fbffdd5fffa001dc600080e00003c3800000380dd000904000003c319c07fffe7c6fffa0028c600080600003c7000000180ef0009082000017ff0f8ffff9fbeff098ffffe3dbfff8001fffcfa002dc6000e0600003ef0000001e7dc00fbfbfff7c3ff15fc1b4fffe4043e5c00000c0000067d00042020000380eb0015c6000007feff03f000c001c7ff04fc000fff80cf0022c600000ffeff03f000e001e0ff11f081fffe25fffffc003ff800009380000002c3001ec600000ffeff03f000c001f6ff0df8f03fffc787fff80007ffc00010a90015c6000b07ee30fff000c001e000058afe00006098000bc300053ef000c0018091000bc300053c7001c0038091000ac300043c3803800790000ac30004381803800790000ac30004301c03800690000ac30004301c000006900009c200031c000006900009c200031c00000e900009c200031e00000e900009c200030e00001c900009c2000306000018900009c2000307000038900009c2000303800078900009c2000301800070900008c10002c000e0900008c10002ffffe0900008c10002ffffc0900008c100027fff80900008c100027fff809000048100cd00048100cd00048100cd00048100cd00048100cd00048100cd00048100cd0000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1044{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw169\pich29\picwgoal3380\pichgoal580\macpict\bliptag-1195497558\blipupi72{\*\blipuid b8be27aa39c040bbd0043ea1dcde5340}0d6200000000001d00a9001102ff0c00ffffffff000000000000000000a90000001d00000000000000a101f200163842494d000000000000001d00a94772897068af626a001e0001000a00000000001d00a90098005a00000000007702c100000000007702c100000000001d00a9000002a70002a70002a70002a70002a70002a70002a70006fe000010ab00130300060038fe000002fe000080fb000001ba0013030004003cfe00040300000180fb000001ba0012fe00007efe00040300000180fb000001ba0013fe0000cefe000003fe000080fb00010380bb0014fe0000c6fe000403800001c0fc00023c03e0bb0016fe0010c000001f07c00781f00781c603c07e07f0bb001713001c00c000003f8fe007c3f807c1ef03e0ff07f0bb001713001e00c000003f87e007e3f807c1cf03e0ff07e0bb001713001e01f000003807c003e3f000619f0830e10380bb001612000e01f80000c003000031c01061b70830c183ba001612000e03fc0000c0030000718018e1b30c78c181ba001612000601f80000fc030003f1801ff1b30ff8c080ba001612000601f800007e030007f1801fe1b30ff8c081ba001612000600c000003e030007f1801fe1b30ff0c181ba001713000600c000003f03000ff1801fc1b30f80c18180bb001713000600c000000303000871803801b30c00c08180bb001713000600c000000183081871863801bf0c00c18198bb001713000f00c000000301d801f0ce1fe1bb07f0c180f8bb001713000f00c000007f01f807f07c0ff1fb07f8c180f0bb001713000f80c00000ff00f007f0780ff1bb03f84080f0bb001713001f80c00000ff00f007f03807e01303e0000070bb000e01000ffd00053e0060004030b30002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70014be000a0200005fdcffecebf177effdff00fefa000fcd000101e0fd000001eaff00fefa001bdb00098040000bf7032ffffffcfd00023fffc0fe00000fe9fffa001ee900057b809fffff9ff0ff00fefd00027fffc0fe00000febff01f0fffa002ef70002701b80fd000203fff0fe000001eaff00fefd00027fffe0fe000a0fff84fefc0000e0c00004f4000007fa002bfc000007fbff00e0fd000207fff8fe000003efff05fdffff201bfefd0002c000e0fe00000cea000003fa002efc000007fbff00e0fd00020ffff8fe000003feff03f26a7fe0f1000006fe000301800070fe00000cea000003fa0027fc00000ffbff00f0fd00021e17f8fe00010180eb000006fd0002800030fe00000cea000003fa0033fc000308005fe0fe000038fd000218000cfe000001ea000002fc00018018fe00000cfb00030c000002fa000004fc000003fa0032fc000018fb000038fd0002380004fe000003ea000006fe000303018018fe00000cfb00030c000003fa000006fc000003fa0036fc000030fb00001cfd0002300006fe000003f2000018fa000006fe00030301801cfe00000cfb00030c000003fa000006fc000003fa0039fc000030fe00030e00000cfd0002600003fe000003f2000008fa000006fe00030600c00efe00000cfb00030c000002fa000006fc000002fa0035fc0007200001000e00000efd0002600003fe000003ea000006fe00030e00e006fe00000cfb00030c000003fa000006fc000003fa003afc0007600001000f000006fd0006c00e0180000003ea000006fe00030c006006fe00000cfb000c0e000007c00600000700f00fc0fd000003fa0040fc0000e0fe00030f800003fe000701800c00c0000003ea000006fe00030c003006fe00000cfc000dfc1f801f07e01f031c0f81f80fc0fd000003fe000010fe004afd000101c0fe000323800003fe000701801800c0000003f4000501e00000403efd000002fe00030c003806fe00000cfc000dfc1fc01f07e01f039c0f81fc1fc0fd000003fe000010fe0054fd00010180fe000321800003fe000701801800c0000001fd000e0c00001f001e07803f03f03801e07ffd000006fe00070c0038060000040cfd000e01fc1fc01f07e01f83fc1fc3fc0fc0fd000003fe000018fe0053fd00010180fe000320000003fe000701801000c0000003fd000e1f000c3f813e07c07f07f03803f07ffd000b020000180c0038020000070cfd000d03c00f0000878041c37c10e38607fc000002fe00001cfe0054fd0008018000038020000003fe000701802000c0000081fd000f1f02043f81fe07c07e03f03803f07f80fe00060200001c000038fe0001070cfd000d03000c0000c70060c24430630206fc000003fe00003cfe0055fe00140201800007802000000300000103802000400000c1fd000f3f00103c01f000601808001800186080fe00060200001c000018fe0001078cfd000d03000c0000c3007fc24c3fe30204fc000403c207fdfefe0050fe000603018000078078fc00080383002000200000e3fd000f6181303061c010200008001804186080fe000b0300001c30001800c0280ffcfc000c780c000fc3007fc2cc3fe30204fc000003fdfffe0053fe000603c000000380fefe000ac0000386002000200001e3fd000f6181b03063c01860000c001804186080fe000003feff03f0001801feff00fcfd000d01f80c001fc3007fc26c3fe30206fc000003fdfffe0055fe000603c200000180fefe000bc00003c6002000300001f780fe000f7f80f03063801fe03807c0180c1860c0fe000003feff03f0003800feff00fcfc000cf80c001fc3007f826c3fc30206fc000403fffc23fffe0055fe000603c6000001807efe000b700007fe0020003ffe7fff80fe000f7fc0e03063801fe03c07e0080c0860c0fe000003feff03f0003001feff00fcfc000c7c0c003bc3007002663c010206fc0004038000003efe00560900001f87fe000001807cfe00feff04fe0020003ffeff0080fe000f7f80e03063001fe03e03e0080c0860c0fe000b03f8d0fff0006001f0000f9cfc000d040c2060c31860024c3001060630fd000003fe00001cfe00540000feff05fe0000018030fe00feff04fe0020003ffefffd000f7f80703fc3001f001e0030080c0860c0fe000b0300001e300060018000078cfc000d0c0c2020c33820026c00030207b0fd000003fe00001cfe00550000fdff040000018020fe000a7ffffffe001000383efbfffd000f7100f03fc3001800020030180c0860c0fe000b0700001c300040018000078cfc000dfc00e03fc0f81fc26c0fc30203e0fd000003fe00001cfe00560000fdff040000018020fe000a600007c6001800300001e3fd00046000b83f83fe00070300301c041860c0fe000b0600001c1800c0030000070cfd000e03fc03c01fc0f01fc26c0fe38203e0fd000003fe000018fe00560900fc0003ff0000018060fe0005400003c60008fd0000e3fd000f3c01183f030005003e03f03c07f060c0fe000b03000018080080030000060cfd000e03f803c01fc0e01fc26c0fe10201c0fd000003fe000010fe004ffe000603c60000018030fc000303c30008fd0000e3fd000f3f820c30030007e0fe0fe03e03f060c0fe000b060000180c0000020000060cfd000e03f803c00f80600f800403800001c0fd000003fa0042fe000e03c3000003c0300000010000038180fd000101c3fd000e3fc60430030007f0fc0fe03e03e060fd000006fe00030c000006fe00000cfa000080f2000003fa003efe00140383800007e0200000018000030180020080000083fd000d1f820030000003e0fc0fc01e01c0fc000002fe00030c000007fe00000cea000003fa0034fe00090301800007e020000003fe000701800000c0000083fd000305000030f2000002fe00030c000006fe00000cea000003fa0031fe00050301800007c0fe000b038000000180000040000003fa000030f2000002fe00030c000006fe00000cea000003fa002cfd000301800001fd000b038000000180000040000003fa000030f2000002fe000006fb00000cea000002fa0027fd00010180fb00050380000001c0fc000003ea000002fe000303000008fe00000cea000003fa0025fc000080fb000007fd0000e0fc000001ea000006fe000303000018fe00000cea000003fa0021f5000006fd000060fc000001ea000002fe000301800038fe00000cea000007fa0025fc000060fb000006fd000060fc000001ea000006fe000301800030fe00000cea00000ffa002dfc000070fb00000ef7000001ea000006fb000070fe00000efd000dbcf00003dffe7e7fffe07ffff3f9fbfffa0022fc000030fb00000cfd000010fc000001ea00000efd00023fdce0fe00000fe9fffa0031fc000038fb000018fd0002180004fe00010180fa000040fd00040ffff8e47ffcff00fefd00023fffc0fe00000fe9fffa0034f5000018fd00020e000cfe000301fee0efedff00fefd00023fffc0fe000007f9ff00f7feff0b9ffffe1cefffe040ffffc004fa002bfb00067c8c007ffffff8fd000207fff8fe000001eaff00fefd00021fffc0fe000703800003f0000009e9001efc000007fbff00f0fd000207fff8fe000001f0ff06f880fffc0003fed7001dfc000007fbff00e0fd000207fff8fd00097ffffff387fbe00001f8c9000ffc000003fbff00e0fc0001f3e0bb0002a70002a70002a70002a70002a70002a70002a70002a70002a70000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1045{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw171\pich42\picwgoal3420\pichgoal840\macpict\bliptag-831767515\blipupi72{\*\blipuid ce6c3c251f185c587296343bc8db6915}105000000000002a00ab001102ff0c00ffffffff000000000000000000ab0000002a00000000000000a101f200163842494d000000000000002a00ab4772897068af626a001e0001000a00000000002a00ab0098005a0000000000b102c90000000000b102c900000000002a00ab000002a70002a70002a70002a70002a70002a70002a70002a70002a70015fe000006fd0000f0fa000380000060fa0000c0c30017030000800ffd0000f0fb00040180000060fa0000c0c30018040001800f80fe0000f0fb00040180000060fa0000c0c30017fe00011f80fe000070fb00040180000060fa0000c0c30017fe000139c0fe000030fb000401800000e0fa0000c0c30019fe00013880fe000030fb000401c00000f0fc00020801e0c3001e0300020030fd00133000e01c000007c3f001e0fc01c06300e03f01f8c3001f1b0003803000000f803007f03e00000fc3f803e1fc03e0f781f07f83f8c3001f1b0003c03800000f803007f07e00001fc3f803f0fc03e0ff81f07f81f8c3001f1b0003c03e00000fc03007f03f00001c01f001f0f803f0ff80783081f0c3001f1b0001807f000001e03000008380006001c00018600010df80082040c0c3001f030001807ffe0014e0300800c380006001c00018600038cd80186040c0c3001f1b0001807f000019e0380b00ff80007e01c000f8600ff8cd83f86040c0c3001f1b0001807c00003fe0300fc0ff80003f018001f8e00ff8dd87fc6060c0c3001f1b0001803000003fe03007c0ff80001f018003f8e00ff0dd87fc6060c0c3001f1b0001803000003fe03007e0ff00001f818003f8e00ff0cd87f86060c0c3001f1b0001803000003fc03001e0e0000001c1c00038600c00cd860060e0c6c3001f0b0001803000001000300030c0fe000cc1c60438630800df840060e006c3001f1b0001803000001000700070f8000007c0fe07f87f03c0df83f060e00ec3001f1b0003c03000001fc07c07f07f00003f807c03f81e07f8dfc3fc60e03cc3001f1b0003e03000001fe0fc0fe07f80007f007803f83e07f8df83fc60e03cc3001f1b0003e03000000fe0fc1fe03f80007f007803f81c03f08981fc004038c3001c180003e01000000fe0380fc01f00007e001001e00001f00000f8c00007fb000101c0af0002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a7001cc70012400c0001f20004bfb8001fffffe2bfffde3f3ffeff00e0f80018d900027ff806feff00effdff00fcfd00007feaff00e0f80022f6000a0e2000055d80000ffe0e8ffaff00c0fa00003ff4ff00fcfd00e9ff00e0f8001cfc00e9ff00c0fa00003ff4ff00fcfd00f3ff02bffffbfaff00e0f80027fd000001e9ff00e0fa00003ff4ff00fefd0007fffe40013f000007fe0002080003f7000060f80023fd000001ecff03fc7fffe0fa00040a5ffe0001fa0002020007fd0000c0ea000060f80027fd000d01f7fff9dc7fff0003ff40000f9cf60000c0fa0000c0f4000003fd0000c0ea000060f8001dfd000101c0ea0000c0fb00010180f400010380fe0000c0ea000060f8002cfd00010180ea0000c0fb00010180fc00001cfa000101c0fe0000c0fb000380000060fa0000c0fc000060f80033fd00010180fe000003fa000010f60000c0fb000003fb00001cfa000101c0fe0000c0fb000380000060fa0000c0fc000060f80036fd000601800000400780fe000360000010f60000e0fb000003fb00001cf90000c0fe0000c0fb000380000060fa0000c0fc000060f8003bfd000601800000c00780fe000360000010fa000020fe0000e0fb000002fb00001cf9000060fe0000c0fc00040180000060fa0000c0fc000060f8003bfd0006018000004007c0fe000360000010fa000020fe0000e0fb00000cfb00000cf9000070fe0000c0fc00040180000060fa0000c0fc000060f8003dfd00010180fe000103c0fe000360000010fa000020fe0000e0fb00000cfb00000cf9000070fe0000c0fc000401e00000f8fc00020200f0fc000060f80044fd00010180fe000108e0fe000360000010fa000070fe0000e0fb00000cfb00000cf9000070fe0000c0fd000d0fc3f001e0fc01e06180f03f81f8fc000060fb00021800004bfd00010180fe00010860fe000378000038fb00018078fe0000e0fb00000cfd000601e00c00fc0f80fd000470000060c0fd000d1fc3f001e1fc03e073c1f83fc1f8fc000060fb00021c00004ffd001501800001c008000003e0fc00f07e00f000e0780fc0fcfe0000e0fc0001080cfd000603f00c01fc0f80fd000430000060c0fd000d1fc3f001e0fc01f07fc1f83fc1f8fc000060fb00021c00004efd0015c1800001c018000007f0fe00f87f01f838e07c0fc0fefe000040fc0001080cfd000603f00c01fc1fc0fd000430000070c0fc000c01f00018f000b87fc3003060f0fc000070fb00021e00004efd0015c1800001c01800000ff0fe00f87f01f839e07c0fe0fcfe000040fc00010c18fd000603f80c000007c0fd000418000078c0fc000c01c000186000186fc2003060c0fc000070fb00021e000051fd0015e1800001e01f00000fe0fc003c3e000c3fe0060f7070fe000040fc00011c30fc0001180cfe0000c0fd000418000078c0fd000d300180001860041865c20c2060c0fc000078fe00051800003f00004dfd0015e1800000c03f8000180060000438020c37e106183020fe000060fc00011e30fd000604380c000030e0fd00041c00007fc0fd000c3e018000fc600ff86cc3fc2060fb00003ffaff01000050fd0015f3800000c03f8000100060000c30060c26610e183020fe00077080000036001ff0fd000607f80c01f03fe0fd00041fffdfffc0fd000d3f018001fc600ff86cc7fe306040fc00007ffaff0180004efe001601ff800000403f0000038060003e3807fc2663fe183020fe00007ffbff00f0fd000607f80c01f83fe0fd00001ffeff00c0fd000d1f018001f8600ff86cc7fe3060c0fc00007ffaff0100005301003ffeff14800000e01e000007c06000fe3807fe3763ff183030fe00007ffbff00f0fd000607f80c01f83fe0fd00001ffeff00c0fd000d0e01800038600ff06cc3fc3060c0fc00097879fc038018101f00005201003ffeff14800000e018000007c06000fe3807fc3363fe183070fe00007ffbff00f0fd000607f80c007c3f80fd00041fff80f9c0fc000cc0840018600c006cc2003060c2fc000370000001fe00021e00005301003ffeff14800000e018000007e06000fe3807fc3763fc183020fe00077201ffffc007fff8fd0004060004000cfb000418000078c0fc000cc08e0418600c006ec2003060c6fc0009700000038000001e00005401001ffeff04800000c018fe0017f061000e3007003763801830238000006000000700001e38fd000404000c000cfb000418000078c0fd000d03c01c07fc7e0fe06fc3f830604efc0009700000038000001c000054fd0005f1800000c018fe00177063000e3082003661801830338000006000000700001e18fd000605f00e00fc0fc0fd000438000070c0fd000d3f803c03fc3e03f86fc1fc30603efc000970000007c0000018000054fd0005f1800000e018fe000cf07f003e1f80fc3760fe18301ffe0007c000000300000c18fd000603f81f03f80fe0fd000430000060c0fd000d7f003803f81e03f86ec1fc30603cfc000970000007c0000018000051fd0015e1800001f01800001fe03e00fe0f81fc3660ff18301ffe00076000000300000c0cfd000603f81f03f80fe0fd000470000060c0fd000d3f003803f81c03f800c0fc00203cfc00046000000fe0fc004efd0015c1800001f01800001fc03e00fe0f81fe3260ff18301efe0007e00000030000080cfd000603f81f03f00fc0fd000030fe0000c0fd000a0e00300060000070000038f900046000001ff0fc0040fd0015c1800001f01800001fc01e00fe0f01fc22607f00000cfe0007e00000030000080cfd000601f80200200380fd000070fe0000c0ea00047000001ff0fc0030fd000401800000f0fe00070f8000001c020060f80003e0000007fe00000cf2000070fe0000c0ea00046000000fe0fc0022fd00010180ea0003e0000003fe00000ef2000070fe0000c0ea00043000000380fc0021fd00010180ea0003e0000003fe000006f20000e0fe0000c0ea000360000003fb0021fd00010180ea000340000003fe000003f20000c0fe0000c0ea000360000003fb0021fd00010180ea000360000003fe000003f20000c0fe0000c0ea000360000003fb0022fd00010180ea000360000003fe000001f300010180fe0000c0ea000360000003fb0022fd00010180ea000360000003fe00010180f4000003fd000040ea000360000003fb0025fd00010180ea000340000003fd0000c0f4000003fd000040ee00070fc00001e0000003fb0027fd000101c0ea0003c0000007fd0000c0f70003300007fefd0003ff6ffffdedff03e0000003fb0024fd000101c0ea0003c0000007fd00017feffdff00effaff00fefd00e9ff03e0000003fb002afd000c01f88009ffe180ffffe1fffffef5ff03e0000007fd00007ff4ff00fefd00e9ff03e0000003fb0030fd000001e9ff03e0000003fd00003ff4ff00fcfd00fbff11e3fffffe737ef8001fffc000fef80103fbe0fe000003fb001dfd000001e9ff03e0000003fd00003ff8ff048023fff810e2000003fb001bfc00f0ff0ae1e1ffc0003fff80000003fc000107f8d6000003fb0017fc000901ffe0000018000008e0f0000003cf000003fb000ae1000003cf000003fb000ae1000003cf000003fb000ae1000003cf000003fb000ae1000007cf000003fb000ae1000003cf000003fb000ae1000003cf000003fb000ae1000003cf000003fb000ae1000003cf000003fb000ae1000003cf000003fb000ae1000007cf000003fb000ae1000007cf000003fb000ae1000007cf000003fb000ae1000007cf000003fb000ae1000003cf000003fb000ae1000003cf000003fb000ae1000003cf000003fb000ae1000003cf000003fb000be1000003cf00010380fc000ae1000003cf000003fb000ae1000003cf000003fb000ae1000003cf000003fb000ae1000003cf000003fb000ae1000003cf000003fb000ae1000003cf000001fb000ae1000003cf000003fb000be1000003cf00010380fc000be1000007cf00010380fc000ae1000003cf000003fb000be1000003cf00010380fc000ae1000003cf000003fb000be1000003cf00010380fc000be1000003cf00010380fc000be1000003cf00010380fc000be1000003cf00010380fc000be1000003cf00010380fc000be1000003cf00010380fc000be1000003cf00010380fc000be1000003cf00010380fc000be1000003cf00010380fc000be1000003cf00010380fc000ae1000003cf000003fb000be1000003cf00010380fc000be1000003cf00010380fc000be1000003cf00010380fc000be1000003cf00010780fc001ce1000003e9000e0187f80cfe6fc58cfffc11fffff9eff5ff0080fc0010e100010380f8000119cfdaff0080fc0008e1000003cefffb0015e1000003daff00fafeff07f86ffffa1f7fff84fb0016e1000003f2ff0cfbffffefdfffe040fff000000ce4000bdf000507ffd0007ff8cf0002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a7000000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1046{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw169\pich30\picwgoal3380\pichgoal600\macpict\bliptag-560909478\blipupi72{\*\blipuid de91335a649909a62b464c060fa5ebb2}0df800000000001e00a9001102ff0c00ffffffff000000000000000000a90000001e00000000000000a101f200163842494d000000000000001e00a94772897068af626a001e0001000a00000000001e00a90098005a00000000007d02c100000000007d02c100000000001e00a9000002a70002a70002a70002a70002a70002a70002a70005010006a9001001000ffa000320000010fa000030bc001001000ffa000320000010fa000030bc0011020007c0fb000320000018fa000030bc0011020011c0fb000330000018fa000030bc0011020011c0fb000330000018fa000038bc001805001080000040fe000b7e00003f001000403c03c07ebc001814001000f013e00003f0fe00783f00f81ce07c0fe07fbc001814001801f033f00003f0fc00f83f00f81ce07c0fe07fbc001814003e01f03fe00003f0fe007c3f01f83fe0fc0ff03cbc001814007f03e03f800002407c00023802341ff1800c3838bc001814007f07003c000008003000061802041b71800c1830bc001814007f07003c00000c0030000e18030e1361fe0c1830bc001814007e06043c000007c03000fe3803fe3361ff1c1830bc0018140030060438000007e03000fe1803fe3361ff0c1030bc0018140030060630000007e03000fe1803fe1371ff0c1030bc0019150038060430000003f070007e1803f01371c008183180bd0019040038060c30fe000d7031810618c300136180081831c0bd0019040038020c30fe000d7033810618c20013618008101f80bd001814003800fc30000007f01f01fe0780fc3b707e0c181fbc001814003801fc3000000fe01f00ff0781fe3bf07f1c180fbc001814003001f83000001fe00e00ff0700fe3b707f1c180ebc001612001001f83000000fe00e00fe0700fe13003e08ba000bfe000030fe00010f80b00002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70012c7000307ff377ffaff03fc7fffbff7fffa001dde000c802400f38829fffc340fffebf0fd00017ffffd00001fe9fffa001eef00000afd000507ff9f3ffffbefff00f8fd0001fffffd00001fe9fffa0032fc00010ffefcfffc00021fffe0fe000007eaff00fcfd0002ffff80fe00001ff7ff0dfe23e0fffff01ffffcfe7fff7867fa0026fc00001ffbff0080fd00021fffe0fe000007eaff00f8fd0002307fc0fe00001fea000003fa0038fc00001ffbff00c0fd00021ffff0fe000007feff0de3dffff1c0fffe9e033de0000012fb000038fe0003010000c0fe000018ea000003fa0027fc00001ffbff00c0fd000203fcf0fe000006ea000008fe000303000060fe000018ea000003fa002ffc000060fb0000e0fd0002600018fe000006ea000008fb000060fe000018fb000308000006fa000004fc000003fa0035fc000060fb000060fd0002e00018fe000006ee000060fe000008fd0002030030fe000018fb000318000006fa000006fc000003fa003bf5000030fe000301c0000cfe000006fe000003f7000010fd0000f0fe00001cfe000304030038fe000018fb000318000006fa000004fc000003fa0042fc00028000e0fd000030fe00030180000cfe000006fe00010780f8000010fd0000f0fe00001cfe00030c030018fe000018fb000318000006fa000006fc000003fa0042fc00028000e0fd000038fe000301801806fe000006fe00010780f8000010fd000070fe00001cfe00031c01801cfe000018fb000318000006fa000006fc000003fa0043fd0003018001e0fd000018fe000301001802fe000006fe000119c0f8000010fd000070fe00000cfe00031801c00cfe000018fb00031c000007fa000006fc000003fa0049fd0003038001f0fd00000cfe000302003003fe000006fe000118c0f8000038fd000030fe00000cfe00031800c00cfe000018fc000df81e001e0fc00000180700f00fc0fd000003fa0052fd000303000310fd00000cfe000306002003fe000004fe00010840fc000020fe00003cfd000020fe00000cfe00031800e00cfe000018fd000e01f83f003f0fc01e073c0f81f80fc0fd000003fe000018fe0054fd0002030003fc00000cfe000306000003fe000006fe001008007003e00003f03c07e07f007c0f8030fe00000cfe00031800700cfe000018fd000e01fc3f803f0fc03f07bc1f83fc1fc0fd000003fe000018fe0056fd000807000300060038000cfe00070600000300000204fe00101800f803f00007f07e0fe07f027c0f8070fe000b0c0000203800700c00000818fd000e03f83f001f0f801f07fc1fc3fe0fc0fd000003fe00001cfe0055fd0013070003001f027c000e0000040600000300000204fe00101c00f817f00007f07e0ff07f07fc0fc070fe000b0c0000303800700600000c18fd000d02001e000087000184fc3043860ffc000003fe00001efe0056fe001404070003001f07fc000e0000040600000180000304fe00103f01fc3fe0000fe07f0ff03c07f807c070fe000b0c0000386000600300000f18fd000d060018000186000184cc30c30606fc000003fe00001ffe0056fe000d06060007e01f07fc00070000060cfe000380000386fe00103f021c3c00001800c10c1830078020c070fe000b0c0000386000600300000f38fd000d03c01800038600e784cc3fc30706fc000403ff7ffffffe0056fe000d0700000fe0008780000300000f1cfe0003c0000386fe00103f83043c00001800c10c18300780606070fe000b0e00207de0006003ffff9ff8fd000d03f018001f8600ff84cc3fe3060efc000003fdff0280000056fe00140f88000ff040c780000380000f1c008000e00003fefe00103f03043800001800c10c18300780706070fe00000ffeff03e0007003feff00f8fd000d03f818003f8600ff84cc3fe30706fc000003fdff0280000056fe00148ffc0007e040c7000003f1881ffc008000fffbfffefe00101c03043000001801c10c18300700306070fe00000ffeff03e0007003feff00f8fd000d01f008003f8600ff84cc3fc30606fc000003fdff02800000570000feff08fc0003e040c7000003feff03fc008000feff00fefe00101802063000001801818c18300600306070fe00000ffeff03e000e003feff00f8fc000d181800038600c004cc3003060630fd000403e000001ffe00570001feff08fc0003006086000003feff03fc008000feff00fefe00101803063000001801c18c18380600706030fe000b0f80007fe000c00380001f38fc000d1818604186100006cc2003020630fd000003fe00001efe00570001feff08fc00030060c6000001feff03fc006000feff00fefe00101803063000001801c18c1838860030e030fe000b0c00003ce001c00300000f18fc000d181ce043c6300006cc3c03060730fd000003fe00001efe00581701ffc3bffc00030060c600000180041fbc007000c00007cefe00101803063000001800c30c1839c60030e030fe000b0c0000387001800700000e18fd000e03f807c03fc1e03f86cc1fc30707e0fd000003fe00001cfe0057fe00140f9c00030061c600000300000f1800300040000384fe001018030e3000001e40ef0c181f86003fe078fe000b080000303003000600000c18fd000e07f807803fc1c03f86cc1fe30603e0fd000003fe000018fe0057fe000f0f0c00030061c600000100000f080030fe00010386fe00101801fc3000000ff07f0c180f86001fc0f8fe000b080000203803000e00000c18fd000e07f007801f81c03f804c0fc00201c0fd00040380000018fe0050fe00060f0e0003007f86fc00030e040018fe0001030efe00101800fc30000007f07e0c180f06000f80f8fe000b0c0000203803000e00000818fc000960030007008005000003fe000040fd000003fa0041fe00140e060003003f0600000400000c0600180300000306fe00021800f8fe000a07f03e0c000706000f00f8fe00000cfe00033800000cfe000018ea000003fa0035fe00140e060003003f0600000e00000c0600180300000206fc000070fd000060f500000cfe00031800000cfe000018ea000003fa002dfe00010407fe00001efe00000efe000306000003fe000006ea000008fe00031800000cfe000018ea000003fa0025fd000007fa00000cfe000306000003fe000006ea000008fe00001cfb000018ea000003fa0028fd000007fa00000cfe000303000003fe000006ea000008fe00030c000010fe000018ea000003fa0024fd000003f6000303800004fe000006ea000008fe00030e000030fe000018ea000003fa0029fd00010180fb000010fe000301800004fe000006ea000008fe000306000070fe000018ea000003fa0026fd000101c0fb000010fe000301800004fe000006ea000008fb000060fe000018ea000003fa002dfc0000c0f6000060fc000006ea000008fb0000e0fe000018f9000002fe000310000008fe0004100100ffdffa0024fc0000e0fb000020fd0002600018fe000006ea00001cfd0002731bc0fe00001fe9fffa0035fc000040fb000060fd0002600018fe000006fb000d1fc0000f1f7fe03fffe3fdffff7ffeff00fcfd0002ffffc0fe00001fe9fffa0024fc000002fb0000e0fd00021e2ff0fe000007eaff00fcfd0002ffff80fe00001fe9fffa0038fc00001ffbff00c0fd00021ffff0fe000007eaff00f8fd00027fff80fe00161fff1ffff803ffffc0800ffe00003ff000063fc0007ff8f8001efc00001ffbff00c0fd00023fffe0fe000007f0ff068d7ffffff7fff0d7001efc00001ffbff0080fd00021fffe0fe000a015ffff0001fff80007ff8c90011fc00060dc1fffe0f0ffffb00011080bb0002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70002a70000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1047{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw240\pich41\picwgoal4800\pichgoal820\macpict\bliptag626036301\blipupi72{\*\blipuid 25508e4dcb8cc469e327f337a1f23d37}167800000000002900f0001102ff0c00ffffffff000000000000000000f00000002900000000000000a101f200163842494d000000000000002900f04772897068af626a001e0001000a00000000002900f00098007e0000000000a903e90000000000a903e900000000002900f0000002830002830002830002830002830006f0000008950006f000003c95000e02000380f8000008fd00003c95000e020007c0f8000008fd00003c95000e02000fe0f8000008fd00001c95000e02000fe0f800000cfd00001c95000f02000c60f800051c000600001c95001511000c000800e00001f80601f81f801f03c01c950015110008007c01f00001fc1f03f83f801f07e01c95001511001c007c0ff00003fc1f83fc1f819f07e00c95001511001f007e0ff00003f81f83fc1f01c000400895001511003f80060f0000060000c30e0c01c008000895001511003f80021e00000e0000c7060c03c008000895001511003f81031e00000e006047060803c018100895001511001f81031c00000e0060c3060c018018100895001511001e0103180000060060c7060c03801c301895001511001c0183180000060060c7060c01801c101895001511001c010318000004002047060c218018101895001511001c0183180000040060c7060c618008301c95001511001c01871c0000060063c7060fe38001f03c95001511001c01fe1c000003fc3fc60607c38007e03e95001511001c00fe1c000003fc1f870607c38007e03e95001511001c00fc18000001fc1f020407818003e03e95000bfe000078fd0001780f8d00028300028300028300028300028300028300028300028300028300028300028300028300028300028300028300028300028300028300028300028300028300028300028300028300028300028300028300028300028300028300028300028300028300159d000b010ec1047fef7f8fffc7003ffdff00f0f80010af000203ffe0fa00000feaff00f0f80022cb0006eff0080fffdbe1feff00c7f8ff00f0fa000207ffe0fa00001feaff00f0f80022d900021fffc0fa00003feaff00f8fa00020ffff0fa00003feeff04effffeeff0f8003bf3000703800000d6782e3ff7ff00e0fa00021fffe0fa00007feaff00f8fa000207fff8fa00003ffdff06e23ffff0001bfefe0000d8f9000030f80033f900001feaff00f0fa00021fffe0fa00007ff9ff0f7ffffff9fffc0804bbff80fffe0801f8f8000018fa00003cea000030f8002df900003feaff00f0fa000207ffe0fa00037900fa70fc000002f3000018fa0002300018fa000030ea000030f8002df900003ff1ff07f94f7f7802073ff0fa0002400070fa000070ea000010fa0002300018fa000030ea000030f80037f9000c3fffffc91fffc00039fc000028f6000070fa0002400010fa000060ea000018fa000260000cfa000030f300010180fa000038f8002af9000038ea000070fa0002400018fa000060f2000060fa000018fa0002c00006fa000030ea000038f8002bf9000030ea000030fb00030100000cfa000060f2000060fa000018fa0002c00006fa000030ea000018f80031f9000030f300010180fa000030fb00030100000cfa000060f2000040fa000018fb000301c00002fa000030ea000030f8002bf9000030f300010180fa000030f8000006fa000060ea000018fb00040180000180fb000030ea000030f80037f9000030f300010180fa000030fb000304000007fa000060e300040180000180fb000030f40005180000080060fd000030fb00020400003cf9000030ea000030fb000306000003fa000060e300040100000180fb000030fe000f01c04003e007c0f807e07f03803e07f0fd000030fb00020400004ff9000030ea000060fb000306000003fa000060f9000a01c07801f00701c00700f8fd000010fc0005020100180180fb000010fe000f03e0c187f027c0f80ff07f03803f07f0fd000038fb00020e000055f9000030ea000030fb000306000001fa000060fe000f03e04003f003e07c03f83f81e00f81f8fd000018fc0005020100180180fc00011830fe000f03f06187f87fc1fc07e07f03807f87f8fd000030fb00020e000063f9000030f700083000c03f01001c03e0fd000020fc00040806000003fb00013060fe000f03f04087f837e07c03f83f81e00f83fcfd000018fc0005020300100080fc00011c30fe000703f02107fc7c01fefe0004018043871cfd000030fb00020f000069f9000030fe000f01c00003f003c0f807e07f03801f07f0fd000020fc00040c04002003fb00013060fe000f03f06007f83fe07e03f03f01e007c3eefd000018fc000003fd0000c0fc00010c30fe000f043830061c7803861000000180c1861cfd000038fb00020f00006efa00011030fe000f03e04087f007c0f807e07f07803f07f0fd000020fc00050c0400000180fc00013860fe000707f831020c3f8002fd0003e000e306fd000018fc00010304fe000060fc00011c30fe000f0c383e040c78038e1801800180c1841cfd00093c0001198001feff80006bfa00011030fe000f03e04187f03fc0f807e0fe03801f87f8fd000020fc00050e1800000180fc00013c60fe00080c181302043c000708fe0003e0006306fd000018fc0001078efe000060fc00013e70fe000f0ff81e060c7003fe0f80f80180c1841cfd00003ffaff0180006bfa00011830fe000501f02307007efd0005800380c1860cfd000020fc00010e18fe000080fc00013c60fe000f0e381e02063801ff00000800e0206306fd00071e0fffc0b87ffffefe00007ffbff00f0fe000f0ff81c060c7003fe0fc0fc0180c1841cfd00003ffaff01c0006afa00011c30fd00043037060038fe000601800180c1840cfd000030fc00011f38fe0007e3800000bfffffe0fe000f0ff80e02060001fe07c03e00e0206302fd00001ffbff04fc0010007ffbff00f0fe000f0ff80c061c6003fe0fc07e0180c1860cfd00003ffaff01800069fa00013c70fe000f08380706007801041800e00180c1860cfd00003ffbff00f8fe00faff00e0fe000f0ff80c020c0001ff07e03e0040206303fd00001ffbff04fe0018007ffbff00f0fe000f0ff01e07f86003fe03e03f0180c1860cfd00093bf00001c000000f80006ffa00013ff0fe000f0ff80e06007003fe0f80fc0180c1860cfd00003ffbff00f8fe00faff00e0fe000f0ff80e030c0001fe01e03e0040206307fd00121ffbb9bfffcfc7fe0018007f8000fffcc01ff0fe000f0f001e07f86003800060070180c18e1cfd0009300000018000000f0000770800fe7cfffffdfffff0fe000f0ff80c06082003fe0f807c0180c18608fd00003ffbff05f8002000ffaffcff00e0fe000f0ff00e07f80000800070000040306306fd00121c000001c00007ce0018006000000600001e30fe000f0e003e07f060030000600701c0c18e1cfd000930000001c000000f0000780000faff00f0fe000f0ff80c060c2003fc07c07e0180c0840cfd0009380c7fffc001fff80060fe0005200c00007fe0fe00050c001707f820fe000630000040306306fd000008fe000ec00003860018006000000600001c30fe000f0ff03207f06003fe0fe0ff03c07f0e1cfd000930000003e000000e00007801007ffbff00f0fe000f0ff01e07f82003f003c00e0180c1840cfd00093000000200000f180060fd00040c00003c60fe00050e001307f020fe0006300100e030e307fd001218000001e0000386003000c000000600001c30fe000f07f8600f807001fe3fe1fe03e03e0e0cfd000930000003e000000e00007b08001ffff03fffff7ff0fe000f0c003f07f06001000020030180c1840cfd00092000000300000e000060fd00040c00003c60fe000f07e03187e03000fe07f03f01f019c307fd001218000003e00003030060018000000600001c30fe000f03f8e18e007001fe3fc1fe07e03e040cfd000930000007f0000004000074fd00040600003e70fe000f08003707f060010000600201c000840cfd00093000000380000e0000e0fd00040c00003860fe000f03f86086003000fe1fe07e01f00f8306fd001218000003e00002030060018000000600001830fe000d03f8408e006000fe1fc1fc03c01efb000438000007f0fc006efd00040600003c30fd000ef03207f06000fc0fe07e03c01e060cfd000a3000000780000c0400c003fe00040c00003060fe000f03f860c2002000ff1fc07e01f00f8102fd000e18000003f000000300000180000006fe000030fd0002f0000efe00016004f600043000000ff8fc0063fd00040600001c30fe000f03f80087006000fe1fc1fc03e03f060cfd000a20000007c0000c06008003fe00040c00001060fe000301f80006fe00033e00807cf8000e18000007f800000100000180000006fe000030fb00000ef1000430000007f0fc0059fd00040600001830fe000f07f84086006000fe1fc1fc03e03f000cfd000a2000000fe0000006000003fe00000cfe000060fb000006f1000e18000007f800000100000180000006fe000030fb000006f1000430000003f0fc0053fd00040600001030fe000303f04086fe00067c1f80f803c006fb000a2000000fe0000006000003fe00000cfe000060fb000006f1000e18000007f800000180000180000006fe000030ea000430000001c0fc0045fd000006fe000030fe000301e00006f1000a2000001fe0000006000003fe00000cfe000060ea000a18000007f8000001c00003fe000006fe000030ea000430000001c0fc0042fd000006fe000030fb000006f1000a2000000fe0000002000007fe00000cfe000060ea000418000001c0fe0002c00006fe000006fe000030ea000430000001c0fc0042fd000006fe000030fb000004f1000a2000000780000001000006fe000004fe000060ea000018fe0000c0fe0002c00006fe000006fe000030ea000430000001c0fc003efd000006fe000030ea000320000003fe000301000004fe00000cfe000060ea000018fe000080fe0002e00004fe000006fe000030ea000430000001c0fc003bfd000006fe000030ea000330000003fb000004fe00000cfe000060ea000018fe0000c0fe0002700008fe000006fe000030ea000430000001c0fc0047fd000006fe000030ea000370000003f700000cfe000020ea000018fe0000c0fe0002300018fe000006fe000038fa001420f60064ffff7887ffc7feffffeffefff0000001c0fc003dfd000006fe000030ea000320000003fd0002400010fe00000cfe000020ea000018fe0000c0fe00023e08f8fe000006fe00003feaff04f0000001c0fc004dfd000006fe000030ea000360000003fd0002400030fe00000cfe00107e040001c030107be781e0fffdffbffff9faff00f8fe0000c0fe00020ffff0fe000006fe00003feaff04f0000001c0fc0041fd000006fe000030ea0003e0000003fd00023ffff0fe00000cfe00007feaff00f8fe0000c0fe00020ffff0fe000006fe00003feeff08fdffff0dc000000180fc0053fd000006fe000038fc000a01300000020021dfffffc7faff03f0000003fd00023fffe0fe00000efe00007feaff00f8fe0000c0fe00020fffe0fe000006fe000b1ef0003fff0007fb60001ca0f2000101c0fc0044fd000006fe00003ffdff00fdefff03e0000003fd00021fffe0fe00000efe00003ffaff10dffffffa38fffe0103fdf0007fc00001e0fe0000c0f8000006e300010180fc002dfd000006fe00003feaff03e0000003fd00020f3fc0fe00000cfc00017d20e90000c0f8000006e3000101c0fc002dfd000006fe00003ff5ff00effeff0adff9fffc0107ff80000003f700000ce20000c0f8000006e3000101c0fc0028fd000006fe00091ffffdfe3df3e00010c0f0000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000002f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000002f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000002f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ee20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ee20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e300010180fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000002e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ee20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000002e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001afd000006e3000003f700000ce20000c0f8000006e20000c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e3000101c0fc001bfd000006e3000003f700000ce20000c0f8000006e300010180fc001bfd000006e3000003f700000ce20000c0f8000002e300010180fc001bfd000006e3000003f700000ce20000c0f8000002e300010180fc001bfd000006e3000003f700000ce20000c0f8000006e3000107c0fc0028fd000006e3000003f700000ce3000101c0f8000007f6000507ffe5e1ffe7feff00bff7ff00c0fc001cfd000006e3000003f700000ce3000101c0f8000107c1e3ff0080fc0025fd000006e3000003f700000efb000701fff8fedffffff7f0ff00c0f8000007e2ff0080fc002dfd000006e900060880007c0c112ff700000fe2ff00c0f8000007f2ff0dcff3ffffe0cfffc002fffc0003f8f9002afd000007f8000607080001fef3e7f2fff700000fe2ff00c0f8000803fc0e3ffffc803ffffe0000c0e8002afd000507e0003fff7fe7fff7000007f7ff15e105fffe18601ffc0007fec00003f000009d00000780d20015fd000007e3ff00fef70007020007e3000004d0b90014fd000007f1ff0afdc0ffff0181fff0200fafa30011fd000003fcff07fdf01fff84007a70950002830002830002830002830002830002830002830002830000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1048{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw109\pich41\picwgoal2180\pichgoal820\macpict\bliptag-1081313445\blipupi72{\*\blipuid bf8c775b976a3c30f9e1ef7bd2b9c6dc}0b16000000000029006d001102ff0c00ffffffff0000000000000000006d0000002900000000000000a101f200163842494d0000000000000029006d4772897068af626a001e0001000a000000000029006d0098003a0000000000a901c70000000000a901c7000000000029006d000002c70002c70002c70002c70002c70006f5000002d40006f5000002d40006f5000002d40002c70002c7000af6000020fe000004d7001410000780000fc00701e00f80fc06003c0fc0d80014100007c1830fe00f81e01fc0fc0e007c1fc0d80014100007c1870fe01f81f01fc0fc0e007e1fc0d80014100007e0ce0e007f00900b80000601c61c20d80014080018604c0c10700408fe00040601071830d80014100018600c0810f006182000000201021830d8001410001ce01c0810e007f83e00f00201031830d8001410001fe0180810c00ff81f00f80301831830d8001410003fe0380818c00ff81f00f80301831830d8001410003fe0380c30c007f80f00fc0301831830d8001410003c005c0ff0c00e0000800c0301821830d80014100038006c0fe0c00c0000c00e0301871830d8001410001c00c60f80c006f001c03c0781fe1830d8001410000fe1c30c00c003f81f83f80780fc1830d8001410000ff1831c004003f87f83f80fc07c1830d80014100007f1801c000001f87f83f80f807c0010d80010040003e00018fe0004301f000003d40006fd00001ccc0006fd00001ccc0002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70002c70006d0000011f9000ade00003ff2ff00f8fb000ade00007ff2ff00f8fb000ade00007ff2ff00f8fb0015de000b7e094fffc0007fff80007e40fd000038fb000ade0000e0f2000018fb000ade000060f2000018fb000ade000060f2000018fb000ede000060f8000008fc000018fb000ede000060f800000cfc000018fb000ede000060f800001cfc000018fb000ede000060f800001cfc000018fb000ede0000e0f800003cfc000018fb000ede0000c0f800003cfc000018fb0013de0000c0fd000507800007c01cfc000018fb0017de0000c0fd00050f81020fe00cfc000018fe0002c0000018df00012040fd00050fc1820fe00cfc000018fe0002e0000018df00013040fd000517c1c60c300cfc000018fe0002f0000018df000130c0fd00051060ce08380cfc000018fe0002f0000018df000178c0fd000530e06c08180cfc00061c000001f0000020e7000940000033c0001038ffc0fd00053fe03c08100cfc00001ffeff02f800002205003fbeffffc3faff00dfecff00c0fd00053fe03008180cfc00001ffeff02f800001a01007fe0ff00c0fd00053fe0380c300cfc00001ffeff02f800001a01007fe0ff00c0fd00053fc03c0f600cfc00061e01e000f000003301003ffcff00fefbff15e607fffeff07ffe0e00bfc0000010000011e00007dc0fd000510007c0fe00cfc00001cfe0002f0000021040000020007e700040c000078c0fd000510006c0fe00cfc00001cfe0002f000001ffd000006e700040c000038c0fd000502004e0fc01efc000018fe0002e000001ffd000007e700040c00003040fd00050fe08308003efc000018fe0002c000001cfd00010f80e800040c00006040fd00050fe18308003ffc000018fb001cfd00010f80e800040c00006040fd000507e10008003efc000018fb0019fd00011fc0e800000cfe000040fa0002080004fc000018fb0013fd00011fc0e800000cfe0000e0f2000018fb0013fd00011fe0e800000cfe0000e0f2000018fb0013fd00011fe0e800000cfe0000c0f2000018fb0013fd00010780e800000cfe0000c0f2000018fb0012fd000006e700000cfe0000e0f2000018fb0012fd000006e700000cfe000040f2000018fb0012fd000006e700000cfe000040f2000018fb0012fd000006e700000cfe000040f2000038fb001efd000006e700000cfe00106003000001c000003d804600ffe33ffff8fb0012fd000006e700000cfe00007ff2ff00f8fb0012fd000006e700000cfe00007ff2ff00f8fb0012fd000006e700000cfe00007ff2ff00f0fb0019fd000006e700000cfe000b380003bd0000131c00000f80f6000afd000006e700000ce7000afd000006e700000ce7000afd000006e700000ce7000afd000006e700000ce7000afd000006e700000ce7000afd000006e700000ce7000afd000006e700000ce7000afd000006e700000ce7000afd000007e700000ce70016fd000406000005f0fc000207ff07f5ff0200000ce70015fd00050600001fffc0fd00000ff3ff0200000ce70015fd00050600001fffe0fd00000ff3ff0280000ce70019fd00050600001ffff0fd00000ffbff00fefaff02c0000ce70016fd000006fd0000f0fd000230000cf50002c0000ce70015fd0005060000400038fd000030f30002c0000ce70014fd000006fd000018fd000030f3000260000ce7001bfd000006fd00000cfd00036000000efd000070fb000270000ce7001bfd000006fd00000cfd00034000001efd000070fb000230000ce7001cfd0005060001800004fd0003e000001efd000070fb000230000ce7001dfd0005060003800006fe000401c000000efd000030fb000218000ce7001dfd0005070003000003fe00040180000006fd000030fb00021c000ce7001dfd0005060002000003fe00040180000002fd000030fb00021c000ce70021fd0005060002000003fe00040180000004fe0004c03000001cfe00020c000ce70021fd000506000601fe03fe000c0380000006020003e01000103efe00020c0408e70021fd001506000203fe030180000380000002030603f03018303efe00020c040ce70021fd001506000201fe010180000180000006030601f03818303ffe0002060c0ce7001ffd000006fe00037c000380fc000e060306007038181003800000061c0ce7001ffd000006fc000303800006fe000e0603060018381810c1800000071e0ce70021fd0002070018fe0003c7c0000efe000e0603060038381810f780000003bf7ce70021fd000507ff7c01fc00feff00fefe000e06030601f8301810ff80000003fffce70021fd000507fffc01fe00feff00fefe000e02030603f8301830ff80000003fffce70021fd000507fffc03fe00feff00fefe000e06030603f8301830ff80000003fffce70021fd000503fff801fc00feff00fefe000802000e07f8301870e2fe0002073ff8e7001efb000018fe0003e7c0000efe00080600dc0e30301870c0fe0001071ee6001efb00001cfe0003c7c00006fe00080600f8043838187080fe0001071ce6001efb00000efe0003c3800007fe00080f007801f83c0ff03ffe00010e0ce6001efb00070600000181800003fe000d0f807003f87c07f03f8000000c0ce6001efb001806000003018000038000000f806003f87c07b03f8000000c04e6001dfb001307000003008000038000000f000001f07807800efe00000ce50015fb000306000003fe00040380000004f600000ce50012fb000307000003fe00010180f300000ce50012fb000303000003fe00010180f3000008e5000ffb000003fb000101c0f3000030e50011fb000301800004fd0000c0f3000030e50011fb000301800006fd000040f3000030e5000cfa0002c0000eee000060e5000af800001cee0000e0e5000af8000018ee0000c0e50017f8000030fd000907fc00007ec0c1db7d8ffcff0080e50010fa00021ffff0fd00000ff3ff0080e5000efa00021fffe0fd00000ff3ffe4000efa00021fffe0fd000007f3ffe40010f900013fc0fb00053fc000028380dd0002c70002c70002c70002c70002c70002c70002c70002c70000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1049{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw125\pich43\picwgoal2500\pichgoal860\macpict\bliptag2099246866\blipupi72{\*\blipuid 7d1ff712ec6da9516778f98e630424ee}0d4200000000002b007d001102ff0c00ffffffff0000000000000000007d0000002b00000000000000a101f200163842494d000000000000002b007d4772897068af626a001e0001000a00000000002b007d009800420000000000b302070000000000b3020700000000002b007d000002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0006fb0000c0c60006fb0000c0c60007fc000101c0c60007fc000101c0c60007fc000101c0c60007fc000101c0c6000a06007800003e01c0c6000a06007c18307e00c0c6000a0600fc1830ff00c0c6000a06006c0060ff80c0c6000a0601060440c180c0c6000a06018606c0c180c0c6000a0603ff03c08180c0c6000a0603ff0180c180c0c6000a0601fe0180c180c0c6000a0601f803c0ff00c0c6000a06018006e0ff00c0c6000a06018006e0fe00c0c6000a0601fc0ce0fe01e0c6000a0600fe1820fc01f0c6000a0600fe1830c003f0c6000a06007e1800c001f0c60006fd0000c0c40006fd0000c0c40006fd0000c0c40002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0018d7000080fd000e0c04d00000f7600febffc007ffffe0fd001aeb000407fffc413ffbff00dffbff00effeff00dff1ff00f0fd000aeb00003fdbff00f0fd000aeb00003fdbff00f0fd0022eb00003ff6ff14f87fffffc07ffe443bffffd03fffc0000740000010fb0000f0fd000deb00033c000001de000070fd000aeb000030db000070fd000aeb000070db000030fd000aeb000020db000020fd000aeb000020db000030fd000aeb000070db000030fd000aeb000020db000030fd000aeb000020db000030fd0012eb000020e5000401fff8007ffc000030fd0026f400098000303c00001e700020fc000703fe7fffffbfffc0fe000003f1ff0080fd000020fd0020fd00001ff2ff02f80020fc000007fbff00c0fe000007f1ff0080fd000020fd0020fd00003ff2ff02f80020fc00000ffbff00e0fe000007f1ff0080fd000030fd0030fd00003ff2ff02f80060fc00070fffd7fffffc03e0fe000b0ffc0023fff0100fff800006fe0002040380fd000030fd0029fd00123f8005fffe001fff0000fbf00000b800180020f5000030fe00000cf200010180fd000030fd0021fd000030f20002180020fc000030fb000010fe00000cf200010180fd000030fd0026fd000020f20002180020fc000020fb000018fe00000cf8000101e0fd00010180fd000030fd002afd000020f800001efc0002180060fc000060fb000008fe00000cf8000101e0fd00010180fd000030fd002dfd000020f800003efc0002180020fc00076000030018000008fe00000cf8000101f0fd00010180fd000030fd002dfd000020f800003ffc0002180070fc0007c00003001800000cfe00000cf8000101f8fd00010180fd000070fd002ffd000020f800013f80fd00021800fcfd0008018000030018000006fe00000cf800010418fd00010180fd000030fd002efd000030f800010180fd00021801fefd0008018000030018000002fe00000cf7000018fd00010180fd000030fd002efd000020f800010180fd00021803fefd0008038000030010000002fe00000cf7000018fd00010180fd000030fd0034fd000020f7000080fd00021801fefd0008038000030010000002fe00000cfc0005780010fe0018fd00010180fd00043000c000003bfd000020fd000603c00007e00080fd00021800fcfe000902038000030010000002fe00000cfc0005fc1830fe0018fd00010180fd00043000c000003cfe00011070fd000607e0c10fe00180fd00021800f8fe000d060300000300180000020000020cfc0005fc1830fe0018fd00010180fd00042000e000003cfe00013070fd000607e0c30ff00180fd0002180078fe000d070700000300180000030000070cfc00053e0c60c10070fd00010180fd00042000e000003dfe00013870fd000603e0e70c780780fd0002180030fe000d038600000300180000018000070cfd0006030606e08180e0fd00010180fd00042000f000003bfe00013c70fc000420660c180ffc0002180030fe000607860000030018fe00038000078cfd0006038606c08180e0fd00010180fd00047001f0000039fe00013c70fd000508302e08180ffc00021c0078fe000607ce0000030018fe0003c0000ffcfd000603fe03c08181e0fd000001faff02f800003704000409ffe0fd00051ff00c08181efc00000ffdff07effffe0000030018fe00feff00fcfd000503ff03800181fc000001faff02f80000350007feff00f0fd00051ff018081818fc00001ffbff05fe0000030018fe00feff00fcfd000503fe03800182fc000001faff02f80000380007feff00f0fd00051ff018081830fc00001ffbff05fe0000030018fe00feff00fcfd000403fe03c0fffb000a01f3fffffc31fbe1f800003b0007feff00e0fd00041fe03c0ff0fb000c1fffffc3ffffeffe0000030018fe0003ff8007fcfd0004038007c0fefb00040180000018fe0002f000003c0401e0007fe0fd00041e003e0ff0fb000018fe0008c000078e0000030018fe0003c000078cfd0005010006e0fe04fc00040180000018fe0002f000003cfe00013c70fd000518007e0fe040fc000018fe000fc00007860000030018000001c000070cfd000501800ce0fe06fc0004018000001cfe0002e000003dfe00013c60fd00050c006e0fe060fc000018fe000fc000078300000300180000038000070cfd000601fe0870c007f8fd0004018000003efe0002c0000039fe00013860fd000607f0c70e007f80fd000018fe000fc000070380000300180000030000020cfc0005fe18308007f8fd0004018000003efb0039fe00013860fd000607f0c38c007f80fd000018fe000fc000030180000300180000020000020cfc0005fe18008007f8fd0004018000007ffb0039fe00011070fd000607f0810c007f80fd000018fe000bc00002018000030018000002fe00000cfc00053c00008000f0fd0004018000007ffb0033fd000020fc0005f0800c003f80fd000018fe000bc00000038000030018000002fe00000cf90000c0fb0005018000007f80fc002dfd000060fa00000cfa000018fe000bc00000038000030018000002fe00000cf9000080fb0004018000007ffb0029fd000020fa00000cfa000018fe000bc00000018000030018000002fe00000cf20004018000001efb001efd000020f2000018fe0000c0fe0000c0f700000cf20004018000001cfb0022fd000020f2000018fe0000c0fe0000c0fb000008fe00000cf200040180000008fb0022fd000030f2000018fe0000c0fe000060fb000008fe00000cf200040180000008fb0022fd000020f2000018fe0000c0fe000060fb000018fe00000cf20004018000001cfb0022fd000020f2000018fe0000c0fe000030fb000010fe00000cf20004038000001cfb0022fd000020f2000018fe0000c0fe000030fb000030fe00000cf20004078000001cfb0028fd000030f2000038fe0000c0fe000730005ff0e000ffe0fe00040f8fffffeff5ff0380000008fb0025fd00043f9ffe004ff6ff00f8fe0000c0fe00001ffbff00e0fe00000ff1ff0380000008fb0020fd00003ff2ff00f8fe0000c0fe00000ffbff00e0fe00000ff1fffe000018fb002cfd00003ff2ff00f8fe0000c0fe00000ffbff00c0fe000007fcff0afbffffe200ffff0006fe20fe00001cfb0023fd00003ffaff08fd03fffc003fffe1c0fe0000c0fe000001fe000181c0e800001cfb000efd000008ee0000c0df000018fb000ae90000c0df00001cfb000ae90000c0df00001cfb000ae90000c0df00001cfb000ae90000c0df00001cfb000ae90000c0df00001cfb000ae90000c0df000018fb000ae90000c0df000018fb000ae90000c0df000008fb000ae90000c0df00001cfb000ae90000c0df00000cfb000ae90000c0df00000cfb000ae90000c0df00001cfb000ae90000c0df00000cfb000ae90000c0df00000cfb000ae90000c0df00001cfb000ae90000c0df00001cfb000ae90000c0df00001cfb000ae90000c0df00001cfb000ae90000c0df000008fb000ae90000c0df00000cfb000ae90000c0df000008fb000ae90000c0df000008fb000ae90000c0df000018fb000ae90000c0df00001cfb000ae90000c0df000018fb000ae90000c0df000018fb000ae90000c0df000018fb000bea000101c0df000018fb000ae90000c0df000018fb000ae90000c0df00001cfb000ae90000c0df00000cfb000ae90000c0df00000cfb000ae90000c0df00000cfb000ae90000c0df00000cfb000ae90000c0df00000cfb000ae90000c0df00001cfb000ae90000c0df00000cfb000ae90000c0df00000cfb000ae90000c0df00000cfb000ae90000c0df00000cfb000ae90000c0df00000cfb000ae90000c0df000008fb000ae90000c0df00000cfb000ae90000c0df00001cfb000ae90000c0df00003cfb0018e90000c0ee000002fd000a0180013ffaffbffffffdfcfb000ee90004f03c3dfffee3ff00fcfb0008e900deff00f8fb000ae900e1ff02f8fffefa0019e900feff117fffffa35ffffc1e07ffc0001bfe00001c80ec0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf000000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1050{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw126\pich42\picwgoal2520\pichgoal840\macpict\bliptag-261489952\blipupi72{\*\blipuid f069fae025348fd5b8d7f4d1908522f1}0d0600000000002a007e001102ff0c00ffffffff0000000000000000007e0000002a00000000000000a101f200163842494d000000000000002a007e4772897068af626a001e0001000a00000000002a007e009800420000000000af020b0000000000af020b00000000002a007e000002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0006fb00007cc60006fb00007cc60006fb0000fcc60006fb00007ec60007fc00010107c60007fc00010103c60006fb000003c6000a06000f00003f8003c6000a06001f06043fc003c6000a06001f870c3fc00ec6000a06000f83803fe01ec6000a060001c18030e03cc6000a060061c1b030607cc6000a06007fc0f0306070c6000a06007fc0601060c0c6000a06007fc0603060c0c6000905007f80f03fc0c5000905007001f03f81c5000a06006001f83f8180c6000a06006f03b83f81fec6000a06003fc30c3e01ffc6000a06001fc60c3001ffc6000a06001fc00c3001ffc60006fd000030c40006fd000030c40006fd000030c40002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf000ecc0001e000feff03fbfffff8fd0012de00080c0007ffffbfffffdff0ff00fcfd0011ea00033cfff7aff4ff00bfedff00fcfd0010eb000007e1ff06fefbffffe787fcfd0018eb000007efff0ae87fffff0e0ffe0000180cf800001cfd0018eb000007fdff0afdbffff0007fff00003f80ea00000cfd000beb00010780dc00000cfd000aeb000004db00000cfd000aeb000004db00000cfd000aeb000004db000008fd000aeb000004db00000cfd000aeb000004db00000cfd000aeb00000cdb00000cfd0012eb00000ce4000414fc067fc0fd00000cfd0012eb00000cf000007ff2ff00e0fd00000cfd001aed000220000cfb00fbff00f8fe000001f1ff00e0fd00000cfd0027fc00057cf80000ffeef7ff010004fc000001fbff00f8fe000001f4ff03c1fff1e0fd00000cfd0026fd000007f1ff010004fc000001fbff00fcfe000701ffe008fff80006f80000e0fd00000cfd0023fd00000ff1ff010004fc000701fff0000cf00006fe000101c0f2000060fd00000cfd0023fd00000ff8ff08f3f800407c800f0004f5000006fe00010180f2000060fd00000cfd0028fd00030f800007f50002070004fc000006fb000006fe00010180f80000fcfc000060fd00000cfd0026fd00000cf20002030004fc00000cfb000003fe00010180f9000101fefc000060fd00000cfd002dfd00000cf8000002fc0002030004fc000c1c000180080000018000000180f9000101fefc000060fd00000cfd002dfd00000cf800010ff0fd0002030004fc000c1c0001800c0000018000000180f800003efc000060fd00000cfd002dfd00000cf800011ff0fd000203000efc000c380001c01e0000018000000180f8000006fc000060fd00000cfd002efd00000cf800010ff0fd000303001f80fd0004300002e03efe0004c000000180f8000006fc000060fd00000cfd002ffd00000cf70000f0fd000303003fc0fd0004700006e037fe0004c000000180f8000004fc000060fd00040c0010000033fd00000cf7000070fd000303003fc0fd0004600006e037fe000340000001fc00051e00001f8008fc000060fd00040c0018000033fd00000cf7000070fd000303003f80fd0004600007e036fe000340000001fc00053f040c3f8008fc000060fd00040c0038000039fd00000cfc0005600000f80070fd000203001ffd0005c0600007e036fe00044000000180fd00053f000c3f8018fc000060fd00040c001c00003afd00000cfd000601f02061fc0060fd000203001ffd0005c0600003c03efe00044000004180fd00054f801830c03cfc000060fd00040c001c00003bfe0001040cfd000601f830e3fc00e0fd000203000ffd0005e0c00003c01cfe0004200000e180fd0005c1811020603cfc000060fd00040c003e00003cfe00010c08fd000603f838c3fc00e0fd000203000efd0005f0800001801cfe0004300000f180fd0005e1c1b000603cfc00097fc0917983fffffe000038fe00010e08fd0006060819838601e0fd0002030006fd0005f1800001801cfe0004180001fb80fd00057fc0f000600efc00007ffaff01000039fe00010708fd0006060c1f830601e0fd000203800ffe000a03ff800003e03e6000001ffeff0080fd0005ffc0e0206006fc00007ffaff01000039fe00010f1cfd000607fc0f010700f0fd000003faff08c00007ec3f6000003ffeff0080fd0005ff80e030c006fc00097fffffe7c67ffe3e00003a04007ffffffcfd000607fc0f03070030fd000003faff08c000067c37e000003ffeff0080fd0005fc01f03fc006fc000360000003fe00023e00003a0000feff00fcfd000607fc0703860038fd000003faff0c8000063c33e000003fe001ff80fd0005e001f03f8106fc000360000003fe00021c00003e0001feff00fcfd000607fc0f03c60030fd00140384df003c0001f98000063831c00000380000f380fd0005e001b83f8106fc0009600000078000001c00003e0400fa200ffcfd000607000f81fc1830fd000003fe0010180000f1c000063831c00000300000e180fd00057f031c3c007efc0009600000078000003800003dfe00010f9cfd000606001f83fc1830fd000003fe0010180000f0c00001fc3fe00000700000e180fd00053fc20c30007cfc00096000000fc000001800003afe00010f0cfd0006076019c3f80870fd000003fe0010180000e0600001fc0fe00000600000c180fd00053fc60c200078fc00046000001fc0fc003afe00010f0cfd000601f830e38007e0fd000003fe0010180000c0600001ec0fe00000e000008180fd00051f8000200078fc00046000001fe0fc0035fe00010e08fd000601fc30430007e0fd000003fe000018fe000c600000e40e4000004000000180fa000030fa00046000003fe0fc0030fe00010c08fc0005fc30030007e0fd000003fe000018fe000060fa0004c000000180fa000020fa00046000001fc0fc0028fe00010408fc0002100003fa000003fe000018fe000070fa0004c000000180f2000360000003fb0025fd00000cfa000003fa000003fe000018fe000070fa0004c000000180f2000360000003fb0025fd00000cfa000001fa000003fe000018fe000038fa00048000000180f2000360000003fb0022fd00000cf2000003fe000018fe000018fb000001fe00010180f2000360000003fb0022fd00000cf2000003fe000018fe000008fb000001fe00010180f2000360000003fb0022fd00000cf2000003fe000018fe00000cfb000003fe00010180f20003e0000003fb0023fd00000cf2000003fe000018fe000006fb000006fe00010180f3000403e0000003fb0024fd00000cf2000003fe000018fe000006fb00000efe000301e01c6ff4ff03e0000003fb0023fd00000cf2000007fe000018fe000207ff3ffdff00fcfe000001f1ff03e0000003fb0029fd00000cfa00080e06060fffffeffffffe000018fe000003fbff00fcfe000001f1ff03c0000003fb0028fd00000ff1fffe000018fe000001fbff00f8fe000001fbff08effff9f07bfe00000afd000003fb0022fd00000ff1fffe000018fe000301ffffdffeff00f0fd000370000002f2000003fb0017fd00000ff3ff01fb04fe000018fc000080e5000003fb0015fd000707ff87fffc000733f5000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000007fb000ae9000018df000007fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df000003fb000ae9000018df00000ffb000fe9000018ed00030700187ff6fffb0016e900001cfc000a01da731a9fcfc67fffff9feefffb0008e900001fdefffb0015e900001fedff00fdfcff07fee7bffffe461ee2fa0014e900001ff5ff0afb1e1ffdc0006e18000008ef000fe9000907ffff0003ffe0000008e10002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0002bf0000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1051{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw117\pich41\picwgoal2340\pichgoal820\macpict\bliptag1985704825\blipupi72{\*\blipuid 765b73793c96faa06299d6a72d0c1950}0c7c0000000000290075001102ff0c00ffffffff000000000000000000750000002900000000000000a101f200163842494d000000000000002900754772897068af626a001e0001000a00000000002900750098003e0000000000a901e70000000000a901e70000000000290075000002c30002c30002c30002c30002c30002c30002c30002c30007fb000101e0cb0007fb00011ff0cb0007fb00011ff0cb0007fb00011ff0cb0006fa000070cb0006fa000060cb0006fa000060cb0008fc00027000c0cb000b070003e04043f800c0cb000b070003f060c3fc01c0cb000b070003f061c3fc01c0cb000b0700007833030e03c0cb000b070004381b030603c0cb000b070006780f030600e0cb000b070007f80603060060cb000b07000ff80e03060030cb000b07000ff80e039e0030cb000b07000fc01b03fc1070cb000b07000e001b03f81870cb000b07000c003b83f81fe0cb000b070007f871c3f00fe0cb000b070003f860c3000fc0cb000b070003f860c30007c0cb0008040001f80003c80006fd000003c80006fd000003c80002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30007c9000107e0fd000dd1000301ffffeffcff00f0fd000bd90001026ff2ff00f0fd000ce2000230400beaff00f0fd0011e9000163f2e9ff02dfffe0fd000070fd0010ea00007feeff021fff80f6000030fd000eea00f5ff02e60ffcee000030fd000fea00fdff0380007ff8e7000030fd000aea0000f0e0000030fd000aea000080e0000030fd000aea000080e0000030fd000aea000080e0000030fd000aea000080e0000030fd000aea000080e0000030fd0013ea000080eb00013c00feff00fefc000030fd0013ea000080f4000301277fc7f6fffc000030fd0014ea000080fb0000cffd000007f1fffc000030fd001aea000080fc00021fffc0fe000007f4ff0200077ffc000030fd0028f4000302003c7ffdff02e000c0fc00023fffc0fe000007fcff03fc000facfb000003fc000030fd0022fb00027cf3eff5ff02e000c0fc00023ffee0fe00020f0e10f4000003fc000030fd001efc00007ff2ff02e000c0fc000241e030fe00000ef2000003fc000030fd0021fc00f6ff07fc203ff8007000c0fc0002c00030fe00000cf2000003fc000030fd0027fc00fdff03de187ff0f900023000c0fc0002c00018fe00000cf7000060fd000003fc000030fd0023fc0000f8f200022000c0fd00030180600cfe000004f7000060fd000003fc000030fd0023fc0000c0f20002300080fd00030300600cfe00000ef70000e0fd000003fc000030fd0024fc0000c0f20002300080fd00030300600efe00000ef8000101e0fd000003fc000030fd0028fc0000c0f800000cfc00027000c0fb00016006fe000006f8000101e0fd000003fc000430004000002afc0000c0f800000cfc00027001f8fd000304006003fe000006f8000101e0fd000003fc000430004000002efc0000c0f800001cfc00023007f8fd00030c006003fe000006fc0005701020fc02e0fd000003fc000430006000002efc0000c0f800003cfc00023007f8fd00030c006003fe00000efc0005f83021fc0260fd000003fc000430006000002efc0000c0f800003cfc00023003f8fd00070c00600300000206fc0005fc1861fe0260fd000003fc0004300070000032fc0000c0fa000207003cfc00023003f0fe0008180c00600100000206fd000601fc1ce1ff0c60fd000003fc00043000f8000035fc0000c0fd00050f00003f807cfc00023001e0fe0008180c00600100000306fd0006030e0dc1830860fd000003fc0004fc01f8000034fd000140c0fd00051f82043fc04cfc00023000e0fe00081c100060018000038efd0006030607c1830ef0fd000003faff02fc000034fd000140c0fd00051f830c3fc04cfc00023000c0fe00081e30006000c000078cfd000603fe0381830ff8fd000003faff02fc000034fd000160c0fd00053f839c38e00cfc00023000c0fe00081e30006000f0001ffefd000603fe0301830ff8fd000003faff02fc000038fd000170c0fd000520c19830610cfc000a3801f0003c7efff0006000feff00fefd000603fe0301830ff8fd000403f00c773cfe0002f8000035fd000170c0fd000571c0f83061defc00003ffbff03f0006000feff00fefd000603fc0781ff00f0fd00040380000008fe000270000035fd0001f9c0fd00057fc0f03061fffc00003ffbff03f0006000feff00fefd0006030007c1fe0060fd000003fe00001cfe000270000037050003fbffffc0fd00057fc0603061fffc00003ffbff07f8006000c000078efd000603000fc1fe0060fd000003fe00003efe00027000003a01001ffeff00c0fd00057fc0603061fffc000e38fbe00780001e30006000c000038cfd000603000ce1fc0060fd000003fe00003efe00026000003a01001ffeff00c0fd00057fc0f03fc03efc000e3000000300000e10006001c000038efd000601fc1821c00060fd000003fe00003efe00024000003501001ffeff00c0fd00053000f83fc00efc000e3000000300000e0800600380000706fc0005fe1831800060fd000003fe00007ffb0032fd0001f9c0fd00052001d83f800cfc000e300000030000080400600300000206fc0003fe100180fb000003fe00017f80fc0032fd000178c0fd00050f01903f800cfc000e300000030000080600600300000206fc00037c000180fb000003fe0001ff80fc002ffd000170c0fd00051fc30430000cfc000330000003fe000306007003fe000006fa00010180fb000003fe0000fffb002ffd000160c0fd00051fc306300004fc000330000003fe000306007003fe000006fa00010180fb000003fe00001cfb0028fd000140c0fd00030fc20030fa000330000003fe000306007003fe000006f2000003fe000018fb0028fd000140c0fd000301000030fa000a3000000380000006006007fe000006f2000003fe000008fb0024fc0000c0fa000030fa000a3000000380000003000006fe000006f2000003fe000008fb0024fc0000c0fa000010fa000330000003fe00030300000efe000006f2000003fe000018fb0020fc0000c0f2000330000003fe000301000004fe000006f2000003fe000018fb0019fc0000c0f2000330000003f7000006f2000007fe00001cfb0023fc0000c0f2000330000003fd0002c00010fe000006fa000220383ffbfffe00001cfb001ffc0000c0f2000330000003fd0002c00010fe00020740c7f3fffe00001cfb001dfc0000c0f2000330000003fd00025ff3c0fe000007f1fffe00001cfb0023fc0000c0f300041bf0000003fd00023fffe0fe000007f5ff03fe000620fe00000cfb0029fc000040fb00000ef9ff04f000000380fe00023fffe0fe000007feff05f3fff0000f38f700001cfb0018fc000079f2ff04f000000380fe00021fffc0ea00001cfb0010fc00f1ff04e000000380e4000018fb0014fc00f6ff03f8003ff8fd00010380e4000008fb0014fc00fdff03f7407ed0f600010380e400001cfb000be900010380e400001cfb000be900010380e400000cfb000be900010380e400000cfb000ae9000003e300000cfb000ae9000003e300001cfb000ae9000001e300000cfb000ae9000001e300000cfb000ae9000001e300000cfb000ae9000001e3000008fb000be900010180e400000cfb000be900010380e400000cfb000be900010380e400001cfb000be900010380e400001cfb000be900010380e400000cfb000be900010380e400000cfb000be900010380e400000cfb000be900010380e400000cfb000be900010380e400001cfb000be900010380e400001cfb000be900010380e400001cfb000be900010380e400000cfb000be900010180e400000cfb000be900010180e400000cfb000be900010180e400000cfb000be900010180e400000cfb000be900010180e400000cfb000be900010180e400000cfb000be900010180e400000cfb000be900010180e400000cfb000be900010180e400000cfb000be900010180e400000cfb000be900010180e400000cfb000be900010180e400000cfb000be900010380e400000cfb000be900010180e400000cfb000be900010180e400000cfb000be900010180e400000cfb000be900010180e400000cfb000be900010180e400000cfb000be900010180e400000cfb000be900010180e400000cfb000be900010180e400001cfb0011e900010180ea00060f1edfaffffffcfb0010e900010180f1000180e1f6ff00fcfb0011e900010180fa00020a01c7eeff00fcfb0010e9000301c01809e9ff03fdfdfff8fb000ae9000001eaff0038f4000ce9000001f4ff0290d430ec0010e9000a01fffffd1efffe000007c0e60002c30002c30002c30002c30002c30002c30002c30002c30000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1052{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw115\pich41\picwgoal2300\pichgoal820\macpict\bliptag1525396425\blipupi72{\*\blipuid 5aebb3c9c41bee2608bd4a010f7e1823}0cb00000000000290073001102ff0c00ffffffff000000000000000000730000002900000000000000a101f200163842494d000000000000002900734772897068af626a001e0001000a00000000002900730098003e0000000000ab01e10000000000ab01e10000000000290073000002c30002c30002c30002c30002c30002c30006fb000008ca0006fb00000cca0006fb00000cca0006fb00001cca0006fb00001cca0006fb00003cca0008fd00020f807cca000a06001f02043fc07cca000a06001f070e3fc04cca000a06003f070e3fc00cca000a06003fc3b838400cca000a060061c1b830200cca000a06007bc0f830219eca000a06007fc0f03061ffca000a06007fc0603061ffca000a06007fc07038e1feca000a06007fc0f03fe0feca000a06006001f83fc01cca000a06006001b83fc00cca000a060007839c3f800cca000a06001fc30c38000cca000a06001fc70438000cca000a06001fc60038000cca0008040007800030c80006fd000030c80006fd000030c80002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c3000ccf00063ffd9e1bfffffefc0011e400096040000939000ffe3e1feffffc0008eb00000fdffffc0008eb00001fdffffc001aeb00001ff0ff10fefffffc07fff8000c78800000f0000007fc001df4000008f9000f1fffff635ffff8001fff00007f000008ef000003fc000aeb000018e0000003fc000aeb000018e0000003fc000aeb000018e0000003fc000aeb000018e0000003fc000aeb000018e0000003fc000aeb000018e0000003fc000aeb000018e0000003fc000feb000018e600010140fd000003fc0017eb000018f3000580000fff800ff9ff00f0fd000003fc0025fa000701000003f000311ffcff02fc0018fc000203fffcfd00007ff2ff00f0fd000003fc001efd00000ff2ff02fe0018fc000203fffcfd00007ff2ff00f8fd000003fc0025fd00000ff2ff02fe0018fc000203fffcfd00007ff9ff07f7fff8001ffe0070fd000003fc0022fd00000ff2ff02fe0018fc00020c383efd0004f8000061c0f6000030fd000003fc002afd00080ffffff9c7ffe00014fe0006068000000e0018fc00020c0003fd000040f2000030fd000003fc0022fd00001cf200020c0018fc00020c0003fd000040f8000006fc000030fd000003fc0024fd00001cf20002040018fc000318000380fe0000c0f800017f80fd000038fd000003fc0029fd00001cf800011fe0fd0002060018fc000330000080fe0000c0f80001ff80fd000030fd000003fc0029fd00001cf800013fe0fd0002060018fc0003300000c0fe0000c0f80001ff80fd000038fd000003fc0028fd00000cf800013fe0fd000204003efc0003300000e0fe0000c0f80000f0fc000038fd000003fc0028fd00001cf800013ec0fd00020e00fffc000360000070fe0000c0f80000c0fc000038fd000003fc0027fd00001cf8000030fc00020600fffc000360000030fe0000c0f80000e0fc000038fd000003fc002bfd00001cf8000030fc00020600fffc0003e0000030fe0000c0fa00020180fefc000038fd0002030004fe002efd00000cf800003efc000206007ffc0003e0000030fe000040fd00050f81001fe0fefc000030fd0002030006fe0036fd00001cfd000601e00003f03f80fd000206007efe00050180c0060030fe0000c0fd00050f81831fe0fffc000038fd0002030006fe0037fe0001041cfd000601f060c7f83f80fd00020e003cfe00090180c0060030000020c0fd00051fc1861ff07ffc000038fd0002030007fe0037fe00010c18fd000603f060c7fc1fc0fd000206003cfe000301c0c00ffd000170c0fd000619c0cc1c300180fd000018fd000203000ffe0039fe00010e08fd000607f83183fc00e0fd0002040018fe000901e1801f8008000078c0fd00063060cc18100180fd000038fd000503801f80000038fe00010f18fd000606381b030c0060fd0002060018fe000901e3001b800c000078c0fd000638e0fc18180180fd00023e039ffcff02c0000036fe00010f18fd00060e381f060e0060fd000f07d87e00003fa1ff8011c00fb5b8ffc0fd00063fe078183801c0fd00001ffaff02e00000330400f0000ff8fd000607f80f06060060fd000007faff038060c00ffeff00c0fd00063fe03808380180fd00001ffaff02e00000370001feff00f8fd000607f80e02040060fd000007faff030060400ffeff00c0fd00063fe0380c7001c0fd000a1ffffe83ffffe80fc00000370001feff00fcfd00060ff80e020c0060fd000007faff030020000ffeff00c0fd00063ec07c1fe001c0fd000018fe0006c00000078000003a0001feff00fcfd00060ff00f07fc0060fd000f07c0007ffc0003ff8000000e00007dc0fd00063000fc1fe0c1c0fd000018fe0003c0000007fe003a04007fffcf9cfd000607801f07f82060fd000006fe000b700001e38000001c000078c0fd00063000fc1fc0c380fd000718000001c0000007fe0039fe00010f1cfd000606001f87f83060fd000004fe000b200001e180000018000078c0fd00061f80ce1f807f80fd000718000003e0000006fe0038fe00010f18fd000604003b87f81fe0fd000004fe000b600001c1c0000030000070c0fd00050fe10718003ffc000738000003f0000006fe0035fe00010e1cfd000603f871c7801fc0fd000006fe000b70000180c0000030000060c0fd00050fe38318003ffc000418000003f8fb0035fe00010e1cfd000603fc60c6001fc0fd000006fe000b60000180c0000030000060c0fd000507e10018001efc000438000007f8fb0030fe00010c1cfd000601fc6006000f80fd000006fe000060fe0003c0000030fe0000c0fa000018fa000438000007f8fb002cfd00000cfd000301f00006fa00000efe000060fe0003e0000030fe0000c0fa000018fa000438000007f8fb0029fd00000cfa000006fa00000efe000060fe0003e0000030fe0000c0fa000008fa000438000001e0fb0025fd00001cfa000006fa00000efe000060fe000360000060fe0000c0f2000038fe0000c0fb0021fd000018f200000efe000060fe0003300000c0fe0000c0f2000038fe0000c0fb0021fd000008f200000efe000070fe0003300000c0fe0000c0f2000030fe0000c0fb0021fd000008f2000006fe000070fe0003380000c0fe0000c0f2000038fe0000c0fb0020fd00000cf2000006fe000070fe0002180001fd0000c0f2000038fe0000c0fb0020fd00000cf200000efe000060fe00020c0003fd0000c0f2000078fe0000c0fb002afd00001cf200000efe000060fe00020e0007fd0000e0fe000602570000fffedcfcff00f8fe0000c0fb0023fd00000cf700050810c3fff01efe000070fe000207fffefd00f1ff00f8fe0000c0fb001efd00001ff2ff00fefe000070fe000207fffcfd00f1ff00f0fe0000c0fb0022fd00001ff2ff00fefe000070fe000203fffcfd00f5ff04bc0fffe1c0fe0000c0fb0023fd00001ff2ff00fcfe000060fd00017f7cfd00037c0007aefe000060f6000101c0fb001efd00000ffeff0c7fffffc7ffff6003fef0000018fe000070e30000c0fb0012fc000010fe000010f3000070e30000c0fb000ae9000070e30000c0fb000ae9000070e30000c0fb000ae9000060e30000c0fb000ae9000060e30000c0fb000ae9000060e30000c0fb000ae9000060e30000c0fb000ae9000060e30000c0fb000ae9000060e30000c0fb000ae9000060e30000c0fb000be9000070e4000101c0fb000ae9000070e30000c0fb000be9000070e4000101c0fb000ae9000060e30000c0fb000ae9000060e30000c0fb000ae9000070e30000c0fb000ae9000070e30000c0fb000ae9000070e30000c0fb000ae9000070e30000c0fb000ae9000070e30000c0fb000ae9000070e30000c0fb000ae9000070e30000c0fb000ae9000070e30000c0fb000ae9000060e30000c0fb000ae9000060e30000c0fb000ae9000060e30000c0fb000ae9000060e30000c0fb000ae9000070e30000c0fb000ae9000070e30000c0fb000ae9000070e30000c0fb000ae9000060e30000c0fb000ae9000060e30000c0fb000ae9000070e30000c0fb000ae9000070e30000c0fb000ae9000070e30000c0fb000ae9000070e30000c0fb000ae9000070e30000c0fb000ae9000070e30000c0fb000ae9000070e30000c0fb000ae9000060e30000c0fb000ae9000060e30000c0fb000be9000060e4000101c0fb000ae9000060e30000c0fb000be9000060e4000101c0fb000be9000060e4000101c0fb0012e9000070ed000402fe5f83f3fcff00c0fb0016e9000c780ff8740ff98affdff7fb847fefff00c0fb000ae900007fe3ff00c0fb000ce900007fe5ff02fe3f80fb0014e900003ff7ff0afeffbffff80713ff00020ef1000ae900001cfe000020e00002c30002c30002c30002c30002c30002c30002c30002c30002c30000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1053{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw118\pich43\picwgoal2360\pichgoal860\macpict\bliptag-1909573744\blipupi72{\*\blipuid 8e2e379007b327e00e6eaea26b3314a0}0cd600000000002b0076001102ff0c00ffffffff000000000000000000760000002b00000000000000a101f200163842494d000000000000002b00764772897068af626a001e0001000a00000000002b00760098003e0000000000b301ed0000000000b301ed00000000002b0076000002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30006fa000078cb0007fb000103fccb0007fb000107fccb0007fb000107fccb0006fb000007ca0006fb000002ca0007fb000107c0cb000b0700003c08003e07f0cb000b0700007e0c107f07f0cb000b0700007e0c187f83f8cb000b0700007f0e307f81fccb000b070000c7077071800ccb000f070001c3876041c00ce7000080e6000b070000ff83e040800ccb000b070001ff01c040800ccb000b070001ff01c041800ccb000b070001ff01c061800ccb000b070001fc03c07f800ccb000b070001c007607f020ccb000b070001c007707f031ccb000b070000ff0e307e01f8cb000b0700007f8c186001f8cb000b0700007f8c004001f0cb000b0700007f0000400060cb0006fc000040c90006fc000040c90006fc000040c90002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30009cb0003f801fffefd000ed60004f8167ffff1f8ff00fefd000de20003063c03a7ebff00fefd000fea00010fbfe5ff04f7fffffd6efd0014ea00001febff06f80fff80002020fd000006fd0011ea00003ff3ff03ec0033f0f2000006fd0010ea00003ffdff02803e83e7000006fd000aea00003ee0000006fd000aea000030e0000006fd000aea000020e0000006fd000aea000020e0000006fd000aea000030e0000006fd000aea000030e0000006fd0011ea000030e80003078300c0fd000006fd0012ea000030ef0000fbf8ff00e0fd000006fd0014ea000030fa000030fd00f1ff00e0fd000007fd001cf00006bc46c01ff80030fc000203fff8fd00f1ff00e0fd000006fd002af900012c0ffeff00f7faff02fc0010fc000207fff8fe000001f8ff07f8000040800040e0fd000007fd0024fc00000ff2ff02fc0010fc000207fffcfe000601cffbe0001180f7000060fd000007fd001bfc00001ff2ff00fcf8000006fe00010180f2000060fd000007fd0028fc00001ff9ff07bfffde0003fdc01cfa0002100007fe00010180f800000efc000060fd000007fd0026fc00031e000078f500020c0020fc0002300003fe00010180f800001ffc000070fd000007fd0023fc000018f200020c0020fc00077000018000000180f800003ffc000070fd000007fd0028fc000010f800010380fd00020c0030fc00077010018000000180f800003efc000070fd000006fd0028fc000010f8000107c0fd00020c0030fc00076030008000000180f8000060fc000070fd000007fd0028fc000018f8000107e0fd00020c0030fc0007e07800c000000180f8000040fc000070fd000006fd0027fc000038f800010fc0fd00020c007efd000801c07c00e000000180f2000030fd000406000800002efc000038f800000efc00020c01fffd000801c07c006000000180fd00040e00000f80fb000070fd000406000c00002ffc000038f8000018fc00020c01fffd000801806c006000000180fd00051f06041fc180fc000070fd000406000c000030fc000038f8000018fc00020c00fefe00090101806c006000004180fd00053f070c3fc180fc000070fd000406000e000035fc000018fd000503e00003f030fc00020c007cfe00090301807c00600000c180fd00051f839c3fe1fcfc000070fd000407000f000036fd00010810fd000507e00187f030fc00020c007cfe00090301807c00200000e180fd000561c1f83861fefc000030fd000407001f000036fd00010818fd000507e04187f030fc00020c0078fe000903c2003800100000f180fd000561c0f83063fefc00037a3dd100fdff01800034fd00010c18fd000607f06387783f80fd00020c0030fe000903c6003800180000f380fd00057fc0f03021c6fc00003ffaff01800034fd00010e38fd00060c3077061c7f80fd00020c0030fe000903ee0038001e00c3ff80fd00057fc070306183fc00003ffaff01800038fd00010e38fd00060c3036060c7f80fd000b0f20fffffefe7ffe007c801ffeff0080fd00057fc060306183fc00003ffeff05fa303fff000035fd00011f78fd00060ff83e060c7fc0fd00000ffbff04fe007f801ffeff0080fd00057f80f03fe183fc00093c0000018000001f000036050001ffffdff8fd00060ff81e060c30c0fd00000ffaff03006f801ffeff0080fd00057800f03fc183fc0009300000018000000e00003a010003feff00f8fd00060ff81c061c2060fd00030ffffff7feff08ef0067803c3800fb80fd00056001f83fc183fc000930000003c000000e000039010003feff00f8fd00060ff01e07f86060fd000f0f782000e00003c7004780180000f180fc000401983f80fefc000930000003c000000c00003a050003fdf17ff8fd00060c003f07f860e0fd00000efe000be00003c3006780380000f180fd00051fc30c3e007efc000930000007e000000c00003a05000040001f38fd00060c003f07f020e0fd00000cfe000be0000381803f80300000e180fd00053fc30630007cfc000930000007e0000008000035fd00010f38fd00060d003307f001e0fd00000cfe000bc0000381803fc0600000c180fd00051fc20030007cfc000430000007f0fc0033fd00010e18fd000607f0638f000fc0fd00000cfe000bc0000301803dc06000000180fd00031f800030fa00043000000ff8fc0030fd00010c18fd000607f84186000f80fd00000cfe000bc0000001801c006000000180fa000030fa00043000000ff8fc0030fd00010818fd000603f84086000f80fd00000cfe000bc00000018000006000000180fa000030fa000430000007e0fc0027fc000018fa0002060006fc00000cfe000be0000001c000006000000180f200043000000180fc0025fc000018fa000006fa00000cfe0000e0fe0007c00000c000000180f200043000000180fc0021fc000018f200000efe0000e0fe00076000018000000180f200043000000180fc0021fc000010f200000efe0000e0fe00076000018000000180f200043000000180fc0021fc000010f200000cfe0000e0fe00073000038000000180f200043000000180fc0021fc000008f200000cfe0000e0fe0002100003fe00010180f20004f000000180fc0027fc000010f200000cfe0000e0fe0002180006fe000101c0fb00021c145ffbff04f000000180fc0022fc000018f200000cfe0000e0fe00021c0006fe000201f8dff3ff04f000000180fc0020fc000018f200001cfe0000e0fe00020ffffcfe000001f1ff04f000000180fc0028fc000018fa0003afff17dffdff00fefe0000e0fe000207fffcfd00f4ff07c6843fe000000180fc0024fc00001ff2ff00fefe0000e0fe000207fff8fd00feff053f7ffa00000df700010180fc0019fc00001ff2ff00fcfe0000e0fe000203ff80ea00010180fc0019fc00001ffaff00dffdff02cffff8fd0000e0e400010180fc0016fc00070fe7fffff800183ef50000e0e400010180fc000be80000e0e400010180fc000be80000e0e400010180fc000be80000e0e400010180fc000be8000060e400010180fc000be80000e0e400010180fc000be80000e0e4000101c0fc000be80000e0e400010180fc000be80000e0e400010180fc000be80000e0e400010180fc000be80000e0e400010180fc000be8000060e4000101c0fc000be8000060e400010180fc000be8000060e400010180fc000be8000060e400010180fc000be8000060e400010180fc000be80000e0e400010180fc000be80000e0e400010180fc000be80000e0e400010180fc000be80000e0e4000101c0fc000be80000e0e4000101c0fc000be80000e0e4000101c0fc000be80000e0e4000101c0fc000be80000e0e400010180fc000be8000060e400010180fc000be8000060e400010180fc000be8000060e400010180fc000be8000060e4000101c0fc000be8000060e400010180fc000be8000060e400010180fc000be8000060e400010180fc000be8000060e4000101c0fc000be8000060e400010180fc000be8000060e400010180fc000be8000060e400010180fc000be8000060e400010180fc000be8000060e4000101c0fc000be8000060e4000101c0fc000be8000060e400010180fc000be8000060e4000101c0fc000be8000060e4000101c0fc000be8000060e400010180fc000be8000060e400010180fc000be8000060e4000107c0fc0011e8000060ee0003018fc209faff00c0fc0013e8000060f70005080020fffc77f3ff00c0fc000ce80002700007e5ff0080fc000ce800007fe6ff02ac401ffb000de800007ff1ff03c3fffff8f10010e800007ffbff06fefffe0003fd80ea0006e700001cde0002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c30002c3000000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1054{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw107\pich48\picwgoal2140\pichgoal960\macpict\bliptag505061555\blipupi72{\*\blipuid 1e1aa0b3fa3c3c00179e13f8a5ca376b}0c90000000000030006b001102ff0c00ffffffff0000000000000000006b0000003000000000000000a101f200163842494d0000000000000030006b4772897068af626a001e0001000a000000000030006b009800380000000000c701bf0000000000c701bf000000000030006b000002c90002c90002c90002c90002c90006fa000038d10006fa00007cd10006fa00007cd10006fa0000fcd10007fb000101f8d10007fb00010180d1000b0700004000002c0380d1000a060000f80010fe07d0000a060000fc1c18ff07d0000b070001fc1c38ff0780d1000b070001e00e60f807f0d1000b070001800760e007f0d1000b070003ef0740c087f8d1000b070003ff0780c187f8d1000b070003ff0380c1871cd1000b070003ff0380e1860cd1000b070003fe07c0ff060cd1000b070003c007c0ff060cd1000b070003c00e60fe061cd1000b070001fe1e70fe07bcd1000b070000ff1c39e003f8d1000b070000ff1839e003f8d1000b0700007e1811e003f0d10009fd000301c001f0d10006fc0000c0cf0006fc0000c0cf0002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c9000bfa0005fffffd001fc3d6000dfa00f7ff05200fffc30021e0000afb000001f1ff00f0e1000afb000001f1ff00f0e10013fa0009e00000038001fffe0f03fbff00f0e1000dfa0000c0f5000303ff02f0e1000afa0000c0f2000030e1000afa0000c0f2000030e1000ffb000101c0f80000fffc000030e1000ffb000101c0f80000fffc000030e1000ffb000101c0f80000fffc000030e1000ffb000101c0f800007ffc000030e10010fb000101c0f800010380fd000030e10013fb000101c0fd00000efd000003fc000030e10014fb00014080fd00051f00001f8007fc000030e10014fb0001c180fd00053f83021fc006fc000030e10014fb0001e180fd00053f83041fe00efc000030e10014fb0001f180fd000579839c3fe00cfc000030e10017010002fd0001f180fd000570c1d8383018fc000030e1001a01000ffcff0080fd00057fc0f8383018fc000030e5000002fe001a01001ffcff0080fd00057fc0f0387018fc000038e5000006fe001e01001ffcff0080fd00057fc070387020fc00043fc0867070e9000007fe002101000ffcff0080fd00057f80f0387020fc00003ff7ff03fe000210f3000007fe001ffc0002e1ff80fd00057f80f03fe060fc00003ff0ff01f78cf800030780000023fc0002e1f380fd00057001f83fc060fc00033ffffe7feeff09edffffc000103f8000001ffc0002f0e180fd00057001f83fc060fc000038fd00029f0087ebff02c0000028fd000301f0c180fd00053f839c3f8060fc000030fa0000c0fe00061f20003fffe3f7f6ff02c0000025fd000301f0c180fd00053f830e380060fc000030fa0000c0f70003187c0fcbfaff02c0000026fd000303f88180fd00053fc706380060fc000030fa0000c0f500010380fd00051a001fc0000023fd000307fc0180fd00051f8206380060fc000030fa0000c0f5000003fa0003078000001efd000307fc0180fa000038fa000030fa0000c0f5000003fa0003078000001dfd000307fc0180fa000030fa000030fa0000c0f5000003fa000007fe001dfd000301f00180fa000010fa000030fa0000c0f5000003fa000007fe0018fc0002e00180f2000030fa0000c0f5000003fa000006fe0014fc0002e00180f2000030fa0000c0f5000003f60014fc0002e00180f2000030fa0000c0f5000003f60014fc0002e00180f2000030fa0000c0f5000003f60015fc0002e00180f2000030fb000101c0f5000003f60017fc0003e001e870f3000030fb000107e0f500010380f7001dfc0001e001faff048ff1a00006fd000070fb00010ff0f500010780f70016fc0001e001f2ff01bff0fb00010ff8f500011fe0f70015fc0001e001f1ff00f0fb000107f8f500013fe0f70018fc0004e000f8007ff4ff00f0fb000103f0f500011fe0f7001efc0000e0fa000307000007feff037fffffe0fb000103e0f500010fc0f70010fc0000e0e9000101e0f500010fc0f7000ffc0000e0e80000c0f500010780f7000ffc0000e0e80000c0f500010780f70011fc0000e0eb0003e38387e0f5000003f60012fc0000e0ec000003fbff00f0f8000003f60016fc0000e0ec000003fbff00f8fb000407fbf1ff80f70016fc0000e0ec000001fbff00f8fb00000ffbff00c0fa0018fc0000e0eb00060300000fdf83f8fb00001ffbff00c0fa0016fc0000e0ec000004fb00001cfb00001ffbff00e0fa0019fc0000e0ec00000cfb00000cfb000018fe0003017fffe0fa0012fc0000e0ec000018f4000010fb000030fa0012fc0000e0ec000038fb000002f4000030fa0018fc0000e0ec000070fb000003fb0002400001fd000038fa0018fc0000c0ec000060fb000003fb0002c00003fd00001cfa0018fc0000e0ec0000e0fb000001fb0002400003fd00000cfa001afc0000e0ec0000e0fb00010180fd000301800003fd00000efa001cfc0000e0ec0002e00002fd00010180fd000301800003fd000006fa001dfc0000e0ec0008e00007f83f80000180fd000303800003fd000007fa001dfc0000e0ec0008c0000ffc3fc0000180fd000303800003fd000007fa001efc0000e0ec0008c00007f87fc0000180fd00080380000300ff000007fa001ffc0000e0ed000901800000103f800000c0fd00080380000300ff000007fa001bfc0000c0ed00010380fa0000e0fd00080700000300ff000007fa001bfc0000c0ed00010380fa000060fd000806000003001e000007fa001ffc0000e0ed000903800003f83f80000060fd000306000003fd00010180fb0020fd000101e0ed000903800007f87fc0000060fd000306000003fd00010180fb0021fd000101c0ed000903800007f87fc0000060fd000906000003007e00000180fb0021fd000101c0ed000903800003f87fc0000060fd00090600000300ff000001c0fb0020fd000101c0ed000003fd000011fe000060fd00090600000100ff000001c0fb001cfd000101c0ed00010380fa000060fd00000efd00047f00000180fb0019fd000101c0ed000101c0fa000060fd000006fa00010180fb0018fd000101c0ec0000c0fa0000c0fd000006fa00010180fb0019fd000101c0ec0000c0fb00010180fd000003fa00010380fb001cfd000101c0ec0000c0fb00010180fd000303800003fd00010380fb001bfd000101c0ec0000c0fb00010180fd000303800003fd000007fa001bfd000101c0ec0000c0fb00010180fd000303800003fd000007fa0018fc0000c0ec0000e0fb00010180fd00010380fb000007fa0018fc0000c0ec000070fb00010380fd00010380fb000007fa0017fc0000c0ec000030fb000007fc000101c0fb000007fa0017fd000101c0ec000030fb000006fb0000c0fb00000efa0013fd000101c0e500000efb0000c0fb00000efa0017fd000101c0ec000008fb00000cfb000040fb00001cfa0013fd000101c0ec00000cfb00000cf4000018fa0017fd000101c0ec00000efb000018fb000020fb000030fa0017fd000101c0ec00000ffbff00f0fb000030fb000070fa001afd000101c0ec000007fbff00f0fb00030e184030fe000070fa0017fd000101c0ec000007fbff00f0fb00000ffbff00e0fa0019fc0000c0ec000303f78001feff00e0fb00000ffbff00c0fa0013fc0000c0e900010180f800000ffbff00c0fa0010fc0000c0dd00061ff80f0fffff80fa000bfd000101c0db000006f6000bfd000101c0db000006f6000bfd000101c0db000006f6000bfd000101c0db000006f6000bfd000101c0db000006f6000bfd000101c0db000006f6000bfd000101c0db000006f6000ffd000101c0e9000001f4000006f6000ffd000101c0e9000001f4000006f60010fd000101c0e900010380f5000006f60010fd000101c0e900010780f5000006f60010fd000101c0e900010fe0f5000006f60010fd000101c0e900010fe0f5000006f60010fd000101c0e900010fe0f5000006f60010fd000101c0e9000107c0f5000006f60010fd000101c0e9000107c0f5000006f60010fd000101e0e900010780f5000006f60016fd000701ffffeffe000028ef00010380f5000006f60013fd000001f5ff01fd3af6000003f4000006f60015fd000001eeff07fc27fe4000000380f5000006f6000ffc00e4ff03fd8603a0fb00000ef6000cf8000205fe03e1ff003ef6000df000031800003feaff00fef6000ce50002780000f4ff00fef6000fde00050600001fff8ffeff00fef60002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c90002c9000000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1055{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw138\pich47\picwgoal2760\pichgoal940\macpict\bliptag-1081333885\blipupi72{\*\blipuid bf8c2783ad6890b13d44b78526fd3755}110600000000002f008a001102ff0c00ffffffff0000000000000000008a0000002f00000000000000a101f200163842494d000000000000002f008a4772897068af626a001e0001000a00000000002f008a0098004a0000000000c502410000000000c5024100000000002f008a000002b70002b70002b70002b70002b70007fb00013f80bf0007fb00013fc0bf0007fb00017fc0bf0007fb00013fc0bf0007fb000101c0bf0006fa0000c0bf000b070003000001e001c0bf000b070007e00187f00380bf000b070007e081c7f00380bf000a060007e0c387f003be000a06000ef077070007be000a06000c303f060806be000a06001e783e060c0ebe000a06001ff81e060c1cbe000a06001ff81c060c1cbe000a06001ff01e071818be000a06001ff03e07f818be000a06001c003e07f818be000a06000c003f07f018be000a06000ff07387c018be000a060007f8c1860018be000a060007f8c18e0018be0008040003f0800ebc0006fd00000ebc0006fd000006bc0006fd000004bc0002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70015fa000f3ffffec0ffde002fffca018fff81ebfece0008fb000007f1ffce000afb000007f1ff0080cf000afb000007f1ff0080cf0017fb00110780003ffe000227c00002fd0000eff80780cf000bfb000007f200010180cf000bfb000006f200010180cf0010fb000006f8000101f0fd00010180cf0010fb000006f8000101f0fd00010180cf0010fb000006f8000103f8fd00010180cf0010fb000006f8000103f8fd00010180cf0010fb000006f80001070cfd00010180cf0010fb000006f80001060cfd00010180cf0014fb000006fc00052000007c060cfd00010180cf0018fb000006fc00057c0810fe060cfd00010180d3000003fe0019fc00010206fc00057c0c38ff060cfd00010180d3000003fe001afc00010306fc0005fc0c38ff079cfd00010180d30003038000001afc00010386fc0005a00e70f187f8fd00010180d30003038000001bfc00010386fd0006018207e0c183f8fd00010180d300030780000034fc000103cefd000601ff07e0c183f8fd000101e0ee001601800000100000080c0000401fe043bfffa200ffffef7ffcff02c000001c06003ffff7fffffefd000601ff03c0c1c3f8fd000001d1ff02c000001b01003ffdff00fefd000601ff03c0c1c60cfd000001d1ff02e000001b01003ffdff00fefd000601fe03c0e1860cfd000001d1ff02c000004801003ffdff00fefd000601fc03e0ff040cfd003301fffff0a17ffff8fffffc00dfffd8feffffcf07ffe8003ffff207fffe0c07fff0103dff00007f8c07c10400000d078007c000002f06000020000387cefd0006018007e0ff040cfd000101c0fd000038f900001cf700010380f5000003fa0003038000002dfd0002038386fd0006018007e0ff060cfd00010180fd000018f900001cf700010180f5000003fa0003038000002dfd000203c386fd000601fe0670fc07fcfd00010180fd000010f900001cf700010180f5000003fa0003038000002bfd000207c306fc0005ff0c38e003f8fd00010180fd000010f900001cf700010380f5000003fa000003fe002bfd000207e206fc00057f0818e003f0fd00010180fd000010f900001cf700010380f5000003fa000002fe0027fd00020fe006fc00057f0810e001f0fd00010180fd000018f900001cf700010180f5000003f60026fd00020ff006fc0005080000c000e0fd00010180fd000018f900001cf7000001f4000003f60022fd00021ff006f90000c0fb00010180fd000010f9000018f700010380f5000003f60022fd00021ff006f90000c0fb00010180fd000010f9000018f700010380f5000003f6001efd000207e006f200010180fd000018f9000018f700010180f5000003f6001efd0002038006f200010180fd000018f9000018f700010180f5000003f6001efd0002038006f200010180fd000018f900001cf700010380f5000007f6001ffd0002038006f200010180fd00007ef900007ff700010fc0f500011fe0f70020fd0002038006f200010180fd0000fff90001ff80f800011fe0f500013ff0f70021fd0002038006f200010180fe000101fff90001ff80f800011ff0f500011ff0f7002bfd001303800783ff0004df0800017fc0000cb20403c780fd0000fff90000fff700011fe0f500011fe0f7001efd0002038007f1ff0080fd0000fef900007ff700010fc0f500010fc0f7001efd0002038007f1ff0080fd00007cf900003ef700010fc0f500010f80f7001cfd0002038007f1fffc00007cf900003ef7000107c0f500010f80f70028fd0011018007f006fffe001ffff8009fffc0107f78fb000038f900001cf700010380f5000007f60018fd00010380eb000018f9000018f700010380f5000003f60020fd00010380eb00003cf900001cf70002078001f90007030001fff861ffc0fa0023fd00010380ec00020fffc0fb000207ffe0fb000003fbff00f0fb000007fbff00e0fa0023fd00010380ec00021ffff0fb00020ffff0fb000007fbff00f0fb00000ffbff00f0fa0023fd00010380ec00021ffff0fb00020ffff8fb000007fbff00f8fb00000ffbff00f8fa0029fd00010380ec00021ffff8fb00021ffff8fb000707ffdf5fffff8ffcfb00071fff0c000039e038fa001ffd00010380ec000230001cfb000230000cf400000cfb000018fb00001cfa0023fd00010380ec000270000cfb000230000efb000010fb00000cfb000018fb00000cfa001ffd00010380ec000260000efb0002600006fb000010f4000020fb000006fa0028fd00010180ec0002e00603fb0002604003fb000320000060fe000002fb0002600008fd000007fa0029fd00010380ed000301c00e03fb0002c0c003fb0003600000e0fe000003fb000260000cfd000007fa002bfd00010380ed000401c00c0380fc0003c0e00380fc0003400000e0fe00010380fa00000cfd00010380fb002ffd00010380ed000403800c0180fd000401c06001c0fc0003c00001c0fe00010380fd00030180000efd00010380fb0030fd00010180ed000403001801c0fd000401803000c0fd000401c0000180fe000101c0fd000301800006fd00010180fb0031fd00010180ed000403003001c0fd000403802000c0fd000401c0000180fe000101c0fd000901800007000e00000180fb0031fd00010180ed000403007001c0fd000403800000c0fd000901c00002007f800001c0fd00090180000300ff800001c0fb0031fd00010180ed000403006001c0fd000403801800c0fd000901c00006007fc00001c0fd00090180000180ff800001c0fb0031fd00010180ed000407006001c0fd000403000c00e0fd000901800006007fc00001c0fd000903800001807f800001c0fb0030fd00010180ed00040700c000c0fd000407000e00e0fd00050300000c007ffe0000e0fd000007fe0000c0fd0000e0fb002efd00010180ed00040e01800060fd000406000f0070fd00030300000cfc000060fd000006fe0000c0fd0000e0fb002ffd00010180ed00040c01800060fd00040600060070fd00030700000cfc000060fd000506000001c038fe000060fb0031fd00010380ed00040c01c00060fd000406000e0030fd00090700000e007f80000060fd00050600000180fffe000060fb0031fd00010180ed00040c00e00070fd00040e001c0030fd00090700000600ff80000060fd00090700000380ff80000060fb0031fd00010380ed00040c00600070fd00040600180030fd00090300000700ffc0000060fd00090600000380ff80000060fb0031fd00010380ed00040c00700070fd00040600380030fd000907000003807f80000060fd0005060000030037fe000060fb002efd00010380ed00040c00300060fd00040600300070fd00040700000180fd000060fd000306000006fc0000e0fb002efd00010380ed00040e00380060fd00040e00700070fd00040700000180fd000060fd000307000006fc0000e0fb002ffd00010380ed00040600180060fd00040600600070fd000403800001c0fd000060fd00030300000cfd000101c0fb002ffd00010380ed000407000c00c0fd00040700e000e0fd000401800000e0fd0000c0fd00030180001cfd000101c0fb0030fd00010380ed000407000e00c0fd00040300c000c0fd000401c0000060fe000101c0fd000301800018fd000101c0fb002efd00010380ed000403000601c0fd00040380c000c0fd000401c0000060fe000101c0fd00010180fb000101c0fb002bfd00010380ed000403000001c0fd000403800000c0fd000101c0fb000101c0fd00010180fb000101c0fb002bfd00010380ed000403000001c0fd000403800000c0fd000101c0fb000101c0fd000101c0fb00010180fb002afd00010380ed000003fe000080fd000403800000c0fd000101c0fb000101c0fc0000c0fb00010380fb0025fd00010380ed00010180fa000401c00001c0fc0000e0fb00010380fc000040fb000007fa0025fd00010380ed000301c00003fb0003c0000380fc000060fb000003fb000060fb000007fa0024fd00010380ec0002c00003fb0003e0000380fc000060fb000007fb000040fb00000efa001bfd00010180ec0002400006fb0002700007f4000007f400000cfa0023fd00010380ec000260000cfb000270000ffb000018fb00000efb000018fb00001cfa0023fd00010380ec000230000cfb000238000efb000018fb00000cfb000018fb000018fa0026fd00010380ec0002380018fb00023f0e3efb00071e1c7efd0003fff8fb00000ffbff00f0fa0023fd00010380ec00023ffff0fb00021ffffcfb00000ffbff00f0fb00000ffbff00f0fa0023fd00010380ec00021ffff0fb00020ffff8fb00000ffbff00f0fb00000ffbff00e0fa0023fd00010380ec00020fffe0fb00020ffff0fb000007fbff00e0fb000007fcff00f6f9001efd00010380ec0001067ef900011e60fb0005038f8007de30f6000003f60018fd00010180eb000018f900000cf700010380f5000003f60018fd00010180eb000018f9000008f700010380f5000003f60018fd00010180eb000018f9000018f700010380f5000003f60018fd00010180eb000018f900001cf700010380f5000003f60018fd00010180eb000038f900001cf700010380f5000003f60018fd00010380eb000018f900001cf700010380f5000003f60018fd00010180eb000018f900001cf700010380f5000003f60017fd00010180eb000018f900001cf7000003f4000003f60017fd00010180eb000018f9000018f7000001f4000003f60017fd00010180eb000018f9000018f7000001f4000003f60018fd00010180eb000018f9000018f700010380f5000003f60018fd00010180eb00003cf900003ef700010f80f5000003f60018fd00010180eb0000fff90000fff700011fe0f5000003f60019fd00010180eb0000fff90001ff80f800011fe0f5000003f60018fd00010180eb0000fff90000fff700010fe0f5000003f60018fd00010180eb0000fef900007ff700010fe0f5000003f60018fd00010180eb00007ef900003ef7000107c0f5000003f60018fd00010180eb00007cf900003ef7000107c0f5000003f60018fd00010180eb00003cf900001cf700010380f5000003f60018fd00010180eb000018f9000018f700010380f5000007f60018fd00010180eb000038f900001cf700010780f500007ff60029fd000201fd9ffeff001ff8ff0efba9fffcfcfffff6ffedff8c7ffff1feff05d80ffffe3c7feefff60008fd000001c7fff6000afd000001c8ff00fef60014fd000001d3ff00fcfeff0682ffffc7fffff8f5000ffc00016820f4000030fe000018d00002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b7000000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1056{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw102\pich48\picwgoal2040\pichgoal960\macpict\bliptag996409912\blipupi72{\*\blipuid 3b640238cb0a22c49fd9140630fdc8ca}0ce20000000000300066001102ff0c00ffffffff000000000000000000660000003000000000000000a101f200163842494d000000000000003000664772897068af626a001e0001000a0000000000300066009800360000000000c701a70000000000c701a70000000000300066000002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0007fc00010180d20007fc00010fc0d20007fc00010fc0d20007fc00010fc0d20007fc00011fe0d20007fc00011860d20007fc00011870d2000a0600e00041f81830d2000a0601f06063f81870d2000a0603f07063fc1870d2000a0607f87803fc1fe0d2000a0607183983861fc0d2000a06070c1d03060fc0d2000a0607fc1f03061fe0d2000a0607fc0e03061fe0d2000a0607fc0603861860d2000a0607fc0703ce3820d2000a0607f00f83fc3820d2000a0606001f83fc3830d2000a06060019c3f83ce0d2000a0603f818c3f01fe0d2000a0601fc20e3801fe0d2000a0601fc2063800fc0d2000a0601fc2003800fc0d2000a0600780003000380d20006fe000003cf0006fe000003cf0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0015fb0002fffff3feff0981c7fffd068fffc0d9ffe1000afc000003f1ff0080e2000afc000003f1ff00c0e2000afc000003f1ff00c0e20017fc001103c0001ffe0001cef00001fbc0007ffc0380e2000cfc00010380f3000101c0e2000bfc000003f2000101c0e2000ffc000003f70000f0fd000101c0e20010fc000003f8000101f8fd000101c0e20010fc000003f8000101f8fd000101c0e20010fc000003f8000103fcfd000101c0e20010fc000003f80001030cfd000101c0e20010fc000003f800010304fd000101c0e20011fc000003f900021c0704fd000101c0e20019fd00010103fc00057c00187f0706fd000101c0e5000202000019fd00010183fc00057e0c1c7f070efd000101c0e5000206000019fd00010183fc0005fe0e387f879efd000101c0e5000206000019fd000101c3fc0005e20f7871c3fefd000101c0e500020700001afd000101e3fd000601c3077060c1fefd000101c0e500020780001afd000103effd000601ff03e0e0c1fefd000101e0e500020f80001c001ffcfffd000601ff03c0e0c03cfd000001eeff01bebff8ff01c00017001ffcfffd000601ff01c060c00cfd000001e3ff01c00017001ffcfffd000601ff01c070800cfd000001e3ff01e0002f050fffffbffffffd000601f203e07f001cfd000f01ffffc0f12fff868fffff8fcffffff7fcff02fccfbffaff01c00023fe000201c3e3fd000601c007e0ff0018fd000101c0fb000007f4000007fa00020fc00023fe000201c1c2fd000601c007f07f0038fd000101c0fb000006f4000006fa000207800022fe000201e1c3fc0005ff07707c03f0fd000101c0fb000006f4000006fa000207800022fe000203e183fc0005ff0c18f003e0fd000101c0fb000006f4000006fa000207000022fe000203e183fc00057f0c18e003e0fd000101c0fb000006f4000006fa000207000022fe000207f003fc00053e00186003e0fd000101c0fb000006f4000006fa000206000019fe000207f803f9000060fb000101c0fb000007f4000006f70019fe000207f803f9000040fb000101c0fb000006f4000006f70015fe000207f803f2000101c0fb000006f4000006f70015fe000201e003f2000101c0fb000006f4000006f70014fd0001c003f2000101c0fb000006f4000006f70014fd0001c003f2000101c0fb000007f400000ef70016fd0001c003f2000101c0fb00011f80f500011f80f80016fd0001c003f2000101c0fb00013fc0f500013fc0f80017fd0002c00380f3000103c0fb00013fc0f500017fc0f8001dfd0009c003fffff3e1fffffee7f9ff00c0fb00011fc0f500013fc0f80015fd0001c003f1ff0080fb00011f80f500011f80f80016fe000201c003f1ff0080fb00011f80f500011f80f80014fe000201c003f1ff0080fb00000ff400001ff7001bfd0005c00040001dfefb00043c000031f0f9000007f400000ff7000efd0000c0e9000006f400000ef70014fd0000c0ea0003208f0001f600031f000004fa0016fd0000c0ec00000ffbff00c0fb00000ffbff0080fb0016fd0000c0ec00001ffbff00e0fb00001ffbff00c0fb0016fd0000c0ec00001ffbff00e0fb00003ffbff00e0fb001dfe000101c0ec00073bff8003ffffe5f0fb00073ffffdff9fffffe0fb0017fe000101c0ec000070fb000030fb000030fb000070fb0017fe000101c0ec000070fb000038fb000070fb000030fb0017fe000101c0ec000060fb00001cfb0000e0fb000038fb001dfe000101c0ec0007e00000c00400000cfb0007c00030018000001cfb001efe000101c0ec0007c00001c00e00000cfc000801c00030038000001cfb001efd0000c0ed000803800001801c00000efc000801c0003801c000000efb001ffe000101c0ed000803000003001c00000ffc00080380001c00e000000ffb001efd0000c0ed0008030000070038000007fc00080300000c00e0000007fb001ffe000101c0ed00080300000e0038000007fc00080300000c00e0000007fb001efd0000c0ed00080300000e0070000007fc00080300000e0070000007fb001efd0000c0ed00080700001c0060000003fc0008070000070030000007fb001ffd0000c0ed00090700001c00c000000380fd0008070000070038000007fb0020fd0000c0ed00090e00001801c0000003c0fd00090e000003801800000380fc0021fe000101c0ed00090c0000300180000001c0fd00090c000001801800000180fc0021fe000101c0ed00090c0000380180000001c0fd00091c000001801c000001c0fc0021fe000101c0ed00090c00001c01c0000001c0fd00091c000003001c000001c0fc0021fe000101c0ed00090c00001c00c0000001c0fd00090c0000070038000001c0fc0021fe000101c0ed00090c00000c00e0000001c0fd00091c0000070038000001c0fc0020fd0000c0ed00090c00000e0060000001c0fd00091c00000e0070000001c0fc0020fd0000c0ed00090c0000070030000001c0fd00090c00000c00e0000001c0fc0021fe000101c0ed00090c000007003000000180fd00090c00000c00e0000001c0fc0021fe000101c0ed00090e000003801800000180fd00090e00001c00c000000380fc001efd0000c0ed000807000001801c000003fc0008060000380180000003fb001efd0000c0ed000807000001800c000003fc0008070000300380000003fb001dfd0000c0ed000007fd00030c000007fc00040700003001fe000007fb0019fd0000c0ed000003fa000007fc000307000020fd000007fb0018fe000101c0ed00010780fb000007fc000007fa000007fb0018fe000101c0ed00010380fb000007fc000003fa000006fb0019fe000101c0ed000103c0fb000006fc00010380fb00000efb0019fe000101c0ed000101c0fb00000cfc000101c0fb00001cfb0018fe000101c0ec0000c0fb00000cfc000101c0fb00001cfb0017fe000101c0ec0000c0fb00001cfb0000c0fb000018fb0017fe000101c0ec000060fb000038fb0000e0fb000020fb0017fe000101c0ec000070fb000030fb000070fb000070fb0017fe000101c0ec000078fb000070fb000070fb0000e0fb001bfe000101c0ec00003ffdff02dfffe0fb00003ffdff02bfffc0fb0016fd0000c0ec00001ffbff00c0fb00001ffbff00c0fb0016fd0000c0ec00001ffbff00c0fb00001ffbff00c0fb001dfe000101c0ec00030fff9f5ffeff0080fb00030fffffbffeff0080fb000ffe000101c0e9000007f400000ef7000ffe000101c0e9000006f4000006f7000ffe000101c0e9000006f4000006f7000ffe000101c0e9000006f400000ef7000efd0000c0e9000006f400000ef7000efd0000c0e9000006f4000004f7000ffe000101c0e9000006f4000006f7000ffe000101c0e9000006f4000006f7000ffe000101c0e9000006f4000006f7000ffe000101c0e9000006f400000ef7000ffe000101c0e9000006f4000006f7000ffe000101c0e900000ef4000006f7000ffe000101c0e900001ff4000006f70010fe000101c0e900013fc0f5000006f7000ffd0000c0e900013fc0f5000006f7000ffd0000c0e900013fc0f5000006f70010fe000101c0e900011f80f500000ef7000efd0000c0e900001ff400000ef7000ffe000101c0e900000ff4000006f7000ffe000101c0e9000007f4000006f7000efd0000c0e9000006f400000ef7000efd0000c0e900000ef400000ef70016fe000001e6ff0c3fffffb8fffffdeefffe701ffef7000afe000001daff00fef7000afe000001daff00fef7000cfd00fbff00dfe1ff00fcf70014f8000080f400010180f8000050fb000108e0f60002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1057{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw86\pich47\picwgoal1720\pichgoal940\macpict\bliptag101403813\blipupi72{\*\blipuid 060b4ca56d50a81e8a1f288b1d039db9}0b3600000000002f0056001102ff0c00ffffffff000000000000000000560000002f00000000000000a101f200163842494d000000000000002f00564772897068af626a001e0001000a00000000002f00560098002e0000000000c301670000000000c3016700000000002f0056000002d30002d30006fa000060db0007fb000101f0db0007fb000103f0db0007fb000101f8db0006fa00007cdb0006fa00000cdb0007fb0001040cdb000b0700003c00107e060cdb000b0700007c0810fe061cdb000b0700007e0830fe073cdb000b0700000e0660fc03fcdb000b0700000306e0c003fcdb000b070001c707e0c001fcdb000b070001ff03c0c181fcdb000b070001ff01c0c1801cdb000b070001ff01c0e1801cdb000b070001ff01c0ff8018db000b070001c803e0ff0030db000b070001c00640ff0030db000b070000fe0600fe00f0db000b0700007f0030e003f0db000b0700007f1838c007e0db000b0700003f0810c007c0db000b0700001e0000c00380db0006fc0000c0d90006fc0000c0d90002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30011fa00007ff9ff07fdfdffffe18f7fe0eb0008fa00f1ff00f0eb0008fa00f1ff00f8eb000bfa0001fe3ff3ff00f8eb0014fa0000e0fc000019fe0006dc400001838038eb000afa0000c0f2000030eb000afa0000c0f2000038eb000efa0000c0f700007cfd000038eb000efa0000c0f700007cfd000038eb000efa0000c0f700007efd000030eb0010fa0000c0f9000207007efd000030eb0010fa0000c0f90002070007fd000038eb0010fa0000c0f90002070007fd000038eb0015fa0000c0fe000701c00000f0070007fd000038eb0015fa0000c0fe000703e06041f807000ffd000038eb0015fa0000c0fe000703f060c3f803000ffd000038eb0016fb000160c0fe000703f020c3fc03010ffd000038eb001afb000170c0fe000704180183fe030107fd000038ee00023000001afb0001f1c0fe00070e181b820e020197fd000038ee00023800001e070003ff8fff99ffc0fe00070ffc1f82060201f7fd000018ee00023c00002c010007fcff00c0fe00070ffc0f00060201e7fd00003ffeff0afbfc7fffa10067cc0301d8fe0004c6007c00001d010007fcff00c0fe00070ffc0e000e0201e7fd00003fefff03f7fe00001c010003fcff00c0fe00070ff80e011e0201e3fd00003feeff02fe00001e0700003fee0071ffc0fe00070f801f03fc0001c3fd00003feeff02fe00002afc00027079c0fe00070e001f83f80201c7fd000038fd0011078000000e0000be0007c3ff00003ffe000020fc00027071c0fe00070fc01b83f80701cffd000030f400010380fd00027c00001ffc0002f870c0fe000707f83183f00781fefd000010f4000003fc00023c000023fc0002f860c0fe000703f870c3800f80fefd000030fd000003f9000003fc000238000025fd000301fc40c0fe000703f860c3000f807cfd000030fd000003f900010380fd000230000020fd000301fe00c0fe000701f000030007807cfd000030f4000003fc000230000017fd000303fe00c0fb0002030002fb000030f4000003f90015fd000301fe00c0fb000002f9000030f4000003f90010fc0002fc00c0f2000030f4000003f90010fc00027000c0f2000030f4000003f90014fc00026000c0f2000030fd000002f9000003f90014fc00026000c0f2000030fd000003f9000003f90016fc0002600080f2000030fd00010780fa00010380fa0016fc0002600080f2000030fd00011fc0fa00010fe0fa0016fc00026000c0f2000030fd00011fe0fa00011ff0fa001ffc00016000fbff0af8021ffc0001efe7c00bf0fd00011fe0fa00011ff0fa0015fc00016000f1ff00f8fd00011fe0fa00010fe0fa0015fc00016000f1ff00f0fd00010fc0fa00010fe0fa0015fc00016000f1ff00f0fd000107c0fa000107c0fa0020fc000060fe000c01c180003dfc000f1ff8000feffb00010780fa000107c0fa000ffc000060eb000003f900010380fa000efc000060eb000007f9000003f90010fc000060eb0001fff8fa000107c0fa0011fc000060ec000201fffcfa0001fffefa0012fc000060ec000201fffefb000201fffefa0012fc000060ec000201fffffb000201fffffa0011fc000070ea00010380fb0002019f80fb0012fc000060ea00010180fc000306000180fb0014fc000060ec000304000180fc00030e0001c0fb0011fc000060ec000018f900030e0000c0fb0014fc000060ec0003180000c0fc00030c000060fb0014fc000060ec0003180000e0fc000318000060fb0014fc000060ec000330000070fc000338000070fb0014fc000060ec000360000030fc000378000038fb0014fc000060ec000360030030fc000370000038fb0014fc000060ec000360030030fc000370000018fb0014fc000060ec000360020038fc000370000018fb0014fc000060ec000360030038fc000370000018fb0014fc000060ec0003c0078018fc000370000018fb0015fc000060ed000401c01fe01cfc0003e01fe00cfb0015fc000060ed000401803fe00cfc0003c01ff00efb0015fc000060ed000401803fe00cfc0003c01ff00efb0015fc000060ed000401800fc00cfc0003c007e00efb0016fc000060ed0004018007000cfd000401c000000efb0015fc000060ed0004018003000cfc0003c000000efb0015fc000060ed0004018003000cfc0003c000000efb0015fc000060ed0004018002000cfc0003c000000efb0014fc000060ec00038002000cfc0003c000000efb0014fc000060ec0003e0000018fc0003c000001cfb0014fc000060ec000360000038fc0003e000001cfb0014fc000060ec000360000038fc000360000018fb0014fc000060ec000360000038fc000360000018fb0014fc000060ec000360000038fc000370000038fb0014fc000060ec000360000038fc000370000038fb0014fc000060ec000370000030fc000370000038fb0014fc000060ec000338000060fc000338000030fb0014fc000060ec0003180000e0fc000318000060fb0014fc000060ec0003080000c0fc000308000060fb0012fc000060ea00010180fc0003080000e0fb0013fc000060ec0002040001fb0003040001c0fb0011fc000060ec0002040001f900010180fb0011fc000060ec000201ff7cfa0001ec27fa0012fc000060ec000203fffcfb000201fffefa0012fc000060ec000201fffcfb000201fffefa0011fc000060eb0001fffcfb000201fffefa0010fc000060eb00010780fa00010780fa000efc0000e0eb000002f9000003f9000efc0000e0eb000002f9000003f9000efc000060eb000002f9000003f9000efc000060eb000002f9000003f9000efc000060eb000002f9000003f9000efc000060eb000002f9000003f9000afc000060e2000003f9000afc000060e2000003f9000afc000060e2000003f9000afc000060e2000003f9000efc000060eb000006f9000003f9000ffc000060eb00010fc0fa000003f9000ffc000060eb00013fe0fa000003f9000ffc000060eb00013fe0fa000003f9000ffc000060eb00011fe0fa000003f9000ffc000060eb00010fc0fa000003f9000ffc000060eb00010f80fa000003f9000efc000060eb00000ff9000003f9000afc000060e2000003f9000afc000070e2000003f9001bfc00007ff9ff090ffff8f802ffcb010008fd00000ff9000007f90008fc00007fe1fff90008fc00007fe1fff9000cfc00043ffff86fbfe5fff90016ec001008000006600007cf00007ffe7743fffd1cf90002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d30002d3000000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1058{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw102\pich47\picwgoal2040\pichgoal940\macpict\bliptag1194733358\blipupi72{\*\blipuid 47362f2e22e111ec03c71880a432d268}0d9000000000002f0066001102ff0c00ffffffff000000000000000000660000002f00000000000000a101f200163842494d000000000000002f00664772897068af626a001e0001000a00000000002f0066009800360000000000c301a90000000000c301a900000000002f0066000002cb0002cb0002cb0002cb0002cb0002cb0006fa00000fd30006fa00001fd30008fb0002c01f80d40008fb0002c03f80d40009fc000301c071c0d40009fc000301c060c0d40009fc000301c061c0d4000c08003c00007e01c061e0d4000c08007e08107f00c063c0d4000c08007e0c10ff00c067c0d4000c0800ff0660fc00c06fe0d4000c0800830660c080c07fe0d4000c0801c303e0c080c07ee0d4000c0801ff03c0c080c07cc0d4000c0801ff01c0c080c078c0d4000c0801ff01c0c180c078c0d4000c0801ff01e0ff804070c0d4000c0801e203e0ff804060c0d4000c08018003e0ff00c000c0d4000c0800c00370ff01e01fc0d4000c08007f0430e001f01f80d4000c08007f8c38e001f01f80d4000b07007f8c00c001f01fd3000b07001f0000c000e00ed30006fd0000c0d00006fd000040d00002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0014fa000330000003fe000778400007200000ffe1000afb00007ff2ff00e0e2000afb00007ff2ff00f0e20008fb00f1ff00f0e20016fb0010fe187fffe0003ffe5803eec0000fb60070e2000afb0000e0f2000070e2000afb000040f2000030e2000afb0000e0f2000030e20010fb000040f90002020010fd000030e20010fb0000c0f90002060030fd000030e20010fb0000c0f90002070070fd000070e20010fb0000c0f900020f0070fd000070e20010fb0000c0f900020f0070fd000070e20015fb0000c0fa000320070070fd000030e5000218000019fb0000c0fe000703e00003f8060030fd000030e5000218000019fb0000e0fe000703f040c3f8020030fd000030e500021c00001afc000120c0fe000703f00083f8000030fd000030e500023c000019fc000130c0fd0006180003e0000010fd000030e500023e000022fc000178c0fe00070c18130204000010fd000030ed000a060000020f01780fff000022fc000178c0fe00040e38030204fa000c3c00003c000003ff0107fffe97f0ff010000190601fe30ff7fffc0fe00040ff80e0204fa00003fe4ff010000180003fcff00c0fe00050ff80e020c02fb00003fe4ff010000290003fcff00e0fe00050ff80e030c02fb00003ff5ff12feffcfffc0687ffc00017fe00000e0003e0000280003fcff00e0fe00050fe00e03fc02fb0006380fe000021f80fa000003f900010380fd00021e0000270600000800387fc0fe00050c001f03f802fb000030fd000006f9000003f9000001fc00021c000027fd00023078e0fe000704001303f8060030fd000030fd000006f9000003f9000001fc000218000028fd00027878e0fe000701f03183f007003cfd000030fd000006f9000003f900010180fd000218000028fd00027c70e0fe000703f821c3000f807cfd000030fd000006f9000003f900010180fd000218000024fd00027c00c0fe000703f84082000f807cfd000030fd000006f9000003f900010180fa0024fd0002fe00c0fe000701f8000600078078fd000030fd000006f9000003f900010180fa001dfd0002fe00c0fb000002f9000030fd000006f9000003f900010180fa001efe000301fe00c0fb000002f9000030fd000006f9000003f900010180fa0019fe000301fe00c0f2000030fd000006f9000003f9000001f90019fd00027e00c0f2000030fd000006f9000003f900010180fa0019fd00023800c0f2000030fd000006f9000003f9000103c0fa001afd0002300040f2000030fd000007f900010fe0fa000107f0fa001bfd0002300040f2000070fd00011fc0fa00011fe0fa00010ff0fa001bfd0002300040f2000070fd00011fe0fa00011fe0fa00010ff8fa001bfd0002300060f2000070fd00011fe0fa00011fe0fa00010ff0fa0027fd00123000f8eff801ff7c01cffdff74f7fffffafff0fd00011fc0fa00010fc0fa000107e0fa001bfd000230007ff2ff00f0fd00010f80fa00010f80fa000107c0fa001afd00013000f1ff00f0fd00010f80fa00010780fa000103c0fa001cfd00013000f5ff003ffeff00c0fd000007f9000003f900010180fa001bfd000030fd000440000024c0f4000006f9000003f900010180fa0014fd000030eb000007f900010780fa00011ff8fa0016fd000038eb00011ff8fb000201fffefa0001fffffa0018fd000030ec000201fffcfb000201fffefb000201fffffa0019fd000030ec000201fffefb000201fffffb000301ffff80fb0018fd000038ec000201fffef900010f80fc0003038001c0fb0018fd000030ea000003fb000304000180fc0003060000c0fb0015fd000030ea000001fb000304000180fc00000ef80018fd000030ec00000cf90003040000c0fc00030e0e0010fb001bfd000030ec000318000040fc000318000040fc00030c1e0030fb001bfd000030ec0003180200c0fc000318000060fc00030c1e0038fb001bfd000030ec000310060040fc000338000070fc0003101e001cfb001afd000030eb0002060030fc000370000030fc0003301e101cfb001bfd000030ec000360276030fc000360002030fc0003301e301cfb001bfd000030ec00036037e030fc000360006018fc0003300c300cfb001bfd000030ec0003e01fc030fc00036000c018fc00033000600cfb001bfd000030ec0003e00f8030fc00036000c018fc00033000600cfb001bfd000030ec0003e00f8030fc0003e0008018fc000360004004fb001cfd000030ec0003c0078018fd000401e000000cfc0003c0018007fb001dfd000030ed0004018007000cfd000401c003000efc0003c0018007fb001dfd000030ed0004018007000cfd00040180030004fc0003c0038007fb001dfd000030ed0004018007800cfd00040180060004fc0003c0030007fb001dfd000030ed000401800f800cfd000401800e000cfc0003c0060007fb001dfd000030ed000401800f800cfd000401800c000cfc0003c0060007fb001dfd000030ed000401800fc00cfd0004018018000efc0003c0007007fb001dfd000038ed0004018007c00cfd0004018038000efc0003c0087807fb001dfd000038ed0004018007e00cfd000401c030000efc0003c0187007fb001dfd000038ed000401c007e00cfd000401c000000cfc00036000780efb001bfd000038ec0003c0070010fc0003e000001cfc00033000780cfb001bfd000030ec000360060030fc000360000018fc00033000780cfb001bfd000030ec000360020030fc000360000018fc00037000700cfb001bfd000030ec000360000030fc000360000018fc00033000001cfb001bfd000038ec000360000030fc000360000018fc00033000001cfb001bfd000030ec000320000030fc000370000018fc00033800001cfb0015fd000030e9000030fc000070f900031c000038fb0018fd000030ec000310000040fc000018f900030c000070fb001bfd000038ec0003100000c0fc00031c000040fc00030c000070fb0016fd000030ea000101c0fc00000cf90003020000e0fb0019fd000030ea00010180fc00030e000180fc0003020000c0fb0018fd000030ea000001fb00030e000180fc0003020000c0fb0015fd000030ea000001f90001f180fb0002e0ff80fb0017fd000030eb0001fffcfb000201fffefb000201fffffa0017fd000030ec000201fffcfb000201fffefa0001fffffa0017fd000030ec000201fffcfb000201fffefa00017ffefa0016fd000030ec000201fff8fa0001079cfa00010bc0fa0013fd000030eb000007f9000003f900010180fa0013fd000030eb000006f9000003f900010180fa0012fd000030eb000006f9000003f9000001f90013fd000038eb000006f9000003f900010180fa0013fd000038eb000006f9000003f900010180fa0013fd000030eb000006f9000003f900010180fa0013fd000030eb000002f9000003f900010180fa0013fd000030eb000002f9000003f900010180fa0013fd000030eb000006f9000003f900010180fa0013fd000030eb000002f9000003f900010180fa0013fd000038eb000006f9000003f900010180fa0014fd000038eb000007f900010780fa00010180fa0015fd000030eb00010fc0fa00011fe0fa00010180fa0015fd000030eb00011fc0fa00011fe0fa00010180fa0015fd000030eb00013fe0fa00011fe0fa00010180fa0015fd000030eb00011fe0fa00010fe0fa00010180fa0015fd000030eb00011fc0fa00010fc0fa00010180fa0015fd000038eb00010f80fa000107c0fa00010180fa0015fd000038eb00010780fa00010780fa00010180fa0013fd000030eb000007f9000003f900010180fa0013fd000030eb000002f9000003f900010380fa001dfd000018eb00010780fe000e010000026fc0000fff9fdc7fff1f80fa001cfd00123e0018fce8001fffdde7fb78000fff87cffffdeaff0080fa000afd00003fd8ff0080fa000afd00003fd8ff0080fa001bfd00001fedff0df7fffff8afffffe621eff0000140fe000088f60012fd000c0fffbe003fffe0001ff80011efdc0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb0002cb000000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1059{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw138\pich139\picwgoal2760\pichgoal2780\macpict\bliptag-1467948942\blipupi72{\*\blipuid a880e072c6af4590e9684b4ea467040e}307800000000008b008a001102ff0c00ffffffff0000000000000000008a0000008b00000000000000a101f200163842494d000000000000008b008a4772897068af626a001e0001000a00000000008b008a0098004a0000000002450241000000000245024100000000008b008a000002b70002b70002b70002b70002b70002b70002b70002b70006fb000040be0007fb0001e006bf0007fb0001e006bf0008fc000201e00ebf0008fc000201e00fbf0008fc000201e00ebf000b07001c00000e00e00ebf000b07003e0c007f00e006bf000b07003e0c007f00e006bf000b07007e0e007f80e006bf000b0700c307000380e006bf000b0700c303800180e006bf000b0700ef83c00180e006bf000b0700ff81c04180e006bf000b0700ff81c041c0c006bf000b0700ff01c06380c006bf000b0700ff01e07f80e006bf000b0700c003607f00e006bf000b0700c003607f00e007bf000c0800ff06707f01f00f80c0000c08007f8c107e01f80f80c0000c08007f8c180001f80fc0c0000c01003ffe000301f00f80c00006fd000040bc0006fd000040bc0002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70002b70012e2000ce00000b2000211effc7ffffff8e3000ae600007ff2ff00fce3000ae600007ff2ff00fce3000ae600007ff2ff00fce30016e600107fffffe7fdffbf000077c00007ef00001ce3000ae6000060f2000008e30006e6000040d30012e6000040fe000040fd000080fb000004e30013e60000c0fe0000e0fe000101c0fb00000ce30013e60000c0fe0000e0fe000101c0fb00000ce30013e60000c0fe0000e0fe000101c0fb00000ce30013e60000c0fe000070fe000101c0fb00000ce30012e60000c0fe000060fd0000c0fb00000ce30012e60000c0fe000060fd000080fb00000ce3001ae60000c0fe0008600000078000004078fe00000ce7000040fe001be7000120c0fe00086010100f80000060f8fe00000ce7000060fe001be7000120c0fe00086018300f80002040fcfe00000ce7000070fe001be7000130c0fe00086010300780c060407cfe00000ce7000070fe001ae7000178c0fe00076010300060c06061fd00000ce7000078fe002ce7000178c0fe000860103000e0c0206306fe00000ef9000b2e58038fdff0ff1dfffffdeffdff02fc31f8fe001be700017fc0fe00087010300fe0c020e3fefe00000fe7ff00fcfe002d11000cc00001fffa0005ffe3e1ffffc3fffffcf8ff00c0fe00087010300fe0c020e3fefe00000fe7ff00fcfe001c0003e7ff00c0fe00086018301fe0c020e3fefe00000fe7ff00fcfe00310003e7ff00c0fe0008601c701fe0c020c3fefe00000ffcff15f3dfffe0007ffe00073bc0000001c000001c000001f8fe002a0003eaff03c3ffffc0fe0007600ee000e0c021e3fd00000efe000070f30004018000000cfe000070fe003d1201f003ffff00013ffc400d678000fff0000030fd000418000078c0fe0007600ee020e0c021e3fd000004fe000060f3000401c000000cfe000060fe0032fd000438000001c0f300040c000038c0fe00087007c020e0e033e180fe00000cfe000060f3000403c000001efe000060fe0032fd00043000000180f300041e00003040fe0008f807c01fe1f01fe0fefe00000cfe000060f3000403e000003efe000060fe0032fd00043000000180f300043e00002040fe0008f803801fe1f01ee0fefe00000cfe000060f3000407e000003ffe000040fe002ffd000030fe000080f300043f00002040fe0008f803000fe1f01c40fefe00000cfe000060f3000507f000007f80fb002ffd00043000000180f300047f80000040fe00083000000fc1e000001cfe00000cfe000060f300050ff000007f80fb0023fd00043000000180f30004ff80000040f200000cfe000020f300050ff000007f80fb0022fd00043800000180f30004ff800000e0f200000cfe000020f3000407f000007ffa0022fd00043800000180f300047f800000c0f200000cfe000060f30004018000001cfa0022fd00043800000180f300003efe0000c0f200000cfe000020f30004018000000cfa0022fd00043000000180f300001cfe0000c0f200000cfe000060f300040180000008fa001ffd00043000000180f300001cfe0000c0f200000cfe000070f300010180f70022fd00043000000180f300001cfe0000c0f200000cfe000070f30004018000000cfa0022fd00043000000180f300001cfe000040f200000cfe000060f30004018000000cfa0022fd00043000000180f300001cfe000060f200001cfe000060f30004018000000cfa0024fd000430000001c0f300001cfe00f8ff00bffbff00fcfe000060f30004018000000cfa0020fd00043800000180f300001cfe00f1ff00fcfe000070f30004018000000cfa0020fd00043800000180f300001cfe00f1ff00fcfe000070f30004018000000cfa0028fd00043800000180f300001cfe00007ff8ff06fe0fbfffe6c7fcfe000070f30004018000000cfa0022fd00043800000180f300001cfd00040ff8800010f3000070f30004018000000cfa001afd00043800000180f300001cea000020f30004018000000cfa001afd00043800000180f300001cea000070f30004018000000cfa001afd00043000000180f300001cea000070f30004018000000cfa001afd00043000000180f300001cea000060f30004018000000cfa001afd00043000000180f300001cea000060f30004018000000cfa001afd00043000000180f300001cea000070f30004018000000cfa001afd00043000000180f300001cea000070f30004018000000cfa0025fd00043000000180f300001cea000070fe000301ffff3ffeff00f0fe0004018000000cfa0022fd000430000001c0f300001cea000070fe000003fbff00f8fe0004018000000cfa0028fd00043000000180fe000207ffc0f900001cea000070fe000003fbff00f8fe0004018000000cfa0028fd00043800000180fe00021fffe0f900001cea000070fe000003fbff00fcfe0004018000000cfa002afd00043800000180fe00021ffff0f900001cea000060fd0006c40020c000000efe000401c000000cfa0028fd00043800000180fe00021ffff0f900001cea000070fe00000cfb00000efe0004018000000cfa0028fd00043000000180fe0002200018f900001cea000070fe00000cfb000006fe0004018000001cfa0028fd00043000000180fe000220000cf900001cea000070fe00001cfb000007fe0004018000000cfa0026fd00043000000180fc00000cf900001cea000070fe000018fb000803800000018000001cfa0028fd00043000000180fe0002c0000ef900001cea000070fe000038fb00080180000001c000000cfa0028fd00043000000180fe0002c06006f900001cea000070fe000070fb000801c0000001c000000cfa0027fd000a3000000180000001c06007f900001cea000070fe000060fa0000e0fe00038000000cfa0028fd000b300000018000000180f00380fa00001cea000070fe000060fa0007e00000018000001cfa0028fd000b30000001c000000301f80180fa00001cea000070fe000060fa0007e00000018000000cfa0028fd000b300000018000000301f80180fa00001cea000060fe000060fa0007e00000318000000cfa0028fd000b300000018000000301f80180fa00001cea0004600000c0e0fa0007e00000318000000cfa002dfd000b300000018000040301f80180fb0001011cea0013600000c0e000010001800000700000398000000cfa002dfd000b300000018000060301f80080fb0001019cea0013600000e1c00007fc3fe000003000003d8000001cfa002dfd000b300000018000070701f80080fb000101dcea0013600001e1800007fc7fe000003800003d8000001cfa002bfd0009300000018000070600f0f9000103fcea0013700001f3800007fc7fc000001f3c007f8000001cfa002dfd000b300000018000078c00600060fb000103fcea00087f1fffff800001f03efe00001ffeff038000001cfa002cfd001330000001c0200fdc00600070bff87c1ffff7cffcea00003ffeff0080fa00001ffeff038000000cfa0028fd000330000001feff04fc00fb007ffaff00fcea00003ffeff0080fa00001ffeff038000000cfa0028fd000330000001feff04fc01ff007ffaff00fcea00043ffff9ff80fa00073c001bff8000000cfa0028fd000330000001feff04fc01bf007ffaff00fcea0004300001f380fa00073800003d8000000cfa002cfd001330000001fc7f9ffc019e007e0400f9c0001003fcea0004700000e380fa0007300000398000000cfa0029fd000b30000001c00007dc018e0060fb000101dcea0004700001e1c0fa0007700000388000000cfa0029fd000b300000018000078c01fe0060fb0001019cea0004600001c0e0fa0007600000308000000cfa0029fd000b300000018000070600ff00c0fb0001039cea0004600000c060fa0007600000318000000cfa0029fd000b300000018000060300ff0080fb0001031cea00046000008060fa0007c00000018000000cfa0029fd000b3800000180000603007f0180fb0001011cea000060fe000060fa0007e00000018000000cfa0028fd000b300000018000040300300180fa00001cea000060fe000060fa0007e00000018000000cfa0028fd000b300000018000000300000180fa00001cea000060fe000070fa0007e00000018000000cfa0029fd000b300000018000000300000180fa00001cea000060fe000070fb000801c00000018000000cfa0029fd000b300000018000000380000180fa00001cea000060fe000038fb000801800000018000000cfa0028fd000a3000000180000001800002f900001cea000060fe000038fb000003fe0004018000000cfa0028fd00043000000180fe0002c00006f900001cea000060fe00001cfb000007fe0004018000000cfa0028fd00043000000180fe0002c0000ef900001cea000060fe00001cfb000006fe0004018000000cfa0028fd00043000000180fe000260000ef900001cea000070fe00000efb00000efe0004018000000cfa0028fd00043000000180fe000260000cf900001cea000060fe000007fbff00fcfe0004018000000cfa0028fd00043000000180fe0002200018f900001cea000060fe000007fbff00fcfe0004018000000cfa0028fd00043000000180fe00021ffff8f900001cea000070fe000003fbff00f8fe000401c000000cfa0028fd00043000000180fe00021ffff0f900001cea000070fe000001fbff00f8fe000401c000000cfa0020fd00043000000180fe00021ffff0f900001cea000070f3000401c000000cfa0020fd00043000000180fe00020fffe0f900001cea000070f30004018000000cfa001afd00043000000180f300001cea000070f3000401c000000cfa001afd00043000000180f300001cea000060f3000401c000000cfa001afd00043000000180f300001cea000060f3000401c000000cfa001afd00043000000180f300001cea000060f3000401c000000cfa001afd00043000000180f300001cea000060f3000401c000000cfa001afd00043000000180f300001cea000060f3000401c000000cfa001afd00043000000180f300001cea000060f3000401c000000cfa001afd00043000000380f300001cea000070f3000401c000000cfa001afd00043000000180f300001cea000070f3000401c000000cfa001afd00043000000180f300001cea000070f3000401c000000cfa001afd00043000000180f300001cea000070f3000401c000000cfa001afd00043000000180f300001cea000060f3000401c000000cfa001afd00043000000180f300001cea000070f3000401c000000cfa001afd00043800000180f300001cea000070f30004018000000cfa001afd00043800000180f300001cea000070f30004018000000cfa001afd00043000000180f300001cea000070f30004018000000cfa0019fd00043000000180f300001cea000060f200038000000cfa0019fd00043000000180f300001cea000070f200038000000cfa0019fd00043000000180f300001cea000070f20003c000000cfa001afd00043000000180f300001cea000070f3000401c000000cfa001afd00043000000180f300001cea000070f3000401c000000cfa001afd00043000000180f300001cea000070f30004018000000cfa001afd00043000000180f300001cea000070f30004018000000cfa001afd00043000000180f300000cea000070f3000401c000000cfa001afd00043000000180f300001cea000070f3000401c000000cfa001afd00043000000380f300001cea000070f3000401c000000cfa0022fd00043000000180f3000018ea000070fe000001fbff00f0fe000401c000000cfa0022fd00043000000180f300001cea000070fe000003fbff00f8fe000401c000000cfa002cfd00043000000180fe000207ff9ffdff0080fe00001cea000070fe000003fbff00f8fe000401c000000cfa002afd00043000000180fe00000ffbff00c0fe00001cea000070fe000007fbff00fcfe000401c000000cfa002afd00043000000180fe00001ffbff00c0fe00001cea000070fe000007fb00000efe000401c000000cfa002afd00043000000180fe00000ffbff00c0fe00001cea000070fe00000efb000006fe000401c000000cfa002afd00043000000180fe000020fb000070fe00001cea000070fe00001efb000007fe0004018000000cfa002afd00043000000380fe000060fb000070fe00001cea000070fe00001cfb000003fe0004018000000cfa0026fd00043000000180f7000038fe00001cea000070fe000038fb00080380000001c000000cfa002afd00043000000180fe0000c0fb000038fe00001cea000070fe000038fb00080180000001c000000cfa002dfd00043000000180fe0000c0fb000018fe00001cea000070fe000070fe000002fe0007c0000001c000000cfa002dfd00083000000180000001c0fb000018fe00001cea000070fe00046000004006fe0007c000000180000008fa002dfd0008300000018000000380fb00000cfe00001cea000070fe00046000004006fe0007c00000018000000cfa002cfd00073000000180000003fa000006fe00001cea000070fe00046000004006fe0007e0000001c000000cfa002cfd00077000000180000003fa000006fe00001cea0008700000806000004006fe0007e00000018000000cfa002cfd00073000000180000003fa00000efe00001cea0008600000c0600000c007fe0000e0fe00038000000cfa002cfd00073000000180000003fa00040e0000011cea000c600000c0400001f00f800000f0fe00038000000cfa002cfd00073000000180000402fa00040e0000039cea0013600000e1800007fc3fc0000070000001c000000cfa0030fd000630000001800007fe00090fc0fe000007000003dcea0013700001e1800007fc7fe00000380000018000000cfa0030fd000630000001800007fe00093fe3fe000003000003dcea0013700001f3800007f87fc000003ff87bff8000000cfa0030fd0013300000018000078c00003fe3fe000001800003fcea00007ffeff04800001f01ffe00003ffeff038000000cfa0030fd00133000000180000f9c00003fe1fe000001fff2fff8ea00007ffeff04800000e006fe00003ffeff038000000cfa0030fd000330000001feff04fc00001fc0fe000001feff00f8ea00007ffeff04800000c006fe00003ffeff038000000cfa002cfd000330000001feff00fcfa000001feff00f8ea00003ffeff04800000c006fe00031c0007fefe00000cfa0027fd000330000001feff00fcfa000001feff00fce8000601f3800000c006fe000038fb00000cfa0026fd000730000001fe701ffcfa000401c00007fce70005f1800000c006fe000030fb00000cfa0022fd000730000001c00007dcfa000401800003d8e70001e1c0fa000070fb00000cfa0023fd0007300000018000078cfa00040100000398e8000201c0e0fa000060fb00000cfa0020fd0007300000018000070ef70001031ce8000201c0e0fa0000e0fb00000cfa0022fd00073000000180000607fa0004060000031ce7000180e0fa0000e0fb00000cfa0021fd00073000000180000603fa0004060000011ce6000060fa0000e0fb00000cfa0021fd00073000000380000003fa000006fe00001ce6000060fa0000e0fb00000cfa0021fd00073000000180000003fa00000efe00001ce6000060fa0000e0fb00000cfa0022fd00073000000180000003fa00000efe00001ce6000070fb000101c0fb00000cfa0022fd00073000000180000001fa00000cfe00001ce6000038fb00010180fb00000cfa0023fd0008300000018000000180fb000018fe00001ce6000038fb00010380fb00000cfa0022fd00043000000180fe0000c0fb000018fe00001ce600001cfb000007fa00000cfa0022fd00043800000180fe0000c0fb000018fe00001ce600000cfb000006fa00000cfa0022fd00043000000180fe0000e0fb000030fe00001ce600000efb00000efa00000cfa0025fd00043000000180fe000060fb000020fe00001ce600070fffffdf3ffffcfefa00000cfa0022fd00043000000180fe000060fb000060fe00001ce6000007fbff00fcfa00000cfa0022fd00043000000180fe00001ffbff00c0fe00001ce6000003fbff00f8fa00000cfa0022fd00043000000380fe00001ffbff00c0fe00001ce6000003fbff00f8fa00000cfa001ffd00043000000380fe00001ffbff00c0fe00001ce300011f80f700000cfa001cfd00043000000380fe00001ffdff02efff80fe00001cd700000cfa001afd00043000000380fc000403d0000060fd00001cd700000cfa0012fd00043000000180f300001cd700000cfa0012fd00043000000380f300001cd700000cfa0012fd00043000000380f300001cd700000cfa0012fd00043000000380f300001cd700000cfa0012fd00043000000180f300001cd700000cfa0012fd00043000000180f300001cd700000cfa0012fd00043000000180f300001cd700000cfa0012fd00043000000180f300001cd700000cfa0012fd00043000000180f300001cd700000cfa0012fd00043000000180f300001cd700000cfa0012fd00043000000180f300001cd700000cfa0012fd00043000000180f300001cd700000cfa0012fd00043000000180f300001cd700000cfa0012fd00043000000180f300001cd700000cfa0012fd00043000000380f300001cd700000cfa0012fd00043000000180f300001cd700000cfa0012fd00043000000380f300001cd700000cfa0012fd00043000000180f300001cd700000cfa0012fd00043000000180f300001cd700000cfa0012fd00043000000180f300001cd700000cfa0012fd00043000000180f300001cd700000cfa0012fd00043000000380f300001cd700000cfa0012fd00043000000180f300001cd700000cfa0012fd00043000000180f300001cd700000cfa0012fd00043000000180f300001cd700000cfa0012fd00043000000380f300001cd700000cfa0012fd00043000000380f300001cd700000cfa0012fd00043000000180f300001cd700000cfa001afd00043000000180fe00000ffbff0080fe00001cd700000cfa001afd00043000000180fe00001ffbff00c0fe00001cd700000cfa001afd00043000000180fe00001ffbff00c0fe00001cd700000cfa001cfd00043000000180fe000007fdff02cfffe0fe00001cd700000cfa0016fd00043000000180f70000e0fe00001cd700000cfa0016fd00043000000180f7000060fe00001cd700000cfa0016fd00043000000180f7000030fe00001cd700000cfa0016fd00043000000180f7000038fe00001cd700000cfa001afd00043000000180fe0000c0fb000018fe00001cd700000cfa0016fd00083000000180000001c0f700001cd700000cfa001afd0008300000018000000380fb000004fe00001cd700000cfa001dfd000f30000001800000038000020020000006fe00001cd700000cfa001dfd000f30000001800000030000060030000006fe00001cd700000cfa001dfd000f30000001800000030000020030000006fe00001cd700000cfa001cfd00073000000180000007fd000330000006fe00001cd700000cfa001cfd00073000000180000403fd000370000006fe00001cd700000cfa001dfd000f300000018000060200000f807e000003fe00001cd700000cfa001dfd000630000001000007fe00093fe1ff00000380000018d700000cfa001dfd0013300000010000070c00003fe3ff0000038000003cd700000cfa001dfd001330000001c0000f9c00003fe1fe000003ffff9ffcd700000cfa001dfd000330000001feff08fc00000f8078000003feff00fcd700000cfa001dfd000330000001feff08fc0000060070000003feff00fcd700000cfa001dfd000330000001feff08fc0000020030000003feff00f8d700000cfa001afd001030000001fe3f9ffc0000020030000003c0d400000cfa0018fd000030fc000a0f9c000002003000000380d400000cfa0017fd000030fc0009070c0000060020000003d300000cfa0013fd000030fc0001070efa000006d300000cfa0013fd000030fc00010606fa000006d300000cfa0013fd000030fc00010603fa00000ed300000cfa0013fd000030fc00010403fa00000ed300000cfa0012fd000030fb000003fa00000ed300000cfa0012fd000030fb000003fa00000ed300000cfa0013fd000030fb00010380fb00001cd300000cfa0013fd000030fb00010180fb000018d300000cfa0013fd000030fb000101c0fb000038d300000cfa0012fd000030fa0000c0fb000038d300000cfa0012fd000030fa0000e0fb000020d300000cfa0012fd000030fa000060fb000060d300000cfa000efd000030f3000060d300000cfa0012fd000030fa00001ffbff00c0d300000cfa0012fd000030fa00001ffbff00c0d300000cfa0012fd000030fa00001ffbff0080d300000cfa0012fd000030fa00000ffbff0080d300000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000070c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa000afd000030c400000cfa001dfd000030ef000f200001001d80301a7c00c7fffe77fffee600000cfa0010fd000030f000000ff1ffe600000cfa0010fd000030f000001ff1ffe600000cfa0013fd000030f000003ff3ff01f8ffe600000cfa001dfd000030f0000b3f0603fff0000b03000001c0fd000007e600000cfa0012fd000030f0000038f2000003e600000cfa0012fd000070f0000038f2000003e600000cfa0017fd000030f0000038f700010f80fe000003e600000cfa0018fd000030f0000038f80002400fc0fe000003e600000cfa0018fd000030f0000038f80002e00fc0fe000003e600000cfa0019fd000030f0000038f9000301e01de0fe000003e600000cfa0019fd000030f0000030f9000301e03060fe000003e600000cfa0019fd000030f0000038f9000301c02060fe000003e600000cfa001afd000030f0000030fa00041c00c00060fe000003e600000cfa001dfd000030f0000030fd00077c0010fe00400060fe000003e600000cfa001dfd000030f0000030fd0007fc0830fe004000e0fe000003e600000cfa001efd000030f100011830fd00073c0830ff004000e0fe000003e600000cfa001efd000030f100011c30fd00070e0460f3804003c0fe000003e600000cfa0028fd000030f100011e30fd00070606c0c180600780fe000003f0000a3ff800149f0fc6fffebf7cfa0023fd000030f100011e30fe0008038e07c0c180400780fe000403e9000f3feaff00fcfa0023fd000038f600060780001ff9fff0fe000703ff03c0c180400efd000003e6ff00fcfa001dfd00003ff0ff00f0fe000703ff0380c180c00cfd000003e6ff00f8fa002afd00003ff0ff00f0fe000701fe0380c380c00cfd000003f7ff0df1ffff803c21f800000100000f50f6001afd00003ff0ff00f0fe000701fc03c0ff004018fd00010380df0026fd00003ffdff0dfe7ffff91ffffc00079f80003f70fe0007030006c0fe00c030fd000003de001ffd00040800000f80f800040700001e30fc000506e0fe00e038fd000003de001efa00010380f800040700001c30fd0007fe0c60fc01f03fc0fe000003de001efa00010380f800040f80001c30fd0007fe1830c001f03fe0fe000003de001efa00010380f800040f80001830fd0007fe1830c001f03fe0fe000003de001efa00010380f800040fc0001030fd00077c1000c000f01fc0fe000003de0016fa000003f700041fc0000030fa0000c0fa000003de0016fa000003f700043fe0000030fa0000c0fa000003de0013fa00010380f800043fe0000030f2000003de0013fa00010380f800043fc0000030f2000003de0013fa00010380f800000ffe000030f2000003de0013fa00010380f8000006fe000030f2000003de0013fa00010380f8000006fe000030f2000003de0012fa000003f7000006fe000030f2000003de0012fa000003f7000006fe000038f2000007de001afa000001f7000006fe000a3c21bc20f37fff9ffffe7ffbffde0010fa000001f7000006fe00003ff1ffde0012fa000003f7000006fe00003ff2ff00fede001bfa00010380f8000006fe00003ffaff00fbfeff041ffffff9fede000ffa00010380f8000006fe000002ce000afa000003f7000006ca000afa000003f7000006ca000bfa00010380f8000006ca000afa000003f7000006ca000afa000003f7000006ca000afa000003f7000007ca000bfa00010380f8000006ca000afa000003f7000006ca000afa000003f7000006ca0010fa000003fd00021fffc0fe000006ca0011fa00010380fe00021fffe0fe000007ca0011fa00010380fe00021ffff0fe000007ca0011fa00010380fe00021ffff0fe000007ca0011fa00010380fe0002400038fe000006ca0010fa000003fd0002400018fe000006ca000efa000003fb00001cfe000006ca000ffa00010380fc00000efe000006ca0011fa0007038000000180000efe000006ca0011fa00070380000001800007fe000006ca0011fa000b038000000300000780000006ca0011fa000b038000000700000380000006ca0011fa000b038000000700000380000006ca0011fa000003fe00070700000180000006ca0011fa000b030000040600000180000006ca0011fa000b0300000c06000001800000c6ca0011fa000b0300000e0600f801c00000e6ca0011fa000b0300000f0c01fe00c00000f6ca0011fa000b0380000f1c01fe00c00000feca0011fa000b03c0000ffc01fe0066f7e5feca0011fa000003feff03fc001800feff00feca0010fa000003feff00fcfe00feff00feca0010fa000003feff00fcfe00feff00feca0011fa000403ffffbffcfe0003fffe03feca0011fa000403c0000fbcfe0003f00000feca0011fa00040300000f1cfe0003e00000feca0011fa000b0300000f0c000001c00000f6ca0011fa000b0300000e0e000001800000e6ca0011fa000b0300000e06000001800000c6ca0011fa000b0300000c0600000380000006ca0011fa00070380000007000001fe000006ca0011fa00070380000007000001fe000006ca0011fa00070380000007000003fe000006ca0011fa00070380000003800007fe000006ca0011fa00070380000003800006fe000006ca0011fa000003fe000301c0000efe000006ca0011fa000003fe000301c0000cfe000006ca0010fa000003fd0002c00018fe000006ca0010fa000003fd0002400018fe000006ca0010fa000003fd00021ffff0fe000006ca0010fa000003fd00021ffff0fe000006ca0010fa000003fd00021fffe0fe000006ca0010fa000003fd00021fffe0fe000006ca000efa000003fc000001fd000006ca000afa000003f7000006ca000afa000003f7000006ca000dfa000003fa00030c000006ca000dfa000003fa00030e000006ca000afa000003f7000006ca000afa000003f7000006ca000afa000003f7000006ca000afa000003f7000006ca000afa000003f7000006ca000bfa00010380f8000006ca000afa000003f7000006ca000afa000003f7000006ca000afa000003f7000006ca000afa000003f7000006ca000afa000003f7000006ca000afa000003f7000006ca000afa000003f7000006ca000afa000003f7000006ca000afa000003f7000006ca000afa000003f7000006ca000bfa00010380f8000006ca000afa000003f7000006ca000afa000003f7000006ca000afa000003f7000006ca000afa000003f7000006ca000afa000003f7000006ca000afa000003f7000006ca000afa000003f7000006ca0010fa000003fd00021fffe0fe000006ca0010fa000003fd00023fffe0fe000006ca0010fa000003fd00023fffe0fe000006ca0010fa000003fd0002383ff0fe000006ca0010fa000003fd0002600038fe000006ca0010fa000003fd0002e00018fe000006ca0010fa000003fd0002c0001cfe000006ca0011fa000003fe000301c0300efe000006ca0011fa000003fe00030180300efe000006ca0011fa000003fe000303807007fe000006ca0011fa000003fe000303007007fe000006ca0011fa000003fe000306007003fe000006ca0011fa000003fe000306007003fe000006ca0011fa000003fe000306002003fe000006ca0011fa00070300000c06006003fe000086ca0011fa000b0300000e0600200180000086ca0011fa000b0300000e04003001800000e6ca0011fa000b0300000f18007000c00000eeca0011fa000b0380000f18007000e00001feca0011fa000703f7ffbff8007000feff00feca0011fa000003feff03f8003000feff00feca0011fa000003feff03f8002000feff00feca0011fa000003feff00f8fe0003fc1793feca0011fa000403c0001ff8fe0003e00001feca0011fa00040300000f1cfe0003c00001eeca0011fa000b0300000e1c000001c00001e6ca0011fa000b0300000c0c002003800001c6ca0011fa00070300000c04002003fe000086ca0011fa000003fe000306000003fe000006ca0011fa000003fe000306000003fe000006ca0011fa000003fe000306000003fe000004ca0011fa000003fe000306000003fe000004ca0011fa000003fe000303000006fe000006ca0011fa000007fe00030180000efe00000eca0011fa000003fe00030180000cfe00000eca0011fa000003fe000301c0001cfe000006ca0010fa000003fd0002c00038fe00000eca0010fa000003fd0002400038fe000006ca0010fa000003fd00023ffff0fe000006ca0010fa000003fd00023fffe0fe000006ca0010fa000003fd00023fffe0fe000006ca0010fa000007fd00023fffe0fe00000eca000efa000003fb0000c0fe00000eca000afa000007f700000eca000afa000003f7000006ca000afa000007f700000eca000afa000007f700000eca000afa000007f700000eca000afa000007f700000eca000afa000007f7000006ca000afa000007f700000eca000afa000007f700000eca000afa000007f700000eca000afa000007f700000eca000afa000007f700000eca000afa000007f700000eca000afa000007f700000eca000afa000007f700000eca000afa000003f700000eca000afa000003f700000eca000afa000003f700000eca000afa000003f700000eca000afa000007f700000eca000afa000007f700000eca000afa000007f700000eca000afa000007f700000eca000afa000007f700000eca000afa000007f700000eca000afa000003f700000eca000afa000003f700000eca000efa000003fd000004fc00000eca0010fa000007fd00021fffc0fe00000eca0010fa000007fd00023fffe0fe00000eca0010fa000007fd00023fffe0fe00000eca0010fa000007fd00027feff0fe00000eca0010fa000003fd0002c00070fe00000eca0010fa000003fd0002c00038fe00000eca000efa000007fb000038fe00000eca0011fa000007fe00030100fc1cfe00000eca0011fa000007fe00030381fc0cfe00000eca0011fa000007fe00030301fc0efe00000eca0011fa000007fe00030603fc07fe00000eca0011fa000007fe00030e03f807fe00000cca0011fa000007fe00030e027803fe00000cca0011fa000007fe000306000003fe00000cca0011fa00070700000806000003fe00000eca0011fa0007070000080e000003fe00000cca0011fa000b0700001c040000038000000cca0011fa000b0700001e100000018000000eca0011fa00040700001f38fe0003c000001eca0010fa000407fdf81ff8fe00feff00feca0010fa000007feff00f8fe00feff00feca0010fa000003feff00f8fe00feff00fcca0010fa000003feff00f8fe00feff00fcca000efa000401e0083ff8fe0000e0c7000bf700011f38fe0000c0c7000bf700050e1c00000180c7000bf700050e1c00000380c7000af700040c0e000003c6000af70004080e000003c60009f600030e000003c60009f600030e000003c60009f600030e000003c60009f6000306000002c60009f600030700000cc60009f600030300000cc60009f600030180001cc60008f50002c00038c60008f50002c00038c60008f5000210b9f0c60008f500023fffe0c60008f500023fffc0c60008f500023fffc0c60008f50002039f80c60002b70002b70002b70002b70002b70002b70002b70000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1060{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw182\pich141\picwgoal3640\pichgoal2820\macpict\bliptag-1154454300\blipupi72{\*\blipuid bb306ce46ffde655dc6e60d873a2f485}391400000000008d00b6001102ff0c00ffffffff000000000000000000b60000008d00000000000000a101f200163842494d000000000000008d00b64772897068af626a001e0001000a00000000008d00b60098006000000000024d02f700000000024d02f700000000008d00b6000002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10006f9000030aa0008fb00020400f8aa0008fb00020c01f8aa0008fb00020e01fcaa0008fb00021e031caa0008fb00021c020eaa0009fc0003400e000eaa000c080007c08007e00e000eaa000c080007e08007f004000eaa000c08000fe08007f004001eaa000c0800083000063804003caa000c08001830200418060078aa000c080018f03000180c0078aa000c08001ff01c00080400f0aa000c08001ff0180008040080aa000c08001ff01c0418040180aa000c08001e200c07f00c0380aa000b070018002607f00c03a9000b070018002407f00e03a9000c08000fe04007f00f03ccaa000c080007f08006001f03feaa000c080007f08104001f03feaa000c080003f00004001f03fcaa000afd000004fe000088aa0006fd000004a60002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10021f9000606fffff8df8ff8fdff00fefcff07effbffffaffffffcfd00023fff80c90015f900000feaff00fefd00023fffc0d60001fffff60015f900001feaff00fefd00023fffc0d60001fffff6002bf900181fff0dffffdbdffff00c7ffe178bfff0033fffc1e2fffa000efd00023fffc0d7000301ffff80f70015f900000cea000006fb000060d7000303801980f70017f9000008ea000006fd0002800020d70003030000c0f70011f9000008ea000006d00003060000c0f70021f9000018fd000020fc00042000000380f9000006fb000018d7000306000060f70027f9000018fd0002200020fe0005300040078030fa000006fe000302003018d700030c000030f70024f9000018fb000020fe000430000007c0f9000006fe000302002008d700030c060030f7001ff9000018fb000020fe000430000003e0f9000006fc000040d600011803f50022f9000018fb000020fe000430000008e0f9000006fc00014006d7000330018008f70022f9000018fb000060fe00043800000840f9000006fc00014006d7000330018008f70027f9000018fd000ee003e03806c07c00c008006000800ffd000006fb000006d700033001c00cf7002bf9000018fd000fe007e03c0fe07e01e008007003c00f80fe000006fe000308000006d700033000c00cf70031fa00010418fd000fe00fe07c0fe07f01e00c007007e0df80fe000306000018fe000002d80004203000400cfa0002c000002dfa00010c10fd000ee01fe03e0fe07e00e01f003003f0f7fd0005060000080001d6000360200060f90002c000002dfa00010e18fd000e601060030c303800e03f80300070f0fd00050600001c0001d6000370400060f90002e000002ffa00010f18fd000e601021031c103000e03f80300030e0fd00060600001e000180d7000470c0006002fa0002f000003dfa00010f38fd000e603021ff08103000603f80300c70e0fd00080700003f0001800180f600040480000002fe000070ed000478c0006003fa0002f000003501003ffbff00f8fd000e601000ff08183000601c00301ff0c0fd000707fdfffff0018000d7ff0dc0006003fe203fffdfffdff800003101003ffbff00f8fd000e601020ff08183000401800301ff0c0fd000003feff03f0018000d7ff03c0006003faff02f800003101003ffbff00f8fd000e603000fe08103000400800301ff0c0fd000003feff03f0008001d7ff03c0006003faff02f800005b08003c0003ffc0001ff8fd000e6010008008183000401800301e00c0fc001928001e3000c001efc0001fff0000fffc0001bf8000005c00001ffe000070fb0013018000008000007f7e1e1fb3fdc000c00381fffdfeff0383f800003afd00040300000f18fd000e6010010008103180601c00300800c0fa00041e30004001fe000008df000608000078c00180fd000018fe0002f000003afd00040300000e18fd000e7000600008183980e00800380800c0fa00041c10006001fe000008df000608000078400380fd000018fe0002f0000038fd00030100000cfc000ef803e07f08181f00f008007807f0c0fa00041c00003003fe000008df00051c0000706003fc000038fe0002e000003dfd000301000008fc000ef807f07f1c180f01f008007c07e080fd00070600001808003006fe000018df00003efe000330060008fe00007cfe0002c000003cfd000301000008fc000df807e07f08100f01f008007c07e0fc000006fe000308003006fe000018df00003efe00033006000cfe00007cfe0002c0000039fd000003fe000018fd00081003e03c0000060020fe000103e0fc000006fe000308000006fe000018df00007ffe00033000000cfe0000fefb0024fd000003fe000018e600030c000006fe000018df00077f8000003000000cfe0000fffb0024fd000003fe000008e600030c000006fe000008df000bff80000030000008000001fffb0025fd000003fe000008ea000004fe000306000006fe000008df00007ffe000010fb0000fffb0025fd000003fe000018ea000004fe00030200000cfe000018df00001cfe000008fb000038fb0028fd000003fe000018ea000004fe000302000018fe000008df000008fe00030c000020fe000018fb0025fd000003fe000018ea000004fb000018fe000018df000008fe000304000020fe000010fb0022fd000003fe000018ea000004fb000030fe000008df000008fe000002fb000018fb0027fd000003fe000018ea000004fd0002800060fe000018df00000cfe0003030000c0fe000018fb0027fd000003fe00001cea000006fd0002800060fe000018df00000cfe0003030000c0fe000018fb002cfd000003fe00001ffbff00f1f4ff03dffffffefd00027fffc0fe000018df00000cfe000101fcfc000038fb0025fd000003fe00001feaff00fefd00027fffc0fe000018df000008fd0001fffffd000018fb0025fd000003fe00001feaff00fefd00023fff80fe000018df00000cfd0001fffffd000018fb0038fd000001fe00180fbfbfffff1fbfffe0047ffe077ffffa401ffff0003ff8000cfd00011fc7fd000018df00000cfd00017ffffd000018fb0016fd000003db000018df00000cfc00001cfd000018fb0012fd000003db000018df00000cf7000018fb0012fd000003db000008df000008f7000038fb0012fd000003db000008df000008f7000018fb0012fd000003db000018df000008f7000018fb0012fd000003db000018df000008f7000018fb0012fd000003db000018df000008f7000018fb0012fd000003db000018df000008f7000018fb0012fd000003db000018df00000cf7000018fb0024fd000003db000018fc0003ffffae5ffbff03fdfffbbff7ff0080fd000008f7000018fb001afd000003db000018fd000001e9ff00c0fd000008f7000038fb001afd000003db000018fd000001e9ff00c0fd00000cf7000038fb002ffd000003db000018fd000001feff05fde3bffff14ffeff0ccfffffe07fff9e07ffe8bf3fc0fd00000cf7000018fb001bfd000003db000018fd000101c0ea0000c0fd00001cf7000018fb001bfd000003db000018fd00010180ea0000c0fd00000cf7000018fb001bfd000003db000018fd00010180ea0000c0fd00000cf7000018fb001ffd000003db000018fd00010180f3000002f90000c0fd00000cf7000018fb001ffd000003db000008fd00010180f3000002f90000c0fd00000cf7000018fb001bfd000003db000008fd00010180ea0000c0fd00000cf7000018fb001bfd000003db000018fd00010180ea0000c0fd00000cf7000018fb001bfd000003db000018fd00010180ea0000c0fd00000cf7000018fb001bfd000003db000018fd00010180ea0000c0fd00000cf7000018fb002efd000003db000018fd00010180fe000f0700000f800701c00700f80400101f80fd0000c0fd00000cf7000038fb002efd000003db000018fd0001c180fe000f0f81021fc00f83e01fc1fc0e00781fc0fd0000c0fd00000cf7000018fb002efd000003db000018fd0001c180fe000f1f81021fc0bf83e01fc1fc0e00fc3fc0fd0000c0fd00000cf7000018fb002efd000003db000018fd0001c180fe000f0fc1041fe0ff01f01f81fc06007c3fe0fd0000c0fd000008f7000018fb002efd000001db000008fd0001e180fe000f20e0081831f400180103000600063060fd0000c0fd000008f7000038fb002efd000003db000008fd0001e180fe000f3060d81831e00c180003000602063070fd0000c0fd000008f7000038fb002ffd000003db00000cfe000201f380fe000f3be0781831e00e780003800602063070fd0000f0fd000018f7000018fb002bfd000003db00000ffcff0080fe000f3fe0701030c00ff81f01f00600063030fd00fcff00f8f7000018fb002bfd000003db00000ffcff0080fe000f3fe0301831800ff81f01f00200023070fd00fcff00fcf7000018fb002bfd000003db00000ffcff0080fe000f3fc03019f1800ff80f01f00203023870fd00fcff00f8f7000030fb002ffd000003db000607ffc068ffff80fe000f3d00781fe1800e000180800600023830fd0004ff87c0fffcf6000010fb0029fd000003d70002c0f380fe000f2000d81fc1800c0001800c0601063020fd0002c00380f4000010fb0027fd000001d70002c0e180fc000ddc1fc0c0060001800c0701063870fd0002c00180f4000018fb0029fd000003d70002e0e180fe000f0fc1ce1e00c007f83f81f00780fc3030fd0002c00180f4000018fb0029fd000003d70002f0c180fe000f0fe30618008003f87f03f00f80fc3070fd0002c00180f4000018fb002afd000003d8000301f0c180fe000f0fc30638008003f87f03f00f80fc0020fd0002c00180f4000018fb0028fd000003d8000303f88180fe000d07800238000001f03e03e0030078fb0002c00180f4000018fb001bfd000003d8000303fc0180fb000018f10002c00180f4000018fb001bfd000003d8000307fc0180fb000018f10002c00180f4000018fb001bfd000003d8000303fc0180fb000010f10002c00180f4000018fb0016fd000003d70002f80180ea0002c00180f4000018fb0016fd000003d70002e00180ea0002c00180f4000018fb0016fd000003d70002400180ea0002c00380f4000018fb0016fd000003d70002400180ea0002c00380f4000018fb0016fd000003d70002400180ea0002c00380f4000018fb0016fd000003d70002400180ea0002c00380f4000018fb0028fd000003d70013e001fff67c01fffffeffddefffffc1cfbfff828ffcff030fc00380f4000018fb0015fd000003d70001e001e9ff02c00180f4000018fb0015fd000003d700016001e9ff02c00180f4000018fb0020fd000003d70001e000f6ff01fcdffcff083bfffff80fff800180f4000018fb0017fd000003d70000e0fd000080ec00010380f4000018fb0013fd000003d70000e0e700010180f4000018fb0013fd000003d70000e0e700010180f4000018fb0013fd000003d70000c0e700010180f4000018fb0013fd000001d70000e0e700010180f4000018fb0013fd000001d70000e0e700010180f4000018fb0013fd000003d7000060e700010180f4000018fb0014fd00010380d80000c0e700010180f4000018fb0013fd000003d70000c0e700010180f4000018fb0013fd000003d70000e0e700010180f4000018fb0013fd000001d7000060e700010180f4000018fb0013fd000001d7000060e700010180f4000018fb0013fd000001d70000e0e700010180f4000018fb0013fd000003d7000060e700010180f4000018fb0013fd000003d7000060e700010180f4000018fb0013fd000003d7000060e700010180f4000018fb0013fd000001d70000e0e700010180f4000018fb0013fd000003d7000060e700010180f4000018fb0013fd000001d7000060e700010180f4000038fb0013fd000003d70000e0e700010180f4000038fb0013fd000003d70000e0e700010180f4000038fb0013fd000001d7000060e700010180f4000018fb0013fd000001d7000060e700010180f4000018fb0013fd000001d7000060e700010180f4000018fb0013fd000001d7000040e700010180f4000018fb0013fd000001d7000060e700010180f4000018fb0013fd000001d7000060e700010180f4000018fb0013fd000003d7000060e700010380f4000018fb0018fd00010180d800046000000130eb00010180f4000018fb0017fd000001d70004600001fffeeb00010180f4000018fb0017fd000001d70004600001fffeeb00010180f4000018fb0017fd000001d70004600003fffeeb00010180f4000018fb0017fd000001d70004e0000600efeb00010180f4000018fb0019fd00010180d80005600006000180ec00010180f4000018fb0019fd00010380d8000560000e000180ec00010180f4000018fb0018fd000003d70005e0001c0000c0ec00010180f4000018fb0018fd000001d70005e000180000c0ec00010180f4000018fb0018fd000001d70005e00018000040ec00010180f4000018fb0018fd000001d70005e00030000060ec00010180f4000018fb0019fd00010180d80005e00020000030ec00010180f4000018fb0018fd000001d70005600060000010ec00010180f4000018fb0018fd000003d70005e00060000010ec00010180f4000018fb001afd00010380d80006e0006000001808ed00010180f4000018fb001afd00010180d8000660006000001808ed00010180f4000018fb0019fd000003d7000660006000001818ed00010180f4000018fb0019fd000001d700066000c000000c18ed00010180f4000018fb001afd00010180d8000660018000000c3ced00010380f4000018fb0024fd000001d7000660018000000e7cfb00034c000002fe000084fb00010f80f4000018fb0017fd000003d70005ffff8000000febff0080f4000018fb0018fd00010380d800057fff8000800febff0080f4000018fb0017fd000003d700057fff8000800febff0080f4000018fb0023fd000001d700083ffb800080067c043efe0009400000e5c0001a000002ed000018fb0014fd00010380d7000501800180043cde000018fb0013fd00010380d60004800180043cde000018fb0013fd00010380d60004400180001cde000018fb0013fd00010380d600046003000008de000018fb0012fd000003d500046003001008de000018fb0011fd000003d5000360000010dd000018fb0011fd000003d5000360000010dd000018fb0011fd000001d5000370000030dd000018fb0011fd000001d5000330000030dd000018fb0011fd000001d5000338000060dd000018fb0011fd000001d5000318000060dd000018fb000efd000001d2000040dd000018fb000afd000001ad000018fb0011fd000001d5000306000180dd000018fb0011fd000001d5000302000380dd000018fb0010fd000001d5000201ffffdc000018fb0011fd00010180d6000201ffffdc000018fb0011fd00010180d6000201fffedc000018fb000ffd000001d40001fffedc000018fb000afd000003ad000018fb000bfd00010380ae000018fb000bfd00010380ae000018fb000afd000003ad000018fb000afd000003ad000018fb000afd000003ad000018fb000bfd00010380ae000018fb000bfd00010380ae000018fb000afd000003ad000018fb0015fd00070380000006ffffdff5ff00fec1000018fb0010fd0004038000000ff1ffc1000018fb0010fd0004038000000ff1ffc1000018fb0017fd0006038000000fffbff7ff030ffff807c1000018fb0012fd0004018000000ef2000003c1000018fb0012fd000001fe00000cf2000003c1000018fb0016fd000001fe000018fe000010f6000003c1000018fb001afd000001fe000018fe00001cfd000070fb000003c1000018fb001afd0004018000001cfe00001cfd000070fb000003c1000018fb001afd0004018000001cfe00001cfd000070fb000003c1000018fb001afd0004018000001cfe00001cfd000030fb000003c1000018fb001afd0004018000001cfe00000cfd000030fb000003c1000018fb001afd0004018000001cfe00000cfd000030fb000003c1000018fb001efd0004018000000cfe00080c000001c03000001efe000003c1000018fb001ffd00040180000008fe00080c060403e03000003efe000003c200010218fb001ffd00040180000c08fe00080c060c03e03018103ffe000003c200010218fb001ffd00040100000e18fe00080c060c03f03018107ffe000003c200010718fb001ffd00040100000e18fe000c0c06040038301810e380000003c2000103b8fb001ffd00040100000f18fe000c0e06040038301830c380000003c2000103f8fb005bfd00040180401ffcfe004d0e07040078301830ff80000003dcc03fdf87fe1fe80fbfff81707ffa07c0efdfc307be90000080004038b920dffe0007ffed004f7fd7cdffe7f9ffffe8d27fbfe00033e5e90060020002a00007f8fb001efd000001feff00fcfe000c0e060403f8300830ff80000003c1ff00f8fb001efd000001feff00f8fe000c0c060403f8300830ff80000001c1ff00f8fb001efd000001feff00f8fe00080c030c07f8300838fffe000001c1ff00f8fb0047fd000401fec01ff8fe00080c01980738300078c0fe00010180fd000040f8000b05c0000477e0007ff8000018fe0001be80fc000004f3000cf00000e700003ffe0003fffff8fb001ffd00040180000f3cfe00080e01f80c3830087880fe000003c2000107b8fb001efd00040100000f1cfe00070e01f80c38380078fd000003c2000107b8fb001ffd00040380000e18fe00081f00f807f87c01f81ffe000003c200010718fb001ffd00040380000c1cfe000c1f007007f8fc07f83f80000003c200010718fb001ffd00040180000c1cfe000c1f006003f87c07b83f80000003c200010618fb001efd0004038000001cfe00081e000003f01803100ffe000003c1000018fb0012fd000001fe000018f2000003c1000018fb0012fd000001fe000018f2000003c1000018fb0012fd00040380000018f2000003c1000018fb0012fd000001fe00001cf2000003c1000018fb0012fd000001fe00001cf2000003c1000018fb0012fd000001fe00000cf2000001c1000018fb0012fd00040180000008f2000001c1000018fb0012fd00040180000008f2000003c1000018fb0012fd0004018000000cf2000003c1000018fb0017fd000b018000001ffffbeeeb3fec07f8ffc1000018fb0010fd0004018000001ff1ffc1000018fb0012fd0004018000001ff1ff0080c2000018fb0012fd0004018000000ff2ff0080c1000018fb0010fd00010180fc00010de0b5000018fb000bfd00010380ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010380ae000018fb000bfd00010380ae000018fb000bfd00010380ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000afd000001ad000018fb000afd000001ad000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000afd000001ad000018fb000bfd00010180ae000018fb000bfd00010380ae000018fb000bfd00010380ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010380ae000018fb000bfd00010380ae000018fb000bfd00010380ae000018fb0013fd00010180f300040500040060c1000018fb0010fd000001fe00000ff1ffc1000038fb0010fd000001fe00000ff1ffc1000038fb0010fd0004038000001ff1ffc1000018fb001efd0014038000001f9fc1ffffdf1fffc1c01ffc000007f807c1000018fb0012fd0004018000001cf2000003c1000018fb0012fd0004018000001cf2000003c1000018fb0012fd00040180000018f2000003c1000018fb0012fd0004018000000cf2000003c1000018fb0016fd00040180000008fa000001fa000003c1000018fb0017fd00040180000018fa00010180fb000003c1000018fb0017fd00040180000018fa00010180fb000003c1000018fb0017fd0004018000001cfa00010180fb000003c1000018fb0017fd0004018000001cfa00010180fb000003c1000018fb001efd0004018000001cfe000c3e000018c1f803c00f80000003c1000018fb001ffd00040100000c18fe000c7f02041ce1fc07e0df80000001c200010618fb001ffd00040100000c18fe000c7f02063de1fc07e0ff80000001c200010218fb001ffd00040100000e1cfe00087f82063fe1ee01e0fffe000001c200010738fb001ffd00040180000f18fe000871860437e1830830f0fe000003c2000107b8fb0020fd00040180000f18fe000860c6040361830830f0fe00010380c3000107f8fb0059fd000401c2001ff8fe000860c6040761830ff0e0fe002701fdcf9fffcbfffffe7fe7fffff67ffff1f7fff83c7ffe1c84f83c000fffe01effffc3f7ffe1ffeffcff147fffffe78c7fffbffffffcc59fff20307f0e0007f8fb001efd000001feff00fcfe000860c6061761830ff8c0fe000001c1ff00f8fb001efd000001feff00fcfe000860c60c1761830ff0c0fe000001c1ff00f8fb0049fd000001feff00f8fe000860c60c3761030fe0c0fe000801ffffe1cffffffe7ff4ff00fefcff00fbfbff16fbfe7fffeffffffec003fffc203fffa1f7ffff0ffffff8fbff01eff8fb0020fd000401e0001ff8fe000860c61c3761030800c0fe00010180c3000107f8fb001ffd00040180000f18fe000860c61e3761030000c0fe000003c2000107f8fb001ffd00040100000f18fe000860c23e3761860000c0fe000003c2000107b8fb001ffd00040100000e08fe000860c1fe3761fc07f0c0fe000003c200010718fb0020fd00040100000c08fe000860c1ec3761fc07f0c0fe00010380c300010218fb001dfd00040100000c08fe000740c0cc3761fc03f0fd000001c1000018fb0016fd0004018000000cf70000e0fd000003c1000018fb0012fd0004018000001cf2000001c1000018fb0012fd0004018000001cf2000003c1000018fb0012fd0004018000001cf2000001c1000018fb0012fd0004018000000cf2000003c1000018fb0012fd0004018000001cf2000003c1000018fb0012fd0004018000001cf2000003c1000018fb0012fd0004018000001cf2000003c1000018fb0012fd0004018000001cf2000003c1000018fb0012fd0004018000000cf2000007c1000018fb0015fd0007018000000fffffeff4ff0080c2000018fb0010fd0004018000000ff1ffc1000018fb0014fd0004018000000ff5ff00f7feffc1000018fb0015fd000b018000000fc001fff000068eb8000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000afd000001ad000018fb000afd000001ad000018fb000afd000001ad000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000038fb000bfd00010180ae000038fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000018fb000bfd00010180ae000038fb001ffd00010180fe000203ffe0fe000001e9ff0080fe00020ffff0d7000038fb0020fd00010180fe00020fffe0fe000003eaff01fe80fe00020ffff0d7000018fb0020fd00010180fe00021ffff0fe000003eaff01fe80fe00021ffff0d7000018fb0034fd00010180fe000203fff8fe001903f0207ffe00281ff000083f00000bc000001fc0001b97c00180fe00021ff378d7000018fb0020fd00010180fe0002600018fe000003ea00010180fe000230001cd7000018fb0020fd00010180fe0002600008fe000003ea00010180fe000260000cd7000018fb001ffd00010180fe000240000cfe000002e9000080fe0002e0000ed7000018fb0021fd000001fc00010c0efe000002f2000004f9000080fe0002c06006d7000018fb0021fd000001fc00011c06fe000002f2000004f9000680000001c06007d7000018fb0021fd00070180000001801c07fe000003ea0008018000000180700380d8000018fb0021fd00070180000003003803fe000003ea0008018000000300300180d8000018fb0021fd000b018000000300380180000002ea00080180000003001801c0d8000018fb0021fd000b018000000200300180000002ea00080180000003001801c0d8000018fb0033fd000b018000000200600180000003fd000f3e04003f001e03c03f01f81c00f01f80fd000780000003000c01c0d8000018fb0035fd000001fe00070300e00180000003fd000f3f06043f813e07c03f83f81c01f83fc0fe00080180000607000c01c0d900010618fb0035fd000b010000040600e00180000103fd000f3f060c3f81fe07e03f03f81c01fc3fc0fe00080180000607000c00c0d900010638fb0035fd000b0100000e0000e00080000186fd000f7f831838c1e800e00000300e03fc3ce0fe00080180000706000c0040d900010738fb0034fd000b010000070000c000c00001c6fd000f4181b02043c000708000000c020e3070fd00078000070c000c0060d9000107b8fb0034fd000b0100000f0800c000600003c7fd000fe381b02043c00870c000000c02063060fd00078000079c000c0060d9000107f8fb003efd000b01e0220ff800e000783ec7fffd000fff80c02063800ff07c03e00c02063060fd00feff05fc000c007fcdebff01fbdff7ff00fefeff0257cff8fb0034fd000001feff04fc00e0007ffefffd000fff80c02063000ff07e03e00c02063060fd00feff04fc000c007fdbff03fefffff8fb0034fd000001feff04fc00e0007ffefffd000fff80c03043001ff03e03f00c060e3030fd00feff04fc000c007fdbff03fcfffff8fb0052fd000001feff04f80060007ffefffd000fff80e03f03001fe00f01f00c06063030fd00feff04fc001c007ffcff1afbffffc1f1f7fc81fffff1dfffff86bfffc00007f7e07cffffdfbffbff03fcfffff8fb0035fd000b01e0001fb8003000700003fffd000fc001f03f830018000300180c06063070fe000801c000078c00180060d9000107f8fb0035fd000b0180000f0c003000600003c6fd000fc003b03f830018000100180c020c3030fe0008018000078c00380060d9000107b8fb0035fd000b0180000f0c003800c00003c2fd000f3c03183f03000fe00701f80e03fc3020fe000801c0000706003000c0d900010738fb0035fd000b0100000e0e001c01c0000183fd000f3f860c78030007f0fe0ff01f01f83060fe00080180000707006001c0d900010638fb0035fd000b0180000c06000c0180000303fd000f3f860c70030007f0fe0ff01f01f83060fe00080180000607006001c0d900010638fb0034fd000b0180000c06000c0180000003fd000f3f860430010007e0fc0fe00f00f83020fe00080180000203004001c0d8000038fb002dfd000001fe00070600000180000002fa000030fc000401c0000070fc00080180000003000001c0d8000018fb0024fd000b018000000600000180000002fa000030f1000780000003000001c0d8000018fb0024fd000b018000000200000180000003fa000030f100078000000300000180d8000018fb0024fd000b018000000300000380000003fa000020f100078000000380000380d8000018fb0020fd000b018000000180000780000003ea00070180000001c00007d7000038fb0020fd00070180000001800006fe000003ea00070180000001c00007d7000038fb0020fd00070180000001c0000efe000002ea00010180fe0002c00006d7000018fb0020fd00010180fe0002e0000efe000002ea00010180fe000260000cd7000018fb0020fd00010180fe000260001cfe000002ea00010180fe000270000cd7000018fb0020fd00010180fe0002600038fe000003ea00010380fe0002300018d7000018fb0023fd00010180fe00021ffff8fe000003feff00f9edff0080fe00023ffff0d7000010fb001ffd00010180fe00021ffff0fe000003e9ff0080fe00021ffff0d7000010fb001ffd00010180fe00021fffe0fe000003e9ff0080fe00021ffff0d7000018fb0032fd00010380fe00020ffbe0fe001701fc75f4fffe07ffe0021ef78001fffc0002fff3101fff80fc00020ff760d7000018fb000bfd00010180ae000018fb000bfd00010180ae000038fb000bfd00010180ae000038fb000afd000001ad000018fb000afd000001ad000018fb000afd000001ad000018fb000bfd00010180ae000038fb000bfd00010180ae000038fb000bfd00010180ae000038fb000bfd00010180ae000018fb000bfd00010180ae000010fb000bfd00010180ae000018fb000bfd00010180ae000018fb000afd000001ad000038fb000afd000001ad000038fb000bfd00010180ae000018fb000bfd00010180ae000038fb000bfd00010180ae000038fb000bfd00010180ae000038fb000bfd00010180ae000018fb000afd000001ad000038fb000afd000001ad000018fb000bfd00010180ae000018fb000bfd00010180ae000038fb000bfd00010380ae000038fb000bfd00010180ae000038fb000bfd00010180ae000038fb000bfd00010180ae000018fb001bfd00010180ee0002100002f3000040f1000203f1c0e6000018fb001ffd00010180fe00020fffe0f900003fe4ff00fcf9000207fff0e6000018fb001ffd00010180fe00021fffe0f900003fe4ff00fcf900020ffff8e6000018fb001ffd00010180fe00021ffff0f900003fe4ff00fef900020ffff8e6000038fb0039fd00010380fe000207fff8f9001e4000fff000020900003dbc0001f780000fff0000bff038f3ffe0003f7f80c6f900021c000ce6000038fb001ffd00010180fe0002600038f90000c0e4000003f9000218000ce6000038fb001ffd00010180fe000260001cf90000c0e4000003f90002380004e6000038fb001ffd00010180fe000240001cf9000080e400010180fa00013002e5000038fb0029fd000001fd0002804c0efa000001f5000008f8000320000013fc000080fa0002602603e6000038fb002ffd0007018000000180ec06fa00010380f600000cfc000001fe00032000003ffc0000c0fa0002e03603e6000038fb002ffd0007018000000180ec07fa000007f500000cfc000001fe00032000003ffc0000c0fa0003c0360180e7000018fb0031fd0008018000000100ec0380fb000007f5000008fc000001fe00032000003ffc000060fb000401c03600c0e7000018fb0031fd00080180000002006c0180fb000006f5000008fc000001fe00036000003ffc000020fb000401803600c0e7000038fb0031fd000001fe00040200fc0180fb000006f500000cfc0007018000007800003ffc000020fb000401803700c0e7000038fb0039fd0008018000000200dc0180fb000006fc0001781ffd000e7e0fc007803c0001f80000fc00003ffc000020fb000401803600c0e7000038fb003cfd0008018000040600cc0180fc00010806fc0014783f820600007f0fe00fc27c0001fc0030fe00003ffc000020fc00050301803700c0e7000038fb003cfd00080180000406004c0180fc00010806fc00147c3f830600007f0fe007c7fc0001fc1030fe000033fc000030fc00050301802600c0e7000038fb0035fd00040180000606fe0000c0fc00010c04fc00111c7f830600001e0ff001e7f80003fe1810fcf9000010fc00010381e3000018fb0038fd00040180000704fe0000c0fc00001efb00110660c3060001000c38006780000386103070f9000008fc00010386fe000020e7000038fb0039fd00040180000708fe000040fc00011e10fc0011066042060001000c18007780000102183060f9000008fc00010386fe000030e7000038fb004efd00040180000798fe000060fd0002061f70fc00113e6042060001800c1803f780000102181060f900070f0fff20b3ffeffefe000038f9ff12dff7ee7ffefff7ffffdeffffc3837fc0fed1f0fb0037fd000001feff00f8fe00007ffbff00f8fc00117e6043060001800c180ff700000302183060f900000ffbff00fefe00003fe7ff00f0fb0037fd000001feff00fcfe00007ffbff00f0fc0011fe6043060001800c180ff600000302183060f900001ffbff00fefe00003fe7ff00f0fb004afd000001feff00fcfe00007ffbff00f8fc0011fe6063ce0001800c1807e600000102183060f900000ffbff00fefe00133ffdfcffff0007fff0023fff809fffff3e1ffffcfaff00f0fb0039fc0003f0243ff8fe00077c000aff80003ff8fd001201866060fe0001000818006600000302187020f900000efe0003c00003cefe000038e00037fa00010f98fe00076000000700001e18fd0012018660e0fe000100081810660000030218f033f9000008fe000340000386fe000020e00037fa00010708fe00074000000300001e18fd001201876060fe0000300c181be60000038608f03ff9000008fe0003e0000382fe000060e00033fa00010e0cfe0007c000000300001c0cfc0011ff60400e0000fe0c181ff6000003fc0ff01ff6000801e0000303800000e0e00036fa000c0406000001c000000200001c04fc0011fe60400600007f0c180ff6000003f807f01ef9000b20000001f0000301800000c0e00036fa000c04060000018000000300000804fc0011fe60400600007e081807e6000001f807b00ef9000720000001f0000101fe0000c0e00031f900070600000180000003fe000004fc00083c00007c0000040010fc00014002f7000b20000003f8000001800000c0e00024f900070600000180000003fe000006f90000f8eb000b20000007f8000001800000c0e00024f900070700000180000003fe000006f90000f8eb000b20000007fc000001800000c0e00024f900070300000380000003fe000007f9000070eb000b60000003f8000001c0000080e0001ff9000303800003fe000003fe000003e20000c0fe0000c0fe0002c00001df0020f9000301800006fe000003fe00010380e30000c0fe0000c0fe0002600003df0020f80002c00006fe000003fe00010180e400010180fe0000c0fe0002600002df0020f80002c0000cfe000003fe000101c0e400010180fe0000c0fe0002300006df001ef8000260001cfe000003fd0000c0e4000003fd0000c0fe000210000cdf001ef80002600018fe000003fd0000e0e4000007fd0000c0fe00021c01fcdf0029f800023fc0f8fe000003fd00007ffaff00dff6ff00fdfbff03f3fffffefd0000c0fe00020ffff8df001ef800021ffff0fe000003fd00003fe4ff00fefd0000c0fe00020ffff8df001ef800021fffe0fe000003fd00003fe4ff00fcfd0000c0fe000207fff0df0030f800020fffe0fe000003fd00171f7fffffdd1fffee82fffff57ffff8081fffc201ffff23bffcff01fef8fd0000c0d9000af2000003da000040d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000007da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000002da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9000af2000003da0000c0d9002df2000003fd001f0180000023900003ff000a401e1c007c00200fe30001fe000016398000b10830fe0000c0d90012f2000003fe00000fe2ff00f8fe0000c0d90012f2000003fe00001fe2ff00f8fe0000c0d90020f2000003fe00001ffdff00bffeff02fdfff7f2ff00bffdff00f8fe0000c0d90016f2000003fe00001efb000004e9000038fe0000c0d90012f2000003fe000018e2000018fe0000c0d90012f2000003fe000018e2000018fe0000c0d90016f2000003fe000018f8000006ec000008fe0000c0d9001cf2000003fe0002100018fa000006fd0000c0f1000008fe0000c0d9001ff2000003fe0002180018fd000360000007fd0000c0f1000008fe0000c0d9001ff2000002fe0002180018fd000360000007fd0000c0f1000018fe0000c0d9001ff2000002fe0002180018fd000360000003fd0000c0f100001cfe0000c0d9001ff2000003fe000210001cfd000360000003fd000040f100001cfe0000c0d90029f2000003fe000a10000f0002000060007c03fd00037c000001fa00060c004002000018fe0000c0d9002ef2000003fe002018001fc00f81f86000fe02001f03f0fe00000fc0f807f00103e07f00fc0f800018fe0000c0d9002ef200240300000818001fe00f83f86000fe02001f03f8ff00000fe0fc07f08303e07f01fc0f800008fe0000c0d9002ef200240300000c10000fe007c7f82000f802000707f0ff80001f807c0ff18183f07f81fc0f800008fe0000c0d9002df2000e0200000e10001c7000c60020000002fd0011e18000380006087181003061830000600008fe0000c0d9002ef200240200000e1800183000ee002100000200018800418000300106103181003860c70010600008fe0000c0d9002ef200280300001e3800183000ec00630000020001880041800030018e1001810c7860c70038e0000c000001c0d9002ef2000003feff20f800183007ec007e00f802001fc3c041c0001f81fe1001810ff860c7003fe0000ffeff00c0d9002ef2000003feff20f80018100fec007e00f802001fc3e0c1c0000f81fe1831830ff840c7003fe0000ffeff00c0d9002ef2000003feff20f80018300fec007e00f802001fc3e0c1c0000fc1fe0871830ff860c6001fe0000ffeff00c0d9002df2002703ffe63ff800183018ec007f000e020001c1f0c1c00003c1800ff1830f2060c6001800000dc00001d80027ef00211f38001810306c006300060200418038c1c00000c10007f0870c0060c60010000008d50027ef00210e10001c3030e40063800c030041c030c1c00000c10007f00f000060c20010000008d50027ef00210e10001ff01fe7f861c1f807800fc7f0c1c0001fc0fe01f01f03f0e1c3f81fe00008d50027ef00210810001fc00fe3f860c3f807801fcfe0c1c0003f80fe00307f03f8e1c1fc0fe00008d50027ef00210810001fc00fe1f86043f807c01fcfe0c080003f807e00203b03f8e0c1fc0fe00008d50026ee000e100003c00300180001c007800e03c0fe000e1f801c00300001f000007c07800018d5000eee000010ec000030f8000018d5000eee000018ec000030f8000018d5000aee000018e2000018d5000aee000018e2000018d5000aee000010e2000018d5000aee000010e2000018d5000aee000010e2000018d5000aee000018e2000018d5000aee000018e2000038d5001fee00071f57988007ffee3ffeff009bf8ff02fdfffcfdff04e7e07ffff8d5000aee00001fe2ff00f8d5000aee00001fe2ff00f8d50026ee00201fffdfffff7fffffc8fe7fffe0efffe17fffff8609fffe16bfffff7ffffff7bff8d50002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a10002a1000000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1061{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw61\pich164\picwgoal1220\pichgoal3280\macpict\bliptag-1866588153\blipupi72{\*\blipuid 90be2007bb0556f6e980b912cf1aa755}287a0000000000a4003d001102ff0c00ffffffff0000000000000000003d000000a400000000000000a101f200163842494d00000000000000a4003d4772897068af626a001e0001000a0000000000a4003d009800200000000002ad00ff0000000002ad00ff0000000000a4003d000002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e1000e01000cfa00010180fe000030f0000e01000cfa000103c0fe000030f0001101000efd000410000003c0fe000030f0001101000efd000418000001c0fe000030f0001101000efd000418000001c0fe000018f0001101000efd000418000001c0fe000018f000211f0007c001c07818003f01c00780fc3c000001e00e00fc00007801800b00800000211f0007e003e0fe18007f01c00fc0fe3f800003f01f01fc0000f80fc03f81e00000211f0007f003e0fe18107f01c007c0fc3f800007f81f01fc2060fc0fe03f83e00000211f000fe003f1fc18007e00c00380203fe00007f00f837e3060fc1fe07f83e00000201c000e080033801800c000c00002003860000c0000c20e3061021c306006fe00211f000e0c0033001840c000c00023003870000c0001c60e3061831810c006080000211f000e0c00fb001c40d800c002e3f0303000078061c60e3061ff0818c007fc0000211f000e0c03fb001f007c00c007e1f830300007e07fc6063061ff1818c007fc0000211f00060c03fb001f007c00c00ff0f830300003e07fc20e3061ff1838c007fc0000211f00060c03fb001f803e01c00ff01c38700003e07fc0fe3061fe1818c007fc0000201c00060c003b801fc00101c000f00c38700000107001fe30e1801c18c007fe00201c00060c083f8018e00381c010700638700000186001fe30e1001c18c006fe00201c00071c0c7bc018e01701c019f01c38600000787800fe30e0001c386002fe00211f0007f807f9fe1870ff03e00ff1fc3870000ff03f800e1fe0ff1c387f83f80000211f000ff007f8fe1830fe03e00ff3fc3870000ff03fc0060ff0ff18383f81fc0000211f0007f003f8fe1830fe03e00ff3f83830000fe01fc0060f607f08183f81fc00001e0300006001fc000301e007c0fd000e03800f80060e00200010000038000006ec000006f70006ec000006f70002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e10002e1000dfb00017ffef9000201fffcf4000dfb0001fffff9000203fffef4000efc000201fffff9000203fffef4000ffc000303fd8080fa000206201ff40010fc0003030000c0fa000306000180f50010fc0003060000c0fa000306000180f50010fc000306000060fa0003080001c0f50010fc00030c000070fa000318000060f50010fc00031c000070fa000318000060f50010fc00031c000038fa000330000070f50010fc000338180018fa000370000038f50010fc0003301c001cfa000360000018f50010fc0003301c001cfa000360000018f50010fc0003300e001cfa0003601f8018f50016fd0004603006001cfb0004c0601fc018fb000001fc0017fd0004602006000cfb0004c0601fc018fb00010180fd0017fd00047040010004fb0004e0e038e008fb00010180fd0017fd000470c0018006fb0004f08038600cfb000101c0fd0017fd0004f8c0038007fb0004f18038700efb000103e0fd001f1b000fff1fffc001c007f3203f84fff8fb8038700fffffbf79fff803e0fd001701000ffeff03c000e007faff0380387007faff00f0fd001701000ffeff03c000e007faff0380387007faff00f0fd001e0800007ffef9c0003007fdff07b0c1ff8038300fe8feff03c073fff0fd001dfd000478c0003007fe0007780000fb8038300efe000470000003e0fd001dfd00047800003006fe0007300000f1c038300efe000470000001e0fd001dfd0004700000100cfe0007300000f0c038700cfe000478000001c0fd001dfd0004601000001cfe0007300000e06038701cfe0004f800000180fd001dfd0004603000001cfe0007300000c060187018fe0004fc00000180fd001cfc00033000001cfe00073000008060102018fe0004fc00000180fd0018fc00033000001cfe000030fe000760000018000001fef90018fc000330000018fe000030fe000770000038000001fef90018fc000338000018fe000030fe000770000038000001fef90018fc00031c000030fe000030fe000338000070fe0000f8f90018fc00030c000070fe000030fe000318000060fe000030f90018fc00030c000060fe000030fe000318000060fe000030f90015f90000e0fe000030fe00030c0000e0fe000030f90018fc0003020001c0fe000030fe0003060001c0fe000030f90018fc0003030001c0fe000030fe000306000180fe000030f90018fc000303c21f80fe000030fe000301ffe380fe000030f90016fc000201fffffd000030fe000201fffffd000030f90016fc000201fffffd000030fe000201fffefd000030f90014fb0001fffefd000030fd0001fffefd000030f9000af5000030f7000030f9000af5000030f7000030f9000af5000030f7000070f9000af5000030f7000070f9000af5000030f7000030f9000af5000030f7000030f9000af5000030f7000030f9000af5000030f7000030f9000af5000030f7000030f9000af5000030f7000030f9000af5000030f7000030f9000af5000030f7000030f9000af5000030f7000030f9000af5000030f7000030f9000af5000038f7000030f9000af5000038f7000030f9000af5000030f7000030f9000af5000030f7000030f9000af5000030f7000030f9000af5000030f7000030f9000af5000030f7000030f9000af5000038f7000030f9000af5000038f7000030f9000af5000030f7000070f9000af5000038f7000030f9000af5000030f7000030f9000af5000030f7000030f9000af5000030f7000030f9000ff5000030fd00015980fd000030f90010f5000038fe000201fffefd000030f90010f5000038fe000201fffffd000030f90010f5000038fe000201fffffd000030f90011f5000038fe000302000380fe000030f90011f5000038fe000306000180fe000030f90011f5000038fe00030e0001c0fe000030f90011f5000038fe00030c040060fe000030f90011f5000038fe00030c0c0060fe000030f90011f5000030fe0003180e0070fe000030f90011f5000030fe0003100c0038fe000030f90011f5000030fe0003300c0018fe000030f90011f5000030fe0003200e0018fe000030f90011f5000030fe0003200f8018fe000030f90011f5000038fe0007201fc01800000430f90011f5000b38000040201fc01800000630f90011f5000b38000060000f800800000630f90011f5000b38000060000e000400000730f90011f5000b38000070800e0006000007f0f90011f5000b3c0100f1c00e00073f740ff0f90011f500001ffeff0380060007feff00f0f90011f500001ffeff03c0040007feff00f0f90011f500001ffeff03c0040007feff00f0f90011f5000b1e0000ffc00e000780001ff0f90011f5000b180000f8c00e3006000007f0f90011f5000b380000f0c007f00e00000730f90011f5000b380000e06003e00e00000730f90011f5000b380000e02003e01800000e30f90011f5000b380000403001c01800000430f90011f5000038fe000330000008fe000030f90011f5000038fe000330000018fe000030f90011f5000018fe000330000018fe000030f9000ef5000038fb000038fe000030f90011f5000038fe000308000030fe000030f90011f5000038fe00030c000070fe000030f90011f5000038fe00030c000060fe000030f90011f5000038fe0003040000e0fe000030f90011f5000038fe0003020001c0fe000030f9000ff5000038fc000101c0fe000030f90011f5000018fe000301ffff80fe000030f90010f5000018fe000201fffffd000030f90010f5000038fe000201fffffd000030f9000ff5000038fd0001340efd000030f9000af5000038f7000030f9000af5000018f7000030f9000af5000038f7000030f9000af5000038f7000030f9000af5000038f7000030f9000af5000018f7000030f9000af5000018f7000030f9000af5000018f7000030f9000af5000018f7000030f9000af5000018f7000030f9000af5000018f7000038f9000af5000018f7000038f9000af5000018f7000018f9000af5000038f7000038f9000af5000038f7000038f9000af5000038f7000038f9000af5000018f7000038f9000af5000018f7000038f9000af5000018f7000038f9000af5000018f7000038f9000af5000018f7000038f9000af5000018f7000038f9000af5000018f7000038f9000af5000018f7000038f9000af5000018f7000038f9000af5000018f7000038f9000af5000018f7000038f9000af5000018f7000038f9000ff5000038fd0001fffefd000038f90010f5000018fe000201fffffd000038f90010f5000038fe000201fffffd000038f90011f5000018fe000303ff8f80fe000038f90011f5000018fe0003030001c0fe000038f90011f5000018fe0003030000c0fe000038f90011f5000018fe0003060000e0fe000038f90011f5000018fe000304000030fe000038f90011f5000018fe00030c000030fe000038f90011f5000018fe00030c000038fe000018f90011f5000008fe000318000018fe000018f90011f5000008fe00031000000cfe000018f90011f5000018fe00033000000cfe000018f90011f5000018fe00033000100cfe000018f90011f5000b180000603818100c00000638f90011f5000b180000603018180c00000738f90011f5000b18000070701c3806000007b8f90011f5000b18000078601c1806000007b8f90011f5000b1c000078e01c1803000007f8f90011f500001ffeff07e01c1803ffffcff8f90011f500001ffeff03e01c3803feff00f8f90011f500001ffeff03e00c3003feff00f8f90011f5000b1f8018ffe00c7003f4001ff8f90011f5000b1c000078e0066003000007f8f90011f5000b18000078e007e007000007b8f90011f5000b180000707003c00600000798f90011f5000b180000703001c00e00000718f90011f5000b180000603001800c00000718f90011f5000b180000203800000c00000218f90011f5000018fe00033800000cfe000018f90011f5000018fe00033800000cfe000018f90011f5000018fe00031800001cfe000018f90011f5000018fe00030c000018fe000018f90011f5000018fe00030c000038fe000018f90011f5000018fe000306000070fe000018f90011f500001cfe000306000070fe000018f90011f5000018fe0003030000e0fe000018f9000ef5000018fb0000c0fe000018f9000ff5000018fd0001fffffd000018f9000ff5000018fd0001fffffd000018f9000ff5000018fd0001fffffd000018f9000ef5000018fc000006fd000018f9000af5000018f7000018f9000af5000018f7000018f9000af5000018f7000018f9000af5000018f7000018f9000af5000018f7000018f9000af500001cf7000018f9000af500001cf7000018f9000af500000cf7000018f90006ea000018f9000af5000018f7000018f9000af500001cf7000018f9000af500001cf7000018f9000af500001cf7000018f9000af500001cf7000018f9000af500001cf7000018f9000af500001cf7000018f9000af500001cf7000018f9000af500001cf7000018f9000af500001cf7000018f9000af500001cf7000018f9000af500001cf7000018f9000af500001cf7000018f9000af500001cf7000018f9000af500001cf700001cf9000af500001cf700001cf9000af500001cf7000018f9000af500001cf7000018f9000ef500001cfd000012fc000018f9000ff500000cfd00017ffffd00001cf90010f500000cfd00027fff80fe00001cf90010f500001cfd00027fffc0fe00001cf90011f500000cfe0003018001e0fe00001cf90011f500000cfe0003018000e0fe000018f90011f500000cfe000301000060fe00001cf9000ef500000cfb000030fe00001cf90010f500000cfd00020c0038fe000018f90011f500000cfe0003060c0018fe00001cf90011f500000cfe00030c0c001cfe00001cf90011f500000cfe00031c0c000efe00001cf90011f500000cfe0003180c000efe00001cf90011f500000cfe0003180f000efe00001cf90011f500070c000020180fe006fe00001cf90011f5000b0c000030180ff0060000011cf90011f5000b0c000038180fe0060000011cf90011f5000b0c00003c300e08030000019cf90011f5000b0c00003c200e1c03000001dcf90011f5000b0c00003c600c1c03800003fcf90011f500000ffeff03e00c0c01feff00fcf90011f500000ffeff03e00c1c01feff00f8f90011f500000ffeff03e00c1c01feff00f8f90011f5000b0f00007fe00c1c01e00003f8f90011f5000b0e00003c600e1c01800003f8f90011f5000b0c00003c300e1c03800003dcf90011f5000b0c000038380ff807000003ccf90011f5000b0c000038180ff0060000038cf90011f5000b0c0000301807f0060000038cf90011f500070c00001018076006fe00000cf90011f500000cfe00031c000006fe00000cf90011f500000cfe00031c000006fe00000cf90011f500000cfe00030c00000efe00000cf90011f500000cfe00030600000cfe00000cf90011f500000cfe00030200001cfe00000cf90011f500000cfe000303000018fe00000cf90011f500000cfe000303800038fe00000cf90011f500000cfe000301800030fe00000cf9000ef500000cfb000070fe00000cf90010f500000cfd00023fffe0fe00000cf90010f500000cfd00027fffc0fe00000cf90010f500000efd00027fffc0fe00000cf90010f500000efd0002203f80fe00000cf9000af500000ef700000cf9000af500000ef700000cf9000af500000ef700000cf9000af500000ef700000cf9000af500000cf700000cf9000af500000cf700000cf9000af500000cf700000ef9000af5000004f700000cf9000af500000ef700000cf9000af500000ef700000cf9000af500000ef700000ef9000af500000ef700000ef9000af500000ef700000ef9000af500000ef700000ef9000af500000cf700000ef9000af500000ef700000ef9000af500000ef700000ef9000af500000ef700000ef9000af5000006f700000ef9000af500000ef700000ef9000af5000006f700000ef9000af500000ef700000cf9000af500000ef700000ef9000af5000006f700000ef9000af5000006f700000cf9000af5000006f700000ef9000af5000006f700000ef9000af500000ef700000cf90010f5000006fd00023fff80fe00000ef90010f5000006fd00027fffc0fe00000ef90010f5000006fd00027fffc0fe00000cf90010f5000006fd0002c000e0fe00000cf90011f5000006fe000301c00030fe00000ef90011f5000006fe000301800010fe00000cf90011f5000006fe000301000008fe00000ef90011f5000006fe00030300000cfe000006f90011f5000006fe00030700000cfe00000ef90011f5000006fe000306000007fe00000cf90011f5000006fe00030e000007fe00000ef90011f5000006fe00030c000007fe00000cf90011f500000efe00030c003803fe00000cf90011f5000006fe00030c027c03fe00008ef90011f5000b060000180c077c030000018ef90011f5000b0600001c1c078003000001cef90011f5000b0600001c18078001800001eef90011f5000b0600001e30078001800001ecf90011f5000b0700001f70070001c01c03fcf90011f5000007feff03f0070000feff00fcf90011f5000007feff03f0060000feff00fcf90011f5000b07ffff7ff0060001ffff9ffcf90011f5000b0700001f70060001e00003fcf90011f5000b0700001e38060001c00001fef90011f5000b0600001e38060001c00001eef90011f5000b0600001c1c060003800001ccf90011f5000b060000180c060003000001cef90011f50007060000180c000003fe00008ef90011f5000007fe00030c000003fe00000ef90011f5000007fe00030e000003fe000006f90011f5000006fe00030e000007fe000006f90011f5000006fe000307000006fe00000ef90011f5000006fe00030300000efe00000ef90011f5000006fe00030300000cfe000006f90011f5000006fe00030180001cfe000006f90011f5000006fe000301800038fe000006f90010f5000006fd0002800030fe00000ef90010f5000006fd0002010070fe00000ef90010f5000006fd00023fffe0fe00000ef90010f5000006fd00023fffc0fe00000ef90010f5000006fd00021fffc0fe00000ef9000af5000006f700000ef9000af5000006f700000ef9000af5000006f700000ef9000af5000006f7000006f9000af5000006f700000ef9000af5000006f7000006f9000af5000006f7000006f9000af5000006f7000006f9000af5000007f7000006f9000af5000007f7000006f9000af5000006f7000006f9000af5000006f7000006f9000af5000006f7000006f9000af5000006f7000006f9000af5000006f7000006f9000af5000006f7000006f9000af5000007f7000006f9000af5000007f7000006f9000af5000007f7000006f9000af5000006f7000006f9000af5000007f7000006f9000af5000007f7000006f9000af5000006f7000006f9000af5000006f7000006f9000af5000007f7000006f9000af5000007f7000006f9000af5000007f7000006f9000af5000007f7000006f90010f5000007fd00020fff80fe000006f90010f5000007fd00023fffc0fe000006f90010f5000007fd00023fffc0fe000006f90010f5000007fd00027f77e0fe000006f90010f5000007fd0002c00030fe000006f90010f5000007fd0002c00010fe000006f90010f5000007fd0002800018fe000006f90011f5000007fe00030180380cfe000006f90011f5000007fe00030180780efe000006f90011f5000007fe000303007806fe000006f90011f5000003fe00030200c607fe000006f90011f5000003fe00030600c603fe000006f90011f5000007fe00070600c00380000006f90011f5000007fe00070600c00380000006f90011f5000007fe00070e00c00380000086f90011f5000b0300000c0e01c001800000c6f90011f5000b0300000e0c01f001800000c6f90011f5000b0300000e1803f800c00000e6f90011f5000b0300001e1803f800c00000f6f90011f5000b03c1fe3f7801f0007fffe1fef90011f5000003feff03f801c000feff00fef90011f5000003feff03f800c000feff00fef90011f5000b03e0e03ff800c000f80801fef90011f5000b0380001f3800c000e00000fef90011f5000b0300000f1801c000c00000f6f90011f5000b0300000e1c00c000c00000e6f90011f5000b0300000c0e00c001800000e6f90011f5000b0300000c0600c003800000c6f90011f5000b0300000c0600000380000006f90011f5000003fe00070600000380000006f90011f5000003fe00070600000380000007f90011f5000003fe000307000003fe000007f90011f5000003fe000303000007fe000006f90011f5000003fe000301800006fe000007f90011f5000003fe00030180000efe000006f90011f5000003fe000301c0001cfe000007f90010f5000003fd0002c00018fe000003f90010f5000003fd0002400018fe000007f90010f5000003fd000268fe78fe000007f90010f5000003fd00023fffe0fe000007f90010f5000003fd00023fffe0fe000007f90010f5000003fd00021fffc0fe000007f9000af5000003f7000007f9000af5000003f7000007f9000af5000003f7000003f9000af5000003f7000007f9000af5000003f7000007f9000af5000003f7000007f9000af5000003f7000007f9000af5000003f7000007f9000af5000003f7000007f9000af5000003f7000007f9000af5000003f7000007f9000af5000003f7000003f9000af5000003f7000007f9000af5000003f7000007f9000af5000003f7000007f9000af5000003f7000007f9000af5000003f7000007f9000af5000003f7000007f9000af5000007f7000003f9000af5000007f7000007f9000af5000007f7000007f9000af5000007f7000007f9000af5000007f7000007f9000af5000007f7000007f9000af5000003f7000003f9000af5000003f7000007f9000af5000003f7000007f9000af5000007f7000007f9000af5000007f7000007f9000af5000007f7000007f90010f5000003fd00021f9b80fe000007f90010f5000003fd00023fffe0fe000007f90010f5000007fd00023fffe0fe000007f90010f5000007fd00027fffe0fe000003f90010f5000003fd0002700018fe000003f90010f5000003fd0002e00018fe000003f90010f5000007fd0002e0001cfe000003f90011f5000003fe000301c0000efe000003f90011f5000003fe000301800006fe000003f90011f5000007fe000303800007fe000003f90011f5000007fe000303000007fe000003f90011f5000007fe00070603000380000003f90011f5000003fe00070603800380000003f90011f5000003fe00070601c00380000003f90011f5000003fe00070600c00380000043f90011f5000b0300000c0600c00180000043f90011f5000b0300000c0600600080000063f90011f5000b0300000e0c007000c0000073f90011f5000b0300000f180030006000007ff90011f5000b0380000f18001800703a90fff90010f5000803fbdffff8000c007ffefff90010f5000003feff04f8000c007ffefff90010f5000003feff04f8000e007ffefff90011f5000b03e0001ffc000600700000fff90011f5000b0380000f1c000200600000fbf90011f5000b0380000f1c000200e0000073f90011f5000b0300000f0c000001c0000073f90011f5000b0300000e0600000180000063f90011f5000b0300000c0600000180000063f90011f5000003fe00070600000180000003f90011f5000b038000000700000180000003f90011f5000b038000000300000380000003f90011f5000003fe00070300000380000003f90011f5000003fe000301800003fe000003f90011f500070380000001c00006fe000003f90011f500010380fe0002c00006fe000003f90011f500010380fe0002e0000efe000003f90010f5000003fd000260001cfe000003f90010f5000001fd000230001cfe000003f90011f5000001fd00021ffff8fe00010180fa0011f500010380fe00021ffff0fe000001f90012f500010380fe00021fffe0fe00010180fa0011f500010380fe0002044080fe000003f9000bf500010180f8000003f9000bf500010180f8000003f9000bf500010180f8000003f9000bf500010180f8000003f9000cf500010180f800010380fa000cf500010180f800010380fa000cf500010180f800010380fa000bf500010180f8000003f9000bf500010180f8000001f9000bf500010180f8000003f9000bf500010180f8000003f9000bf500010180f8000003f9000cf500010180f800010380fa000cf500010180f800010380fa000cf500010180f800010380fa000cf500010180f800010380fa000cf500010180f800010180fa000cf500010180f800010180fa000cf500010180f800010180fa000cf500010180f800010180fa000cf500010180f800010180fa000cf500010180f800010180fa000cf500010180f800010180fa000cf500010180f800010180fa000cf500010180f800010180fa000cf500010180f800010180fa000cf500010180f800010180fa0010f500010180fd00001cfd00010180fa0012f500010180fe00020ffff0fe00010180fa0012f500010180fe00020ffff0fe00010180fa0012f500010180fe00021fffe0fe00010180fa0012f500010180fe000238000cfe00010180fa0012f500010180fe000230000cfe00010180fa0012f500010180fe0002300006fe00010180fa0012f500010180fe0002602603fe00010180fa0012f500010180fe0002c07603fe00010180fa0012f500010180fe0007c07e038000000180fa0012f5000c0180000001807e01c000000180fa0012f5000c0180000001807e00c000000180fa0012f5000c0180000001007e00c000000180fa0012f5000c0180000003807e00c000000180fa0012f5000c0180000003007e00c000002180fa0012f5000c0180000203003600c000003180fa0012f500040180000303fe00046000003980fa0012f500040180000786fe00043000003980fa0012f500040180000786fe00043000003f80fa0012f5000401c00007ccfe000438f7fcff80fa0012f5000001feff00fefe00003ffeff0080fa0010f400feff00fefe00003ffeff0080fa0010f400feff00fefe00043ff7c7ff80fa0011f40003f0000fcefe00043c00007f80fa0011f40003c000078efe00043000003d80fa0011f40003c0000786fe00047000003980fa0011f40003c0000707fe00046000003180fa0012f5000401c0000703fe0004e000003180fa0012f5000401c0000701fe0004c000003180fa0012f5000401c0000201fe0004c000000180fa0012f5000c01c0000003800000c000000180fa0011f4000bc0000003800000c000000180fa0011f4000bc0000001c00001c000000180fa0011f40000c0fe0007c000018000000180fa0011f40000c0fe0007e000038000000180fa0012f5000101c0fe0002600003fe00010180fa0012f5000101c0fe0002300007fe00010180fa0011f40000c0fe0002300006fe00010180fa0012f5000101c0fe000218000efe000101c0fa0012f5000101c0fe00020ffffcfe000101c0fa0012f5000101c0fe00020ffff8fe000101c0fa0012f5000101c0fe00020ffff8fe000101c0fa0012f5000101c0fe00020680f0fe000101c0fa000cf5000101c0f8000101c0fa000cf5000101c0f8000101c0fa000cf5000101c0f800010180fa000bf40000c0f8000101c0fa000bf40000c0f8000101c0fa000bf40000c0f8000101c0fa000af40000c0f70000c0fa000bf5000101c0f70000c0fa000bf5000101c0f7000080fa000bf5000101c0f70000c0fa000bf5000101c0f70000c0fa000af40000c0f70000c0fa000bf40000c0f8000101c0fa000bf40000c0f8000101c0fa000bf40000c0f8000101c0fa000cf5000101c0f8000101c0fa000cf5000101c0f8000101c0fa000cf5000101c0f8000101c0fa000bf5000101c0f70000c0fa000bf40000c0f8000101c0fa000bf40000c0f8000101c0fa000bf40000c0f8000101c0fa000af40000c0f70000c0fa000af40000c0f70000c0fa000af40000c0f70000c0fa000af40000c0f70000c0fa000af40000c0f70000c0fa000cf5000101c0f8000101c0fa000ff5000101c0fd000006fc0000c0fa0010f40000c0fe000207fff8fd0000c0fa0010f40000c0fe00020ffff8fd0000c0fa0010f40000c0fe00020ffff8fd0000c0fa0010f40000c0fe00021c001cfd0000c0fa0010f40000c0fe0002380006fd0000c0fa0010f40000c0fe0002380006fd0000c0fa0010f40000c0fe0002300003fd0000c0fa0012f5000101c0fe0003600c0180fe0000c0fa0011f40000c0fe0003600c0180fe0000c0fa0011f40000c0fe0003c00c01c0fe0000c0fa0011f40007c0000001c00c00e0fe0000c0fa0011f40007c0000001800c0060fe0000c0fa0011f40007c0000001800c0060fe0000c0fa0011f40007c0000001800c0060fe0000c0fa0011f40007c0000301800c0060fe0000c0fa0011f40007c000030180000070fe0000c0fa0011f40007c000038380000030fe0000c0fa0011f40003c00003c2fe000018fe0000c0fa0011f40003c00003c6fe000418000003c0fa0011f40003fffeeffefe00001ffeff00c0fa0010f400feff00fefe00001ffeff00c0fa0010f400feff00fefe00001ffeff00c0fa0011f40003fe382ffefe00041e0000d980fa000bf2000107cefe000038f6000bf2000103c7fe000030f6000bf2000503c380000030f6000bf20005038380000060f6000bf20005030180000060f6000bf20005030180000060f6000af100040180000060f6000af100040180000060f6000af1000401c00000e0f60009f00003e00001c0f60009f0000370000180f60009f0000370000180f60009f0000330000380f60008f00002180007f50008f00002080006f50008f000020ffffef50008f0000207fffcf50008f0000207fff8f50008f0000203ff78f50002e10002e10002e10002e10002e10002e10002e10000ff}}{\par \par \par }{{\pict{\*\picprop\shplid1062{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw189\pich45\picwgoal3780\pichgoal900\macpict\bliptag-1926179715\blipupi72{\*\blipuid 8d30d47d90774a23345e63f7d532a8f8}124600000000002d00bd001102ff0c00ffffffff000000000000000000bd0000002d00000000000000a101f200163842494d000000000000002d00bd4772897068af626a001e0001000a00000000002d00bd009800640000000000bb03150000000000bb031500000000002d00bd0000029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d0006fb000003a4000b020001c0fe00010780a5000b020001e0fe00010780a5000b020000e0fe00010380a5000b020000e0fe00010380a5000b02000060fe00010180a5000e02000060fe00040180000040a8000e0a00006000201e01808181e0a8000e0a00006030601f0180c181f0a8000e0a00006030601f0180c183f0a8000e0a0000603060038180c180f8a8000e0a0000603060018180c18018a8000e0a0000603070018180c18618a8000e0a00006030701f8180c187fca8000e0a00004030701f8180c187f8a8000e0a00004030603f8180818ff8a8000e0a00004038e03f8180c38ff0a8000d0900004019c0638180c384a7000d090000400dc0618180c784a7000e0a0000e00f807fc3c07f8030a8000e0a0000f007803fc3e03f83f8a8000e0a0001f807003f87e03d83f8a8000e0a0000f003001f83e03801f8a8000e0a0000f000000703c00001f0a800029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d001dc3000040fb000010fe00096800001e7e1000ffff70fe000201bff8f60020dc0006c380471d0001f8fa000201fff8fd00007feaff00f0fe000201fffcf6001cee000003eaff00fcfa000203fffcfd00e9ff00f8fe000203fffcf60022f8000207fff0fa000007eaff00fcfa000203fffcfd00e9ff00f0fe000207fffcf60036f800020ffff8fa000007eaff00fcfa0002033ffefd000af183fff020077fe0001014fe0000b0fc00000cfe0000f0fe00020e0006f60034f800020ffff8fa00100fffffcc0cfde0001e1b0000e00c000008fa00000cfa0002080006fd0000e0ea000030fe00020c0003f60024f8000207fffcfa000006ea00000cfa0002180003fd0000c0ea000030fe00020c0003f60024f600000cfa000006ea00000cfa000318000380fe0000c0ea000030fe0003183fc380f7002cf6000004fa000004f4000003f800000cfa0003303fc180fe0000c0f20000c0fa000030fe0003307fe180f70031ee000006fd000020fc0005100040078020fa00000cfa0003207fc1c0fe0000c0f2000080fa000030fe0003303fe1c0f70035f80002400003fa000006fd0002200030fe0005300040078020fa00000cfa0003207fc0e0fe0000c0ea000030fe00037007e0e0f70031f80002400803fa00000efb000030fe000430004003c0f900000cf900027f0060fe0000c0ea000030fe00036003c060f70033f8000340080180fb00000efb000030fe00043000000840f900000efa0003c0780070fe0000c0ea000030fe00036001c060f70038f9000401801900c0fb00000cfb000030fe00043000000840f900000cfa000380780070fe0000c0ef000060fd000030fe00036001c060f7004ff900040180d980c0fb00000cfb000070fe0008380000080000010006fd00000cfa0003c0780030fe0000c0fe000f07800107e047c0f803e03f03801f03f0fd000730000080e001c060fb00000cfe0053f9000401807f80c0fb00000cfd000e6007f01807c07e01c008006007c01ffd00000cfc0009010080780030000020c0fe000f07c0810fe067c0f807f07f03801f03f0fd000730000080e001c060fb00000cfe0053f9000401807f00c0fc0001060cfd000ef007f03c0fe07f01c01800e007c09ffd000004fc0009018080780070000020c0fe000f07c0810ff06fc0f807e07f03801f83f8fd0006300000c0c001c0fa00000efe0053fa00050201803e00c0fc0001060cfd000ef007f03c0fe07e01e01c00e007c0fffd00000cfc000901c000780030000030c0fd000ee0470c187d000401c00001c001870cfd0006300000e18001c0fa00000efe0052fa00030301003efa0001070cfd000e700070180ff03800c03f00600061f8fd00000cfc000901c000780018000038c0fd0007206c0c1870000618fe00038040c60cfd0007300000e18001e008fb00000ffe0057fa00030380003cfa0001078cfd000e7000300008183000c03f00200020e0fd000004fc000901e200780018000078c0fe000f10707c0c18700306080080008040c606fd0008380001f38001e01c02fe000520001f80000056fa0005038600180020fc0001078cfd000e3010308208183000403f00201871c0fd00000ffd000a0203ff0078000ffec1ffc0fe000f1ff03c0c187003fe0f80fc00c040c60cfd00003ffeff038001e01ffaff0280000053fa000503ce00180030fc000107fcfd000e301030ff08103000401c00201ff1c0fd00000ffaff030078001ffeff00c0fe000f1fe0180c186003fe07c07e00c040c60cfd00003ffeff038001e01ffaff028000005a13000100000cd0000ffe003c003e3fffffbffffffcfd000e301830ff08103000601800201ff180fd00000ffaff030070001ffeff00c0fe000f1fe0180c184003fe07c07e008040c60cfd00003ffeff038001e01ffaff028000005801000ffbff04fe003e003ffbff00fcfd000e201830ff08103000601800201fe180fd00000ffaff070070001fffdfffc0fe000f1fe03c0ff040038803e01000c040c60cfd00113fc041ff8001c01fe00003fc00007f8000005b01001ffbff04fe003e003ffbff00fcfd000e201830fe0818300060180020180180fd000f0e0001c7f00003ff0078001c00007dc0fe000f18007e07f040010000200100c040c604fd0007380000f38001c018fe0003c000000ffe005e01001ffbff0bfe003f003ffffe03c3efcfdcfd000e301830800818300040180020100180fd00000cfe000b600001e200780018000078c0fe000510006e0fe040fe0006200001c060c604fd000e380000e18003e018000001c000000ffe00601300026ffc00f00407ee003f00300000018000078cfd000e301831800818118060180030000180fd000004fe0005600001c00078fd000178c0fe000f01c0e60fe06001f803e01001e07f860cfd000e300000e1c00fe038000001e000000efe005efc000e400003c6009f00300000018000078cfd000e701cf08008181f80e01800780fe180fd00000cfe000b600001c0807f8020000070c0fe000f07e0c30c006000fe1fc0fc03e03f060efd000e300000c0e03fe030000003e000000efe005efc000e4000038600190060000001c000070cfd000ef80ff07e08180f01f01800f80ff180fd00000cfe000b60000180c07fc030000060c0fe000f07f0830c004000fe1fc0fc03e01f060cfd000e300000c0e03fc060000003f000000cfe0059fc000e40000301001800e0000003e000060cfd000ef807f07f08180f01f00800f807f180fd00000cfe000b60000100c07fc030000060c0fe000d07e0010c0040007e0f80fc01c01ffb000030fe0007e007c060000007f8fb004bfc000ee0000301801800c0000007e000040cfd000df807e03f08000601f00000f803c0fc00000cfe000760000001c00f0070fe0000c0fb00000cf1000030fe00076000006000000ff8fb0041fc000ee0000201800800c0000007f000000cfd00033000000ef200000cfe000060fe0003c0000060fe0000c0fb00000cf1000030fe00076000006000000ff8fb003afc000ee0000001800000c000000ff800000cea00000cfe000060fe0003c0000060fe0000c0fb00000cf1000030fe000760000060000007f8fb0036fc000ee0000001800000c000000ff000000cea00000cfe000060fe0003400000c0fe0000c0ea000010fe0007300000c0000001c0fb0036fc000ee0000001800001c000000ff000000cea00000cfe000060fe0003600001c0fe0000c0ea000010fe00073000018000000180fb0036fc000ee0000001c0000180000001c000000eea00000cfe000060fe0003700001c0fe0000c0ea000030fe000318000080fe000080fb0033fc000060fe0002c00003fe0004018000000cea00000cfe000060fe000310000180fe0000c0ea000010fe00001cfb0000c0fb0035fc0000e0fe0002400003fe0004018000000cea00000cfe000060fe0002180003fd0000c0ea000030fe00020c0003fe000101c0fb0033fc0000e0fc000007fe0004018000000cea00000cfe000060fe00021c0002fd0000c0ea000030fe00020e000efe00010180fb0049fc0000e0fe000230000cfe0004018000000cea00000cfe000060fe00020e0006fd000070fe000008fe001014000008f000083c00787fff8393fffff0fe000207fffefe000101c0fb0040fc0000e0fe000230000cfe0004018000000ef8000008fa0006810003fffff83cfe000060fe000207fffefd00017ff8ebff00f0fe000203fffcfe000101c0fb0033fc0000c0fe0002100038fe0004018000000feaff00fcfe000060fe000207fffcfd00e9ff00f0fe000203fffcfe000101c0fb0041fc0000c0fe00021ffff8fe0004018000000feaff00fcfe000060fe000203fffcfd00007ffbff00fefbff05feefffffee03fdff00f0fd0001c0f8fe000101c0fb0033fc0000c0fe00020ffff0fe00040180000007f5ff02fe7a3ffcff03cffffff8fe000060fd00010778fb000001e2000101c0fb0025fc0000c0fe00020ffff0fe000c0180000003ffffc00110000001ee000060d5000101c0fb0019fc0000c0fe000101d2fd00010180e3000060d5000101c0fb0014fc0000e0f800010180e3000060d500010180fb0014fc0000e0f800010180e3000060d500010180fb0014fc0000e0f800010180e3000060d500010180fb0014fc0000e0f800010180e3000060d5000101c0fb0014fc0000e0f800010180e3000060d5000101c0fb0014fc0000e0f800010180e3000060d500010180fb0013fc0000e0f800010180e3000060d4000080fb0014fc0000e0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000e0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000e0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d5000101c0fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0014fc0000c0f800010180e3000060d500010180fb0034fc0000c0f800010180e3000060fb000010fa00190800003fe00800781f1e03e641fffeff9f1ff9f9ffbffff7ffc7fcff0080fb0013fc0000c0f800010380e300007fd4ff0080fb0013fc0000e0f800013f80e300007fd4ff0080fb0021fc00f6ff0080e300007fe8ff037f7fffeefeff00cffbff00f1feff02fdff80fb001dfc00f6ff0080e300110a00fff000013e400001c3000003c000000fde0006fc00f6ffad000bfc00057fffc00010c4a800029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d00029d0000ff}}{\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732481}\hich\af4\dbch\af4\loch\f4 Libraries{\*\bkmkend _Toc497732481}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Several of the most important library functions from full C have been provided with Small-C. Basically, those libraries that were helpful for writing the compiler \hich\af4\dbch\af4\loch\f4 have been included.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 fclose (ref)\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Close the file whose reference number is }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ref}{\hich\af4\dbch\af4\loch\f4 . If }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ref}{\hich\af4\dbch\af4\loch\f4  is zero, all open files will be closed.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 fgetc (ref)\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Returns the next character from the file whose reference number is }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ref}{\hich\af4\dbch\af4\loch\f4 . If }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ref}{\hich\af4\dbch\af4\loch\f4  is zero, the character is read from\hich\af4\dbch\af4\loch\f4  the keyboard. If an end of file condition is encountered, or if a read error occurs, -1 is returned.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 iscsyn (ch)\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ch}{\hich\af4\dbch\af4\loch\f4  is a character. If it is an alphanumeric character or an underline character, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 iscsym}{\hich\af4\dbch\af4\loch\f4  returns a one; otherwise, it returns a zero.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 iscsym\hich\af6\dbch\af4\loch\f6 f (ch)\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Returns a one if }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ch}{\hich\af4\dbch\af4\loch\f4  is an alphabetic character or the underline character, and a zero if it is not.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 isdigit (ch)\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Returns a one if }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ch}{\hich\af4\dbch\af4\loch\f4  is a numeric character, and a zero if it is not.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 fopen (name, code)\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 name}{\hich\af4\dbch\af4\loch\f4  is a pointer to a file name, and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 code}{\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 is a pointer to the kind of open to perform. If }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 code}{\hich\af4\dbch\af4\loch\f4  points to an "r", the file is opened for reading. If }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 code}{\hich\af4\dbch\af4\loch\f4  points to a "w", any existing file is deleted and a new file is opened for writing. The function returns a zero if the file cannot be opened, and\hich\af4\dbch\af4\loch\f4  a reference number for future use by }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 fclose}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 fqetc}{\hich\af4\dbch\af4\loch\f4  or }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 fputc}{\hich\af4\dbch\af4\loch\f4  if the file is opened successfully.\par \par \hich\af4\dbch\af4\loch\f4 Example :\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 ref = fopen ("mydirectory/myfile","r");\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 fputc (ch, ref)\par }\pard\plain \s15\qj\keepn\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard \s15\qj\widctlpar\adjustright {\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ch}{\hich\af4\dbch\af4\loch\f4  is the character to write. It is written to the file whose reference number is }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ref}{\hich\af4\dbch\af4\loch\f4 . If\hich\af4\dbch\af4\loch\f4  a write error occurs, a -1 is returned; otherwise, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ch}{\hich\af4\dbch\af4\loch\f4  is returned. If }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ref}{\hich\af4\dbch\af4\loch\f4  is zero, the character is written to the current output device (usually the CRT).\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 putchar (ch)\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 This is equivalent to an }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 fputc (ch, 0)}{\hich\af4\dbch\af4\loch\f4 .\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 toupper (ch)\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 If }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ch}{\hich\af4\dbch\af4\loch\f4  is a lowercase characte\hich\af4\dbch\af4\loch\f4 r, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 toupper}{\hich\af4\dbch\af4\loch\f4  returns the equivalent uppercase character; otherwise, it returns }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ch}{\hich\af4\dbch\af4\loch\f4 .\par \par \sect }\sectd \sbkodd\linex-32767\headery2520\footery2520\endnhere\sectdefaultcl \pard\plain \s1\keepn\widctlpar\outlinelevel0\adjustright \b\fs36\kerning28\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732482}\hich\af4\dbch\af4\loch\f4 Chapter 5 - The Compiler{\*\bkmkend _Toc497732482}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 In this chapter, we will look at the Small-C Compiler itself. It is not necessary to read or understand this chapter to use Small-C. The material h\hich\af4\dbch\af4\loch\f4 ere is for those who would like to modify the Small-C compiler, or write an ORCA based compiler of their own.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732483}\hich\af4\dbch\af4\loch\f4 Basic Structure of a Compiler{\*\bkmkend _Toc497732483}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Almost every modern compiler contains four main parts. While a particular compiler may combine all of the parts in\hich\af4\dbch\af4\loch\f4 to a single program, or may break each of the parts into different passes, there are still four logical ideas being dealt with. To understand a compiler, each of these parts must first be understood.\par \par \hich\af4\dbch\af4\loch\f4 The first part is the scanner, or lexical analyzer. The\hich\af4\dbch\af4\loch\f4  scanner is present because compilers deal in symbols, not characters. When a compiler sees the line\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 apples = oranges + 4;\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 it doesn't want to know that the first character is an a, it wants to know that the first thing on the line is a user defined symbo\hich\af4\dbch\af4\loch\f4 l. The scanner is responsible for opening the source file, and reading it character by character. When enough characters have been read to form a token (the technical term for a program symbol), the scanner reports back to the compiler what that token was\hich\af4\dbch\af4\loch\f4 .\hich\af4\dbch\af4\loch\f4  In the example above, the scanner would report six tokens:\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 apples \par \hich\af6\dbch\af4\loch\f6 =\par \hich\af6\dbch\af4\loch\f6 oranges \par \hich\af6\dbch\af4\loch\f6 +\par \hich\af6\dbch\af4\loch\f6 4\par \hich\af6\dbch\af4\loch\f6 ;\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The compiler really doesn't care about comments, either, so when the scanner sees the token /*, it skips characters until a */ is found, and doesn't report any of that t\hich\af4\dbch\af4\loch\f4 o the compiler.\par \par \hich\af4\dbch\af4\loch\f4 The second part of the compiler is the parser. The parser is responsible for insuring that the tokens received from the scanner come in the correct order, and that none are missing. If errors occur, the parser tells you about them. In synt\hich\af4\dbch\af4\loch\f4 ax directed compilers, like Small-C, the parser is in charge. It is the parser that calls the scanner when a token is needed, and the parser that tells the semantic routines that they have something to process.\par \par \hich\af4\dbch\af4\loch\f4 A good way to think of the parser is as a pr\hich\af4\dbch\af4\loch\f4 ogram that implements the syntax diagrams at the end of the last chapter. In fact, a parser is fairly easy to write from a good set of syntax diagrams.\par \par \hich\af4\dbch\af4\loch\f4 The next module is the semantic analysis section. In practice, semantic analysis is usually done by a c\hich\af4\dbch\af4\loch\f4 ollection of statements and functions mixed in with the parser. This section is responsible for determining the meaning of the program and checking its consistency. For example, noticing that a symbol used in an expression was never defined is the respons\hich\af4\dbch\af4\loch\f4 i\hich\af4\dbch\af4\loch\f4 bility of semantic analysis.\par \par \hich\af4\dbch\af4\loch\f4 The last module is the code generator. The code generator is called by the semantic analysis routines. It consists of a collection of subroutines which actually produce the executable program, under the direction of the semant\hich\af4\dbch\af4\loch\f4 ic analysis section.\par \par \hich\af4\dbch\af4\loch\f4 C is rather unique in that it adds a fifth section to the compiler, called the preprocessor. A preprocessor starts with a source program, modifies it, and writes out another, equivalent source program. While preprocessors are nothing \hich\af4\dbch\af4\loch\f4 new - Ratfor, for example, is an entire language implemented as a preprocessor - C is the only major language that defines the preprocessor as a required part of the compiler. Logically, the preprocessor isn't really a part of the C language, it is a sepa\hich\af4\dbch\af4\loch\f4 r\hich\af4\dbch\af4\loch\f4 ate first pass the occurs before the scanner starts building tokens from the input stream. In practice, the preprocessor is often implemented as an integral part of the language. When that is done, as it is in Small-C, the compiler again consists of the f\hich\af4\dbch\af4\loch\f4 o\hich\af4\dbch\af4\loch\f4 ur parts mentioned before. The preprocessor, in this case, becomes a part of the scanner.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732484}\hich\af4\dbch\af4\loch\f4 Intermediate Code, P-code, and Native Code{\*\bkmkend _Toc497732484}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 When the semantic routines need to communicate with the code generator, they often do so through intermediate code. Small\hich\af4\dbch\af4\loch\f4 -C provides a good example of how this is done. The output from the Small-C compiler is a source file which is then assembled by ORCA/M. In effect, ORCA/M is the code generator for Small-C. The source file is a file of intermediate code instructions.\par \par \hich\af4\dbch\af4\loch\f4 If y\hich\af4\dbch\af4\loch\f4 ou look at the intermediate code file, you will find a series of very unfamiliar looking instructions. Each of these corresponds to one action requested by the semantic analysis routines. These actions often require several native code instructions to get\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 the result asked for by the semantic analysis routines. For example, the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 adi}{\hich\af4\dbch\af4\loch\f4  instruction adds the two integers on the top of the evaluation stack, saving the result back onto the stack. To get this result, the native code macros could expand }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 adi}{\hich\af4\dbch\af4\loch\f4  to\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\tab \hich\af6\dbch\af4\loch\f6 CLC\par \tab \hich\af6\dbch\af4\loch\f6 LDY\tab #0\par \tab \hich\af6\dbch\af4\loch\f6 LDA\tab (ESTE),Y\par \tab \hich\af6\dbch\af4\loch\f6 LDY\tab # 4\par \tab \hich\af6\dbch\af4\loch\f6 ADC\tab (ESTE),Y\par \tab \hich\af6\dbch\af4\loch\f6 STA\tab (ESTE),Y\par \tab \hich\af6\dbch\af4\loch\f6 LDY\tab #1\par \tab \hich\af6\dbch\af4\loch\f6 LDA\tab (ESTE),Y\par \tab \hich\af6\dbch\af4\loch\f6 LDY\tab # 5\par \tab \hich\af6\dbch\af4\loch\f6 ADC\tab (ESTE),Y\par \tab \hich\af6\dbch\af4\loch\f6 STA\tab (ESTE),Y\par \tab \hich\af6\dbch\af4\loch\f6 LDY\tab #2\par \tab \hich\af6\dbch\af4\loch\f6 LDA\tab (ESTE),Y\par \tab \hich\af6\dbch\af4\loch\f6 LDY\tab #6\par \tab \hich\af6\dbch\af4\loch\f6 ADC\tab (ESTE),Y\par \tab \hich\af6\dbch\af4\loch\f6 STA\tab (ESTE),Y\par \tab \hich\af6\dbch\af4\loch\f6 LDY\tab # 3\par \tab \hich\af6\dbch\af4\loch\f6 LDA\tab (ESTE),Y\par \tab \hich\af6\dbch\af4\loch\f6 LDY\tab #7\par \tab \hich\af6\dbch\af4\loch\f6 ADC\tab (ESTE),Y\par \tab \hich\af6\dbch\af4\loch\f6 STA\tab (ESTE),Y\par \tab \hich\af6\dbch\af4\loch\f6 CLC\par \tab \hich\af6\dbch\af4\loch\f6 LDA\tab ESTE\par \tab \hich\af6\dbch\af4\loch\f6 ADC\tab #4\par \tab \hich\af6\dbch\af4\loch\f6 STA\tab ESTE\par \tab \hich\af6\dbch\af4\loch\f6 BCC\tab LB1\par \tab \hich\af6\dbch\af4\loch\f6 INC\tab ESTE+1\par \hich\af6\dbch\af4\loch\f6 LB1\tab ANOP\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 This requires 52 bytes of code, and up to 107 CPU cycles! Since the code is so large, it is actually placed into a subroutine and a JSR is inserted in the code stream. This requires four extra bytes of code and twe\hich\af4\dbch\af4\loch\f4 lve cycles for the first add, but saves forty-nine bytes on each subsequent add.\par \par \hich\af4\dbch\af4\loch\f4 The idea behind P-code is to write a file that looks more like a CPU designed specifically for the compiler. For example, the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 adi}{\hich\af4\dbch\af4\loch\f4  instruction would be implemented as a one by\hich\af4\dbch\af4\loch\f4 te instruction, saving two bytes over a JSR or fifty-one bytes over true native code. The advantage is obvious: for large programs, the size of the code drops dramatically. Although an interpreter must be included in the binary file, the savings in code s\hich\af4\dbch\af4\loch\f4 i\hich\af4\dbch\af4\loch\f4 ze for the compiled program quickly make up for the size of the interpreter. The price paid is a loss in speed while the interpreter loads a byte of P-code, decides which subroutine to call, and does the call.\par \par \hich\af4\dbch\af4\loch\f4 To summarize, native code compilers produce c\hich\af4\dbch\af4\loch\f4 ode that is fast, but can be quite large. P-code compilers generate code that is small, but slower than a native code compiler.\par \par \hich\af4\dbch\af4\loch\f4 Notice through all of this that only the code generator is different when comparing a P-code and native code compiler. In fact,\hich\af4\dbch\af4\loch\f4  the Small-C compiler does not know if the finished program will be P-code or native code - that is decided by which macro library is used by the assembler. Thus, Small-C can be set up as a native code compiler when space is not a problem, and as a P-code\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 compiler when space is critical.\par \par \hich\af4\dbch\af4\loch\f4 Unfortunately, space is critical in the compiler itself. It is so large, in fact, that it is necessary to compile to P-code to get it to fit on an Apple.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732485}\hich\af4\dbch\af4\loch\f4 Compiling the Compiler{\*\bkmkend _Toc497732485}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The source code for the Small-C compiler is\hich\af4\dbch\af4\loch\f4  on the front side of the Small-C Source disk. Depending on what kind of disk drives you have, compiling the compiler can be reasonably straightforward, or a rather delicate experience. You will need at least two floppy disk drives to get the job done.\par \par \hich\af4\dbch\af4\loch\f4 Fi\hich\af4\dbch\af4\loch\f4 rst we will look at compiling the compiler using large format disk, like a hard disk or a large RAM disk. You will need 600 free blocks to get the job done. Start by moving the source code to a safe spot - another floppy disk will do. Copy the C.PCODE fil\hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4  from the Small-C compiler disk to the same directory as the source, and rename it to be C.MACROS. If the output file should go to another directory, edit CC1. The second line is the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 keep}{\hich\af4\dbch\af4\loch\f4  directive. Change it to be the destination path name. Finally, type\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 CMPL CC1\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 If you want a listing, delete the first line in CC1 (the list directive) before starting the compile, and compile with\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 CMPL\tab CC1 >.PRINTER\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Compiling the compiler with two floppy disk drives is considerably more complicated. Begin by preparing f\hich\af4\dbch\af4\loch\f4 our blank disks. Name these disks /SOURCE, /INTERMEDIATE, /OBJ and /FINAL. Copy all of the source code from the front side of the Small C Source disk to the /SOURCE disk. Add the macro library C.ABSCODE from the main disk and rename it to be C.MACROS. The\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 exact steps to get this done are:\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 <place /SMALL.C in drive 1> \par \hich\af6\dbch\af4\loch\f6 <place /SOURCE in drive 2> \par \hich\af6\dbch\af4\loch\f6 COPY .Dl/C.ABSCODE D2\par \hich\af6\dbch\af4\loch\f6 RENAME .D2/C.ABSCODE .D2/C.MACROS \par \hich\af6\dbch\af4\loch\f6 <place /COMPILER.SRC in drive 1> \par \hich\af6\dbch\af4\loch\f6 COPY .Dl/= .D2\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Next, enter the editor and change the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 keep}{\hich\af4\dbch\af4\loch\f4  directive on t\hich\af4\dbch\af4\loch\f4 he second line of the file CC1 to read\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 #keep "/INTERMEDIATE/CC"\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The next step is to compile the compiler itself. Start off with your /ORCA disk (with Small-C installed) in drive 1, and the /SOURCE disk in drive 2. Set the prefix to drive two and compile:\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 PREFIX .D2\par \hich\af6\dbch\af4\loch\f6 COMPILE CC1\par \hich\af6\dbch\af4\loch\f6 <place /INTERMEDIATE in drive 1>\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Don't wait for the system to ask for /INTERMEDIATE before putting it in! As soon as the Small-C compiler clears the screen and prints its prompt, go ahead and swap the disks. There is plenty of tim\hich\af4\dbch\af4\loch\f4 e - the compiler must compile all of the global declarations at the start of the program before it need to access the /INTERMEDIATE disk.\par \par \hich\af4\dbch\af4\loch\f4 It will take quite a while to compile the compiler. When it has finished it is time to assemble the intermediate code\hich\af4\dbch\af4\loch\f4  file. Start with /SOURCE in drive 1 and /INTERMEDIATE in drive 2. The assembly language portions of the compiler must be copied to /INTERMEDIATE. Finally, the compiler is assembled. The commands are:\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 COPY\tab .D1/CCASM .D2\par \hich\af6\dbch\af4\loch\f6 COPY\tab .D1/CCEQUATES .D2\par \hich\af6\dbch\af4\loch\f6 <place /ORCA\hich\af6\dbch\af4\loch\f6  in drive 1>\par \hich\af6\dbch\af4\loch\f6 PREFIX .D2\par \hich\af6\dbch\af4\loch\f6 ASSEMBLE CC KEEP=/OBJ/CC\par \hich\af6\dbch\af4\loch\f6 <the assembler asks for /OBJ - put it in drive 1>\par \hich\af6\dbch\af4\loch\f6 <the system asks for /ORCA - put it in drive 1>\par \hich\af6\dbch\af4\loch\f6 <put /OBJ in drive 2>\par \hich\af6\dbch\af4\loch\f6 PREFIX .D2\par \hich\af6\dbch\af4\loch\f6 LINK CC KEEP=/FINAL/CC\par \hich\af6\dbch\af4\loch\f6 <the system asks for /FINAL - put it in drive 1>\par \hich\af6\dbch\af4\loch\f6 <the\hich\af6\dbch\af4\loch\f6  system asks for /LIBRARY - put it in drive>\par \hich\af6\dbch\af4\loch\f6 <the system asks for /ORCA - put it in drive 1>\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 That completes the compile. Note that the next-to-last step in the list above assumes that your library disk is called /LIBRARY. If not, the system will naturally\hich\af4\dbch\af4\loch\f4  use the name you have supplied.\par \par \hich\af4\dbch\af4\loch\f4 Compiling the compiler with more than two floppy disk drives follows the same basic format, but requires fewer disk swaps.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732486}\hich\af4\dbch\af4\loch\f4 The Small-C Compiler{\*\bkmkend _Toc497732486}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The Small-C compiler is a fairly large program written mostly in Small-C. A \hich\af4\dbch\af4\loch\f4 few low level subroutines are written in assembly language. Using assembly language could have been avoided, but using assembly language for a few subroutines increased the speed of the compiler considerably. The source code for the compiler is on the fro\hich\af4\dbch\af4\loch\f4 n\hich\af4\dbch\af4\loch\f4 t of the second disk. It is labeled "Compiler Source".\par \par \hich\af4\dbch\af4\loch\f4 Historically, Small-C was developed by Ron Cain for the 8080 processor, and published in Dr. Dobbs Journal. Ron donated his compiler to the public domain, resulting in several implementations of C bas\hich\af4\dbch\af4\loch\f4 ed on his effort. This version of Small-C retains much of the flavor of the original, maintaining the. original function names and organization. Changes include installing it in the ORCA environment, adding the option for p-code, allowing all C statements\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 and most C operations, and supporting long (four byte) integers.\par \par \hich\af4\dbch\af4\loch\f4 To describe the compiler, its subroutines have been divided into nine categories. Each category will be described, along with the subroutines in that category. Some subroutine descriptions a\hich\af4\dbch\af4\loch\f4 re extremely brief, since their function is so simple. Others are described in more detail. In all cases, it is assumed that a listing of the compiler is available when the descriptions are read.\par \par \hich\af4\dbch\af4\loch\f4 The first step, then, is to get a listing of the compiler. \hich\af4\dbch\af4\loch\f4 The most straightforward way of doing this is to compile the compiler and redirect the output to a printer. Compiling the compiler was described in the last section. Another way is to list the individual files using the TYPE command. The files needed are \hich\af4\dbch\af4\loch\f4 C\hich\af4\dbch\af4\loch\f4 C1  to CC8, CCASM, and CCEQUATES.\par \par \hich\af4\dbch\af4\loch\f4 To connect the sections that follow to the previous discussion, the executive, preprocessor and scanner make up the scanner of the compiler. As with most compilers, the parser and semantic analysis are mixed together. The\hich\af4\dbch\af4\loch\f4 y are covered in the sections parse, compiling declarations, compiling functions, compiling statements, and compiling expressions. The code generator is described in the section by that name. The following table summarizes the sections and the subroutines\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 covered in each section.\par \par }\pard \s15\qj\widctlpar\tx1800\adjustright {\ul \hich\af4\dbch\af4\loch\f4 executive\par }\pard \s15\qj\li360\widctlpar\tx1800\adjustright {\hich\af4\dbch\af4\loch\f4 main\tab entry point for compiler\par \hich\af4\dbch\af4\loch\f4 ask\tab get inputs\par \hich\af4\dbch\af4\loch\f4 getlinfo\tab get input from ORCA.HOST\par \hich\af4\dbch\af4\loch\f4 header\tab write header\par \hich\af4\dbch\af4\loch\f4 trailer\tab write trailer\par \hich\af4\dbch\af4\loch\f4 error\tab write error message\par \hich\af4\dbch\af4\loch\f4 errorsummary \tab write total error counts\par \hich\af4\dbch\af4\loch\f4 pl\tab write a line to the CRT\par \hich\af4\dbch\af4\loch\f4 escchec\hich\af4\dbch\af4\loch\f4 k\tab check for user exit\par \hich\af4\dbch\af4\loch\f4 formdec\tab form an integer string\par \hich\af4\dbch\af4\loch\f4 putdec\tab write an integer\par \hich\af4\dbch\af4\loch\f4 getlnum\tab get language number\par \par }\pard \s15\qj\keepn\widctlpar\tx1800\adjustright {\ul \hich\af4\dbch\af4\loch\f4 preprocessor\par }\pard \s15\qj\li360\keepn\widctlpar\tx1800\adjustright {\hich\af4\dbch\af4\loch\f4 doinclude\tab handle an include file\par \hich\af4\dbch\af4\loch\f4 readname\tab read a file name\par \hich\af4\dbch\af4\loch\f4 dolist\tab handle a list directive\par }\pard \s15\qj\li360\widctlpar\tx1800\adjustright {\hich\af4\dbch\af4\loch\f4 onoff\tab check for "on" or "off"\par \hich\af4\dbch\af4\loch\f4 dosource\tab handle a\hich\af4\dbch\af4\loch\f4  source directive\par \hich\af4\dbch\af4\loch\f4 dokeep\tab handle a keep directive\par \hich\af4\dbch\af4\loch\f4 doorg\tab handle an org directive\par \par }\pard \s15\qj\widctlpar\tx1800\adjustright {\ul \hich\af4\dbch\af4\loch\f4 scanner\par }\pard \s15\qj\li360\widctlpar\tx1800\adjustright {\hich\af4\dbch\af4\loch\f4 inline\tab get the input line\par \hich\af4\dbch\af4\loch\f4 kill\tab dispose of remainder of this line\par \hich\af4\dbch\af4\loch\f4 preprocess\tab expand macros on a line\par \hich\af4\dbch\af4\loch\f4 keepch\tab keep a preprocessed character\par \hich\af4\dbch\af4\loch\f4 blanks\tab skip blanks\par \hich\af4\dbch\af4\loch\f4 inchar\tab read \hich\af4\dbch\af4\loch\f4 from input file without preprocessing\par \hich\af4\dbch\af4\loch\f4 inbyte\tab read from input file with preprocessing\par \hich\af4\dbch\af4\loch\f4 ch\tab get current character\par \hich\af4\dbch\af4\loch\f4 gch\tab get next character .\par \hich\af4\dbch\af4\loch\f4 nch\tab get char after this one\par \hich\af4\dbch\af4\loch\f4 number\tab read a number\par \hich\af4\dbch\af4\loch\f4 pstr\tab read character constant\par \hich\af4\dbch\af4\loch\f4 qstr\tab read string constant\par \hich\af4\dbch\af4\loch\f4 strchar\tab read char\hich\af4\dbch\af4\loch\f4 acter from a string\par \hich\af4\dbch\af4\loch\f4 addmac\tab add a macro definition\par \hich\af4\dbch\af4\loch\f4 putmac\tab place character in macro table\par \hich\af4\dbch\af4\loch\f4 match\tab check for string match\par \hich\af4\dbch\af4\loch\f4 streq\tab compare strings\par \hich\af4\dbch\af4\loch\f4 amatch\tab check for fixed length string match\par \hich\af4\dbch\af4\loch\f4 astreq\tab compare fixed length strings\par \hich\af4\dbch\af4\loch\f4 asmstreq\tab compare string primitive\par \hich\af4\dbch\af4\loch\f4 find\hich\af4\dbch\af4\loch\f4 glb\tab search for global label\par \hich\af4\dbch\af4\loch\f4 findloc\tab search for local label\par \hich\af4\dbch\af4\loch\f4 findmac\tab search for macro definition\par \par }\pard \s15\qj\widctlpar\tx1800\adjustright {\ul \hich\af4\dbch\af4\loch\f4 parser\par }\pard \s15\qj\li360\widctlpar\tx1800\adjustright {\hich\af4\dbch\af4\loch\f4 parse\tab top level of parser\par \hich\af4\dbch\af4\loch\f4 statement\tab compile a statement\par \hich\af4\dbch\af4\loch\f4 compound\tab compile a compound statement\par \hich\af4\dbch\af4\loch\f4 ns\tab insure that a ";" is found\par \hich\af4\dbch\af4\loch\f4 endst\tab test for end of line\par \par }\pard \s15\qj\keepn\widctlpar\tx1800\adjustright {\ul \hich\af4\dbch\af4\loch\f4 c\hich\af4\dbch\af4\loch\f4 ompiling declarations\par }\pard \s15\qj\li360\keepn\widctlpar\tx1800\adjustright {\hich\af4\dbch\af4\loch\f4 declglb\tab process global declarations\par }\pard \s15\qj\li360\widctlpar\tx1800\adjustright {\hich\af4\dbch\af4\loch\f4 declloc\tab process local declarations\par \hich\af4\dbch\af4\loch\f4 needsub\tab read size of array\par \hich\af4\dbch\af4\loch\f4 getarg\tab process function arguments\par \hich\af4\dbch\af4\loch\f4 multidef\tab flag duplicate symbol error\par \hich\af4\dbch\af4\loch\f4 addglb\tab add global symbol to symbol table\par \hich\af4\dbch\af4\loch\f4 addloc\tab add local symbol \hich\af4\dbch\af4\loch\f4 to symbol table\par \par }\pard \s15\qj\widctlpar\tx1800\adjustright {\ul \hich\af4\dbch\af4\loch\f4 compiling functions\par }\pard \s15\qj\li360\widctlpar\tx1800\adjustright {\hich\af4\dbch\af4\loch\f4 newfunc\tab compile a function\par \hich\af4\dbch\af4\loch\f4 skip\tab skip a function\par \hich\af4\dbch\af4\loch\f4 skiptobracket\tab skip until a "(" or ")"\par \hich\af4\dbch\af4\loch\f4 search\tab see if a function should be compiled\par \par }\pard \s15\qj\widctlpar\tx1800\adjustright {\ul \hich\af4\dbch\af4\loch\f4 compiling statements\par }\pard \s15\qj\li360\widctlpar\tx1800\adjustright {\hich\af4\dbch\af4\loch\f4 doif\tab compile an if statement\par \hich\af4\dbch\af4\loch\f4 dowhile\tab compile a while statement\par \hich\af4\dbch\af4\loch\f4 dodo\tab \hich\af4\dbch\af4\loch\f4 compile a do statement\par \hich\af4\dbch\af4\loch\f4 dofor\tab compile a for statement\par \hich\af4\dbch\af4\loch\f4 doreturn\tab compile a return statement\par \hich\af4\dbch\af4\loch\f4 dobreak\tab compile a break statement\par \hich\af4\dbch\af4\loch\f4 docont\tab compile a continue statement\par \hich\af4\dbch\af4\loch\f4 doswitch\tab compile a switch statement\par \hich\af4\dbch\af4\loch\f4 docase\tab compile a case statement\par \hich\af4\dbch\af4\loch\f4 dodefault\tab compile a default \hich\af4\dbch\af4\loch\f4 label\par \hich\af4\dbch\af4\loch\f4 dogoto\tab compile a goto statement\par \hich\af4\dbch\af4\loch\f4 dolabel\tab compile a label\par \hich\af4\dbch\af4\loch\f4 doasm\tab compile in line assembly code\par \hich\af4\dbch\af4\loch\f4 callfunction compile a call to a function\par \hich\af4\dbch\af4\loch\f4 needbrack\tab check for matching ")" or\par \hich\af4\dbch\af4\loch\f4 labelname\tab check for label name\par \hich\af4\dbch\af4\loch\f4 symname\tab check for symbol name\par \hich\af4\dbch\af4\loch\f4 getlabel\tab get next l\hich\af4\dbch\af4\loch\f4 abel number\par \hich\af4\dbch\af4\loch\f4 addwhile\tab add while entry to while table\par \hich\af4\dbch\af4\loch\f4 delwhile\tab delete while entry from while table\par \hich\af4\dbch\af4\loch\f4 readwhile\tab get disp to current while entry\par \hich\af4\dbch\af4\loch\f4 test\tab evaluate a condition\par \par }\pard \s15\qj\keepn\widctlpar\tx1800\adjustright {\ul \hich\af4\dbch\af4\loch\f4 compiling expressions \par }\pard \s15\qj\li360\keepn\widctlpar\tx1800\adjustright {\hich\af4\dbch\af4\loch\f4 expression \tab compile an expression\par \hich\af4\dbch\af4\loch\f4 hierl\tab compile =\par }\pard \s15\qj\li360\widctlpar\tx1800\adjustright {\hich\af4\dbch\af4\loch\f4 hier2\tab compile ||\par \hich\af4\dbch\af4\loch\f4 hier3\tab compile &&\par \hich\af4\dbch\af4\loch\f4 hier4\tab compile |\par \hich\af4\dbch\af4\loch\f4 hier5\tab compile ^\par \hich\af4\dbch\af4\loch\f4 hier6\tab compile &\par \hich\af4\dbch\af4\loch\f4 hier7\tab compile == !=\par \hich\af4\dbch\af4\loch\f4 hier8\tab compile <= >= < >\par \hich\af4\dbch\af4\loch\f4 hier9\tab compile << >>\par \hich\af4\dbch\af4\loch\f4 hier10\tab compile + -\par \hich\af4\dbch\af4\loch\f4 hier1l\tab compile * / %\par \hich\af4\dbch\af4\loch\f4 hier12\tab compile modifiers\par \hich\af4\dbch\af4\loch\f4 hier13\tab compile variable, array, function references\par \hich\af4\dbch\af4\loch\f4 primary\tab co\hich\af4\dbch\af4\loch\f4 mpile variables and constants\par \hich\af4\dbch\af4\loch\f4 store\tab save a value\par \hich\af4\dbch\af4\loch\f4 rvalue\tab load a value\par \hich\af4\dbch\af4\loch\f4 constant\tab compile constant use\par \par }\pard \s15\qj\widctlpar\tx1800\adjustright {\ul \hich\af4\dbch\af4\loch\f4 code generation\par }\pard \s15\qj\li360\widctlpar\tx1800\adjustright {\hich\af4\dbch\af4\loch\f4 gen0\tab generate implied operand instruction\par \hich\af4\dbch\af4\loch\f4 genl\tab generate one operand instruction\par \hich\af4\dbch\af4\loch\f4 gen2\tab generate two operand instruction\par \hich\af4\dbch\af4\loch\f4 optimize\tab check for opt\hich\af4\dbch\af4\loch\f4 imizations\par \hich\af4\dbch\af4\loch\f4 remove\tab remove instruction from peephole window\par \hich\af4\dbch\af4\loch\f4 instructionout \tab write an instruction\par \hich\af4\dbch\af4\loch\f4 dumplits\tab generate string constants\par \hich\af4\dbch\af4\loch\f4 dumpglbs\tab generate global variables\par \hich\af4\dbch\af4\loch\f4 printlabel\tab generate a label\par \hich\af4\dbch\af4\loch\f4 outbyte\tab write a character to the output file\par \hich\af4\dbch\af4\loch\f4 outstr\tab write a str\hich\af4\dbch\af4\loch\f4 ing to the output file\par \hich\af4\dbch\af4\loch\f4 ot\tab write an op code\par \hich\af4\dbch\af4\loch\f4 outdec\tab write an integer\par \hich\af4\dbch\af4\loch\f4 comment\tab write comment character\par \hich\af4\dbch\af4\loch\f4 getmem\tab load global value\par \hich\af4\dbch\af4\loch\f4 getloc\tab load address of local value\par \hich\af4\dbch\af4\loch\f4 putmem\tab save global value\par \hich\af4\dbch\af4\loch\f4 putstk\tab save local value\par \hich\af4\dbch\af4\loch\f4 indirect\tab load indirect\par \hich\af4\dbch\af4\loch\f4 defbyte\tab set up for one by\hich\af4\dbch\af4\loch\f4 te constant\par \par \hich\af4\dbch\af4\loch\f4 defstorage\tab set up for storage reservation\par \hich\af4\dbch\af4\loch\f4 index\tab index into array\par \hich\af4\dbch\af4\loch\f4 purge\tab purge code generation buffer\par }\pard \s15\qj\widctlpar\adjustright {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732487}\hich\af4\dbch\af4\loch\f4 Executive{\*\bkmkend _Toc497732487}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The executive is a collection of functions that have little to do with the actual compilation process. These functions are concerne\hich\af4\dbch\af4\loch\f4 d with the nuts and bolts of interfacing the compiler to the outside world.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 main - entry point for the compiler\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 main}{\hich\af4\dbch\af4\loch\f4  initializes the global variables, gets the input by calling ask, compiles the program by calling }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 parse}{\hich\af4\dbch\af4\loch\f4 , and cleans up after the compile i\hich\af4\dbch\af4\loch\f4 s finished.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 ask - get inputs\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ask}{\hich\af4\dbch\af4\loch\f4  clears the input line so that the first character fetch by the scanner will cause a line to be read. It then opens the first input file and counts the number of functions in the parm list. The parm list is the list of fun\hich\af4\dbch\af4\loch\f4 ctions for a partial compile.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 getlinfo - get input from ORCA.HOST\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 This assembly language subroutine gets the information about the program to be compiled from ORCA.HOST and places it in several global variables, where the information can be accessed by t\hich\af4\dbch\af4\loch\f4 he C portion of the compiler.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 header - write header\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Clears the screen and writes the compiler name to the CRT.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 trailer - write trailer\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 After the compile is complete, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 trailer}{\hich\af4\dbch\af4\loch\f4  is called to write the last end directive to the output file. if there is more\hich\af4\dbch\af4\loch\f4  source code (from an assembly language file), an append directive to the next file is also written.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 error - write error message\par }\pard\plain \s15\qj\keepn\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard \s15\qj\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 Writes the line that caused the error, followed by the error message. Note that the source line has been processed by the pre\hich\af4\dbch\af4\loch\f4 processor before }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 error}{\hich\af4\dbch\af4\loch\f4  writes it. This means that all macros will be expanded.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 errorsummary - write total error count\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Writes the number of errors flagged during the compile. In Small-C, all errors have an error level of 32, indicating that recompilation \hich\af4\dbch\af4\loch\f4 is necessary after correcting the error.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 pl - write a line to the CRT\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Writes a zero terminated string to the CRT, following it with a carriage return.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 esecheck - check for user exit\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Before writing a line, the system checks to see if the last key presse\hich\af4\dbch\af4\loch\f4 d was an ESC, indicating that an early termination is desired. If so, an early end of file is created, stopping the compiler.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 formdec - form an integer string\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 There are two functions used to write a number. }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 putdec}{\hich\af4\dbch\af4\loch\f4  writes the number to the CRT, while }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 outd\hich\af6\dbch\af4\loch\f6 ec}{\hich\af4\dbch\af4\loch\f4  writes a number to the intermediate code file. Both functions call }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 formdec}{\hich\af4\dbch\af4\loch\f4  to turn the binary number into a ASCII string.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 putdec - write an integer\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Writes an integer to the CRT.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 getlnum - get language number\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Returns the language number of a file, al\hich\af4\dbch\af4\loch\f4 lowing\par \par \hich\af4\dbch\af4\loch\f4 Small-C to verify that an included file is a Small-C file, as opposed to an assembly language file.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732488}\hich\af4\dbch\af4\loch\f4 Preprocessor{\*\bkmkend _Toc497732488}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 This section describes the subroutine that carry out the functions of the preprocessor. Parts of the preprocessor are also described \hich\af4\dbch\af4\loch\f4 in the scanner section that follows.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 doinclude - handle an include file\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 readname is called to read the file name and make sure that it is valid. Next, the language number is checked to make sure the file is a Small-C file. If not, an append is generated \hich\af4\dbch\af4\loch\f4 at the end of the output file and compilation is stopped. Finally, the included file is opened.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 readname - read a file name\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 A file is read from the current input line. If an error is encountered, zero is returned, otherwise the length of the file name is\hich\af4\dbch\af4\loch\f4  returned.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 dolist - handle a list directive\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 listflag controls whether or not the source file is listed. The flag is set if "on" is found on the source file, and cleared otherwise.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 onoff - check for "on" or "off"\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Reads an "on" or "off" keyword from the \hich\af4\dbch\af4\loch\f4 input line, returning true (1) if "on", and false (0) otherwise.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 dosource - handle a source directive\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ctext}{\hich\af4\dbch\af4\loch\f4  is set, determining if the source file is written to the intermediate code file.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 dokeep - handle a keep directive\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 It is an error if the keep dir\hich\af4\dbch\af4\loch\f4 ective appears twice, or if it appears after a function. If neither error occurs, a file name is read, and saved for later use by the assembly language routines.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 doorg - handle an org directive\par }\pard\plain \s15\qj\keepn\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard \s15\qj\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 Reads an ORG location from the input line and writes an org \hich\af4\dbch\af4\loch\f4 directive to the intermediate code file, where the assembler will handle it in the normal way.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732489}\hich\af4\dbch\af4\loch\f4 Scanner{\*\bkmkend _Toc497732489}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The scanner reads in a line and preprocesses it, replacing macro references by the proper expansion. Primitives are provided to skip blanks, fetch char\hich\af4\dbch\af4\loch\f4 acters, search for symbols, and to read constants from the file.\par \par \hich\af4\dbch\af4\loch\f4 Basically, lines are read by }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 inline}{\hich\af4\dbch\af4\loch\f4 , and macros expanded by }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 preprocess}{\hich\af4\dbch\af4\loch\f4 . The result is stored in an internal line buffer called }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 line}{\hich\af4\dbch\af4\loch\f4 . It is the line in this internal buffer that is compiled.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 inline - get the input line\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 inline}{\hich\af4\dbch\af4\loch\f4  reads the next line from the input file and places it in the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 line}{\hich\af4\dbch\af4\loch\f4  buffer. If }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 listflaq}{\hich\af4\dbch\af4\loch\f4  is true (indicating that a source listing is desired), }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 eof}{\hich\af4\dbch\af4\loch\f4  is false (indicating that this read did not hit an end of file mark) and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 s\hich\af6\dbch\af4\loch\f6 kipping}{\hich\af4\dbch\af4\loch\f4  is false (indicating that the current function is being compiled) the line is listed. If there is an output file (cmode == true) and the source is being sent to it (ctext == true) the line is also sent to the output file.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 kill - dispose of remaind\hich\af6\dbch\af4\loch\f6 er of this line\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Marks the current line as empty so that a subsequent character request reads in a new line.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 preprocess - expand macros in a line\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The line in the current input buffer is scanned. Extra blanks are removed. Character and string constants ar\hich\af4\dbch\af4\loch\f4 e copied intact. Comments are removed, reading in new lines to get to the end of the comment, if that is necessary. Symbol names are truncated to eight characters. If a symbol is the name of a macro, the characters defined by the define directive are plac\hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4 d in the output line, instead of the macro name. Finally, the line is copied back into }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 line}{\hich\af4\dbch\af4\loch\f4 , and the character pointer set to zero.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 keepch - keep a preprocessed character\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Saves a character in the preprocessor line buffer.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 blanks - skip blanks\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Skips bla\hich\af4\dbch\af4\loch\f4 nks and end of line characters.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 inchar - read from input file without preprocessing\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 When }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 preprocess}{\hich\af4\dbch\af4\loch\f4  is scanning a line to skip comments, it uses }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 inchar}{\hich\af4\dbch\af4\loch\f4  to fetch the characters. }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 inchar}{\hich\af4\dbch\af4\loch\f4  will read in a new line if an end of line is found, but unlike the sta\hich\af4\dbch\af4\loch\f4 ndard character fetch function, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 inchar}{\hich\af4\dbch\af4\loch\f4  does not preprocess the line. This avoids an unwanted recursive call to }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 preprocess}{\hich\af4\dbch\af4\loch\f4 .\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 inbyte - read from input file with preprocessing\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Returns the next character from the input file. If an end of line is found, the ne\hich\af4\dbch\af4\loch\f4 xt line is read, so this function always returns a character.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 ch - get current character\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Returns\tab }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 line}{\hich\af4\dbch\af4\loch\f4  (}{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 lptr}{\hich\af4\dbch\af4\loch\f4 ], which is the current character. This fun ion has been translated to assembly language to speed up the compiler.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 gch - get next character\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 This \hich\af4\dbch\af4\loch\f4 function returns the same character that }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ch}{\hich\af4\dbch\af4\loch\f4  would return, but it also advances the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 lptr}{\hich\af4\dbch\af4\loch\f4  variable.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 nch - get character after this one\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 nch}{\hich\af4\dbch\af4\loch\f4  implements a one character look-ahead by returning }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 line (lptr+1),}{\hich\af4\dbch\af4\loch\f4  the character after the one that }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ch}{\hich\af4\dbch\af4\loch\f4  would return. T\hich\af4\dbch\af4\loch\f4 his is useful when checking for -two character symbols. For example, the preprocessor uses nch to see if the character after a "/" is "*", signaling the start of a comment.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 number - read a number\par }\pard\plain \s15\qj\keepn\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard \s15\qj\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 When a number is found in the input stream, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 number}{\hich\af4\dbch\af4\loch\f4  is call\hich\af4\dbch\af4\loch\f4 ed to convert it from a string to a binary value.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 pstr - read character constant\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Reads a character constant from the input stream, returning its value in the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 val}{\hich\af4\dbch\af4\loch\f4  parameter.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 qstr - read string constant\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 A string is read from the input file and placed in \hich\af4\dbch\af4\loch\f4 the literal pool. The literal pool is where all strings are stored. }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 qstr}{\hich\af4\dbch\af4\loch\f4  returns the location of the string in the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 val}{\hich\af4\dbch\af4\loch\f4  parameter.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 strchar - read character from a string\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 strchar}{\hich\af4\dbch\af4\loch\f4  is called by }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 pstr}{\hich\af4\dbch\af4\loch\f4  and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 qstr}{\hich\af4\dbch\af4\loch\f4  to read a character. It interprets the backslash c\hich\af4\dbch\af4\loch\f4 ontrol codes and checks for the end of the string.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 addmac - add a macro definition\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Places a macro definition in the macro table. Each macro definition consist of a pair of zero terminated strings. The first is the name of the macro, and the second is the\hich\af4\dbch\af4\loch\f4  string to substitute when the macro is encountered in the source file.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 putmac - place characters in macro table\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Places a character at the end of the current macro table.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 match - check for a string match\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Checks to see if the second string appears at th\hich\af4\dbch\af4\loch\f4 e start of the first string. if so, the string is removed from the input stream and one is returned. if not, a zero is returned.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 streq - compare strings\par }\pard\plain \s15\qj\keepn\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard \s15\qj\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 Checks to see if the second string appears at the start of the first. If so, the length of the second\hich\af4\dbch\af4\loch\f4  string is returned. If not, a zero is returned.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 amatch - check for fixed length string match\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Checks to see if a fixed length string (the second string parameter) appears at the start of the first string. Additionally, the first string cannot be followed\hich\af4\dbch\af4\loch\f4  by an alphanumeric character. This allows checking for a keyword, like }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 return}{\hich\af4\dbch\af4\loch\f4 , without picking up parts of symbols, like the first part of }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 returned}{\hich\af4\dbch\af4\loch\f4 . If a match is found, a one is returned. Otherwise, a zero is returned.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 astreq - compare fixed length stri\hich\af6\dbch\af4\loch\f6 ngs\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Does the string compare for amatch. This function is coded in assembly language for maximum speed.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 asmstreg - compare string primitive\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 This assembly language subroutine is used by }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 astreq}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 findmac}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 findloc}{\hich\af4\dbch\af4\loch\f4  and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 findglb}{\hich\af4\dbch\af4\loch\f4  to see if two strings are equal.\hich\af4\dbch\af4\loch\f4  It cannot be called from C.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 findglb - search for global label\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Searches the global symbol table for a symbol. If one is found, a pointer to the symbol is returned, otherwise, a zero is returned. This function is coded in assembly language for maximum spe\hich\af4\dbch\af4\loch\f4 ed.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 findloc - search for local label\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Searches the local symbol table for a symbol. If one is found, a pointer to the symbol is returned, otherwise, a zero is returned. This function is coded in assembly language for maximum speed.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 findmac - search for m\hich\af6\dbch\af4\loch\f6 acro definition\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Searches the macro pool for a macro. If a matching macro is found, an index into the macro pool }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 macq}{\hich\af4\dbch\af4\loch\f4  is returned; otherwise, a zero is returned. This function is coded in assembly language for maximum speed.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732490}\hich\af4\dbch\af4\loch\f4 Parser{\*\bkmkend _Toc497732490}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Most of the parser fun\hich\af4\dbch\af4\loch\f4 ctions are mixed with semantic analysis code, but a few are purely for parsing the input. Those are described in this section.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 parse - top level of parser\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 Parse}{\hich\af4\dbch\af4\loch\f4  has overall control of compiling a program once the compiler has been initialized. It checks \hich\af4\dbch\af4\loch\f4 to see if a keyword appears, and if so, calls the appropriate subroutine to handle the statement. If no keyword is found, the parser assumes that a function is to be defined, and calls }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 newfunc}{\hich\af4\dbch\af4\loch\f4 .\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 statement - compile a statement\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 Statement}{\hich\af4\dbch\af4\loch\f4  is called wherever\hich\af4\dbch\af4\loch\f4  the syntax of C allows a C statement to appear. The syntax is recursive - many C statements can themselves contain statements. With the exception of an expression, all C statements start with a recognizable keyword, so }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 statement}{\hich\af4\dbch\af4\loch\f4  calls functions to parse i\hich\af4\dbch\af4\loch\f4 ndividual statements based on the leading keyword. The exception to this is labels although they are not keywords, though, a label is always followed by a colon. }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 labelname}{\hich\af4\dbch\af4\loch\f4  uses that fact to see if a symbol is a label. If a keyword or label is not found, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ex\hich\af6\dbch\af4\loch\f6 pression}{\hich\af4\dbch\af4\loch\f4  is called. After returning from compiling an expression, a pop instruction is generated. This is because C expressions leave the value of the expression on the stack, and it must be removed. The }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 pop}{\hich\af4\dbch\af4\loch\f4  instruction removes one number from the top of t\hich\af4\dbch\af4\loch\f4 he stack.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 compound - compile a compound statement\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 This function is called by }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 statement}{\hich\af4\dbch\af4\loch\f4  when a ( character is found, indicating the start of a compound statement. }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 compound}{\hich\af4\dbch\af4\loch\f4  repeatedly calls }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 statement}{\hich\af4\dbch\af4\loch\f4  until a matching ) is found. The }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ncmp}{\hich\af4\dbch\af4\loch\f4  counter is used to\hich\af4\dbch\af4\loch\f4  keep track of how many compound statements are active. If an end of file is encountered and ncmp is not zero, an error is issued.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 ns - insure that a ";" is found\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Called whenever a ; character is required, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ns}{\hich\af4\dbch\af4\loch\f4  issues an error if the ; is missing. The ;  i\hich\af4\dbch\af4\loch\f4 s removed from the input stream.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 endst - test for end of line\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Skips blanks, then checks to see if it is at the end of the file, or if a ; has been found. If either is true, a one is returned; otherwise, a zero is returned.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732491}\hich\af4\dbch\af4\loch\f4 Compiling Declarations{\*\bkmkend _Toc497732491}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 As var\hich\af4\dbch\af4\loch\f4 iables are declared, they are entered into the symbol table. Global variables and functions are entered into the global symbol table, while local variables and passed parameters are entered into the local symbol table.\par \par \hich\af4\dbch\af4\loch\f4 Function names are assigned location\hich\af4\dbch\af4\loch\f4 s by the link editor when the program is linked. Global variables are entered into a common block called SYSCCOM, which is created by the compiler. The compiler also generates a USING SYSCCOM at the start of each function, so all C functions have access t\hich\af4\dbch\af4\loch\f4 o\hich\af4\dbch\af4\loch\f4  global variables.\par \par \hich\af4\dbch\af4\loch\f4 Local variables and passed parameters are allocated space on a stack frame. The stack frame for any particular function starts off with a four byte header. The header contains the return address in the first two bytes (used only by the \hich\af4\dbch\af4\loch\f4 interpreter, and ignored by native code functions), and the address of the start of the calling function's stack frame in the last two bytes. Passed parameters, which always use four bytes of storage, follow the header in the order specified by the functi\hich\af4\dbch\af4\loch\f4 o\hich\af4\dbch\af4\loch\f4 n call. Local variables are allocated space after the passed parameters, in the order declared. }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 char}{\hich\af4\dbch\af4\loch\f4  variables are allocated one byte; }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 int}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 short}{\hich\af4\dbch\af4\loch\f4  and pointer variables are allocated two bytes; and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 long}{\hich\af4\dbch\af4\loch\f4  variables are allocated four bytes.\par \par \hich\af4\dbch\af4\loch\f4 The evaluation st\hich\af4\dbch\af4\loch\f4 ack appears immediately after any local variables.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 declglb - process global declarations\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The byte or variable being declared is passed in the type parameter. }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 declqlb}{\hich\af4\dbch\af4\loch\f4  then scans the list of the variables being declared. If the variable name is being prece\hich\af4\dbch\af4\loch\f4 ded by an *, it is changed to a pointer. if it is followed by an array subscript, it is declared as an array. The symbol is entered into the global symbol table by calling addglb.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 declloc - process local declarations\par }\pard\plain \s15\qj\keepn\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard \s15\qj\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 Similar to }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 declglb}{\hich\af4\dbch\af4\loch\f4 , except that the s\hich\af4\dbch\af4\loch\f4 ymbol is entered into the local symbol table instead of the global symbol table. sp keeps track of the number of bytes allocated on the stack frame for this function.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 needsub - read size of array\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 If an array is found by }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 declqlb}{\hich\af4\dbch\af4\loch\f4  or }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 declloc}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 needsub}{\hich\af4\dbch\af4\loch\f4  is cal\hich\af4\dbch\af4\loch\f4 led to find our how long it is. It returns zero if there is no subscript specified, and the number of elements in the array if a number is specified. A reasonable result is always returned, even if the program contains an error.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 getarg - process function \hich\af6\dbch\af4\loch\f6 arguments\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Similar to }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 declloc}{\hich\af4\dbch\af4\loch\f4 , except that variables are only accepted as long as there are unmatched arguments in the parameter list, and four bytes are reserved for a variable, regardless of its type.\par \par \hich\af4\dbch\af4\loch\f4 The reason that four bytes of space are always reser\hich\af4\dbch\af4\loch\f4 ved is that the parameters are placed on the evaluation stack of the calling function before the current function is called. Since all values on the evaluation stack occupy four bytes of memory, the called function must recognize that fact.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 multidef - fla\hich\af6\dbch\af4\loch\f6 y duplicate symbol error\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Called to flag duplicate symbol errors.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 addglb - add global symbol to symbol table\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Enters a new symbol into the global symbol table, and returns a pointer to the new entry.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 addloc - add local symbol to symbol table\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Enters a ne\hich\af4\dbch\af4\loch\f4 w symbol into the local symbol table, and returns a pointer to the new entry.\par \par \par \par \hich\af4\dbch\af4\loch\f4 64\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732492}\hich\af4\dbch\af4\loch\f4 Compiling Functions{\*\bkmkend _Toc497732492}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 newfunc - compile a function\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 newfunc}{\hich\af4\dbch\af4\loch\f4  is called to handle anything that }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 parse}{\hich\af4\dbch\af4\loch\f4  does not recognize. In a correct program, parse recognizes everything ex\hich\af4\dbch\af4\loch\f4 cept a function declaration.\par \par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 newfunc}{\hich\af4\dbch\af4\loch\f4  starts by reading the name of the function, flagging an error if a symbol is not found. It then checks to see if this is a partial compile. If so, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 parms[0]}{\hich\af4\dbch\af4\loch\f4  is non-zero. For partial compiles, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 newfunc}{\hich\af4\dbch\af4\loch\f4  calls }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 search}{\hich\af4\dbch\af4\loch\f4  to see\hich\af4\dbch\af4\loch\f4  if the current function is needed. If not, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 skip}{\hich\af4\dbch\af4\loch\f4  is called to skip the function.\par \par \hich\af4\dbch\af4\loch\f4 Assuming the function is to be compiled, the next step is to see if any functions have been compiled so far. If not, the output file is opened and the first few lines of asse\hich\af4\dbch\af4\loch\f4 mbly language are written out.\par \par \hich\af4\dbch\af4\loch\f4 The function name is now entered into the global symbol table, or, if it is already there, the old entry is checked to make sure it is a function reference. The number of parameters in the parameter list is then counted, and\hich\af4\dbch\af4\loch\f4  }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 getarg}{\hich\af4\dbch\af4\loch\f4  is called to declare the passed parameters.\par \par \hich\af4\dbch\af4\loch\f4 The function body begins with the opening \{ character. Local declarations are processed by calling }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 declloc}{\hich\af4\dbch\af4\loch\f4 . After all local declarations have been processed, statements are compiled until a closing \} is \hich\af4\dbch\af4\loch\f4 found.\par \par \hich\af4\dbch\af4\loch\f4 Clean-up consists of generating a return instruction, deleting all local symbols, purging the peephole optimizer's buffer, writing out string constants, and writing the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 end}{\hich\af4\dbch\af4\loch\f4  directive at the end of the function.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 skip - skip a function\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Skips a func\hich\af4\dbch\af4\loch\f4 tion during a partial compile by scanning for matching sets of \{ and \} characters.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 skiptobracket - skip until a "\{" or "\}"\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Used by skip to skip to the next \{ or \} character that is not inside a character constant or string.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 search - see if a function sh\hich\af6\dbch\af4\loch\f6 ould be compiled\par }\pard\plain \s15\qj\keepn\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard \s15\qj\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 Searches the list of function names to be compiled during a partial compile to see if the current function is one of the ones that should be compiled.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732493}\hich\af4\dbch\af4\loch\f4 Compiling Statements{\*\bkmkend _Toc497732493}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Almost all of the work that the compiler does to understand the \hich\af4\dbch\af4\loch\f4 meaning of a program and generate code for it is done in this section and the next one, which discusses compiling expressions. The functions in this section can be roughly divided into two groups. The first group is responsible for compiling a particular \hich\af4\dbch\af4\loch\f4 k\hich\af4\dbch\af4\loch\f4 ind of C statement. Each of those functions starts with the characters "do", and is followed by the name of the C statement that the function compiles. The remaining functions are called to perform specific tasks for the main line routines.\par \par \hich\af4\dbch\af4\loch\f4 Central to und\hich\af4\dbch\af4\loch\f4 erstanding how the looping statements work is a clear understanding of the while queue. The while queue is contained in the array }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 wq}{\hich\af4\dbch\af4\loch\f4 . The }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 wq}{\hich\af4\dbch\af4\loch\f4  array functions as a stack, with the topmost element giving information about the structured statement that is curr\hich\af4\dbch\af4\loch\f4 ently active. The purpose of this queue is to hold the numbers for two labels. One of these labels is the location to branch to if a }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 break}{\hich\af4\dbch\af4\loch\f4  statement is found, and the other is the location to branch to if a }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 continue}{\hich\af4\dbch\af4\loch\f4  statement is found. The statement parsin\hich\af4\dbch\af4\loch\f4 g routine sets up the while queue entry when it is called, assigning numbers to both of these labels at that time. At the appropriate point in the code generation process, the statement parsing routine will also define the two labels, whether or not they \hich\af4\dbch\af4\loch\f4 h\hich\af4\dbch\af4\loch\f4 ave actually been used. Before returning control to the calling function, statement parsing routines delete the top entry on the while queue, so that nested looping statements are supported properly.\par \par \hich\af4\dbch\af4\loch\f4 Note that only looping statements need to provide branc\hich\af4\dbch\af4\loch\f4 h points for }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 break}{\hich\af4\dbch\af4\loch\f4  and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 continue}{\hich\af4\dbch\af4\loch\f4  statements, so the only functions that use the while queue are those that compile looping statements. These include }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 dowhile}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 dodo}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 dofor}{\hich\af4\dbch\af4\loch\f4  and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 doswitch}{\hich\af4\dbch\af4\loch\f4 .\par \par \hich\af4\dbch\af4\loch\f4 The while queue is taken directly from the original Small-C compiler, Th\hich\af4\dbch\af4\loch\f4 e method is actually poor - better would be to use the natural recursiveness of the C language and eliminate the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 wq}{\hich\af4\dbch\af4\loch\f4  array entirely. For one way to do this, examine the way switch statements handle the array of case labels.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 doif - compile an if statement\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 doif}{\hich\af4\dbch\af4\loch\f4  starts by allocating a label and calling }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 test}{\hich\af4\dbch\af4\loch\f4  to evaluate the condition. }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 test}{\hich\af4\dbch\af4\loch\f4  will generate a branch to the label if the condition was false. The statement after the expression is then evaluated with a recursive call to }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 statement}{\hich\af4\dbch\af4\loch\f4 . An else clause is ch\hich\af4\dbch\af4\loch\f4 ecked for, and if it is present, an unconditional jump around the second statement is generated, and the statement is compiled.\par \par \hich\af4\dbch\af4\loch\f4 The code generated for an if statement with an else clause looks like this:\par \par }\pard\plain \s18\qj\fi180\widctlpar\tx1080\tx2160\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\tab \hich\af6\dbch\af4\loch\f6 <evaluate condition>\par \tab \hich\af6\dbch\af4\loch\f6 fjp\tab sysccl\par \tab \hich\af6\dbch\af4\loch\f6 <evaluate first\hich\af6\dbch\af4\loch\f6  statement>\par \tab \hich\af6\dbch\af4\loch\f6 ujp\tab syscc2\par \hich\af6\dbch\af4\loch\f6 sysccl\tab anop\par \tab \hich\af6\dbch\af4\loch\f6 <evaluate second statement>\par \hich\af6\dbch\af4\loch\f6 syscc2 \tab anop\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 If there is no else clause, the code looks like this:\par \par }\pard\plain \s18\qj\fi180\widctlpar\tx1080\tx2160\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 <evaluate condition>\par \tab \hich\af6\dbch\af4\loch\f6 fjp\tab sysccl\par \tab \hich\af6\dbch\af4\loch\f6 <evaluate statement>\par \hich\af6\dbch\af4\loch\f6 sysccl \tab anop\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 dowhile - compile a while statement\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Labels are assig\hich\af4\dbch\af4\loch\f4 ned for looping and exiting, and then placed in the while queue. The while statement is compiled, and then the while queue entry is deleted. The code generated looks like this:\par \par }\pard\plain \s18\qj\fi180\widctlpar\tx1080\tx2160\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 sysccl\tab anop\par \tab \hich\af6\dbch\af4\loch\f6 <evaluate conditiow\par \tab \hich\af6\dbch\af4\loch\f6 fjp\tab syscc2\par \tab \hich\af6\dbch\af4\loch\f6 <evaluate the statement>\par \tab \hich\af6\dbch\af4\loch\f6 ujp\tab sy\hich\af6\dbch\af4\loch\f6 sccl\par \hich\af6\dbch\af4\loch\f6 syscc2 \tab anop\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 dodo - compile a do statement\par }\pard\plain \s15\qj\keepn\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard \s15\qj\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 The do statement is handled much like the while statement. The code generated looks like this:\par \par }\pard\plain \s18\qj\fi180\widctlpar\tx1080\tx2160\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 syscc3\tab anop\par \tab \hich\af6\dbch\af4\loch\f6 <evaluate the statement>\par \hich\af6\dbch\af4\loch\f6 sysccl\tab anop\par \tab \hich\af6\dbch\af4\loch\f6 <evaluate condition>\par \tab \hich\af6\dbch\af4\loch\f6 tjp\tab syscc3\par \hich\af6\dbch\af4\loch\f6 syscc2 \tab anop\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 dofor - comp\hich\af6\dbch\af4\loch\f6 ile a for statement\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Although the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 dofor}{\hich\af4\dbch\af4\loch\f4  function is a little longer than those covered so far, there is nothing new here. One point worth noting is the pretzel-like way that the code must be generated due to the poor design of the for statement in C. The f\hich\af4\dbch\af4\loch\f4 or statement is defined in terms of the while statement, with\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 for (expl; exp2; exp3) statement; \par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 being equivalent to\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 exp1; \par \hich\af6\dbch\af4\loch\f6 while (exp2) \par \hich\af6\dbch\af4\loch\f6   \{\par \hich\af6\dbch\af4\loch\f6   statement; \par \hich\af6\dbch\af4\loch\f6   exp3;\par \hich\af6\dbch\af4\loch\f6   \}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Full C compilers are usually designed with a large "putback buffer." This allows the\hich\af4\dbch\af4\loch\f4  characters in the third expression to be saved until they are really needed, which is after the statement has been compiled. Since Small-C was designed without such a buffer, it is forced to generate a series of jumps to cause the code to execute in the \hich\af4\dbch\af4\loch\f4 p\hich\af4\dbch\af4\loch\f4 roper order. The code generated looks like this:\par \par }\pard\plain \s18\qj\fi180\keepn\widctlpar\tx1080\tx2160\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\tab \hich\af6\dbch\af4\loch\f6 <evaluate first expression>\par \tab \hich\af6\dbch\af4\loch\f6 popi\par \hich\af6\dbch\af4\loch\f6 sysccl\tab anop\par \tab \hich\af6\dbch\af4\loch\f6 <evaluate second expression>\par \tab \hich\af6\dbch\af4\loch\f6 fjp\tab syscc2\par \tab \hich\af6\dbch\af4\loch\f6 ujp\tab syscc4\par \hich\af6\dbch\af4\loch\f6 syscc3\tab anop\par \tab \hich\af6\dbch\af4\loch\f6 <evaluate third expression>\par \tab \hich\af6\dbch\af4\loch\f6 popi\par \tab \hich\af6\dbch\af4\loch\f6 ujp\tab sysccl\par \hich\af6\dbch\af4\loch\f6 syscc4\tab anop\par \tab \hich\af6\dbch\af4\loch\f6 <evaluate the statement>\par \tab \hich\af6\dbch\af4\loch\f6 ujp\tab sys\hich\af6\dbch\af4\loch\f6 cc3\par \hich\af6\dbch\af4\loch\f6 syscc2 \tab anop\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 By adding a putback buffer and saving the third expression until it is needed, the following code could be used instead.\par \par }\pard\plain \s18\qj\fi180\widctlpar\tx1080\tx2160\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\tab \hich\af6\dbch\af4\loch\f6 <evaluate first expression>\par \tab \hich\af6\dbch\af4\loch\f6 popi\par \hich\af6\dbch\af4\loch\f6 sysccl\tab anop\par \tab \hich\af6\dbch\af4\loch\f6 <evaluate second expression>\par \tab \hich\af6\dbch\af4\loch\f6 fjp\tab syscc2\par \tab \hich\af6\dbch\af4\loch\f6 <evaluate the statement>\par \tab \hich\af6\dbch\af4\loch\f6 <evaluate third expression>\par \tab \hich\af6\dbch\af4\loch\f6 popi\par \tab \hich\af6\dbch\af4\loch\f6 ujp\tab sysccl\par \hich\af6\dbch\af4\loch\f6 syscc2 \tab anop\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 doreturn - compile a return statement\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 doreturn}{\hich\af4\dbch\af4\loch\f4  function evaluates an expression if there is one, leaving the value of the expression on the top of the stack. It then generates a }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ret}{\hich\af4\dbch\af4\loch\f4  instructi\hich\af4\dbch\af4\loch\f4 on to return to the calling function. The }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ret}{\hich\af4\dbch\af4\loch\f4  instruction returns the value that is on the top of the stack as the value of the function.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 dobreak - compile a break statement\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The break statement simply checks to make sure that there is something in the wh\hich\af4\dbch\af4\loch\f4 ile queue, indicating that the break statement is inside of a looping statement, and then generates a jump to the exit label for the top while queue entry.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 docont - compile a continue statement\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 This works similarly to }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 dobreak}{\hich\af4\dbch\af4\loch\f4 , except that the jump is mad\hich\af4\dbch\af4\loch\f4 e to the looping label for the enclosing looping statement, instead of to the exit label.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 doswitch - compile a switch statement\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 This is probably the most complicated of all of the statement parsing routines. Part of this is because of the need to make al\hich\af4\dbch\af4\loch\f4 l of the information about the switch statement available outside of the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 doswitch}{\hich\af4\dbch\af4\loch\f4  function, so that the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 docase}{\hich\af4\dbch\af4\loch\f4  and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 dodefault}{\hich\af4\dbch\af4\loch\f4  functions can work properly. At the same time, the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 doswitch}{\hich\af4\dbch\af4\loch\f4  function must work recursively with a very large buffer area. It must w\hich\af4\dbch\af4\loch\f4 ork recursively so that a switch statement can appear inside of another switch statement. The large buffer is used to save the values for which a case label has been supplied, along with the label number to branch to if that value is encountered.\par \par \hich\af4\dbch\af4\loch\f4 Basicall\hich\af4\dbch\af4\loch\f4 y, the code generated for the switch statement and its accompanying case and default labels starts off with an evaluation of the expression specified in the switch statement itself. A jump around the statement following the expression is then made. Imbedd\hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4 d in this statement are any case and default labels. After the statement part has been evaluated, a jump table is created. The first element in the jump table is the address to jump to if the lowest case label is found, and the last label corresponds to t\hich\af4\dbch\af4\loch\f4 h\hich\af4\dbch\af4\loch\f4 e highest case label specified. Thus, for the switch statement\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 switch(i) \{ \par \hich\af6\dbch\af4\loch\f6   case 1: <statement 1>; break; \par \hich\af6\dbch\af4\loch\f6   case 10: <statement 2>;\par \hich\af6\dbch\af4\loch\f6   \}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 there would be ten addresses in the jump table.\par \par \hich\af4\dbch\af4\loch\f4 It is the indexed jump instruction (}{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 xjp}{\hich\af4\dbch\af4\loch\f4 ) that makes all of this wo\hich\af4\dbch\af4\loch\f4 rk. The table of addresses is preceded by the indexed jump instruction. Before the indexed jump is encountered, code has been generated to place a displacement into the jump table on top of the evaluation stack. This is followed by the length of the jump \hich\af4\dbch\af4\loch\f4 t\hich\af4\dbch\af4\loch\f4 able, so that the indexed jump instruction knows how long the table is. Last, the address of the default jump location is placed on the stack so that the indexed jump instruction knows where to go if the index is beyond the end of the jump table. The defa\hich\af4\dbch\af4\loch\f4 u\hich\af4\dbch\af4\loch\f4 lt jump location is the location of the default label if one is specified, or the end of the switch statement if no default label is found.\par \par \hich\af4\dbch\af4\loch\f4 The code generated for the example shown above would look like this:\par \par }\pard\plain \s18\qj\fi180\widctlpar\tx1080\tx2160\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\tab \hich\af6\dbch\af4\loch\f6 <evaluate the control expression>\par \hich\af6\dbch\af4\loch\f6 ujp \tab syscc\hich\af6\dbch\af4\loch\f6 3\par \hich\af6\dbch\af4\loch\f6 syscc4\tab anop\par \tab \hich\af6\dbch\af4\loch\f6 <statement 1>\par \tab \hich\af6\dbch\af4\loch\f6 ujp\tab sysccl\par \hich\af6\dbch\af4\loch\f6 syscc5 \tab anop\par \tab \hich\af6\dbch\af4\loch\f6 <statement 2>\par \tab \hich\af6\dbch\af4\loch\f6 ujp\tab sysccl\par \hich\af6\dbch\af4\loch\f6 syscc3 \tab anop\par \tab \hich\af6\dbch\af4\loch\f6 ldci\tab 1\par \tab \hich\af6\dbch\af4\loch\f6 sbi\par \tab \hich\af6\dbch\af4\loch\f6 ldci\tab 1\par \tab \hich\af6\dbch\af4\loch\f6 shl\par \tab \hich\af6\dbch\af4\loch\f6 ldci\tab 20\par \tab \hich\af6\dbch\af4\loch\f6 ldci\tab syscc2\par \tab \hich\af6\dbch\af4\loch\f6 xjp\par \tab \hich\af6\dbch\af4\loch\f6 adr\tab syscc4\par \tab \hich\af6\dbch\af4\loch\f6 adr\tab syscc2\par \tab \hich\af6\dbch\af4\loch\f6 adr\tab syscc2\par \tab \hich\af6\dbch\af4\loch\f6 adr\tab syscc2\par \tab \hich\af6\dbch\af4\loch\f6 adr\tab syscc2\par \tab \hich\af6\dbch\af4\loch\f6 adr\tab syscc2\par \tab \hich\af6\dbch\af4\loch\f6 adr\tab syscc2\par \tab \hich\af6\dbch\af4\loch\f6 adr\tab syscc2\par \tab \hich\af6\dbch\af4\loch\f6 adr\tab syscc2\par \tab \hich\af6\dbch\af4\loch\f6 adr\tab syscc5\par \hich\af6\dbch\af4\loch\f6 sysccl anop\par \hich\af6\dbch\af4\loch\f6 syscc2 anop\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 docase - compile a case label\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 A label for a switch statement is generated, and the label number and the case label value are entered into the case queue. The labels are sorted into ascending order as they are entered.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 dodefault - compile a default label\par }\pard\plain \s15\qj\keepn\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard \s15\qj\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 The default label for the enclosing switch statement is generated, and the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 founddefault}{\hich\af4\dbch\af4\loch\f4  flag is set to true so that a second default label will not be generated.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 dogoto - compile a goto statement\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 A unconditional branc\hich\af4\dbch\af4\loch\f4 h to the named label is generated. An error is flagged if the label is not a valid symbol, or if the label has been defined as a variable. The peephole optimizer's buffer is purged to force the label to be written out before the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 sname}{\hich\af4\dbch\af4\loch\f4  array is deallocated \hich\af4\dbch\af4\loch\f4 by returning from the function.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 dolabel - compile a label\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 A label is generated, and the peephole optimizer's buffer is flushed to force the name of the label to be used before the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 sname}{\hich\af4\dbch\af4\loch\f4  array is deallocated by returning from the function. No error is che\hich\af4\dbch\af4\loch\f4 cked for when the ":" is read, since this function is not called unless }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 labelname}{\hich\af4\dbch\af4\loch\f4  has verified that the colon was there. }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 dolabel}{\hich\af4\dbch\af4\loch\f4  ends by recursively calling the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 statement}{\hich\af4\dbch\af4\loch\f4  function, fulfilling the C requirement that a label be followed by a statement.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 doas\hich\af6\dbch\af4\loch\f6 m - compile inline assembly code\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 This function passes all lines in the source code through to the output stream unmodified, until an }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 #endasm}{\hich\af4\dbch\af4\loch\f4  directive is found. This allows placing assembly code in the middle of a C program.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 callfunction - compile a call\hich\af6\dbch\af4\loch\f6  to a function\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 callfunction}{\hich\af4\dbch\af4\loch\f4  is used to generate a call to a function. The code generated starts of with an }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 mst}{\hich\af4\dbch\af4\loch\f4  instruction, which defines the start of a new stack frame for the function to be called. Next, each of the arguments are evaluated, leaving the \hich\af4\dbch\af4\loch\f4 value of the expression on the evaluation stack. Finally, a cup instruction is used to call the procedure. The first argument to the cup instruction indicates how long the argument list is. This information is necessary to finish the set up of the new fun\hich\af4\dbch\af4\loch\f4 c\hich\af4\dbch\af4\loch\f4 tion's stack frame.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 needbrack - check for matching ")" or "]"\par }\pard\plain \s15\qj\keepn\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard \s15\qj\widctlpar\adjustright {\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 needbrack}{\hich\af4\dbch\af4\loch\f4  checks to make sure that the next character is a ")" or "]", whichever was passed as a parameter. If so, it is removed from the input stream. If not, an error is flagged.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 labelname \hich\af6\dbch\af4\loch\f6 - check for label name\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Small-C labels must be a valid symbol followed by a colon. This function checks to see if the next token in the input line fits that description, and returns true if it does, and false otherwise.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 symname - check for symbol name\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Th\hich\af4\dbch\af4\loch\f4 is function returns true if the next token is a valid C symbol, and false if it is not. C symbols start with an alphabetic character or the underline character and are followed by zero to seven alphabetic characters, underline characters, and digits.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 getl\hich\af6\dbch\af4\loch\f6 abel - get next label number\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Returns the next valid label number.\par \par \hich\af4\dbch\af4\loch\f4 While this organization is very general, it probably could be improved on by deleting this function and defining the macro\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 #define getlabel ++nxtlab\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 addwhile - add while entry to while t\hich\af6\dbch\af4\loch\f6 able\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Places a new entry onto the while queue.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 delwhile - delete while entry from while table\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Removes the top entry from the while queue.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 readwhile - get disp to current while entry\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 This function returns an index into the while queue. The index points \hich\af4\dbch\af4\loch\f4 to the top entry currently in the while queue.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 test - evaluate a condition\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 This function is called when a C condition is expected. C conditions are expressions enclosed in parenthesis. The function checks for the opening and closing parenthesis, and eval\hich\af4\dbch\af4\loch\f4 uates the expression. Based on a parameter passed to it, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 test}{\hich\af4\dbch\af4\loch\f4  then does a conditional branch (a }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 tjp}{\hich\af4\dbch\af4\loch\f4  or }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 fjp}{\hich\af4\dbch\af4\loch\f4 ).\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732494}\hich\af4\dbch\af4\loch\f4 Compiling Expressions{\*\bkmkend _Toc497732494}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Whenever the syntax of C calls for an expression, the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 expression}{\hich\af4\dbch\af4\loch\f4  function is called to generate the code necessary to evalu\hich\af4\dbch\af4\loch\f4 ate that expression. The method used is a recursive descent throughout the expression tree. Since C defines an unusual number of precedences between operators, the tree is quite deep.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 expression - compile an expression\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 expression}{\hich\af4\dbch\af4\loch\f4  sets up the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 lval}{\hich\af4\dbch\af4\loch\f4  array, \hich\af4\dbch\af4\loch\f4 used to hold status information about the type of the expression. It then calls }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 hierl}{\hich\af4\dbch\af4\loch\f4  to evaluate the expression. If the expression evaluated by }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 hierl}{\hich\af4\dbch\af4\loch\f4  is an }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 rvalue}{\hich\af4\dbch\af4\loch\f4  (i.e., a variable), code is generated to load that value onto the top of the evaluation stac\hich\af4\dbch\af4\loch\f4 k. For any other type of expression, code to load the value onto the stack has already been generated.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 hierl to hier13 - compile operations\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Most of the work of evaluating an expression is done in the functions whose names start with "hier". Each of these\hich\af4\dbch\af4\loch\f4  functions is responsible for checking to see if an operator at one level of precedence is present. If so, the part of the expression to the right of the operator is evaluated, followed by generation of the necessary operation. Once the basic idea has bee\hich\af4\dbch\af4\loch\f4 n\hich\af4\dbch\af4\loch\f4  verified, this method of evaluating expressions turns out to be very easy.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 primary - compile variables and constants\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 primary}{\hich\af4\dbch\af4\loch\f4  is called when an actual term in an expression is expected. A term can be a constant, a local variable, a global variable, or a \hich\af4\dbch\af4\loch\f4 function call. If a symbol is found, but the symbol does not appear in the local or global symbol table, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 primary}{\hich\af4\dbch\af4\loch\f4  assumes that it is a function that will be defined later. If so, a parameter list is expected. If the parameter list is not found, an undefined\hich\af4\dbch\af4\loch\f4  symbol error is flagged.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 store - save a value\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 store}{\hich\af4\dbch\af4\loch\f4  is called to save the value that is on the top of the evaluation stack. It generates a copy instruction, leaving the value on the stack. This is necessary for support of multiple assignment statements,\hich\af4\dbch\af4\loch\f4  like\par \par }\pard\plain \s17\qj\fi180\widctlpar\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 a = b = c = 0;\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 rvalue - load a value\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 rvalue}{\hich\af4\dbch\af4\loch\f4  is called to load a value from memory, placing it onto the evaluation stack.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 constant - compile constant use\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Checks to see if the next token is a constant. If so, and if the constant is an integer or a\hich\af4\dbch\af4\loch\f4  character, a load constant instruction is generated. If the constant is a string, the address of the string is loaded, instead of the string itself.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732495}\hich\af4\dbch\af4\loch\f4 Code Generation{\*\bkmkend _Toc497732495}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The code generation routines are called to write instructions to the intermediate code f\hich\af4\dbch\af4\loch\f4 ile. It is the intermediate code file which is eventually assembled by the assembler to produce an executable program.\par \par \hich\af4\dbch\af4\loch\f4 The code generator is built around a peephole optimizer. A peephole optimizer saves instructions as they come in, and looks for short pa\hich\af4\dbch\af4\loch\f4 tterns of instructions that can be replaced by equivalent, but shorter, sequences of instructions. }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 optimize}{\hich\af4\dbch\af4\loch\f4  is the main function for this process: it is }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 optimize}{\hich\af4\dbch\af4\loch\f4  that is called to scan the list of instructions and replace the unoptimized instructions with \hich\af4\dbch\af4\loch\f4 optimized instructions.\par \par \hich\af4\dbch\af4\loch\f4 Central to this theme is the ability to store the instructions being generated in an array, so that the peephole optimizer has a convenient data structure to scan. The instructions are stored in the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 peep}{\hich\af4\dbch\af4\loch\f4  array. The size of the wind\hich\af4\dbch\af4\loch\f4 ow used by the peephole optimizer is controlled by the constant }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 peepsize}{\hich\af4\dbch\af4\loch\f4 . Making the window larger means that the optimizer can look at more instructions at once, and possibly find optimizations that would otherwise be missed. It also means that the optimi\hich\af4\dbch\af4\loch\f4 zer will take longer.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 gen0 - generate implied operand instruction\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 genO}{\hich\af4\dbch\af4\loch\f4  is called to generate an instruction that does not have an operand. It calls }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 gen2}{\hich\af4\dbch\af4\loch\f4  with two zero operands.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 genl - generate one operand instruction\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Generates an instruction with one o\hich\af4\dbch\af4\loch\f4 perand by calling }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 gen2}{\hich\af4\dbch\af4\loch\f4  with a zero for the last operand value.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 gen2 - generate two operand instruction\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 gen2}{\hich\af4\dbch\af4\loch\f4  checks to see if the peephole optimizer's window is already full. If so, the first instruction in the window is written to the output file. The ne\hich\af4\dbch\af4\loch\f4 w instruction is placed at the end of the list, and optimize is repeatedly called until no more optimizations are found.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 optimize - check for optimizations\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 optimize}{\hich\af4\dbch\af4\loch\f4  checks the peephole window at a location specified as an input parameter for an optimizat\hich\af4\dbch\af4\loch\f4 ion. The number of optimizations that can be checked for in this way can easily range into the hundreds, so only those that have actually been found in code are checked for. The table below shows the possible optimizations by showing the original code in \hich\af4\dbch\af4\loch\f4 t\hich\af4\dbch\af4\loch\f4 he left column, and the code that }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 optimize}{\hich\af4\dbch\af4\loch\f4  produces in the right column. Note that some optimizations simply rearrange code, making it possible for a later optimization to optimize it better.\par \par }\pard\plain \s17\qj\li720\widctlpar\tx1440\tx3600\tx4320\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 adi\tab \tab ldci\tab a\par \hich\af6\dbch\af4\loch\f6 ldci\tab a\tab adi\par \hich\af6\dbch\af4\loch\f6 adi\tab \tab adi\par \par \hich\af6\dbch\af4\loch\f6 mpi\tab \tab ldci\tab a\par \hich\af6\dbch\af4\loch\f6 ldci\tab a\tab mpi\par \hich\af6\dbch\af4\loch\f6 mpi\tab \tab mp\hich\af6\dbch\af4\loch\f6 i\par \par \hich\af6\dbch\af4\loch\f6 cpoi\tab \tab stoi\par \hich\af6\dbch\af4\loch\f6 popi\par \par \hich\af6\dbch\af4\loch\f6 cpoc\tab \tab stoc\par \hich\af6\dbch\af4\loch\f6 popi\par \par \hich\af6\dbch\af4\loch\f6 cpol\tab \tab stol\par \hich\af6\dbch\af4\loch\f6 popi\par \par \hich\af6\dbch\af4\loch\f6 croi\tab a\tab sroi\tab a\par \hich\af6\dbch\af4\loch\f6 popi\par \par \hich\af6\dbch\af4\loch\f6 croc\tab a\tab sroc\tab a\par \hich\af6\dbch\af4\loch\f6 popi\par \par \hich\af6\dbch\af4\loch\f6 crol\tab a\tab srol\tab a\par \hich\af6\dbch\af4\loch\f6 popi\par \par \hich\af6\dbch\af4\loch\f6 ldci\tab a\tab ldci\tab a+b\par \hich\af6\dbch\af4\loch\f6 ldci\tab b\par \hich\af6\dbch\af4\loch\f6 adi\par \par \hich\af6\dbch\af4\loch\f6 ldci\tab a\tab ldci\tab a-b\par \hich\af6\dbch\af4\loch\f6 ldci\tab b\par \hich\af6\dbch\af4\loch\f6 sbi\par \par \hich\af6\dbch\af4\loch\f6 ldci\tab a\tab ldci\tab a*b\par \hich\af6\dbch\af4\loch\f6 ldci\tab b\par \hich\af6\dbch\af4\loch\f6 mpi\par \par \hich\af6\dbch\af4\loch\f6 ldci\tab a\tab ldci\tab a/b\par \hich\af6\dbch\af4\loch\f6 ldci\tab b\par \hich\af6\dbch\af4\loch\f6 dvi\par \par \hich\af6\dbch\af4\loch\f6 ldci\tab a\tab ldci\tab -a\par \hich\af6\dbch\af4\loch\f6 ngi\par \par \hich\af6\dbch\af4\loch\f6 ldci\tab 0\tab (de\hich\af6\dbch\af4\loch\f6 leted)\par \hich\af6\dbch\af4\loch\f6 adi\par \par \hich\af6\dbch\af4\loch\f6 ldci\tab 0\tab (deleted)\par \hich\af6\dbch\af4\loch\f6 sbi\par \par \hich\af6\dbch\af4\loch\f6 ldci\tab 0\tab ujp\tab a\par \hich\af6\dbch\af4\loch\f6 fjp\tab a\par \par \hich\af6\dbch\af4\loch\f6 ldci\tab a\tab (deleted; a != 0)\par \hich\af6\dbch\af4\loch\f6 fjp\tab b\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 In addition, any code that appears after a }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ujp}{\hich\af4\dbch\af4\loch\f4  or }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ret}{\hich\af4\dbch\af4\loch\f4  instruction is removed, unless the code is a label.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 remove - remove instruction from peephole window\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Removes an in\hich\af4\dbch\af4\loch\f4 struction from the peephole window, moving subsequent instructions forward to fill in the hole.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 instructionout - write an instruction\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Writes an instruction to the output file.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 dumplits - generate string constants\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 At the end of each function, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 dumplits}{\hich\af4\dbch\af4\loch\f4  i\hich\af4\dbch\af4\loch\f4 s called to generate DC statements to define any string constants used in the function. Each string is followed by a zero .\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 dumpglbs - generate global variables\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 At the end of the program, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 dumpglbs}{\hich\af4\dbch\af4\loch\f4  is called. it generates DS directives to reserve space fo\hich\af4\dbch\af4\loch\f4 r each of the global variables. These DS directives appear in a data area called }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 sysccom}{\hich\af4\dbch\af4\loch\f4 , which can be accessed from all C functions, as well as any assembly language subroutine that issues a USING directive for }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 sysccom}{\hich\af4\dbch\af4\loch\f4 .\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 printlabel - generate a label\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Acc\hich\af4\dbch\af4\loch\f4 epts a label number as an input, and writes the characters "syscc", followed by the label number, to the output file.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 outbyte - write a character to the output file\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Checks to see if an output file is open, and, if so, writes the input character out to th\hich\af4\dbch\af4\loch\f4 e output file.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 outstr - write a string to the output file\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Writes a string to the output file by successive calls to }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 outbyte}{\hich\af4\dbch\af4\loch\f4 .\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 ot - write an op code\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Writes an operation code to the output file, preceded by a space.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 outdec - write an integer\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Writes an i\hich\af4\dbch\af4\loch\f4 nteger value to the output file.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 comment - write comment character\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 writes a ";" character to the output file.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 getmem - load global value\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Generates the code to load a value from the global symbol table.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 getloc - load address of local value\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Generates c\hich\af4\dbch\af4\loch\f4 ode to load the address of a value that is on the local stack frame.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 putmem - save global value\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Generates code to save the value on the top of the stack to a global variable.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 putstk - save local value\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Generates code to save the value on the top of the \hich\af4\dbch\af4\loch\f4 stack to a local variable.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 indirect - load indirect\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Generates an indirect load. An indirect load uses the value on the top of the evaluation stack as the address of the value to load.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 defbyte - set up for one byte constant\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Writes "dc il" to the output \hich\af4\dbch\af4\loch\f4 file.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 defstorage\tab set up for storage reservation\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Writes "ds " to the output file.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 index - index into an array\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The top of the evaluation stack contains an index into an array. If the array is an array of short integers, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 index}{\hich\af4\dbch\af4\loch\f4  multiplies the value of the \hich\af4\dbch\af4\loch\f4 top of the stack by two. If the array is an array of long integers, the value on the top of the stack is multiplied by four.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 purge - purge code generation buffer\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 purge}{\hich\af4\dbch\af4\loch\f4  writes all of the instructions in the code generation buffer out to the output file.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732496}\hich\af4\dbch\af4\loch\f4 The Intermediate Code Instruction Set{\*\bkmkend _Toc497732496}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 When the Small-C compiler generates code, it does so with its own instruction set. These instructions are written to an output file, and later changed to native 6502 code or P-code using the ORCA/M assembler. Which ki\hich\af4\dbch\af4\loch\f4 nd of code is generated depends entirely on the macro library used - Small-C does not know, or care, what kind of code is generated. In fact, simply by changing the macros used, the compiler can generate code for almost any computer.\par \par \hich\af4\dbch\af4\loch\f4 The following table s\hich\af4\dbch\af4\loch\f4 ummarizes the intermediate code instruction set. After the table, instructions are defined in like groups.\par \par }\pard \s15\qj\fi720\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 The Intermediate Code Instruction Set\par \par }\pard\plain \s17\qj\li720\widctlpar\tx1440\tx2520\adjustright \fs18\lang1024\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 ldci\tab 1\tab load a constant\par \hich\af6\dbch\af4\loch\f6 lao\tab a\tab load address of local variable\par \hich\af6\dbch\af4\loch\f6 indc\tab \tab load character, indirect\par \hich\af6\dbch\af4\loch\f6 indi\tab \tab load integer\hich\af6\dbch\af4\loch\f6 , indirect\par \hich\af6\dbch\af4\loch\f6 indl\tab \tab load long integer, indirect\par \hich\af6\dbch\af4\loch\f6 cpoc\tab \tab copy character, indirect\par \hich\af6\dbch\af4\loch\f6 cpoi\tab \tab copy integer, indirect\par \hich\af6\dbch\af4\loch\f6 cpol\tab \tab copy long integer, indirect\par \hich\af6\dbch\af4\loch\f6 stoc\tab \tab store character, indirect\par \hich\af6\dbch\af4\loch\f6 stoi\tab \tab store integer, indirect\par \hich\af6\dbch\af4\loch\f6 stol\tab \tab store long integer, indirect\par \hich\af6\dbch\af4\loch\f6 Idoc\tab a\tab load characte\hich\af6\dbch\af4\loch\f6 r, absolute\par \hich\af6\dbch\af4\loch\f6 Idoi\tab a\tab load integer, absolute\par \hich\af6\dbch\af4\loch\f6 Idol\tab a\tab load long integer, absolute\par \hich\af6\dbch\af4\loch\f6 croc\tab a\tab copy character, absolute\par \hich\af6\dbch\af4\loch\f6 croi\tab a\tab copy integer, absolute\par \hich\af6\dbch\af4\loch\f6 crol\tab a\tab copy long integer, absolute\par \hich\af6\dbch\af4\loch\f6 sroc\tab a\tab store character, absolute\par \hich\af6\dbch\af4\loch\f6 sroi\tab a\tab store integer, absolute\par \hich\af6\dbch\af4\loch\f6 srol\tab a\tab store long \hich\af6\dbch\af4\loch\f6 integer, absolute\par \hich\af6\dbch\af4\loch\f6 popi\tab \tab pop TOS\par \hich\af6\dbch\af4\loch\f6 cup\tab b,a\tab call user procedure\par \hich\af6\dbch\af4\loch\f6 mst\tab \tab mark stack\par \hich\af6\dbch\af4\loch\f6 ent\tab a\tab set up local stack area\par \hich\af6\dbch\af4\loch\f6 ret\tab \tab return from procedure\par \hich\af6\dbch\af4\loch\f6 ujp\tab a\tab unconditional jump\par \hich\af6\dbch\af4\loch\f6 fjp\tab a\tab jump if TOS is false\par \hich\af6\dbch\af4\loch\f6 tjp\tab a\tab jump if TOS is true\par \hich\af6\dbch\af4\loch\f6 xjp\tab \tab indexed jump\par \hich\af6\dbch\af4\loch\f6 adi\tab \tab +\par \hich\af6\dbch\af4\loch\f6 sbi\tab \tab -\par \hich\af6\dbch\af4\loch\f6 mpi\tab \tab *\par \hich\af6\dbch\af4\loch\f6 dvi\tab \tab /\par \hich\af6\dbch\af4\loch\f6 mod\tab \tab %\par \hich\af6\dbch\af4\loch\f6 ior\tab \tab |\par \hich\af6\dbch\af4\loch\f6 xor\tab \tab ^\par \hich\af6\dbch\af4\loch\f6 andi\tab \tab &\par \hich\af6\dbch\af4\loch\f6 shr\tab \tab >>\par \hich\af6\dbch\af4\loch\f6 shl\tab \tab <<\par \hich\af6\dbch\af4\loch\f6 ngi\tab \tab unary -\par \hich\af6\dbch\af4\loch\f6 inci\tab \tab ++\par \hich\af6\dbch\af4\loch\f6 deci\tab \tab --\par \hich\af6\dbch\af4\loch\f6 eql\tab \tab ==\par \hich\af6\dbch\af4\loch\f6 neq\tab \tab !=\par \hich\af6\dbch\af4\loch\f6 les\tab \tab <\par \hich\af6\dbch\af4\loch\f6 grt\tab \tab >\par \hich\af6\dbch\af4\loch\f6 leq\tab \tab <=\par \hich\af6\dbch\af4\loch\f6 geq\tab \tab >=\par \hich\af6\dbch\af4\loch\f6 ult\tab \tab unsigned <\par \hich\af6\dbch\af4\loch\f6 ugt\tab \tab unsigned >\par \hich\af6\dbch\af4\loch\f6 ule\tab \tab unsigned <=\par \hich\af6\dbch\af4\loch\f6 uge\tab \tab unsigned >=\par \hich\af6\dbch\af4\loch\f6 not\tab \tab logical not\par \hich\af6\dbch\af4\loch\f6 ocp\tab \tab ~ (one's complement)\par \hich\af6\dbch\af4\loch\f6 lor\tab \tab ||\par \hich\af6\dbch\af4\loch\f6 land\tab \tab &&\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {{\*\bkmkstart _Toc497732497}\hich\af4\dbch\af4\loch\f4 The Ru\hich\af4\dbch\af4\loch\f4 n Time Stack{\*\bkmkend _Toc497732497}\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Central to understanding the intermediate code instruction set is a clear understanding of the run time environment. When a Small-C program begins execution, all of free memory minus some space for 1/0 buffers is allocated as a run time stack\hich\af4\dbch\af4\loch\f4 . The stack starts at the highest available memory location and builds downward.\par \par \hich\af4\dbch\af4\loch\f4 A function call starts with an }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 mst}{\hich\af4\dbch\af4\loch\f4 , or mark stack, instruction. The }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 mst}{\hich\af4\dbch\af4\loch\f4  instruction reserves four bytes on the stack, placing the value of the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 mp}{\hich\af4\dbch\af4\loch\f4 , or mark pointer, in two of \hich\af4\dbch\af4\loch\f4 those bytes. If parameters are being passed to the function being called, the expressions that terminate the parameters are then evaluated. The results of the expressions - which are four bytes each - are left on the stack, so they follow the four bytes r\hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4 served by the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 mst}{\hich\af4\dbch\af4\loch\f4  instruction.\par \par \hich\af4\dbch\af4\loch\f4 The next step is to call the function with the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 cup}{\hich\af4\dbch\af4\loch\f4  instruction. The first operand is the number of bytes placed on the stack by the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 mst}{\hich\af4\dbch\af4\loch\f4  instruction and parameters. This allows the position of the four bytes reserved by }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 mst}{\hich\af4\dbch\af4\loch\f4  t\hich\af4\dbch\af4\loch\f4 o be computed. The return address is placed there, and the mark pointer, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 mp}{\hich\af4\dbch\af4\loch\f4 , is set to that value. Thus, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 mp}{\hich\af4\dbch\af4\loch\f4  points to the start of the stack frame for the new function.\par \par \hich\af4\dbch\af4\loch\f4 When the new function is called, it uses an }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ent}{\hich\af4\dbch\af4\loch\f4  instruction to reserve an area on the \hich\af4\dbch\af4\loch\f4 stack for local variables. The operand for the }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ent}{\hich\af4\dbch\af4\loch\f4  instruction is the number of bytes to reserve. Local variables are accessed by computing their address as a distance from the current mark pointer. The area above the local variables is the evaluation stac\hich\af4\dbch\af4\loch\f4 k for the currently executing function.\par \par \hich\af4\dbch\af4\loch\f4 The }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ret}{\hich\af4\dbch\af4\loch\f4  instruction cleans up the stack and returns to the calling function. The mark pointer points to the old mark pointer and return address. These are restored, and replaced with the value or the top of the eval\hich\af4\dbch\af4\loch\f4 uation stack. The stack pointer is set to point to this area. Note that the end result of this obscure set of operations is that, after the function call, the top of the evaluation stack contains the result of the function. Pictorially, the stack looks li\hich\af4\dbch\af4\loch\f4 k\hich\af4\dbch\af4\loch\f4 e this:\par \par }{{\pict{\*\picprop\shplid1063{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw235\pich200\picwgoal4700\pichgoal4000\macpict\bliptag1944608961\blipupi72{\*\blipuid 73e860c18acbb2b62e3eb938840631ec}31a20000000000c800eb001102ff0c00ffffffff000000000000000000eb000000c800000000000000a101f200163842494d00000000000000c800eb4772897068af626a001e0001000a0000000000c800eb0098007c00000000034103d300000000034103d30000000000c800eb000002850002850002850002850002850002850002850002850002850002850002850002850002850002850002850002850002850002850002850002850002850002850006e50000c0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20011e6000101c0f900060fe000fc000060b10016e6000101c0f900060fe000fe0000e0f800011f80bc0020e6000101c0f9000601e0001e0000e0f800017fe0f700010180ef000101c0dc0025e6000101c0f80005e0000e0000e0f800017c40f90003c00001c0ef000103f8f8000018e60029e6000101c0f80002e0000ef50000e0f80003e00001c0ef000101f8fb00030e00001cef000101e0fa002ce6000101c0f80002e0000ef50000e0f9000401e0000080ee000038fb00030e00001cf6000003fa0000f0fa0035e6000101c0fe000e01ff00ff0000e0000e000180000180fb0000e0f9000101e0eb000038fb00030e00001cf6000007fa000070fa0037e50000c0fe00180fff83ff8000f0000e0007e001ffe003f9e0000001ff000008fc000101e0eb000038fb00000ef3000007fa000070fa0044e6000101c0fe00291e1f81c3c000f0000e0003e003fff00fffe0000007ff80e07c063f000ffe07ffc00f80007f8018f8001ef5000038fb00001ef3000007fa000070fa005ce50000c0fe00113c078001c000f0000e0000e001f8380e07c0fe0015fe00701c0fff803ffe07ffc01fc001ffc03ffe007ff0fe00181fc01f83f03fc0003800c07800fc003ff800f80001f0018fc0fc0008078000020000380070fa0060e6000101c0fe001138038001c000f0000e00006000f0381c0380fe0015e000701c07c1c0781f01e00003c003e1f03fcf01eff0fe00187ff01f83f07ff0003801f07c03ff003ffc01fc000ffe03ffe0fe000b3ff01ffe00ff8003ff8070f8fb0060e6000101c0fe001178010033e000f0000e00007000e038180380fe0015e000701c0780c0700701e00001c00780781e0701c0f0fe0018e0780f01e07078003800f00c03c7801e00003c003e3f01f0f0fe000b7ff81ffe00f3c007ffc070f8fb0060e6000101c0fe0011700001ffc00070000e00006000e038380380fe0031e000701c0700c0e00600e00001c00700381c0701c060000001c03c0701e00038003800701c0003c00e00001c003c0781e078fe000be07807800000e00f03c071e0fb005fe50000c0fe0011700007c7c00070000e00007000e038380180fe0014e000700c0700e0e00000c00001c00700381c0701c0fe001901c01c0781c00038003800701c0001c00e00001c00780781c038fe0002e03807fe0005601e01c07380fb005fe6000101c0fe001130000701e00060000e00006000e038380380fe0014e000700c0300e0e00000e00001c00e003c1c0701fafe001903c01c0381c00ff8003800701c0013c00e00001c007003c1c038fe0002e00007fe0004f01c01c077fa005fe6000101c0fe001138000f01c00060000e00007000e0181c0380fe0031e000700c0700e0e00001e00001c00e003c1c0700ffe0000003fffe03c3807ff8003800701c00ffc00e00001c00f001c1c038fe000afa000700007ff01c000076fa005ee50000c0fe001138010e03e000f0000e00007000e0181c0780fe0031e000701c0300e0e00001e00001c006001c1c07003ff0000003fffc01c300fc78003800701c07ffc01e00001c00e003c1c038fe000a7ff0078000fff018000077fa005fe50000c0fe00113e0f8703e000f0000f00007000e03c0f0f80fe00316000701c0300e0e00000e00001c00700381c07000078000003c00001c700e038003800701c0f01c00e00001c006003c1c038fe000b3ff8070001c0703800007380fb005ee50000c0fe00111fff07fff00fff007ff003fc00f03c07ff80fe0031f000303c0700e0700600e00001c00700381c07810038000001c00000e601c038003800701c0e01c00e00001c007003c1c038fd000a3807000380701c000071e0fb005ee50000c0fe004607fe03fff80fff80fff80fff81f87e03e380000001ff003dfe0781e03c1e00f03001e003c0781c0781c078000001e000007e01c038003800701c0e01c00e00001c00700381c038fd000a1c07000380701c000070f0fb005fe50000c0fe004601f001f8600108007cf0077f01f03c000380000003ff801fff0fc1f01ffc00fff01ffe03fbf03e0fc1f070000001f03e007c01e078007c00787e0e03c00e00003e007c0781c078fe000bc01c07800380f01e00c07070fb004fe50000e0ee00010380fe001560000f860f81f00ff0007fe01ffe00ffe03f0fc1fff0fe0018fffe007c00f7fe03ffe03fff0f8fe007ff01ffe03f1f03f07cfe000bf03c03c183c3f00f07c0707cfb0045e50000e0ee00010380f4000b06000020003e001c0701ffe0fe00273ffc003c00fffe03ffc01ffe07fff007fe03ffe01ffe03f0fe000001fff803ff81fffc07ff80f07efb003ae50000c0ee00010780ea000003fd000107c0fe00017e08fe000e040003f8f001f800360007f801c018fe000bfff001ff00ff7803fe00e03efb0013e50000c0ee00001fc800010780fb000010f8000be50000e0ef000103ffb6000be50000c0ef000101f8b60006e50000c0a20007e600010180a20007e600010180a20007e600010180a20007e600010180a20007e600010180a20007e600010180a20007e600010180a20007e600010180a20007e600010180a20007e600010180a2000cee000101c0fb00010380a20013fc000304000780f7000101e0fb00010180a20013fd00047fff039fe0f60000f0fb00010180a20013fd00047fff83fff0f6000078fb000101c0a20013fd000478f3c1e078f600001cfb00010180a20013fd000430e1c1e03cf600000efb00010180a20013fd000470e1c1c01cf6000007fb00010180a2001bfd000470e1c1c01cfe000808f000fe000040000ffb000101c0a2001bfd000478e1c1c01efe0008fff807ffc0fff8000efb000101c0a2001bfd000470e1c1c01efe0008fff807ffc0fffc001efb00010180a20016fd000470e1c1c01ef900037ff80078fb00010180a20013fd000430e1c1c01cf60000f8fb00010180a20013fd00043861c1e03cf60000e0fb000101c0a20013fd00047861c1fdf8f60000c0fb000101c0a2000ffd00047cf9e1fff0ef000101c0a2000ffd00047c79e1cfe0ef000101c0a2000efd0003382001c0ee000101c0a2000cfb000101c0ee000101c0a2000cfb000101c0ee000101c0a2000cfb000101f0ee000101c0a2000cfb000103fcee000101c0a2000cfb000101fcee000101c0a20016e6000201c01ffcff067f7fe2fe7ffffffd000004b40024e6000201c01fe5ff02fdfd9ffeff0ef7784307fffdfdfbe0020002000380ea000004ec0010e6000201c00fb0ff00f7fbff00c0fc0021e6000101c0ec0002700001fd00071f3dfffef47df11ffeff01fbefd1ff00c0fc0020e6000101c0ce00000cf300020f83a3fe000b30000c108e00001000079f71f60007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20006e50000c0a20006e50000c0a20006e50000c0a20006e50000c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20006e50000c0a20006e50000c0a20006e50000c0a20007e6000101c0a20006e50000c0a20006e50000c0a20006e50000c0a20006e50000c0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20006e50000c0a20006e50000c0a20006e50000c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20006e50000c0a20006e50000c0a20006e50000c0a20007e6000101c0a20006e50000c0a20006e50000c0a20006e50000c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a2000be6000101c0fd00003ea70010e6000101c0fd0000fff7000101c0b30011e6000101c0fe000101fff7000101e0b3001de6000101c0fe00010380f60000e0fd000018e6000503fc000001c0d90020e6000101c0fe000003f5000060fd00001ce6000501fc000001e0f50000e0e60020e6000101c0fe00010380f6000060fd00001ce500041c000001e0f50000e0e60021e50000c0fe00030ffc001ef8000060fd00001ce500001cfe0000e0f50000e0e6002ce50000c0fe00093ffe00ffc0380f00707cfe000577f00001803cfc000080eb00001cfe0000e0f50000e0e6003ce50000c0fe00091ffe01fff03c0f01f9fefe000b7ffc1f03e07ff801fe000ffcfd000a1e007e0001e0001e00000efa00001cfe000060f50000e0e6004ae50000c0fe0009038003c0f01c03007ffefe000b7c1e1e03c07ff803ff803ffcfe00133e7f81ff800fff00ff803e3f83f87e01fc001fdcfe000463e00f01e0fd00058002c001ffc0e7004be50000c0fe000903800380781c03003f04fe000b780f0e01c03c000703c0383efe00131ffb83c3e01e3f01e3e01fffc3f03e03fe007ffcfe000e7ff81f03f000001fffe01ffc03ffe0e7004ae50000c0fe000803800700381c03803efd000b70070703801c000e01c0700cfe001307e00700e01c0f0380e007e180e01c078f80f0fcfe000e7e3e0f01e000000ffff03efe03f780e70048e50000e0fe0008038007001c1c03803cfd000a700707038018001c00e078fd00130780070070380207007007c000f01c0e03c0e03cfe000d780e0701c000000f1c70381e00e0e60048e50000e0fe000803800f001c1c038038fd000a700303870018001e01e038fd00130e000e00f01c0007007007800070381c01c1c03cfe000d780707018000000e1c38780c00e0e60049e50000c0fe000803800f001c1c038038fd000b70038387001c001fffe03ff0fe00130e000f9ff01ff007c1f807000078381c01c1c01cfe000d700703818000000e1c38380000e0e60049e50000e0fe0008038007001c0c038038fd000b700381ce001c001fff800ffcfe001306000ffff00ffe07fff007000038301fffe1801cfe000370038183fe00060e1c383f8000e0e60049e50000e0fe0008038007003c0c030038fd0007700300cc001c001cfe00001efe000206000ffe000dff07f9f007000018701fffc1c01cfe0003700381c3fe00060e1c381ffc00e0e60049e50000e0fe000803800780380e070038fd0007780700dc001c001cfe00000efe000206000ffe000d0787000007000018601c0081c01cfe0003700780c7fe00060e1c380ffe00e0e60049e50000e0fe000807e003e0780e0f8038fd000b780f0078001c000e0000300efe000207000ffe000d038700000700000ce01c0001c01cfe0003700780eefe00060e1c38000f00e0e60049e50000e0fe00081ffe01fff00fffc07ffd000bfd3e0038001c000781e0780efe0013070007803038038780100700000fc01c0001c03cfe00037807007efe00060e1c38000700e0e6004ae50000e0fe00181ffc00ffe003fbc1ffe0000001fffc0030001f7e03ffe07ffefe00130fe003e5f03e0f83e0780780000fc00e0040e03cfe00037c0f007cfe00060e1c38300700f0e60047e50000e0fb00061700018001ffc0fd000af00070000ffc01ff807ffcfe00133ff801fff03fff01fff03ffc0007c00f86e0f9fefe0003ff1e0038fe00070f1c387c0e00fbf8e7003be50000e0ee0003700001f0fe000103f0fe001a3ff0007f801ffe007fc03ffc00038007ffc03fff000001fffc0038fe00071f9e3c7ffe007ff0e70026e50000e0ee0000e0e90006010001ff000f86fe0003e3f00030fe00071f9e1c3ffc001fc0e70016e50000e0ef000101e0dc000070fb000301f00006e6000fe50000e0ef000103f0dc000060dc000fe50000e0ef00010ff8dc0000f0dc0010e50000e0ef000103c0dd00010ff8dc000be50000c0c900010ff8dc0007e6000101c0a20006e50000c0a20006e50000c0a20006e50000c0a20007e6000101e0a20007e6000101e0a20006e50000e0a20007e6000101e0a20006e50000e0a20006e50000c0a20006e50000c0a20006e50000e0a20006e50000e0a20006e50000c0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000c0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20007e6000101e0a20007e6000101e0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20006e50000c0a20006e50000c0a20006e50000c0a20006e50000c0a20006e50000c0a20006e50000c0a20006e50000c0a20007e6000101c0a20007e6000101c0a20006e50000c0a20006e50000c0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20007e6000101e0a20013e6000201e00ff8ff07f8efff80001b04d7b40015e6000201e00fe6ff05f08017efffe0fb000021cb001fe6000201c007cfff00fefbff0ffe60607dfffe0407f0e1c00008000078ec0019e6000101c0ee00064045f41f3c7de7d5ff007fefff00c0fc001ae6000101c0dd000b8000060011ede3dfffffe3c3d8ff00c0fc001ce6000101c0bc000c02c6000001ffb1980000fc027ffbff01f380fc0007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20006e50000c0a20006e50000c0a20006e50000c0a20007e6000101c0a20006e50000c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a2000be6000101c0f00000f0b4000ce6000101c0f1000107f8b40010e6000101c0f1000103f8ef000002c7000fe6000101c0f0000038ef000007c7000fe6000101c0f0000038ef000007c7000fe6000101c0f0000038ef000007c70016e6000101c0fb000004fa000360000038ef000007c70034e6000101c0fe000e79fc00ff8003ff003ff803fc007fb8fe0017707001f800001e00f000060e001e000fc4000c000007001fcf0035e6000101c0fe000e7fff01ffc007ff807ff80fbe00fff8fe0018fffc07ff007c7f03ff007fff00ff801fff007fc01f1fc07ff0d00035e6000101c0fe000e3f078081e00e0780f0781e0701e0f8fe00187c0f0707803fff03e78079f781f7e01ffe01f3e01fffc0fbf0d00035e6000101c0fe000e1c038000e00e0300e0181803838078fe001838070003800fc00003c070e18380e0070001c0f007f1c1c070d00035e6000101c0fe000e1c01c000f00e0000e0003803838038fe001838078003800f000001c070e1830070070003807007e001c030d00034e6000101c0fe000e1c01c01ff00f800078003803c38038fe001738038003800f000001c070e18700700700070038078001c0cf0035e6000101c0fe000e1c01c1fff007fe007ff03fffc30038fe0018300383ff800e0000ffc070e18700780700078078038001f880d00035e6000101c0fe000e1c01c1e0f003ff003ff87fff830038fe0018300387c3800e0003efc070c187fff8070007fff8038000ffe0d00035e6000101c0fe000e1c01c38070000780007c3800038038fe001830038e03800e000f01c070c187eaf00700079ef00380001ff0d00035e6000101c0fe000e1c01c380700003c0001c3800038038fe001838038c01c00e000e01c070e187000007000700000380000078d00035e6000101c0fe000e1e03c300f00c01c0c01c3c00038078fe00183c078c03800e000e01c070c187000007000380000380000038d00035e6000101c0fe000e1f078381f01e01c0e01c1c03c1c0f8fe00183c0f1c03800e000e03c070c38700000700038000038001c038d00035e6000101c0fe000e1fff03ebfc1f8780f83c0fffc1fffcfe00183f9e0e1fc00f000e0fc070e3c38038078083e078078001e078d00035e6000101c0fe000e1dfe01ff7c1fff00fff807ff007ffefe00183bfc0ffff07ff80ffff0f8f1c1fff003ffc0fff81ffc01fff8d00035e6000101c0fe000e1c00007c180ffc006fe00078001e0cfe0018381003f1e07ff003fdf07860c07fe001ff807fe01ffc01ffe0d0001de6000101c0fe00001cf0000038f500030c000038fe000303000003cf000fe6000101c0fe00001cf0000030b8000fe6000101c0fe00001cf0000038b80010e6000101c0fe00013f80f100007eb80010e6000101c0fe00013fc0f100007fb80010e6000101c0fe00010f80f100003eb80007e6000101c0a20007e600010180a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e600010180a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e600010180a20007e600010180a20007e600010180a20007e600010180a20007e600010180a20007e600010180a20007e600010180a20007e600010380a20007e600010180a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e600010180a20007e600010180a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a2000ce6000101c0fd00015080a80012e6000201c01feeff06f43804c0000101bd0016e6000201801fdcff05f80803fffff8fe000183c0d30028e6000d018000011f800000043bffffbff1c8ff01f43afdff08feef7f9ff037c60bc8fd000030fb0015e600010180ea000640047c00047f9fc6ff0080fc002ae600010180d4001108400000640008000ffffff8820ffffffb7efeff02fe7e17feff00dff1ff0080fc000ce600010180ac00011870f90007e600010180a20007e600010180a20007e600010180a20007e600010180a20007e600010180a20007e600010180a20007e600010180a20007e600010180a20007e600010180a20007e600010180a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20006e50000c0a20006e50000c0a20006e50000c0a20006e50000e0a20006e50000e0a20006e50000e0a20006e50000e0a20007e6000101e0a20007e6000101e0a20007e6000101c0a20007e6000101c0a20006e50000c0a20011e6000101c0fe000107e0f9000107e0b1001de6000101c0fe00010ff0f9000107f0f6000101c0fe00033c0000fec5001ce6000101c0fd0000f0f9000101f0f6000101c0fe00033c0000fec5001be6000101c0fd000070f80000f0f6000101c0fe00031c00000ec5001ae6000101c0fd000070f80000f0f50000c0fe00031c00000ec50016e6000101c0fd0000f0f80000f0f100031c00000ec50022e6000101c0fd000a70001fc000fc000f000070fe00021e03e0f700031c30000ec5002fe6000101c0fd000a70007ff003ffc07fc00070fe00161f83f01fc00787e00fc001fe001cfe000e0003f8007fe0cb002fe6000101c0fd000a7000fcf807ffe07fe00070fe00161f03e03ff007fff00fe003ff801fdf000e000ffe00fff0cb002fe6000101c0fd000a7001e01c0f03e000700070fe00160e01c0303c01fe6001e00303801f03800e001e1f01c1f0cb002fe6000101c0fd000a7001c01c0e01e000700070fe00160703c0001c01f00000e00001c01e01c00e00180701c070cb002fe6000101c0fd000a7001800e0c00c000700070fe0016070380001c00e00000e00001c00e00e00e003803818020cb002de50000c0fd000a7003800e1c00003ff00070fe001503838007fc01e00000e0001fc00c00e00e00380381e0ca002fe6000101c0fd000a7003800e1c0000fff80070fe00160387003ffc00e00000e003ffc00c00e00e007eff80ff80cb002fe6000101c0fd000a7003800e1c0001e0700070fe001601c7007c1c00c00000e007c7c01c00e00e007fff807ff0cb002fe6000101c0fd000a7003800e1c0003c0700070fe001601ce00f01c00c00000e00701c00c00e00e007c030001f0cb002fe6000101c0fd000a7001c00e1e000380700070fe001201ee00e00c00c00000e00e01c00c01e00e0070fe000078cb002ee6000101e0fd000a7001c01e0e004380780070fd0015fc00e01c01c00000e00e01c01e01c00e003800018038cb002fe6000101e0fe000b01fc00f07c0f81c3c1f800fcfd00157c00e03c01e00000e00e03c01f03c00e003c0001c078cb002fe50000c0fe000c0fff807ff807ffc1fffe0fff80fe00157800fcff07fe0009f8071fe03fff807fe01f07c3f0f8cb0030e6000101c0fe000c0fff803ff003ff81ffbe0fff80fe001538007fff0fff001fff07fff03fff00fff80fff81fff0cb0028e50000c0fb00070380003c007e1c01fa00133f0f07fc000ffe03fcf0103c00fff003fe01ffc0cb0006e50000e0a20006e50000e0a20006e50000e0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20006e50000c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20014e6000401c005ffeffcff068201fc27ff0030b1001fe6000201c01febff00f7fdff09e3173e00fc03a87d300dfe00024019c0ce001ae6000201c00fcdff00fef3ff0afe000027ffde0010000002f10018e6000101c0f4000918600ffff7eff8fffe0fbfff00c0fc001ee6000101c0dd000910001ff87380001f3e3ffdff02bffff2ddff0080fc001ce6000101c0bc0002100040fc0006c000c000066c0bfeff010060fb0007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e600010180a20007e600010180a20007e600010180a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000103c0a20007e600010380a20007e600010380a20007e600010380a20007e600010380a20007e600010380a20007e600010380a20007e600010380a20007e600010380a20007e600010380a20007e600010380a20007e600010380a20007e600010180a20007e600010180a20007e600010180a20007e600010180a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e600010180a20007e600010180a20007e600010380a20007e6000103c0a20007e6000103c0a20007e600010380a20007e600010380a20019e6000103c0fe00010f80f9000107e0f600001ee4000008db0024e6000101c0fe00011fe0f9000107f0f600003ffa0003600001c0f6000018fb00001edb0025e6000101c0fe000103e0f9000103f0f600011f80fb0003600001c0f6000038fb00001edb0024e600010180fe000101e0f80000f0f600010780fb0003600001c0f6000038fb00000edb0020e600010180fd0000e0f80000f0f600010380fb0000e0f3000038fb00000fdb0020e600010180fd0000e0f80000f0f600010380fb0000f0f3000038fb000007db003ce600010180fd000ae0003f8000f8003f0000f0fe000403f801f03efe00010380fe0003030000fcfd000304000078fb00017fe0fe000303c00707dc0041e6000101c0fd000ae0007fe007ffc0ffc00070fe001807fe03f07e07fc0003800e03801fe001ffe00fc000ff8079fcfe000c07ff00fff807fc001ffc060f80dd0040e6000101c0fd000ae000fff80fffc1ffe00070fe00180f1f01e03c0f9e0003800f03c03c7003ffe01fc001ffe07f9efe000b0fff80fff00ffe007ffe061fdc0040e6000101c0fd000ae001e0381e03c000e00070fe00181c0780e03c02070003800701c0003800f00001c003c0f03e0ffe000b0e0f8038000e0f00f01e061cdc0040e6000101c0fd000ae003801c1c03c000e00070fe00183c0380e03800078003800701c0001c00600001c00780381c07fe000b1e03003800000700e00e0738dc0040e6000101c0fd000ae007001c3801c000f00070fe00183803c0703000078003800701c0001c00e00001c00700381807fe000b1e00003800000701e00607e0dc0040e6000101c0fd000ae007001e3800007ff00070fe00183fffc0707003ff8003800701c01ffc00e00001c00f003c1807fe000b0f8000380001ff01c00007e0dc0040e600010180fd000ae007000e380001fdf00070fe00187fff8038700f9f8003800701c03ffc00600001e007001c1807fe000b0ffe00380007ff81c00007f0dc0040e600010180fd000ae007000e380001c0f00070fe00183c050038e00f078003800701c0701c00e00001c007001c1807fe000b03ff8038000f9701c0000738dc003fe600010180fd000ae007001c38000380700070fe00183800001cc01c038003800700c0e01c00e00001c007001c1c07fd000a0f8038001c0701c000071edc003fe6000101c0fd000ae003801c1c000300f00070fe00183c00001fc018078003800701c0e01c00f00000c00700381c07fd000a03c03800180701e000070fdc0041e6000101c0fd000ae003c03c1e01c380f00070fe00181e01800f8018078003800301c0e03c00f00000e00780781c07fe000c0c03c03800380700f006070780dd0042e6000101c0fe003703ff01f0f80f87c383f003ff8000001fbfc00f801e1f8003c00387e0e07c00783801e003c0f83c0f8000001f03c03c1c3c0f80783c0f07c0dd0042e6000101c0fe00371fff80fff007ff03fffc0fff8000000fff8007801fffc03ffe03fff0fffe007ff81ffe01fff07e0fc000001fcf801ffc1fffc03ffc1f07e0dd0042e6000101c0fe00371fff007fc001fc01fe3c07ff80000003ff0003000ffbc03ffc01fcf03fff003ff03ffe00ffe07e0fc000000fff000ffc1fffe01ff01e03e0dd0028e6000101c0f6000018f600010180fb00031e00000efd00001efb000909fe00028007c0000180da0007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e600010380a20007e600010380a20007e600010380a20007e600010380a20007e600010380a20007e600010380a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a20007e6000101c0a2000be6000101c0b5000018ef000be6000101c0b5000018ef0007e6000101c0a20013e6000201c00ffaff019801feff02180680b20019e50001c01fe5ff0edffae1f3e9ffbe1fffa00043c1fe50ce0019e400000fccff00dffaff02ddfffdfeff05fc00001cfbffec0014d50007018006b0000fffc7feff01e0ecc4fffb001abe000004fd000a1f0033fff7affdf9fcf77ffeff00fbe2fffb0019a0000301808020fd0007b80010f0187eff9ffeff01ef7cfb0002850002850002850002850002850002850007ee000103809a000bfa000003f6000101e09a000efd000407ff07ffe0f60000e09a000efd00040fff07fff0f60000789a000efd00041e1f81e078f600003c9a000efd00041c0701e03cf600001e9a000efd00041c0001c01cf600000f9a0013fd00041e0001c01efe00014380fb00001e9a0016fd00040ffc01c01efe0008fff807ffe07ff8001e9a0016fd000407ff01c01cfe0008fff807ffe0fff8003c9a0015fc00033f81c01cfe00087ff001e3807ff000f89a000dfc00030781c01cf60000f09a000ffd0004180381e03cf7000101e09a000ffd00041c0381f078f7000101c09a000ffd00041f0f81fff0f7000101809a000afd00041fff01ffe08e0009fd00031ffe01c18d0007fb000101c08d0007fb000101c08d0007fb000101c08d0007fb000103f88d0007fb000103fc8d0007fb000101f88d000285000285000285000285000285000285000285000285000285000285000285000285000285000285000285000285000000ff}}{\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 Absolute Loads\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Absolute loads know the address of the variable to load, much the same as an absolute load on the 6502. The load comes in three sites: }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ldoc}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ldoi}{\hich\af4\dbch\af4\loch\f4  and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ldol}{\hich\af4\dbch\af4\loch\f4 . These load one byte, two byte, and four byte integers, respectively. In \hich\af4\dbch\af4\loch\f4 all cases, a four byte number is loaded onto the evaluation stack. One byte values are padded with zeros, while two byte values are sign extended.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 Absolute Saves and Copies\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 As with absolute loads, the operand for an absolute copy or store is the absolute\hich\af4\dbch\af4\loch\f4  address of the variable to save or copy to. The top number on the evaluation stack is first copied into the variable's location. If the operation is a store, the value is then removed from the stack. Stores and copies still come in three sizes for one, t\hich\af4\dbch\af4\loch\f4 w\hich\af4\dbch\af4\loch\f4 o or four byte operations. Unneeded bytes are truncated without checking for range errors. The absolute copy and store operations are }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 croc}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 croi}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 crol}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 sroc}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 sroi}{\hich\af4\dbch\af4\loch\f4 , and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 srol}{\hich\af4\dbch\af4\loch\f4 .\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 Indirect Loads\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Indirect loads get the address to load from the evaluation stack.\hich\af4\dbch\af4\loch\f4  The top value on the evaluation stack is the address to load from. It is replaced by the value loaded. Again, there are three sizes of loads - }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 indc}{\hich\af4\dbch\af4\loch\f4 , indi }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 and}{\hich\af4\dbch\af4\loch\f4  }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 indl}{\hich\af4\dbch\af4\loch\f4  - for one, two, or four byte integers.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 Indirect Stores and Copies\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The top value on the eva\hich\af4\dbch\af4\loch\f4 luation stack is the value to save, and the next value on the stack is the address to save to. The value is saved, and the address removed from the stack. In the case of a store, the value is also removed from the stack. The indirect copies and stores are\hich\af4\dbch\af4\loch\f4  }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 cpoc}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 cpoi}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 cpol}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 stoc}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 stoi}{\hich\af4\dbch\af4\loch\f4 , and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 stol}{\hich\af4\dbch\af4\loch\f4 .\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 Load Constant\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The load constant operation, }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ldci}{\hich\af4\dbch\af4\loch\f4 , places a constant value on the top of the evaluation stack. It is used both for numeric constants and fixed addresses.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 Load Address\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 lao}{\hich\af4\dbch\af4\loch\f4  instruction is used to \hich\af4\dbch\af4\loch\f4 load the address of a local variable. The operand is an offset into the current stack frame. This is subtracted from the start location of the current stack frame to get the variable's address, and the address is placed on the evaluation stack.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 Pop\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 p\hich\af6\dbch\af4\loch\f6 opi}{\hich\af4\dbch\af4\loch\f4  instruction removes the top value from the evaluation stack.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 Jumps\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 There are four jump instructions available. }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ujp}{\hich\af4\dbch\af4\loch\f4  is an unconditional jump that transfers control to the address specified in its operand. }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 tjp}{\hich\af4\dbch\af4\loch\f4  and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 fjp}{\hich\af4\dbch\af4\loch\f4  also have absolute address operand\hich\af4\dbch\af4\loch\f4 s, but they are conditional jumps. Each removes an operand from the evaluation stack. }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 fjp}{\hich\af4\dbch\af4\loch\f4  will jump if the value is zero, and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 tjp}{\hich\af4\dbch\af4\loch\f4  jumps if the value is non-zero.\par \par }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 xjp}{\hich\af4\dbch\af4\loch\f4  is an indexed jump. It is followed by a table of addresses. When the xjp is encountered, \hich\af4\dbch\af4\loch\f4 the top three values on the evaluation stack are used. The top most value is the default address. This is where control will be transferred if the jump index is out of range. Next is the length of the jump table, in bytes. An index into the jump table is \hich\af4\dbch\af4\loch\f4 t\hich\af4\dbch\af4\loch\f4 he last operand. The }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 xjp}{\hich\af4\dbch\af4\loch\f4  instruction compares the index to the length, and jumps to the default location if the index exceeds the length. Otherwise, the address to jump to is read from the jump table.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 Binary Operators\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 There is a binary operation for each\hich\af4\dbch\af4\loch\f4  of the binary operators in the C language. Binary operations remove two values from the top of the evaluation stack, perform an operation on them, and place the result back onto the stack. when the operation starts, the topmost value on the evaluation st\hich\af4\dbch\af4\loch\f4 a\hich\af4\dbch\af4\loch\f4 ck is the second operand; the next value is the first operand.\par \par \hich\af4\dbch\af4\loch\f4 The binary operations are }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 adi}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 sbi}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 mpi}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 dvi}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 mod}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ior}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 xor}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 andi}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 shr}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 shl}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 eql}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 neq}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 les}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 grt}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 leq}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 geq}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 lor}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 land}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ugr}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 uge}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ule}{\hich\af4\dbch\af4\loch\f4 , and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ult}{\hich\af4\dbch\af4\loch\f4 . The last four operations are unsigned compares, us\hich\af4\dbch\af4\loch\f4 ed for comparing pointers. Note that testing for equality or non-equality is the same for signed or unsigned numbers, so two versions of }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 eql}{\hich\af4\dbch\af4\loch\f4  and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 neq}{\hich\af4\dbch\af4\loch\f4  are not required. The table at the start of the section shows what C operations correspond to what intermed\hich\af4\dbch\af4\loch\f4 iate code operations.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\fs20\loch\af6\hich\af6\dbch\f4\cgrid {\hich\af6\dbch\af4\loch\f6 Unary Operators\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 There is also a unary intermediate code operation for each C unary operator. The unary operations remove one value from the evaluation stack, perform on operation on that value, and place the result back onto the sta\hich\af4\dbch\af4\loch\f4 ck.\par \par \hich\af4\dbch\af4\loch\f4 The unary operators are }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ngi}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 inci}{\hich\af4\dbch\af4\loch\f4 , }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 deci}{\hich\af4\dbch\af4\loch\f4 , and }{\fs18\lang1024 \hich\af6\dbch\af4\loch\f6 ocp}{\hich\af4\dbch\af4\loch\f4 .\par \par }}