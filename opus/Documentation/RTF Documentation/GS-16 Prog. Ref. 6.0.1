{\rtf1\mac\ansicpg10000\uc1 \deff0\deflang1033\deflangfe1033{\upr{\fonttbl{\f0\fnil\fcharset256\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fnil\fcharset256\fprq2{\*\panose 020b0604020202020204}Arial;}{\f2\fnil\fcharset256\fprq2{\*\panose 02070309020205020404}Courier New;}{\f3\fnil\fcharset2\fprq2{\*\panose 02000500000000000000}Symbol;}{\f4\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Times;}{\f5\fnil\fcharset256\fprq2{\*\panose 00000af457e00003b27c}Helvetica;}{\f6\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Courier;}{\f7\fnil\fcharset256\fprq2{\*\panose 020b0503030404040204}Geneva;}{\f8\froman\fcharset77\fprq2{\*\panose 00000000000000000000}Tms Rmn;}{\f9\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}Helv;}{\f10\froman\fcharset77\fprq2{\*\panose 00000000000000000000}MS Serif;}{\f11\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\fnil\fcharset256\fprq2{\*\panose 00000af457e00003b27c}New York;}{\f13\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}System;}{\f14\fnil\fcharset2\fprq2{\*\panose 05020102010804080708}Wingdings;}{\f15\froman\fcharset256\fprq1{\*\panose 00000000000000000000}FE Roman font face;}{\f16\fmodern\fcharset256\fprq1{\*\panose 00000000000000000000}FE Modern font face;}{\f17\froman\fcharset256\fprq1{\*\panose 00000000000000000000}FE Truetype Roman font face;}{\f18\fmodern\fcharset256\fprq1{\*\panose 00000000000000000000}FE Truetype Modern font face;}{\f19\froman\fcharset77\fprq2{\*\panose 00000000000000000000}Century;}{\f20\fnil\fcharset256\fprq2{\*\panose 020b0806080604040204}Chicago;}{\f21\fnil\fcharset256\fprq2{\*\panose 020b0509030404040204}Monaco;}{\f22\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Venice;}{\f23\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}London;}{\f24\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Athens;}{\f25\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}San Francisco;}{\f26\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Toronto;}{\f27\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Cairo;}{\f28\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Los Angeles;}{\f29\fnil\fcharset2\fprq2{\*\panose 00000af457e00003b27c}Zapf Dingbats;}{\f30\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Bookman;}{\f31\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Helvetica Narrow;}{\f32\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Palatino;}{\f33\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Zapf Chancery;}{\f34\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Mobile;}{\f35\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Avant Garde;}{\f36\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}New Century Schoolbook{\*\falt Times New Roman};}{\f37\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Font1024;}{\f38\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Font1043;}{\f39\fnil\fcharset2\fprq2{\*\panose 02000500000000000000}MT Extra;}{\f40\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Font3030;}{\f41\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Font14053;}{\f42\fnil\fcharset256\fprq2{\*\panose 020b0a06030101010103}Abadi MT Condensed Extra Bold;}{\f43\fnil\fcharset256\fprq2{\*\panose 020b0306030101010103}Abadi MT Condensed Light;}{\f44\fnil\fcharset256\fprq2{\*\panose 020b0509000000000004}Andale Mono;}{\f45\fnil\fcharset256\fprq2{\*\panose 05000000000000000000}Animals 1;}{\f46\fnil\fcharset256\fprq2{\*\panose 020b0a04020102020204}Arial Black;}{\f47\fnil\fcharset256\fprq2{\*\panose 020b0506020202030204}Arial Narrow;}{\f48\fnil\fcharset256\fprq2{\*\panose 020f0704030504030204}Arial Rounded MT Bold;}{\f49\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde Bk BT;}{\f50\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde BkOb BT;}{\f51\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}AvantGarde Dm BT;}{\f52\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}AvantGarde DmOb BT;}{\f53\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde Md BT;}{\f54\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde MdOb BT;}{\f55\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}Balloons;}{\f56\fnil\fcharset256\fprq2{\*\panose 02020602080505020303}Baskerville Old Face;}{\f57\fnil\fcharset256\fprq2{\*\panose 04030905020b02020c02}Bauhaus 93;}{\f58\fnil\fcharset256\fprq2{\*\panose 02020503060305020303}Bell MT;}{\f59\fnil\fcharset256\fprq2{\*\panose 02050806060905020404}Bernard MT Condensed;}{\f60\fnil\fcharset256\fprq2{\*\panose 02040602050305030304}Book Antiqua;}{\f61\fnil\fcharset256\fprq2{\*\panose 02050604050505020204}Bookman Old Style;}{\f62\fnil\fcharset256\fprq2{\*\panose 04030b070d0b02020403}Braggadocio;}{\f63\fnil\fcharset256\fprq2{\*\panose 020b0903060703020204}Britannic Bold;}{\f64\fnil\fcharset256\fprq2{\*\panose 03060802040406070304}Brush Script MT;}{\f65\fnil\fcharset256\fprq2{\*\panose 02040603050505030304}Calisto MT;}{\f66\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Capitals;}{\f67\fnil\fcharset256\fprq2{\*\panose 020b0502020202020204}Century Gothic;}{\f68\fnil\fcharset256\fprq2{\*\panose 02040604050505020304}Century Schoolbook;}{\f69\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Charcoal;}{\f70\fnil\fcharset256\fprq2{\*\panose 04020805060202030203}Colonna MT;}{\f71\fnil\fcharset256\fprq2{\*\panose 030f0702030302020204}Comic Sans MS;}{\f72\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}CommonBullets;}{\f73\fnil\fcharset256\fprq2{\*\panose 0208090404030b020404}Cooper Black;}{\f74\fnil\fcharset256\fprq2{\*\panose 020e0705020206020404}Copperplate Gothic Bold;}{\f75\fnil\fcharset256\fprq2{\*\panose 020e0507020206020404}Copperplate Gothic Light;}{\f76\fnil\fcharset256\fprq2{\*\panose 04020505020e03040504}Desdemona;}{\f77\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Disney Print;}{\f78\fnil\fcharset256\fprq2{\*\panose 02090707080505020304}Engravers MT;}{\f79\fnil\fcharset256\fprq2{\*\panose 020b0504020202050204}Eurostile;}{\f80\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}Festive;}{\f81\fnil\fcharset256\fprq2{\*\panose 0204060206030a020304}Footlight MT Light;}{\f82\fnil\fcharset256\fprq2{\*\panose 05000000000000000000}FrenchScript;}{\f83\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Gadget;}{\f84\fnil\fcharset256\fprq2{\*\panose 02020404030301010803}Garamond;}{\f85\fnil\fcharset256\fprq2{\*\panose 02040502050405020303}Georgia;}{\f86\fnil\fcharset256\fprq2{\*\panose 020b0a04020203020204}Gill Sans Ultra Bold;}{\f87\fnil\fcharset256\fprq2{\*\panose 02030808020601010101}Gloucester MT Extra Condensed;}{\f88\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}GME Title-Regular;}{\f89\fnil\fcharset256\fprq2{\*\panose 02020502050305020303}Goudy Old Style;}{\f90\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier 1;}{\f91\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier 2;}{\f92\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier Bd 1;}{\f93\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier Bd 2;}{\f94\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier BdIt 1;}{\f95\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier BdIt 2;}{\f96\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier It 1;}{\f97\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier It 2;}{\f98\fnil\fcharset256\fprq2{\*\panose 04040505050a02020702}Harrington;}{\f99\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Helvetica Black;}{\f100\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Helvetica Compressed;}{\f101\fnil\fcharset256\fprq2{\*\panose 020b0806030902050204}Impact;}{\f102\fnil\fcharset256\fprq2{\*\panose 04020605060303030202}Imprint MT Shadow;}{\f103\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso GI1 SILDoulosL;}{\f104\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso GI1 SILDoulosL I;}{\f105\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso If1 SILDoulosL;}{\f106\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso If1 SILDoulosL I;}{\f107\fnil\fcharset256\fprq2{\*\panose 03010101010101010101}Kidprint;}{\f108\fnil\fcharset256\fprq2{\*\panose 040307050d0c02020703}Kino MT;}{\f109\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Lucida Blackletter;}{\f110\fnil\fcharset256\fprq2{\*\panose 02040602050505020304}Lucida Bright;}{\f111\fnil\fcharset256\fprq2{\*\panose 03010101010101010101}Lucida Calligraphy;}{\f112\fnil\fcharset256\fprq2{\*\panose 02060602050505020204}Lucida Fax;}{\f113\fnil\fcharset256\fprq2{\*\panose 03010101010101010101}Lucida Handwriting;}{\f114\fnil\fcharset256\fprq2{\*\panose 020b0602030504020204}Lucida Sans;}{\f115\fnil\fcharset256\fprq2{\*\panose 020b0509030504030204}Lucida Sans Typewriter;}{\f116\fnil\fcharset256\fprq2{\*\panose 020b0602060201020203}Lydian MT;}{\f117\fnil\fcharset256\fprq2{\*\panose 03020802060602070202}Matura MT Script Capitals;}{\f118\fnil\fcharset256\fprq2{\*\panose 02040503050201020203}Minion Web;}{\f119\fnil\fcharset256\fprq2{\*\panose 03090702030407020403}Mistral;}{\f120\fnil\fcharset256\fprq2{\*\panose 02070704070505020303}Modern No. 20;}{\f121\fnil\fcharset256\fprq2{\*\panose 03010101010201010101}Monotype Corsiva;}{\f122\fnil\fcharset2\fprq2{\*\panose 01010601010101010101}Monotype Sorts;}{\f123\fnil\fcharset256\fprq2{\*\panose 020b0509000000000004}Monotype.com;}{\f124\fnil\fcharset256\fprq2{\*\panose 020b0504020203020204}News Gothic MT;}{\f125\fnil\fcharset256\fprq2{\*\panose 04050602080702020203}Onyx;}{\f126\fnil\fcharset256\fprq2{\*\panose 02020502060505020804}Perpetua Titling MT;}{\f127\fnil\fcharset256\fprq2{\*\panose 040506030a0602020202}Playbill;}{\f128\fnil\fcharset256\fprq2{\*\panose 02060603020205020403}Rockwell;}{\f129\fnil\fcharset256\fprq2{\*\panose 02060903040505020403}Rockwell Extra Bold;}{\f130\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Sand;}{\f131\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}SportsFigures;}{\f132\fnil\fcharset256\fprq2{\*\panose 040409050d0802020404}Stencil;}{\f133\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Swing;}{\f134\fnil\fcharset256\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f135\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Techno;}{\f136\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Textile;}{\f137\fnil\fcharset256\fprq2{\*\panose 020b0603020202020204}Trebuchet MS;}{\f138\fnil\fcharset256\fprq2{\*\panose 020b0604030504040204}Verdana;}{\f139\fnil\fcharset2\fprq2{\*\panose 05030102010509060703}Webdings;}{\f140\fnil\fcharset256\fprq2{\*\panose 020a0a07050505020404}Wide Latin;}{\f141\fnil\fcharset2\fprq2{\*\panose 05020102010507070707}Wingdings 2;}{\f142\fnil\fcharset2\fprq2{\*\panose 05040102010807070707}Wingdings 3;}{\f143\fnil\fcharset256\fprq2{\*\panose 05000000000000000000}ZapfDingbats BT;}}{\*\ud{\fonttbl{\f0\fnil\fcharset256\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fnil\fcharset256\fprq2{\*\panose 020b0604020202020204}Arial;}{\f2\fnil\fcharset256\fprq2{\*\panose 02070309020205020404}Courier New;}{\f3\fnil\fcharset2\fprq2{\*\panose 02000500000000000000}Symbol;}{\f4\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Times;}{\f5\fnil\fcharset256\fprq2{\*\panose 00000af457e00003b27c}Helvetica;}{\f6\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Courier;}{\f7\fnil\fcharset256\fprq2{\*\panose 020b0503030404040204}Geneva;}{\f8\froman\fcharset77\fprq2{\*\panose 00000000000000000000}Tms Rmn;}{\f9\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}Helv;}{\f10\froman\fcharset77\fprq2{\*\panose 00000000000000000000}MS Serif;}{\f11\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\fnil\fcharset256\fprq2{\*\panose 00000af457e00003b27c}New York;}{\f13\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}System;}{\f14\fnil\fcharset2\fprq2{\*\panose 05020102010804080708}Wingdings;}{\f15\froman\fcharset256\fprq1{\*\panose 00000000000000000000}FE Roman font face;}{\f16\fmodern\fcharset256\fprq1{\*\panose 00000000000000000000}FE Modern font face;}{\f17\froman\fcharset256\fprq1{\*\panose 00000000000000000000}FE Truetype Roman font face;}{\f18\fmodern\fcharset256\fprq1{\*\panose 00000000000000000000}FE Truetype Modern font face;}{\f19\froman\fcharset77\fprq2{\*\panose 00000000000000000000}Century;}{\f20\fnil\fcharset256\fprq2{\*\panose 020b0806080604040204}Chicago;}{\f21\fnil\fcharset256\fprq2{\*\panose 020b0509030404040204}Monaco;}{\f22\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Venice;}{\f23\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}London;}{\f24\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Athens;}{\f25\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}San Francisco;}{\f26\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Toronto;}{\f27\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Cairo;}{\f28\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Los Angeles;}{\f29\fnil\fcharset2\fprq2{\*\panose 00000af457e00003b27c}Zapf Dingbats;}{\f30\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Bookman;}{\f31\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Helvetica Narrow;}{\f32\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Palatino;}{\f33\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Zapf Chancery;}{\f34\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Mobile;}{\f35\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Avant Garde;}{\f36\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}New Century Schoolbook{\*\falt Times New Roman};}{\f37\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Font1024;}{\f38\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Font1043;}{\f39\fnil\fcharset2\fprq2{\*\panose 02000500000000000000}MT Extra;}{\f40\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Font3030;}{\f41\fnil\fcharset77\fprq0{\*\panose 00000000000000000000}Font14053;}{\f42\fnil\fcharset256\fprq2{\*\panose 020b0a06030101010103}Abadi MT Condensed Extra Bold;}{\f43\fnil\fcharset256\fprq2{\*\panose 020b0306030101010103}Abadi MT Condensed Light;}{\f44\fnil\fcharset256\fprq2{\*\panose 020b0509000000000004}Andale Mono;}{\f45\fnil\fcharset256\fprq2{\*\panose 05000000000000000000}Animals 1;}{\f46\fnil\fcharset256\fprq2{\*\panose 020b0a04020102020204}Arial Black;}{\f47\fnil\fcharset256\fprq2{\*\panose 020b0506020202030204}Arial Narrow;}{\f48\fnil\fcharset256\fprq2{\*\panose 020f0704030504030204}Arial Rounded MT Bold;}{\f49\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde Bk BT;}{\f50\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde BkOb BT;}{\f51\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}AvantGarde Dm BT;}{\f52\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}AvantGarde DmOb BT;}{\f53\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde Md BT;}{\f54\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde MdOb BT;}{\f55\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}Balloons;}{\f56\fnil\fcharset256\fprq2{\*\panose 02020602080505020303}Baskerville Old Face;}{\f57\fnil\fcharset256\fprq2{\*\panose 04030905020b02020c02}Bauhaus 93;}{\f58\fnil\fcharset256\fprq2{\*\panose 02020503060305020303}Bell MT;}{\f59\fnil\fcharset256\fprq2{\*\panose 02050806060905020404}Bernard MT Condensed;}{\f60\fnil\fcharset256\fprq2{\*\panose 02040602050305030304}Book Antiqua;}{\f61\fnil\fcharset256\fprq2{\*\panose 02050604050505020204}Bookman Old Style;}{\f62\fnil\fcharset256\fprq2{\*\panose 04030b070d0b02020403}Braggadocio;}{\f63\fnil\fcharset256\fprq2{\*\panose 020b0903060703020204}Britannic Bold;}{\f64\fnil\fcharset256\fprq2{\*\panose 03060802040406070304}Brush Script MT;}{\f65\fnil\fcharset256\fprq2{\*\panose 02040603050505030304}Calisto MT;}{\f66\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Capitals;}{\f67\fnil\fcharset256\fprq2{\*\panose 020b0502020202020204}Century Gothic;}{\f68\fnil\fcharset256\fprq2{\*\panose 02040604050505020304}Century Schoolbook;}{\f69\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Charcoal;}{\f70\fnil\fcharset256\fprq2{\*\panose 04020805060202030203}Colonna MT;}{\f71\fnil\fcharset256\fprq2{\*\panose 030f0702030302020204}Comic Sans MS;}{\f72\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}CommonBullets;}{\f73\fnil\fcharset256\fprq2{\*\panose 0208090404030b020404}Cooper Black;}{\f74\fnil\fcharset256\fprq2{\*\panose 020e0705020206020404}Copperplate Gothic Bold;}{\f75\fnil\fcharset256\fprq2{\*\panose 020e0507020206020404}Copperplate Gothic Light;}{\f76\fnil\fcharset256\fprq2{\*\panose 04020505020e03040504}Desdemona;}{\f77\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Disney Print;}{\f78\fnil\fcharset256\fprq2{\*\panose 02090707080505020304}Engravers MT;}{\f79\fnil\fcharset256\fprq2{\*\panose 020b0504020202050204}Eurostile;}{\f80\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}Festive;}{\f81\fnil\fcharset256\fprq2{\*\panose 0204060206030a020304}Footlight MT Light;}{\f82\fnil\fcharset256\fprq2{\*\panose 05000000000000000000}FrenchScript;}{\f83\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Gadget;}{\f84\fnil\fcharset256\fprq2{\*\panose 02020404030301010803}Garamond;}{\f85\fnil\fcharset256\fprq2{\*\panose 02040502050405020303}Georgia;}{\f86\fnil\fcharset256\fprq2{\*\panose 020b0a04020203020204}Gill Sans Ultra Bold;}{\f87\fnil\fcharset256\fprq2{\*\panose 02030808020601010101}Gloucester MT Extra Condensed;}{\f88\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}GME Title-Regular;}{\f89\fnil\fcharset256\fprq2{\*\panose 02020502050305020303}Goudy Old Style;}{\f90\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier 1;}{\f91\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier 2;}{\f92\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier Bd 1;}{\f93\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier Bd 2;}{\f94\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier BdIt 1;}{\f95\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier BdIt 2;}{\f96\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier It 1;}{\f97\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier It 2;}{\f98\fnil\fcharset256\fprq2{\*\panose 04040505050a02020702}Harrington;}{\f99\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Helvetica Black;}{\f100\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Helvetica Compressed;}{\f101\fnil\fcharset256\fprq2{\*\panose 020b0806030902050204}Impact;}{\f102\fnil\fcharset256\fprq2{\*\panose 04020605060303030202}Imprint MT Shadow;}{\f103\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso GI1 SILDoulosL;}{\f104\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso GI1 SILDoulosL I;}{\f105\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso If1 SILDoulosL;}{\f106\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso If1 SILDoulosL I;}{\f107\fnil\fcharset256\fprq2{\*\panose 03010101010101010101}Kidprint;}{\f108\fnil\fcharset256\fprq2{\*\panose 040307050d0c02020703}Kino MT;}{\f109\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Lucida Blackletter;}{\f110\fnil\fcharset256\fprq2{\*\panose 02040602050505020304}Lucida Bright;}{\f111\fnil\fcharset256\fprq2{\*\panose 03010101010101010101}Lucida Calligraphy;}{\f112\fnil\fcharset256\fprq2{\*\panose 02060602050505020204}Lucida Fax;}{\f113\fnil\fcharset256\fprq2{\*\panose 03010101010101010101}Lucida Handwriting;}{\f114\fnil\fcharset256\fprq2{\*\panose 020b0602030504020204}Lucida Sans;}{\f115\fnil\fcharset256\fprq2{\*\panose 020b0509030504030204}Lucida Sans Typewriter;}{\f116\fnil\fcharset256\fprq2{\*\panose 020b0602060201020203}Lydian MT;}{\f117\fnil\fcharset256\fprq2{\*\panose 03020802060602070202}Matura MT Script Capitals;}{\f118\fnil\fcharset256\fprq2{\*\panose 02040503050201020203}Minion Web;}{\f119\fnil\fcharset256\fprq2{\*\panose 03090702030407020403}Mistral;}{\f120\fnil\fcharset256\fprq2{\*\panose 02070704070505020303}Modern No. 20;}{\f121\fnil\fcharset256\fprq2{\*\panose 03010101010201010101}Monotype Corsiva;}{\f122\fnil\fcharset2\fprq2{\*\panose 01010601010101010101}Monotype Sorts;}{\f123\fnil\fcharset256\fprq2{\*\panose 020b0509000000000004}Monotype.com;}{\f124\fnil\fcharset256\fprq2{\*\panose 020b0504020203020204}News Gothic MT;}{\f125\fnil\fcharset256\fprq2{\*\panose 04050602080702020203}Onyx;}{\f126\fnil\fcharset256\fprq2{\*\panose 02020502060505020804}Perpetua Titling MT;}{\f127\fnil\fcharset256\fprq2{\*\panose 040506030a0602020202}Playbill;}{\f128\fnil\fcharset256\fprq2{\*\panose 02060603020205020403}Rockwell;}{\f129\fnil\fcharset256\fprq2{\*\panose 02060903040505020403}Rockwell Extra Bold;}{\f130\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Sand;}{\f131\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}SportsFigures;}{\f132\fnil\fcharset256\fprq2{\*\panose 040409050d0802020404}Stencil;}{\f133\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Swing;}{\f134\fnil\fcharset256\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f135\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Techno;}{\f136\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Textile;}{\f137\fnil\fcharset256\fprq2{\*\panose 020b0603020202020204}Trebuchet MS;}{\f138\fnil\fcharset256\fprq2{\*\panose 020b0604030504040204}Verdana;}{\f139\fnil\fcharset2\fprq2{\*\panose 05030102010509060703}Webdings;}{\f140\fnil\fcharset256\fprq2{\*\panose 020a0a07050505020404}Wide Latin;}{\f141\fnil\fcharset2\fprq2{\*\panose 05020102010507070707}Wingdings 2;}{\f142\fnil\fcharset2\fprq2{\*\panose 05040102010807070707}Wingdings 3;}{\f143\fnil\fcharset256\fprq2{\*\panose 05000000000000000000}ZapfDingbats BT;}}}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar\adjustright \f4\cgrid \snext0 Normal;}{\s1\sb240\widctlpar\adjustright \b\f5\ul\cgrid \sbasedon0 \snext0 heading 1;}{\s2\sb120\widctlpar\adjustright \b\f5\cgrid \sbasedon0 \snext0 heading 2;}{\s3\li360\widctlpar\adjustright \b\f4\cgrid \sbasedon0 \snext0 heading 3;}{\s4\li360\widctlpar\adjustright \f4\ul\cgrid \sbasedon0 \snext0 heading 4;}{\s5\li720\widctlpar\adjustright \b\f4\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\s6\li720\widctlpar\adjustright \f4\fs20\ul\cgrid \sbasedon0 \snext0 heading 6;}{\s7\li720\widctlpar\adjustright \i\f4\fs20\cgrid \sbasedon0 \snext0 heading 7;}{\s8\li720\widctlpar\adjustright \i\f4\fs20\cgrid \sbasedon0 \snext0 heading 8;}{\s9\li720\widctlpar\adjustright \i\f4\fs20\cgrid \sbasedon0 \snext0 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\s15\li2160\ri720\widctlpar\tldot\tx8280\tqr\tx8640\adjustright \f4\cgrid \sbasedon0 \snext0 toc 4;}{\s16\li1440\ri720\widctlpar\tldot\tx8280\tqr\tx8640\adjustright \f4\cgrid \sbasedon0 \snext0 toc 3;}{\s17\li720\ri720\widctlpar\tldot\tx8280\tqr\tx8640\adjustright \f4\cgrid \sbasedon0 \snext0 toc 2;}{\s18\ri720\widctlpar\tldot\tx8280\tqr\tx8640\adjustright \f4\cgrid \sbasedon0 \snext0 toc 1;}{\s19\li2160\widctlpar\adjustright \f4\cgrid \sbasedon0 \snext0 index 7;}{\s20\li1800\widctlpar\adjustright \f4\cgrid \sbasedon0 \snext0 index 6;}{\s21\li1440\widctlpar\adjustright \f4\cgrid \sbasedon0 \snext0 index 5;}{\s22\li1080\widctlpar\adjustright \f4\cgrid \sbasedon0 \snext0 index 4;}{\s23\li720\widctlpar\adjustright \f4\cgrid \sbasedon0 \snext0 index 3;}{\s24\li360\widctlpar\adjustright \f4\cgrid \sbasedon0 \snext0 index 2;}{\s25\widctlpar\adjustright \f4\cgrid \sbasedon0 \snext0 index 1;}{\*\cs26 \additive \sbasedon10 line number;}{\s27\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \f4\cgrid \sbasedon0 \snext27 footer;}{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \f4\cgrid \sbasedon0 \snext28 header;}{\*\cs29 \additive \fs16\up6 \sbasedon10 footnote reference;}{\s30\widctlpar\adjustright \f4\fs20\cgrid \sbasedon0 \snext30 footnote text;}{\*\cs31 \additive \sbasedon10 page number;}{\s32\fi-360\li360\widctlpar\adjustright \f12\cgrid \sbasedon0 \snext32 Indented1;}{\s33\widctlpar\adjustright \f12\cgrid \sbasedon0 \snext33 Normal Plus;}{\s34\fi-2160\li2160\widctlpar\adjustright \f12\cgrid \sbasedon32 \snext34 Indented2;}{\s35\pagebb\widctlpar\adjustright \b\f12\fs28\cgrid \sbasedon0 \snext35 Chapter Update;}{\s36\keep\keepn\widctlpar\tx720\tx1800\adjustright \f6\fs20\cgrid \sbasedon0 \snext36 Courier;}{\s37\widctlpar\adjustright \f6\fs20\cgrid \sbasedon0 \snext37 Code;}{\s38\qc\li380\ri6500\sa20\sl340\slmult0\keep\widctlpar\brdrt\brdrs\brdrw15 \tb320\tb2160\tx4320\tx5760\tx7200\adjustright \i\f12\cgrid \sbasedon0 \snext39 stackWord;}{\s39\fi-720\li3600\sl360\slmult0\keep\widctlpar\adjustright \f12\cgrid \sbasedon0 \snext38 stackWordDesc;}{\s40\li380\ri6500\sa80\sl400\slmult0\keep\widctlpar\brdrt\brdrs\brdrw15 \tb320\tqr\tx380\tqc\tx1240\tqr\tx2120\tb2160\tx4320\tx5760\tx7200\adjustright \i\f12\cgrid \sbasedon0 \snext41 stackLong;}{\s41\fi-700\li3580\sa60\sl420\slmult0\keep\widctlpar\adjustright \f12\cgrid \sbasedon0 \snext40 stackLongDesc;}{\s42\qc\li380\ri6500\sa40\sl320\slmult0\keep\widctlpar\tb320\tb2160\tx4320\tx5760\tx7200\adjustright \i\f12\cgrid \sbasedon38 \snext40 stackPrev;}{\s43\qj\li720\ri1080\widctlpar\adjustright \f20\fs20\cgrid \sbasedon0 \snext43 Matts;}{\s44\qj\li720\ri1080\widctlpar\adjustright \b\f12\fs28\ul\cgrid \snext44 Section Header;}{\s45\li720\widctlpar\adjustright \f36\cgrid \sbasedon0 \snext45 Text;}{\s46\li720\widctlpar\adjustright \f36\cgrid \sbasedon45 \snext46 FinderText;}{\s47\fi-720\li720\widctlpar\adjustright \f36\cgrid \sbasedon46 \snext47 InstallerText;}}{\*\revtbl {Unknown;}}{\info{\title Programmer\'d5s Reference}{\author Mike Westerfield}{\operator Mike Westerfield}{\creatim\yr2000\mo10\dy5\hr21\min49}{\revtim\yr2000\mo10\dy5\hr21\min49}{\printim\yr2000\mo10\dy5\hr21\min49}{\version2}{\edmins0}{\nofpages56}{\nofwords9238}{\nofchars52658}{\*\company Byte Works, Inc.}{\nofcharsws64667}{\vern99}}\margl1440\margr1440 \facingp\widowctrl\ftnbj\aenddoc\hyphhotz0\sprstsp\otblrul\brkfrm\sprstsm\truncex\nolead\msmcap\lytprtmet\hyphcaps0\viewkind1\viewscale100 \fet0\sectd \sbkodd\pgnrestart\linex0\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \qc\widctlpar\adjustright \f4\cgrid {\par \par \par \par \par \par \par \par \par \par \par \par \par }{\b\fs72 Programmer\rquote s Reference\par for\par System 6.0.1}{\b\fs36 \par }{\par \par \par \par \par \par \par \par \par \par \par \par \par \par \par }{\b\fs28 Edited by Mike Westerfield\par \par Copyright 1993\par Byte Works, Inc.\par }\pard \widctlpar\adjustright {\sect }\sectd \sbkodd\pgnlcrm\linex0\colsx280\endnhere\sectdefaultcl {\footerl \pard\plain \s27\widctlpar\tx1080\tqr\tx9360\adjustright \f4\cgrid {\field{\*\fldinst {\b  PAGE  }}{\fldrslt {\b\lang1024 50}}}{\tab Programmer\rquote s Reference for System 6.0.1\par }}{\footerr \pard\plain \s27\widctlpar\tqr\tx8280\tqr\tx9360\adjustright \f4\cgrid {\tab Table of Contents\tab }{\field{\*\fldinst { PAGE  }}{\fldrslt {\lang1024 iii}}}{\par }}\pard\plain \widctlpar\adjustright \f4\cgrid {\b\fs36 Contents\par }{\par }\pard\plain \s18\widctlpar\tqr\tx9360\adjustright \f4\cgrid {\field{\*\fldinst { TOC \\f  }}{\fldrslt {Acknowledgments\tab v\par \par Chapter 1  Toolbox Changes\tab 1\par }\pard\plain \s17\li720\widctlpar\tqr\tx9360\adjustright \f4\cgrid {Control Manager\tab 1\par Desk Manager\tab 6\par Integer Math Tool Set\tab 7\par LineEdit Tool Set\tab 8\par New Line Edit Calls\tab 9\par List Manager\tab 10\par Media Control Tool Set\tab 11\par Menu Manager\tab 12\par Miscellaneous Tool Set\tab 13\par QuickDraw II\tab 17\par QuickDraw II Auxiliary\tab 18\par Resource Manager\tab 24\par Standard File Operations Tool Set\tab 30\par TextEdit Tool Set\tab 31\par Tool Locator\tab 32\par Window Manager\tab 33\par }\pard\plain \s18\widctlpar\tqr\tx9360\adjustright \f4\cgrid {\par Chapter 2  GS/OS Changes\tab 37\par }\pard\plain \s17\li720\widctlpar\tqr\tx9360\adjustright \f4\cgrid {Device Dispatcher\tab 37\par System Loader\tab 37\par GS/OS Drivers\tab 37\par FSTs\tab 38\par }\pard\plain \s16\li1440\widctlpar\tqr\tx9360\adjustright \f4\cgrid {AppleShare FST\tab 38\par DOS 3.3 FST\tab 38\par HFS FST\tab 38\par HS.FST (High Sierra & ISO 9660 FST)\tab 38\par MS-DOS FST\tab 39\par ProDOS FST\tab 41\par }\pard\plain \s18\widctlpar\tqr\tx9360\adjustright \f4\cgrid {\par Chapter 3  Control Panels\tab 43\par }\pard\plain \s17\li720\widctlpar\tqr\tx9360\adjustright \f4\cgrid {Control Panels NDA 2.1\tab 43\par Sound Control Panel\tab 43\par }\pard\plain \s18\widctlpar\tqr\tx9360\adjustright \f4\cgrid {\par Chapter 4  Finder 6.0.1\tab 45\par }\pard\plain \s17\li720\widctlpar\tqr\tx9360\adjustright \f4\cgrid {Clarifications\tab 45\par New Features of the Finder\tab 45\par }\pard\plain \s18\widctlpar\tqr\tx9360\adjustright \f4\cgrid {\par Chapter 5  Battery RAM Update\tab 47\par \par Index\tab 49\par }\pard\plain \widctlpar\adjustright \f4\cgrid }}\pard\plain \widctlpar\adjustright \f4\cgrid {\sect }\sectd \sbkodd\pgnlcrm\linex0\endnhere\sectdefaultcl {\footerr \pard\plain \s27\widctlpar\tqr\tx8280\tqr\tx9360\adjustright \f4\cgrid {\tab Acknowledgments\tab }{\field{\*\fldinst { PAGE  }}{\fldrslt {\lang1024 v}}}{\par }}\pard\plain \keepn\widctlpar\adjustright \f4\cgrid {\fs36 Acknowledgments}{\pard\plain \keepn\widctlpar\adjustright \v\f4\fs36\cgrid {\tc {\v\fs36 Acknowledgments\tcl1}}}{\b\fs36 \par }{\par }\pard \widctlpar\adjustright {This book was developed from Apple\rquote s Engineering Requirements Specification (ERS}{\pard\plain \widctlpar\adjustright \v\f4\cgrid {\xe {\v }{\v ERS}}}{) documents for System 6.0.1.  The source material included:\par \par }\pard \qj\li360\widctlpar\adjustright {\i Apple II}{\i\fs20 GS}{\i  System Software 6.0.1}{, Version 1.0d1, November 29 1993, David A. Lyons\par }{\i GS/OS MS-DOS File System Translator External ERS}{, Version 0.04, Greg Branche\par }\pard \widctlpar\adjustright {\par The source material is quoted heavily.  All source material is Copyright 1993, Apple Computer, Inc.  It is used here with permission.\par \par Technical documentation is notoriously hard to get right.  After working for months on a project, it\rquote s hard to force yourself to really read all of those arcane technical details carefully enough to make sure they are right.  The often thankless job of reviewing draft documentation is very important, so I want to thank those who took their time to read all of this one last time.  They are Greg Branche, Matt Deatherage, Dave Lyons, Jim Murphy and Steve Stephenson.\par }{\b\fs28 \sect }\sectd \pgnlcrm\linex0\cols3\colsx280\endnhere\sectdefaultcl {\footerr \pard\plain \s27\widctlpar\tqr\tx8280\tqr\tx9360\adjustright \f4\cgrid {\tab Disclaimer\tab }{\field{\*\fldinst { PAGE  }}{\fldrslt {\lang1024  }}}{\par }}\pard\plain \widctlpar\adjustright \f4\cgrid {This manual is copyrighted by the Byte Works Inc., and is based heavily on material copyrighted by Apple Computer Inc., and used with their permission.  Under the copyright laws, this manual may not be copied, in whole or in part, without the written consent of the Byte Works, Inc.  Some parts may not be reproduced without written permission from Apple Computer, Inc.  This exception does not allow copies to be made for others, whether or not sold, but all of the material purchased may be sold, given, or lent to another person.  Under the law, copying includes translating to another language.\par \par \u169\'a9Byte Works, Inc., 1993\par 4700 Irving Blvd N.W. Suite 207\par Albuquerque, N.M.  87114\par (505) 898-8183\par \par Apple, the Apple logo, AppleShare, AppleTalk, Apple\~II}{\fs20 GS}{, ImageWriter, LaserWriter, and Macintosh are registered trademarks of Apple Computer, Inc.\par \par Finder, GS/OS, MPW and QuickDraw are trademarks of Apple Computer, Inc.\par \par Byte Works is a registered trademark of Byte Works, Inc.\par \column }{\b LIMITED WARRANTY ON MEDIA AND REPLACEMENT\par \par ALL IMPLIED WARRANTIES ON THIS MATERIAL, INCLUDING IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, ARE LIMITED IN DURATION TO NINETY (90) DAYS FROM THE DATE OF ORIGINAL RETAIL PURCHASE OF THIS PRODUCT.}{\par \par Even though Apple has reviewed this manual, }{\b NEITHER APPLE OR THE BYTE WORKS MAKES ANY WARRANTY OR REPRESENTATION, EITHER EXPRESSED OR IMPLIED, WITH RESPECT TO THIS MANUAL, ITS QUALITY, ACCURACY, MERCHANTABILITY, OR FITNESS FOR A PARTICULAR PURPOSE.  AS A RESULT, THIS MANUAL IS SOLD \ldblquote AS IS,\rdblquote  AND YOU, THE PURCHASER, ARE ASSUMING THE ENTIRE RISK AS TO ITS QUALITY AND ACCURACY.\par \column IN NO EVENT WILL APPLE OR THE BYTE WORKS BE LIABLE FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES RESULTING FROM ANY DEFECT OR INACCURACY IN THIS MANUAL}{, even if advised of the possibility of such damages.\par \par }{\b THE WARRANTY AND REMEDIES SET FORTH ABOVE ARE EXCLUSIVE AND IN LIEU OF ALL OTHERS, ORAL OR WRITTEN, EXPRESSED OR IMPLIED.  }{No Apple or Byte Works dealer, agent, or employee is authorized to make any modification, extension, or addition to this warrantee.\par \par Some states do not allow the exclusion or limitation of implied warrantees or liability for incidental or consequential damages, so the above limitation or exclusion may not apply to you.  This warranty gives you specific legal rights, and you may also have other rights which vary from state to state.\par }{\b\fs28 \sect }\sectd \sbkodd\pgnrestart\linex0\colsx140\endnhere\sectdefaultcl {\footerr \pard\plain \s27\widctlpar\tqr\tx8280\tqr\tx9360\adjustright \f4\cgrid {\tab Chapter 1  Toolbox Changes\tab }{\field{\*\fldinst { PAGE  }}{\fldrslt {\lang1024 35}}}{\par }}\pard\plain \ri60\sl360\slmult0\widctlpar\tx6480\tx9539\adjustright \f4\cgrid {\fs36 Chapter 1  }{\b\fs36 Toolbox Changes}{\pard\plain \ri60\sl360\slmult0\widctlpar\tx6480\tx9539\adjustright \b\v\f4\fs36\cgrid {\tc {\b\v\fs36 }{\v\fs36 Chapter 1  }{\b\v\fs36 Toolbox Changes}{\v\fs36 \tcl1}}}{\b\fs36 \par }{\b\fs28 \par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\b\fs28 New Features of the Control Manager}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\xe {\b\v\fs28 Control Manager}}}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 Control Manager\tcl2}}}{\b\fs28 \par }\pard \widctlpar\adjustright {\par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab There are four new Control Manager calls:  }{\f6 SetCtlValueByID}{, }{\f6 GetCtlValueByID}{, }{\f6 InvalOneCtlByID}{, and }{\f6 HiliteCtlByID}{.\par }\pard \widctlpar\adjustright {\par }{\b Static Text Controls}{\pard\plain \widctlpar\adjustright \b\v\f4\cgrid {\xe {\b\v Static Text Controls}}}{\b \par }{\par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab The Static Text control supports a new }{\f6 ctlFlag}{ bit.  If bit 4 ($0010), }{\f6 fSquishText}{, is set as well as }{\f6 fBlastText}{, the control will draw the text with }{\f6 DrawStringWidth}{ (in QuickDraw II Auxiliary) to compress and truncate on the right as needed to make the text fit inside the control rectangle.  If you set the }{\f6 fSquishText}{ bit, you must also set the }{\f6 fBlastText}{ bit.\par }\pard \widctlpar\adjustright {\par }{\b Thermometer Controls}{\pard\plain \widctlpar\adjustright \b\v\f4\cgrid {\xe {\b\v Thermometer Controls}}}{\b \par }{\par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab Setting a thermometer control\rquote s value no longer draws anything if the control is invisible.\par }\pard \widctlpar\adjustright {\par }{\b Pop-Up Menu Controls}{\pard\plain \widctlpar\adjustright \b\v\f4\cgrid {\xe {\b\v Pop-Up Menu Controls}}}{\b \par \par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab For enhancements to Pop-Up Menu controls, see the Menu Manager update.\par }\pard \widctlpar\adjustright {\b \par Line Edit Controls}{\pard\plain \widctlpar\adjustright \b\v\f4\cgrid {\xe {\b\v Line Edit Controls}}}{\b \par \par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab For enhancements to Line Edit controls, see the Line Edit update.\par }\pard \widctlpar\adjustright {\b \par Icon Button Controls}{\pard\plain \widctlpar\adjustright \b\v\f4\cgrid {\xe {\b\v Icon Button Controls}}}{\b \par }{\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab The Icon Button control now supports \ldblquote sticky\rdblquote  icon controls.  If bit 4 of the }{\f6 ctlFlag}{\f4  field is set and the mouse button is released when the cursor is inside the control, the control stays highlighted to show that it is \ldblquote selected.\rdblquote   The }{\f6 ctlValue}{\f4  field contains $0001 when the icon is in the selected state, and $0000 when it is not.  An extra one-word field, #12, has been added to the control template to allow for an initial value word for this type of control.\par }\pard\plain \widctlpar\adjustright \f4\cgrid {\par }{\b Scroll Bar Controls}{\pard\plain \widctlpar\adjustright \b\v\f4\cgrid {\xe {\b\v Scroll Bar Controls}}}{\b \par }{\par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab }{\f6 CtlStartUp}{ removes the }{\f6 RefreshDesktop}{ run queue routine, so the desktop doesn\rquote t refresh an extra time when starting an application in a different resolution from the one you used last (the scroll bars thought they had to redraw in 6.0, even though they really didn\rquote t).\par }\pard \widctlpar\adjustright {\par }\pard\plain \s35\widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\f12\fs28\cgrid {\b0\f4 \page }{\f4 New Control Manager Calls\par }\pard\plain \widctlpar\adjustright \f4\cgrid {\b \par \par }\pard \widctlpar\brdrt\brdrs\brdrw15 \adjustright {\b\f6 GetCtlValueByID}{\pard\plain \widctlpar\brdrt\brdrs\brdrw15 \adjustright \v\f6\cgrid {\xe {\v\f6 }{\b\v\f6 GetCtlValueByID}}}{\b \tab $3D10\par }\pard \widctlpar\adjustright {\par Returns the current value of the control that has the specified control ID in the specified window.  This is just like }{\f6 GetCtlValue}{, except you pass a control ID instead of a control handle.\par \par }{\b Parameters\par }{\par Stack before call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i Space}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Space for result}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i windPtr}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash Window containing the control (NIL = front)}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i ctlID}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash Control ID of the control}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par Stack after call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i theValue}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Current control value}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par }\pard \widctlpar\tx1440\tx2520\tx5040\adjustright {\b Errors}{\tab Returned unchanged from }{\f6 GetCtlHandleFromID}{ and }{\f6 GetCtlValue.}{\par }\pard \widctlpar\tx1440\adjustright {\par }{\b C}{\tab }{\f6\fs20 extern pascal Word GetCtlValueByID (windPtr, ctlID);\par \tab WindowPtr windPtr;\par \tab Long ctlID;}{\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 windPtr}{\tab Pointer to the window containing the control.  If the control is in the front window, you may pass NIL.\par }\pard \fi-1080\li1080\widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 ctlID}{\tab Control ID for the control.\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 theValue}{\tab Current value of the control.\par \par }\pard \widctlpar\brdrt\brdrs\brdrw15 \adjustright {\ul \page }{\b\f6 HiliteCtlByID}{\pard\plain \widctlpar\brdrt\brdrs\brdrw15 \adjustright \v\f6\cgrid {\xe {\v\f6 }{\b\v\f6 HiliteCtlByID}}}{\b \tab $3F10\par }\pard \widctlpar\adjustright {\par Changes the way a specified control is highlighted, just as if you called }{\f6 HiliteControl}{, except you specify the control by window pointer and control ID.\par \par }{\b Parameters\par }{\par Stack before call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i hiliteState}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash New highlight value}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i windPtr}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash Window containing the control (NIL = front)}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i ctlID}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash Control ID of the control}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par Stack after call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par }\pard \widctlpar\tx1440\tx2520\tx5040\adjustright {\b Errors}{\tab Returned unchanged from }{\f6 GetCtlHandleFromID}{ and }{\f6 HiliteControl.}{\par }\pard \widctlpar\tx1440\adjustright {\par }{\b C}{\tab }{\f6\fs20 extern pascal void HiliteCtlByID (hiliteState, windPtr, ctlID);\par \tab Word hiliteState;\par \tab WindowPtr windPtr;\par \tab Long ctlID;}{\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 hiliteState}{\tab New value for the control\rquote s highlight flag.\par }\pard \fi-1080\li1080\widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 windPtr}{\tab Pointer to the window containing the control.  If the control is in the front window, you may pass NIL.\par }\pard \fi-1080\li1080\widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 ctlID}{\tab Control ID for the control.\par }\pard \widctlpar\brdrt\brdrs\brdrw15 \adjustright {\ul \page }{\b\f6 InvalOneCtlByID}{\pard\plain \widctlpar\brdrt\brdrs\brdrw15 \adjustright \v\f6\cgrid {\xe {\v\f6 }{\b\v\f6 InvalOneCtlByID}}}{\b \tab $3E10\par }\pard \widctlpar\adjustright {\par Invalidates a control\rquote s rectangle, just as if you called }{\f6 InvalRect}{ on the control\rquote s rectangle.  This causes the control to get redrawn later, when your application has a chance to process an update event for the window.  You specify the control by its window pointer and control ID.\par \par }{\b Parameters\par }{\par Stack before call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i windPtr}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash Window containing the control (NIL = front)}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i ctlID}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash Control ID of the control}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par Stack after call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par }\pard \widctlpar\tx1440\tx2520\tx5040\adjustright {\b Errors}{\tab Returned unchanged from }{\f6 GetCtlHandleFromID.}{\par }\pard \widctlpar\tx1440\adjustright {\par }{\b C}{\tab }{\f6\fs20 extern pascal void InvalOneCtlByID (windPtr, ctlID);\par \tab WindowPtr windPtr;\par \tab Long ctlID;}{\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 windPtr}{\tab Pointer to the window containing the control.  If the control is in the front window, you may pass NIL.\par }\pard \fi-1080\li1080\widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 ctlID}{\tab Control ID for the control.\par }\pard \widctlpar\brdrt\brdrs\brdrw15 \adjustright {\b\f6 \page SetCtlValueByID}{\pard\plain \widctlpar\brdrt\brdrs\brdrw15 \adjustright \v\f6\cgrid {\xe {\v\f6 }{\b\v\f6 SetCtlValueByID}}}{\b \tab $3C10\par }\pard \widctlpar\adjustright {\par Sets the value of the control that has the specified control ID in the specified window.  This is just like }{\f6 SetCtlValue}{, except you pass a control ID instead of a control handle.\par \par }{\b Parameters\par }{\par Stack before call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i newValue}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash New value for the control}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i windPtr}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash Window containing the control (NIL = front)}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i ctlID}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash Control ID of the control}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par Stack after call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par }\pard \widctlpar\tx1440\tx2520\tx5040\adjustright {\b Errors}{\tab Returned unchanged from }{\f6 GetCtlHandleFromID}{ and }{\f6 SetCtlValue.}{\par }\pard \widctlpar\tx1440\adjustright {\par }{\b C}{\tab }{\f6\fs20 extern pascal void SetCtlValueByID (newValue, windPtr, ctlID);\par \tab Word newValue;\par \tab WindowPtr windPtr;\par \tab Long ctlID;}{\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 newValue}{\tab New control value.\par }\pard \fi-1080\li1080\widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 windPtr}{\tab Pointer to the window containing the control.  If the control is in the front window, you may pass NIL.\par }\pard \fi-1080\li1080\widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 ctlID}{\tab Control ID for the control.\par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\page }{\b\fs28 New Features of the Desk Manager}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 Desk Manager\tcl2}}}{\b\fs28 \par }\pard \widctlpar\adjustright {\par }{\pard\plain \widctlpar\adjustright \b\v\f4\cgrid {\xe {\b\v }{\b\v CDA}}}{\pard\plain \widctlpar\adjustright \b\v\f4\cgrid {\xe {\b\v }{\b\v Classic Desk Accessories}}}{\b Classic Desk Accessory changes\par }\pard\plain \s46\widctlpar\adjustright \f36\cgrid {\f4 \par }\pard \s46\fi-360\li360\widctlpar\adjustright {\f4 \bullet \tab If bit 7 of Battery RAM byte $59 is set, the system installs the Memory Peeker and Visit Monitor CDAs for ROM 1 systems (just like ROM 3 always has).\par }\pard\plain \widctlpar\adjustright \f4\cgrid {\par }{\pard\plain \widctlpar\adjustright \b\v\f4\cgrid {\xe {\b\v }{\b\v NDA}}}{\pard\plain \widctlpar\adjustright \b\v\f4\cgrid {\xe {\b\v }{\b\v New Desk Accessories}}}{\b New Desk Accessory changes\par \par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab }{\f6 OpenNDA}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 OpenNDA}}}{\f4  sends }{\f6 reOpenAction}{\f4  ($000C) to the action routine of an already-open NDA to give the NDA a chance to do something other than just have the window come to the front.  If the NDA wants the system to take no further action (that is, skip the normal }{\f6 SelectWindow}{\f4  call), it should store a $0001 into the word pointed to by the data parameter (passed in the X and Y registers, or on the stack as shown below).\par }{\b\f4 \par \bullet \tab }{\f4 On ROM 3 only, }{\f6 DeskShutDown}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 DeskShutDown}}}{\f4  sets $07FC to zero if slot 4 is set to internal.  This stops the mouse from freezing in desktop applications after visiting the CDA menu when you have previously run an application that left a non-zero value in $07FC.  This was a problem on ROM 3 systems only.\par }\pard\plain \fi-360\li360\widctlpar\adjustright \f4\cgrid {\b \par }\pard\plain \s46\fi-360\li360\keep\keepn\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab If you set bit 31 of an action procedure pointer (for an NDA or a system window), the system does a stack-based dispatch instead of a register-based dispatch.  The stack on entry to your action procedure looks like this:\par }\pard \s46\keep\keepn\widctlpar\adjustright {\f4 \par }\pard\plain \keep\keepn\widctlpar\adjustright \f4\cgrid {Stack before call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i Space}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash space for result}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i actCode}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Action code}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i data}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash data (depends on }{\f6 actCode}{)}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph40\trleft320 \clvertalt\cltxlrtb \cellx1660\clvertalt\cltxlrtb \cellx3200\clvertalt\cltxlrtb \cellx9400\pard \keep\widctlpar\intbl\box\brdrs\brdrw15 \tqc\tx620\tqr\tx1260\adjustright {\tab }{\i RTL}{\tab \cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrb\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx540\tqr\tx1180\adjustright {\tab }{\i RTL}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b 3 bytes}{\emdash RTL address}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx1800\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrl\brdrs\brdrw15 \brdrb\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx620\tqr\tx1260\adjustright {\tab }{\i RTL}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard\plain \s46\keep\keepn\widctlpar\adjustright \f36\cgrid {\f4 \par Before returning, you must remove }{\f6 actCode}{\f4  and }{\f6 data}{\f4  and set result so that the stack looks like this:\par \par }\pard\plain \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright \f4\cgrid {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i result}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash result of action procedure}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph40\trleft320 \clvertalt\cltxlrtb \cellx1660\clvertalt\cltxlrtb \cellx3200\clvertalt\cltxlrtb \cellx9400\pard \keep\widctlpar\intbl\box\brdrs\brdrw15 \tqc\tx620\tqr\tx1260\adjustright {\tab }{\i RTL}{\tab \cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrb\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx540\tqr\tx1180\adjustright {\tab }{\i RTL}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b 3 bytes}{\emdash RTL address}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx1800\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrl\brdrs\brdrw15 \brdrb\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx620\tqr\tx1260\adjustright {\tab }{\i RTL}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard\plain \s46\keep\keepn\widctlpar\adjustright \f36\cgrid {\f4 \par You can prototype your action procedure like this:\par \par }\pard\plain \widctlpar\tx1440\adjustright \f4\cgrid {\b C}{\tab }{\f6\fs20 pascal Word MyActionProc (actCode, data);\par \tab Word actCode;\par \tab Long data;\par }\pard \widctlpar\adjustright {\par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\fs28 \page }{\b\fs28 New Feature of the Integer Math Tool Set}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\xe {\b\v\fs28 Integer Math Tool Set}}}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 Integer Math Tool Set\tcl2}}}{\b\fs28 \par }\pard \widctlpar\adjustright {\par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab }{\f6 Int2Dec}{\pard\plain \fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 Int2Dec}}}{ and }{\f6 Long2Dec}{\pard\plain \fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 Long2Dec}}}{ now return \ldblquote zero \rdblquote  if bit 31 of }{\f6 stringPtr}{ is set, the value being converted is zero, and the buffer length is at least 5.\par \par }\pard \fi-1800\li1800\ri1080\widctlpar\tx360\adjustright {\f20 }{\b \tab Note}{\tab The string returned has a total of five characters.  The fifth character is a trailing blank.\~\~}{\f20\fs20 }{\b \par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\page }{\b\fs28 New Features of the LineEdit Tool Set}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\xe {\b\v\fs28 LineEdit Tool Set}}}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 LineEdit Tool Set\tcl2}}}{\b\fs28 \par }\pard \widctlpar\adjustright {\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab There is one new call, }{\f6 LEClassifyKey}{\f4 .\par }\pard \s46\widctlpar\adjustright {\f4 \par }{\b\f4 Line Edit Controls}{\pard\plain \s46\widctlpar\adjustright \b\v\f4\cgrid {\xe {\b\v\f4 Line Edit Controls}}}{\b\f4 \par }{\f4 \par }\pard \s46\fi-360\li360\widctlpar\adjustright {\f4 \bullet \tab There is a new field in the Line Edit control template.  Parameter number 9 is a word called }{\f6 keyMask}{\f4 .  The control accepts keys only if the }{\f6 LEClassifyKey}{\f4  result has some bits set in common with the }{\f6 keyMask}{\f4  parameter.  The }{\f6 keyMask}{\f4  parameter defaults to $0001, which causes the control to accept all keypresses, as usual.\par }\pard\plain \fi-360\li360\widctlpar\tx1440\tx2160\tx2880\adjustright \f4\cgrid {\par \bullet \tab The }{\f6 pwChar}{ field in the Line Edit control template supports a new value.  A value of $FFFF now means the control is not for password}{\pard\plain \fi-360\li360\widctlpar\tx1440\tx2160\tx2880\adjustright \v\f4\cgrid {\xe {\v }{\v password}}}{ entry.  (Previously, the legal values were $0000 [default password character] and $0001 through $00FF [specific password character].  The parameter\rquote s presence implied that the control was for password entry, which is not sufficient now that there is an optional ninth parameter.)\par }\pard \widctlpar\adjustright {\fs28 \par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\b\fs28 \page New Line Edit Calls}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 New Line Edit Calls\tcl2}}}{\b\fs28 \par }\pard \widctlpar\adjustright {\fs28 \par }\pard \widctlpar\brdrt\brdrs\brdrw15 \adjustright {\b\f6 LEClassifyKey}{\pard\plain \widctlpar\brdrt\brdrs\brdrw15 \adjustright \v\f6\cgrid {\xe {\v\f6 }{\b\v\f6 LEClassifyKey}}}{\b \tab $2514\par }\pard \widctlpar\adjustright {\par Returns a word with bits indicating what categories a specified event falls into.  This is sometimes useful in deciding what events to pass along to }{\f6 LEKey}{\pard\plain \widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 LEKey}}}{.\par \par }{\b Parameters\par }{\par Stack before call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i Space}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Space for result}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i theEvent}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash Pointer to event record}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par Stack after call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i resultBits}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Value categorizing the event}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\tx1440\tx2520\tx5040\adjustright {\b Errors}{\tab None.\par }\pard \widctlpar\tx1440\adjustright {\par }{\b C}{\tab }{\f6\fs20 extern pascal Word LEClassifyKey (theEvent);\par \tab EventRecPtr theEvent;}{\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 theEvent}{\tab Pointer to the event record to check.\par }\pard \fi-1080\li1080\widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 resultBits}{\tab Collection of bits, set as follows:\par \par }\pard \fi-1080\li2880\widctlpar\adjustright {bit 15\tab Special editing key.  (}{\f6 LEKey}{ will do something special; it will not insert this key into the text.)\par bit 14\tab digit (0-9)\par bit 13\tab hex digit (a-f, A-F)\par bit 12\tab letter (A-Z, a-z)\par bit 11\tab any non-control key\par bits 10-1\tab reserved (ignore)\par bit 0\tab any key\par }\pard \fi-1440\li1440\widctlpar\adjustright {\par \tab If the event is not a }{\f6 keyDown}{ or }{\f6 autoKey}{ event, all currently-defined bits will be zero.\par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\page }{\b\fs28 New Features of the List Manager}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\xe {\b\v\fs28 List Manager}}}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 List Manager\tcl2}}}{\b\fs28 \par }\pard \widctlpar\adjustright {\par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab Setting flag bit 15 in the }{\f6 CompareStrings}{\pard\plain \fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 CompareStrings}}}{ flags now makes it compare GS/OS strings instead of Pascal strings.\par \par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab Fixed a problem affecting }{\f6 ListKey}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 ListKey}}}{\f4 , }{\f6 CompareStrings}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 CompareStrings}}}{\f4 , }{\f6 SortList}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 SortList}}}{\f4 , and }{\f6 SortList2}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 SortList2}}}{\f4  with a }{\f6 compareProc}{\f4  of 1.  Characters $20 to $3F (including digits), and $60 were being accidentally \ldblquote uppercased.\rdblquote   For example, in System 6.0 \ldblquote 5\rdblquote  would map into right-arrow, which made }{\f6 ListKey}{\f4  move down one item.\par \par \bullet \tab The standard item-draw procedure uses }{\f6 DrawStringWidth}{\f4 , with flags allowing horizontal compression and truncation on the right with an ellipsis.\par }\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \f4\cgrid {\page }{\b\fs28 Clarifications of Previous Media Control Tool Set}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\xe {\b\v\fs28 }{\b\v\fs28 Media Control Tool Set}}}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 }{\b\v\fs28 Media Control Tool Set\tcl2}}}{\b\fs28  Documentation\par }\pard \widctlpar\adjustright {\par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab }{\f6 MCGetStatus}{\pard\plain \fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 MCGetStatus}}}{ accepts two selector values that are not mentioned in the call description on page 68 of Programmer\rquote s Reference To System 6.0, but are mentioned in the chapter summary on page 97.  These are }{\f6 mcSVolumeL}{ and }{\f6 mcSVolumeR}{.\par \par \bullet \tab }{\f6 MCStop}{\pard\plain \fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 MCStop}}}{ is documented incorrectly (page 90).  Actually, }{\f6 MCStop}{ takes a single input parameter, }{\f6 mcChannelNo}{.\par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\page }{\b\fs28 New Features of the Menu Manager}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\xe {\b\v\fs28 Menu Manager}}}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 Menu Manager\tcl2}}}{\b\fs28 \par }\pard \widctlpar\adjustright {\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab When a Pop-up menu control}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f4\cgrid {\xe {\v\f4 }{\v\f4 Pop-up menu control}}}{\f4  receives a }{\f6 ctlHandleEvent}{\f4  message, now it only sends }{\f6 keyDown}{\f4  and }{\f6 autoKey}{\f4  events to }{\f6 MenuKey}{\f4 .  It also preserves the menu bar around the }{\f6 MenuKey}{\f4  call, so the menu bar is not accidentally left set to the Pop-up menu control.\par \par }\pard\plain \fi-360\li360\widctlpar\adjustright \f4\cgrid {\bullet \tab Pop-up menu controls now draw the current item using }{\f6 DrawStringWidth}{ (in QuickDraw II Auxiliary), so that long item names are compressed or center-truncated.\par \par \bullet \tab Page 104 of }{\i Programmers Reference For System 6.0}{ should make a distinction between menu records and menu templates.  The structure identified as "Menu Item Record" is actually a template.  (The system uses it to create a menu item, not to keep track of the item\rquote s state once it has been created.)\par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\page }{\b\fs28 New Features of the Miscellaneous Tool Set}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\xe {\b\v\fs28 Miscellaneous Tool Set}}}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 Miscellaneous Tool Set\tcl2}}}{\b\fs28 \par }\pard\plain \s46\widctlpar\adjustright \f36\cgrid {\f4 \par }\pard \s46\fi-360\li360\widctlpar\adjustright {\f4 \bullet \tab There are two new calls:  }{\f6 DoSysPrefs}{\f4  and }{\f6 AlertMessage}{\f4 .\par }\pard\plain \widctlpar\adjustright \f4\cgrid {\par }{\b SysFailMgr}{\pard\plain \widctlpar\adjustright \v\f4\cgrid {\xe {\v }{\b\v SysFailMgr}}}{\b  Enhancement\par }{\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab If you pass NIL for the message string, }{\f6 SysFailMgr}{\f4  now provides the following default messages for the specified error codes:\par }\pard \s46\fi-360\li360\widctlpar\tx1080\adjustright {\f4 \par }\pard \s46\fi-1980\li2700\widctlpar\adjustright {\f4 $27:\tab \ldblquote Could not read or write disk.  The disk may be damaged.\rdblquote \par $201:\tab \ldblquote Out of memory (or required memory area was already in use).\rdblquote \par $308, $681, $682:\tab \ldblquote Detected trashed memory.  Software bug or (less likely) bad RAM.\rdblquote \par }\pard\plain \widctlpar\adjustright \f4\cgrid {\par }{\b SysBeep2}{\pard\plain \widctlpar\adjustright \v\f4\cgrid {\xe {\v }{\b\v SysBeep2}}}{\b  Enhancements\par }{\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab }{\f6 SysBeep2}{\f4  now sends a new }{\f6 SendRequest}{\f4  code, }{\f6 systemSaysForceUndim}{\f4 , as part of handling all }{\f6 SysBeep2}{\f4  codes }{\i\f4 except}{\f4  $006x (screen blanking, screen unblanking).\par }\pard\plain \fi-360\li360\widctlpar\adjustright \f4\cgrid {\par \bullet \tab The following new }{\f6 SysBeep2}{ codes have been defined.  The system does not do anything special to support them.\par \par }\pard \li360\widctlpar\tx4680\adjustright {\f6\fs20 $0070 sbBeginningLongOperation}{\fs20 \tab A lengthy modal operation is starting.}{\f6\fs20 \par \par $0F80 sbFileTransferred}{\fs20 \tab Upload/download finished.\par }{\f6\fs20 $0F81 sbRealtimeMessage}{\fs20 \tab A real-time message needs the user\rquote s attention.}{\f6\fs20 \par \par $1000 sbConnectedToService}{\fs20 \tab Connected to an interactive service.}{\f6\fs20 \par $1001 sbDisconnectedFromService}{\fs20 \tab Disconnected from an interactive service.}{\f6\fs20 \par $1002 sbEnteredRealtimeChat}{\fs20 \tab Started a real time chat in an interactive service.}{\f6\fs20 \par $1003 sbLeftRealtimeChat}{\fs20 \tab Left a real time chat in an interactive service.}{\f6\fs20 \par \par $1010 sbFeatureEnabled}{\fs20 \tab The user enabled a feature in a preferences dialog.}{\f6\fs20 \par $1011 sbFeatureDisabled}{\fs20 \tab The user disabled a feature in a preferences dialog.}{\f6\fs20 \par }\pard\plain \s46\widctlpar\adjustright \f36\cgrid {\f4 \par }{\b\f4 ShowBootInfo}{\pard\plain \s46\widctlpar\adjustright \b\v\f4\cgrid {\xe {\b\v\f4 ShowBootInfo}}}{\b\f4 \par }{\f4 \par }\pard \s46\fi-360\li360\widctlpar\adjustright {\f4 \bullet \tab }{\f6 ShowBootInfo}{\f4  now \ldblquote wraps up\rdblquote  to a new row if you have more than one row of icons.  If you wrap off the top of the screen, it starts over at the bottom left, without erasing the screen.  (It used to keep recycling the bottom row, wiping it to periwinkle blue every time it filled up.)\par }\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \f4\cgrid {\b\fs28 \page New Miscellaneous Tool Set Calls\par }\pard \widctlpar\adjustright {\fs28 \par }\pard \widctlpar\brdrt\brdrs\brdrw15 \adjustright {\b\f6 AlertMessage}{\pard\plain \widctlpar\brdrt\brdrs\brdrw15 \adjustright \v\f6\cgrid {\xe {\v\f6 }{\b\v\f6 AlertMessage}}}{\b \tab \tab $3E03\par }\pard \widctlpar\adjustright {\par }\pard\plain \s46\widctlpar\adjustright \f36\cgrid {\f6 AlertMessage}{\f4  displays a message on either the text screen or the Super Hi-Res screen and makes the user choose one of up to three buttons.  }{\f6 AlertMessage}{\f4  works in the GS/OS environment only, not while ProDOS 8 is active.\par }\pard\plain \widctlpar\adjustright \f4\cgrid {\par }{\b Parameters\par }{\par Stack before call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i Space}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Space for result}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i tablePtr}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash Pointer to the message table}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i msgNumber}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Message index number (0, 1, 2...)}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i substitutions}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash Pointer to the string substitution table}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par Stack after call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i buttonNum}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Button chosen by the user}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par }\pard \widctlpar\tx1440\tx2520\tx4680\adjustright {\b Errors}{\tab }{\f6\fs20 $0377\tab onlyFromGSOS\tab You called AlertMessage from ProDOS 8.}{\par }\pard \widctlpar\tx1440\adjustright {\par }{\b C}{\tab }{\f6\fs20 extern pascal Word AlertMessage (tablePtr, msgNumber, \par \tab    substitutions);\par \tab Pointer tablePtr, substitutions;\par \tab Word msgNumber;}{\par }\pard \widctlpar\adjustright {\par }{\f6\fs20 tablePtr}{\tab Points to a table formatted as follows:\par \par }\pard \fi-360\li2160\widctlpar\adjustright {\f6\fs20 \tab dc\tab i'messageZeroText-*, messageZeroGraphics-*-2'\par \tab dc\tab i'messageOneText-*, messageOneGraphics-*-2'\par \tab ...\par }\pard \li1440\widctlpar\adjustright {\par There is a pair of offsets for each message.  Each offset counts the number of bytes from its own location to the message string.  The first offset of each pair is used on the text screen, and the second is used on the Super Hi-Res screen (using }{\f6 AlertWindow}{).\par \par Each message is an }{\f6 AlertWindow}{ string plus three characters to map the buttons into return values.  The three characters should be \lquote 0\rquote  to \lquote 9\rquote , indicating what values to return when the first, second, and third buttons are chosen, respectively.\par \par Both string offsets can point to the same string if you want, but the text version does not do word wrapping for you.\par \par The text messages support *0..*9 substitutions and \ldblquote ^\rdblquote  to mark the default button, but they do not support the \ldblquote #\rdblquote  substitutions that you automatically get (courtesy of }{\f6 CompileText}{) for }{\f6 AlertWindow}{.\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 msgNumber}{\tab Selects the message to display.\par }\pard \fi-1080\li1080\widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 substitutions}{  An array of pointers to Pascal strings.  See }{\f6 AlertWindow}{ for details.\par }\pard \widctlpar\brdrt\brdrs\brdrw15 \adjustright {\ul \page }{\b\f6 DoSysPrefs}{\pard\plain \widctlpar\brdrt\brdrs\brdrw15 \adjustright \v\f6\cgrid {\xe {\v\f6 }{\b\v\f6 DoSysPrefs}}}{\b \tab \tab $3F03\par }\pard \widctlpar\adjustright {\par }\pard\plain \s46\widctlpar\adjustright \f36\cgrid {\f6 DoSysPrefs}{\f4  clears and then sets specified bits in the GS/OS system preferences word, and then returns the original preference word so that you can restore it later.\par \par A typical sequence is:\par \par }{\f6\fs20 \tab /* Clear the $2000 bit to avoid suppressing dialog */\par \tab /* Set the force-volume-mount and no-cancel bits */\par \tab oldPrefs = DoSysPrefs($2000,$C000);\par \par \tab /* Do some preference-bit-dependent stuff here */\par \par \tab /* Now restore the preferences */\par \tab /* Clear all bits, then set the ones that were originally set */\par \tab ignore = DoSysPrefs($FFFF, oldPrefs);\par }\pard\plain \widctlpar\adjustright \f4\cgrid {\par }{\b Parameters\par }{\par Stack before call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i Space}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Space for result}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i bitsToClear}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash System preference bits to clear}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i bitsToSet}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash System preference bits to set}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par Stack after call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i oldSysPrefs}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Previous system preference word}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par }\pard \widctlpar\tx1440\tx2520\tx5040\adjustright {\b Errors}{\tab }{\f6 $0301\tab badInputError}{\tab Requires GS/OS\par }\pard \widctlpar\tx1440\adjustright {\par }{\b C}{\tab }{\f6\fs20 extern pascal Word DoSysPrefs (bitsToClear, bitsToSet);\par \tab Word bitsToClear, bitsToSet;}{\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 bitsToClear}{\tab Any bit that is set in this word will force the corresponding bit in the system preference word to zero.\par }\pard \fi-1080\li1080\widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 bitsToSet}{\tab Any bit that is set in this word will set the corresponding bit in the system preference word.\par }\pard \fi-1080\li1080\widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 oldSysPrefs}{\tab The original system preference word is returned.\par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\page }{\b\fs28 New Features of QuickDraw II}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 QuickDraw II\tcl2}}}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\xe {\b\v\fs28 QuickDraw II}}}{\b\fs28 \par }\pard \widctlpar\adjustright {\par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab }{\f6 QDVersion}{\pard\plain \fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 QDVersion}}}{ is now $0308.  }{\f6 QDVersion}{ is a standard reference for distinguishing system versions, so it had to change.\par }\pard \fi-1440\li1440\widctlpar\adjustright {\par \par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\b\fs28 Clarifications of Previous QuickDraw II Documentation\par }\pard \widctlpar\adjustright {\par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab Starting in System 6.0, }{\f6 QDShutDown}{\pard\plain \fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 QDShutDown}}}{ examines bit 8 of the }{\f6 masterSCB}{ word.  If the bit is set, QuickDraw leaves the Super Hi-Res screen turned on even after QuickDraw has shut down.  (}{\f6 ShutDownTools}{ took advantage of this in System 6.0 to help implement smooth transitions between applications, but the mechanism was not spelled out.)\par \par \bullet \tab }{\f6 GetPixel}{\pard\plain \fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 GetPixel}}}{ does not work past the first 64K of a pixel map (it never has).\par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\page }{\b\fs28 New Features of QuickDraw II Auxiliary}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\xe {\b\v\fs28 QuickDraw II Auxiliary}}}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 QuickDraw II Auxiliary\tcl2}}}{\b\fs28 \par }\pard\plain \s46\widctlpar\adjustright \f36\cgrid {\f4 \par }\pard \s46\fi-360\li360\widctlpar\adjustright {\f4 \bullet \tab There are three new calls:  }{\f6 DrawStringWidth}{\f4 , }{\f6 UseColorTable}{\f4 , and }{\f6 RestoreColorTable}{\f4 .\par }\pard \s46\widctlpar\adjustright {\f4 \par }{\b\f4 GetSysIcon}{\pard\plain \s46\widctlpar\adjustright \v\f4\cgrid {\xe {\v\f4 }{\b\v\f4 GetSysIcon}}}{\b\f4  Enhancements\par }{\f4 \par }\pard \s46\fi-360\li360\widctlpar\adjustright {\f4 \bullet \tab }{\f6 GetSysIcon}{\f4  now calls }{\f6 SendRequest}{\f4  with a new request code, }{\f6 systemSaysGetSysIcon}{\f4  ($1201), to allow utilities and applications to override or extend the built-in set of icons.  The }{\f6 dataIn}{\f4  parameter points to a structure formatted as follows:\par \par }\trowd \trgaph50\trleft670 \clvertalt\cltxlrtb \cellx1210\clvertalt\cltxlrtb \cellx3370\clvertalt\cltxlrtb \cellx9410\pard\plain \keep\widctlpar\intbl\adjustright \f4\cgrid {\fs20 $00\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs10 \par }{\fs20 \emdash \tab }{\i\fs20 auxType}{\fs20 \tab \emdash \par }{\fs10 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs10 \par }{\b\fs20 Long}{\fs20 \emdash auxiliary type parameter as passed to }{\f6\fs20 GetSysIcon}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\trowd \trgaph50\trleft670 \clvertalt\cltxlrtb \cellx1210\clvertalt\cltxlrtb \cellx3370\clvertalt\cltxlrtb \cellx9410\pard \keep\widctlpar\intbl\adjustright {\fs20 $04\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 value}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash value parameter as passed to }{\f6\fs20 GetSysIcon}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\pard \keep\widctlpar\intbl\adjustright {\fs20 $06\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 flags}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash flags parameter as passed to }{\f6\fs20 GetSysIcon}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\trowd \trleft1260 \clvertalt\cltxlrtb \cellx3060\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \cell }\pard \widctlpar\intbl\adjustright {\fs20 \row }\pard \fi-360\li360\widctlpar\adjustright {\par \tab Your request procedure (installed using }{\f6 AcceptRequests}{ in the Tool Locator) should decide whether it will provide an icon for the given input parameters.  If not, simply reject the request.  If you will handle it, put an icon pointer at offset +002 in the }{\f6 dataOut}{ buffer and accept the request.\par \par \bullet \tab }{\f6 GetSysIcon}{\pard\plain \fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 GetSysIcon}}}{ has built-in icons for five additional file types:  text ($04), source file ($B0), AppleSoft BASIC program ($FC), archive ($E0), and binary file ($06).  The complete set is now:\par \par }\pard \fi-360\li1080\ri3960\widctlpar\brdrt\brdrs\brdrw15 \brdrb\brdrs\brdrw15 \tx3600\adjustright {Kind\tab File Type\par }\pard \fi-360\li1080\ri3960\widctlpar\tx3600\adjustright {Folder, open or closed\tab $000F\par Application\tab $00B3 or $00FF\par Stack\tab $0055\par Text\tab $0004\par Source file\tab $00B0\par AppleSoft BASIC program\tab $00FC\par Archive file\tab $00E0\par Binary file\tab $0006\par Document\tab any other file type\par }\pard \fi-1440\li1440\widctlpar\adjustright {\par \par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\b\fs28 Clarifications of Previous QuickDraw II Auxiliary Documentation\par }\pard \widctlpar\adjustright {\par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab Toolbox Reference 3, page 44-15, for }{\f6 SpecialRect}{, says that the low-order 4 bits of }{\f6 frameColor}{ and }{\f6 fillColor}{ specify the colors.  Actually, all 16 bits are significant.  To get solid patterns, use $0000, $1111, ..., $EEEE, $FFFF.\par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\b\fs28 \page New QuickDraw II Auxiliary Calls\par }\pard \widctlpar\adjustright {\par }\pard \widctlpar\brdrt\brdrs\brdrw15 \adjustright {\b\f6 DrawStringWidth}{\pard\plain \widctlpar\brdrt\brdrs\brdrw15 \adjustright \v\f6\cgrid {\xe {\v\f6 }{\b\v\f6 DrawStringWidth}}}{\b \tab $1512\par }\pard \widctlpar\adjustright {\par }{\f6 DrawStringWidth}{ draws a string in a specified horizontal width on a single line.  The string is compressed and truncated as necessary, if allowed.\par \par The string can be in Pascal, C, or GS/OS format, and you can reference it by pointer, handle, or resource ID.\par \par }{\b Parameters\par }{\par Stack before call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i flags}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Flags (see below)}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i ref}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash String reference}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i width}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Width in pixels}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par Stack after call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par }\pard \widctlpar\tx1440\tx2520\tx5040\adjustright {\b Errors}{\tab $1231\tab }{\f6 badQDAuxValue}{\tab Illegal input values.\par \tab }{\f6 LoadResource}{ errors are returned unchanged.\par }\pard \widctlpar\tx1440\adjustright {\par }{\b C}{\tab }{\f6\fs20 extern pascal void DrawStringWidth (flags, ref, width);\par \tab Word\tab flags, width;\par \tab Long\tab ref;}{\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 flags}{\tab Selects various options, as follows:\par }\pard \fi-1080\li2880\keepn\widctlpar\adjustright {bit 15\tab prevent compression\par }\pard \fi-360\li3240\keepn\widctlpar\adjustright {0 = Allow string to be drawn with the characters scrunched together if the full width doesn\rquote t fit (uses }{\f6 SetCharExtra}{(-1.0)).\par }\pard \fi-1080\li2880\widctlpar\adjustright {\tab 1 = Don\rquote t allow compression.\par }\pard \fi-1080\li2880\keepn\widctlpar\adjustright {bits 14-13\tab type of truncation\par }\pard \fi-360\li3240\keepn\widctlpar\adjustright {00 = none (Truncates on the right, but does not indicate the truncation with an ellipsis character.)\par }\pard \fi-1080\li2880\keepn\widctlpar\adjustright {\tab 01 = left (Replace beginning of string with ellipsis, if necessary.)\par \tab 10 = center (Replace middle of string with ellipsis, if necessary.)\par }\pard \fi-1080\li2880\widctlpar\adjustright {\tab 11 = right (Replace end of string with ellipsis,  if necessary.)\par }\pard \fi-1080\li2880\keepn\widctlpar\adjustright {bits 12-4\tab reserved (use 0)\par bits 3-2\tab type of string\par \tab 00 = Pascal (leading length byte)\par \tab 01 = C (terminating null character)\par \tab 10 = GS/OS (leading length word)\par }\pard \fi-1080\li2880\widctlpar\adjustright {\tab 11 = reserved (don\rquote t use)\par }\pard \fi-1080\li2880\keepn\widctlpar\adjustright {bits 1-0\tab type of reference to string\par \tab 00 = pointer\par \tab 01 = handle\par \tab 10 = resource ID\par }\pard \fi-1080\li2880\widctlpar\adjustright {\tab 11 = reserved (don\rquote t use)\par }\pard \fi-1080\li1080\widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 ref}{\tab String reference.  What you pass here depends on bits 0-3 of }{\f6 flags}{.\par }\pard \fi-1080\li1080\widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 width}{\tab Width of the destination area, in pixels.  The string is forced to this width using the method specified by bits 13-15 of }{\f6 flags}{.\par }\pard \widctlpar\brdrt\brdrs\brdrw15 \adjustright {\page }{\b\f6 RestoreColorTable}{\pard\plain \widctlpar\brdrt\brdrs\brdrw15 \adjustright \v\f6\cgrid {\xe {\v\f6 }{\b\v\f6 RestoreColorTable}}}{\b \tab \tab $1712\par }\pard \widctlpar\adjustright {\par }{\f6 RestoreColorTable}{ undoes the effects of }{\f6 UseColorTable}{.  See }{\f6 UseColorTable}{ for more information.\par \par }{\b Parameters\par }{\par Stack before call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i colorInfo}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash Color information from }{\f6 UseColorTable}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i flags}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Flags (See below)}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par Stack after call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\tx1440\tx2520\tx5040\adjustright {\b \par Errors}{\tab }{\f6 DisposeHandle}{ errors are returned unchanged.\par }\pard \widctlpar\tx1440\adjustright {\par }{\b C}{\tab }{\f6\fs20 extern pascal void RestoreColorTable (colorInfo, flags);\par \tab Long colorInfo;\par \tab Word flags;}{\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 flags}{\tab Defined as follows:\par }\pard \fi-1080\li2880\widctlpar\adjustright {bit 15\tab reserved (use zero)\par bit 14\tab 1 = skip the normal call to }{\f6 CtlNewRes}{\par bit 13\tab 1 = change the SCBs for the menu bar, too\par bits 12..0\tab reserved (use zero)\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 colorInfo}{\tab Value returned by }{\f6 UseColorTable}{.\par }\pard \widctlpar\brdrt\brdrs\brdrw15 \adjustright {\b\f6 \page UseColorTable}{\pard\plain \widctlpar\brdrt\brdrs\brdrw15 \adjustright \v\f6\cgrid {\xe {\v\f6 }{\b\v\f6 UseColorTable}}}{\b \tab $1612\par }\pard \widctlpar\adjustright {\par }\pard\plain \s46\widctlpar\adjustright \f36\cgrid {\f6 UseColorTable}{\f4  preserves Scanline Control Bytes (SCBs) and sets them to use a color table you specify.  It also preserves the old contents of that color table and sets the color table to the data you specify, or to a standard color table.\par \par }{\f6 UseColorTable}{\f4  returns a value that you later pass to }{\f6 RestoreColorTable}{\f4  to restore the color table and SCBs.  Typically, you might call }{\f6 UseColorTable}{\f4  when handling a window\rquote s activate event, and call }{\f6 RestoreColorTable}{\f4  when handling the window\rquote s deactivate event.\par \par The }{\f6 colorInfo}{\f4  value returned should be used }{\i\f4 once}{\f4  in a }{\f6 RestoreColorTable}{\f4  call.  If you make a }{\f6 UseColorTable}{\f4  call and for some reason wind up not making a corresponding }{\f6 RestoreColorTable}{\f4  call, you should call }{\f6 DisposeHandle}{\f4  on the }{\f6 colorInfo}{\f4  value.\par \par }{\f6 UseColorTable}{\f4  normally calls }{\f6 CtlNewRes}{\f4  for you to cause controls (scroll bars, for example) to redraw as needed for the new colors.  There is a flag bit to override this behavior.  Normally, all SCBs except those for the menu bar are affected.  There is a flag bit you can set to include all the SCBs.\par }\pard\plain \widctlpar\adjustright \f4\cgrid {\par }{\b Parameters\par }{\par Stack before call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i Space}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash Space for result}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i tableNum}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Color table number (0..15)}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i tablePtr}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash Pointer to color table (NIL = standard)}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i flags}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Flags (See below)}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par Stack after call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i colorInfo}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash Value to pass to }{\f6 RestoreColorTable}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par }\pard \widctlpar\tx1440\tx2520\tx5040\adjustright {\b Errors}{\tab }{\f6 NewHandle}{ errors are returned unchanged.\par }\pard \widctlpar\tx1440\adjustright {\par }{\b C}{\tab }{\f6\fs20 extern pascal Long UseColorTable (tableNum, tablePtr, flags);\par \tab Word tableNum, flags;\par \tab ColorTablePtr tablePtr;}{\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 tableNum}{\tab Number of the color table to change.\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 tablePtr}{\tab Pointer to the new color table.  Pass NIL for the default color table.\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\keepn\widctlpar\adjustright {\f6\fs20 flags}{\tab Defined as follows:\par }\pard \fi-1080\li2880\keepn\widctlpar\adjustright {bit 15\tab use the standard 640-mode color set, even in 320 mode (ignores }{\f6 tablePtr}{)\par bit 14\tab 1 = skip the normal call to }{\f6 CtlNewRes}{\par bit 13\tab 1 = change the SCBs for the menu bar, too\par }\pard \fi-1080\li2880\widctlpar\adjustright {bits 12..0\tab reserved (use zero)\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 colorInfo}{\tab Handle of the information }{\f6 RestoreColorTable}{ will use to restore the original color table and SCB.  If }{\f6 RestoreColorTable}{ is not called, call }{\f6 DisposeHandle}{ to dispose of this buffer.\par }\pard \widctlpar\adjustright {\par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\page }{\b\fs28 New Features of the Resource Manager}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\xe {\b\v\fs28 Resource Manager}}}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 Resource Manager\tcl2}}}{\b\fs28 \par }\pard \widctlpar\adjustright {\b \par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab There are two new calls:  }{\f6 OpenResourceFileByID}{\f4  and }{\f6 CompactResourceFile}{\f4 .\par }\pard\plain \fi-360\li360\widctlpar\adjustright \f4\cgrid {\par \bullet \tab Fixed a string-comparison problem in }{\f6 RMFindNamedResource}{\pard\plain \fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 RMFindNamedResource}}}{ and }{\f6 RMLoadNamedResource}{\pard\plain \fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 RMLoadNamedResource}}}{.  Sometimes in System 6.0 you could wind up loading a resource whose name began with the name you asked for, but contained additional characters after the characters you asked for.\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \par \bullet \tab }{\f6 OpenResourceFile}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 OpenResourceFile}}}{\f4  now makes sure the resource map was entirely read.  If it runs off the end of the file while trying to read the map, it returns a GS/OS }{\f6 eofEncountered}{\f4  error.\par \par \bullet \tab Added a new bit to }{\f6 mapFlag}{\f4  in the in-memory copy of the resource map.  Bit 0 is now defined as }{\f6 fileReadWrite}{\f4 .  When a file is opened, it gets set to 1 if the file is opened read/write.  If it\rquote s opened with read-only access, the bit is set to 0.  This bit is for examination only.\par \par \bullet \tab }{\f6 AddResource}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 AddResource}}}{\f4 , }{\f6 RemoveResource}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 RemoveResource}}}{\f4 , }{\f6 WriteResource}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 WriteResource}}}{\f4 , and }{\f6 MarkResourceChange}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 MarkResourceChange}}}{\f4  now verify that the target file can be written to before actually doing anything.  They all return a GS/OS }{\f6 invalidAccess}{\f4  error if the file cannot be written to.  The exception to this is }{\f6 MarkResourceChange}{\f4  when the resource in question is being marked unchanged; it is allowed because it won\rquote t eventually cause a write.\par \par \bullet \tab Fixed }{\f6 WriteResource}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 WriteResource}}}{\f4  to write the size of the resource as it appears on disk, rather than the size of the resource\rquote s handle in memory.  This properly allows for converters to write resources that are smaller than their in-memory size without destroying the file.\par \par \bullet \tab }{\f6 CloseResourceFile}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 CloseResourceFile}}}{\f4  returns error }{\f6 resFileNotFound}{\f4  ($1E07), instead of no error, on a non-zero argument that doesn\rquote t match an open file ID.\par }\pard\plain \widctlpar\tx900\adjustright \f4\cgrid {\par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\b\fs28 Clarifications of Previous Resource Manager Documentation\par }\pard \widctlpar\adjustright {\par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab On page 215 of Programmer\rquote s Reference For System 6.0, the }{\f6 rType}{ and }{\f6 rID}{ parameter descriptions for }{\f6 RMSetResourceName}{\pard\plain \fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 RMSetResourceName}}}{ should read \ldblquote ...for the resource to name\rdblquote  (not \ldblquote ...for the resource to load\rdblquote ).\par \par \bullet \tab For }{\f6 RMSetResourceName}{, note that the resource to be named must already exist, or you will get error $1E06, }{\f6 resourceNotFound}{.\par }\pard \fi-360\li360\widctlpar\tx900\adjustright {\par \bullet \tab The system does not log in a resource converter for the }{\f6 rCodeResource}{\pard\plain \fi-360\li360\widctlpar\tx900\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 rCodeResource}}}{ type (it never has, and it never will).  If your application needs to use resources of type }{\f6 rCodeResource}{, you must explicitly use }{\f6 ResourceConverter}{ to log in an application resource converter (usually the one returned by }{\f6 GetCodeResConverter}{).\par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\b\fs28 \page New Resource Manager Calls\par }\pard \fi-720\li720\widctlpar\adjustright {\par }\pard \widctlpar\brdrt\brdrs\brdrw15 \adjustright {\b\f6 CompactResourceFile}{\pard\plain \widctlpar\brdrt\brdrs\brdrw15 \adjustright \v\f6\cgrid {\xe {\v\f6 }{\b\v\f6 CompactResourceFile}}}{\b \tab $2F1E\par }\pard \widctlpar\adjustright {\par }\pard\plain \s46\widctlpar\adjustright \f36\cgrid {\f6 CompactResourceFile}{\f4  consolidates all free blocks in an open resource file into a single free block at the end.\par }\pard\plain \widctlpar\adjustright \f4\cgrid {\par }{\b Parameters\par }{\par Stack before call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i flags}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Flags word (Reserved; use $0000)}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i fileID}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash ID of resource file to compact}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par Stack after call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\tx1440\adjustright {\par }\pard \widctlpar\tx1440\tx2520\tx5040\adjustright {\b Errors}{\tab }{\f6 $1E07}{\f6\fs20 \tab }{\f6 resFileNotFound}{\tab The specified resource file was not found.\par \tab $}{\f6 004E}{\tab }{\f6 invalidAccess}{\tab The file is not opened with write access.\par \tab GS/OS errors are returned unchanged.\par \tab Memory Manager errors are returned unchanged.\par }\pard \widctlpar\tx1440\adjustright {\par }{\b C}{\tab }{\f6\fs20 extern pascal void CompactResourceFile (flags, fileID);\par \tab Word flags, fileID;}{\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 flags}{\tab This parameter is reserved for future expansion.  For now, always pass $0000.\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 fileID}{\tab File ID for the resource file to compact.\par }\pard \widctlpar\brdrt\brdrs\brdrw15 \adjustright {\b\f6 \page OpenResourceFileByID}{\pard\plain \widctlpar\brdrt\brdrs\brdrw15 \adjustright \v\f6\cgrid {\xe {\v\f6 }{\b\v\f6 OpenResourceFileByID}}}{\b \tab $2E1E\par }\pard \widctlpar\adjustright {\par }\pard\plain \s46\widctlpar\adjustright \f36\cgrid {\f6 OpenResourceFileByID}{\f4  starts the Resource Manager for you if it isn\rquote t already started under the specified user ID (and it makes that user ID the current resource application in any case).  Then it uses }{\f6 LGetPathname2}{\f4  to find pathname for the specified user ID and calls }{\f6 OpenResourceFile}{\f4  for you on that file.  Note that the }{\f6 oldResApp}{\f4  result is valid even if you get an error.\par }\pard\plain \widctlpar\adjustright \f4\cgrid {\par }{\b Parameters\par }{\par Stack before call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i Space}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Space for result}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i openAccess}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Request access}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i userID}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Application user ID}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par Stack after call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i oldResApp}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Previous }{\f6 CurResourceApp}{ value}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par }\pard \widctlpar\tx1440\tx2520\tx5040\adjustright {\b Errors}{\tab }{\f6 LGetPathname2}{ and }{\f6 OpenResourceFile}{ errors are returned unchanged.\par }\pard \widctlpar\tx1440\adjustright {\par }{\b C}{\tab }{\f6\fs20 extern pascal Word OpenResourceFileByID (openAccess, userID);\par \tab Word openAccess, userID;}{\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 openAccess}{\tab Open access flags.  See }{\f6 Open}{ in }{\i Apple II}{\i\fs20 GS}{\i  GS/OS Reference}{.\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 userID}{\tab User ID for the application.\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 oldResApp}{\tab }{\f6 CurResourceApp}{ value before this call.\par }\pard \widctlpar\adjustright {\par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\page }{\v .}{\b\fs28 New Features of }{\v c2.}{\b\fs28 Scrap Manager\par }\pard \widctlpar\adjustright {\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab There is one new call, }{\f6 ShowClipboard}{\f4 .\par \par \bullet \tab }{\f6 PutScrap}{\f4  now changes the scrap count, as returned by }{\f6 GetScrapCount}{\f4  (for polling to see if the clipboard contents changed).\par }\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \f4\cgrid {\b\fs28 \page New Scrap Manager Calls\par }\pard \widctlpar\tx8640\adjustright {\par }\pard \widctlpar\brdrt\brdrs\brdrw15 \adjustright {\b\f6 ShowClipboard}{\pard\plain \widctlpar\brdrt\brdrs\brdrw15 \adjustright \v\f6\cgrid {\xe {\v\f6 }{\b\v\f6 ShowClipboard}}}{\b \tab $1516\par }\pard \widctlpar\adjustright {\par }\pard\plain \s46\widctlpar\adjustright \f36\cgrid {\f6 ShowClipboard}{\f4  creates a System window that takes care of the clipboard display for you.  (It\rquote s used in Finder and Teach, for example.)  It displays Text, Picture, and Sound scraps.\par \par To open the Clipboard window, use a flags value of $8000.  To close the window, use a flags value of $4000.  To find the }{\f6 WindowPtr}{\f4  of the Clipboard window without opening or closing it, use a flags value of $0000.  In all cases, the }{\f6 windowPtr}{\f4  result is either a valid }{\f6 WindowPtr}{\f4  or NIL (for no window).\par }\pard\plain \widctlpar\adjustright \f4\cgrid {\par }{\b Parameters\par }{\par Stack before call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i Space}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash Space for result}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i flags}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Flags (See below)}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i reserved}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash Reserved; use zero}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par Stack after call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i windowPtr}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash Pointer to the clipboard window or NIL}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par }\pard \widctlpar\tx1440\tx2520\tx5040\adjustright {\b Errors}{\tab Errors from }{\f6 SelectWindow}{ and }{\f6 NewWindow2}{ are returned unchanged.\par }\pard \widctlpar\tx1440\adjustright {\par }{\b C}{\tab }{\f6\fs20 extern pascal WindowPtr ShowClipboard (flags, reserved);\par \tab Word flags;\par \tab Long reserved;}{\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 flags}{\tab Defined as follows:\par }\pard \fi-1080\li2880\widctlpar\adjustright {bit 15\tab 1 = open the Clipboard window (or bring to front if already open)\par bit 14\tab 1 = close the Clipboard window if it\rquote s open\par bits 13..0\tab reserved, use 0\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 reserved}{\tab This parameter is reserved for future expansion.  For now, always pass 0.\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 windowPtr}{\tab Pointer to the clipboard window.  If the clipboard windows is closed, }{\f6 windowPtr}{ will be NIL.\par }\pard \widctlpar\adjustright {\par }\pard\plain \s46\keepn\widctlpar\adjustright \f36\cgrid {\b\f4 Side Effects\par }{\f4 \par }\pard \s46\widctlpar\adjustright {\f4 The clipboard window calls }{\f6 SendRequest}{\f4  with request code $000C, }{\f6 systemSaysDoClipboard}{\f4 , to allow utilities and applications to display additional types of data in the system\rquote s clipboard window.  (You can use }{\f6 AcceptRequests}{\f4 , in the Tool Locator, to register a request procedure to receive }{\f6 systemSaysDoClipboard}{\f4  requests.)\par }\pard\plain \widctlpar\adjustright \f4\cgrid {\par }{\f6 dataIn}{ points to a buffer with the following format:\par \par }\trowd \trgaph50\trleft310 \clvertalt\cltxlrtb \cellx850\clvertalt\cltxlrtb \cellx3010\clvertalt\cltxlrtb \cellx9410\pard \keep\widctlpar\intbl\adjustright {\fs20 $00\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 action}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash Action code (0=draw contents, 1=hit a control, 2=killing controls)}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\trowd \trgaph50\trleft310 \clvertalt\cltxlrtb \cellx850\clvertalt\cltxlrtb \cellx3010\clvertalt\cltxlrtb \cellx9410\pard \keep\widctlpar\intbl\adjustright {\fs20 $02\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs10 \par }{\fs20 \emdash \tab }{\i\fs20 windowPtr}{\fs20 \tab \emdash \par }{\fs10 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs10 \par }{\b\fs20 Long}{\fs20 \emdash Clipboard window pointer}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\pard \keep\widctlpar\intbl\adjustright {\fs20 $06\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 clipVertOffset}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash Top of the area to draw in}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\pard \keep\widctlpar\intbl\adjustright {\fs20 $08\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 clipHorOffset}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash Left edge of the area to draw in}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\pard \keep\widctlpar\intbl\adjustright {\fs20 $0A\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 width}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash Suggested maximum width to draw in}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\pard \keep\widctlpar\intbl\adjustright {\fs20 $0C\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs10 \par }{\fs20 \emdash \tab }{\i\fs20 controlID}{\fs20 \tab \emdash \par }{\fs10 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs10 \par }{\b\fs20 Long}{\fs20 \emdash control ID of control hit (when actionCode = 1)}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\trowd \trleft900 \clvertalt\cltxlrtb \cellx2700\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \cell }\pard \widctlpar\intbl\adjustright {\fs20 \row }\pard \widctlpar\adjustright {\par }{\f6 dataOut}{ is only used on draw actions.  In that case, it points to a buffer with the following format:\par \par }\trowd \trgaph50\trleft310 \clvertalt\cltxlrtb \cellx850\clvertalt\cltxlrtb \cellx3010\clvertalt\cltxlrtb \cellx9410\pard \keep\widctlpar\intbl\adjustright {\fs20 $00\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 recvCount}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash set by }{\f6\fs20 SendRequest}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\trowd \trgaph50\trleft310 \clvertalt\cltxlrtb \cellx850\clvertalt\cltxlrtb \cellx3010\clvertalt\cltxlrtb \cellx9410\pard \keep\widctlpar\intbl\adjustright {\fs20 $02\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 dataHeight}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash height of content}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\pard \keep\widctlpar\intbl\adjustright {\fs20 $04\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 dataWidth}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash width of content}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\pard \keep\widctlpar\intbl\adjustright {\fs20 $06\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs10 \par }{\fs20 \emdash \tab }{\i\fs20 clipKindPtr}{\fs20 \tab \emdash \par }{\fs10 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs10 \par }{\b\fs20 Long}{\fs20 \emdash C string defining the kind of data drawn}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\trowd \trleft900 \clvertalt\cltxlrtb \cellx2700\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \cell }\pard \widctlpar\intbl\adjustright {\fs20 \row }\pard \widctlpar\tx900\adjustright {\par On receiving a draw-contents action, your request procedure should examine the clipboard (using Scrap Manager calls such as }{\f6 GetIndScrap}{).  If there is no data that you want to draw, simply reject the request.  If there is data you want to draw, retrieve the data, draw it, and accept the request.\par \par You may also use the Control Manager to create controls in the Clipboard window to help draw your content.  In that case, create the controls on the first draw contents action you accept, then use those same controls until you receive a kill controls action.  If you create any controls, you should always call }{\f6 DrawControls}{ when you accept a draw contents action.\par \par You must fill in the }{\f6 dataHeight}{ and }{\f6 dataWidth}{ fields of }{\f6 dataOut}{ to indicate the size of content you drew, so the system can adjust the Clipboard window\rquote s scroll bars as needed.  Finally, you must set the }{\f6 clipKindPtr}{ field to a pointer to a C-style string that describes the type of data you drew.  This string will appear after \ldblquote Clipboard contents:\rdblquote  in the Clipboard window\rquote s information bar.\par \par On receiving a hit-a-control action, your request procedure should do anything appropriate, given the control ID in the }{\f6 dataIn}{ record, and then accept the request.\par \par On receiving a kill controls action, your request procedure should do anything appropriate, given that the system is about to do a }{\f6 KillControls}{ on the Clipboard window.  For example, if you allocated any extra memory as a result of a draw-contents action, you should dispose of that memory here.  The procedure should always accept this request.\par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\b\fs28 \page New Features of Standard File Operations Tool Set}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\xe {\b\v\fs28 Standard File Operations Tool Set}}}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 Standard File Operations Tool Set\tcl2}}}{\b\fs28 \par }\pard\plain \s46\widctlpar\adjustright \f36\cgrid {\f4 \par }\pard \s46\fi-360\li360\widctlpar\adjustright {\f4 \bullet \tab }{\f6 SFReScan}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 SFReScan}}}{\f4  now makes a }{\f6 DInfo}{\f4  and }{\f6 Volume}{\f4  call on the volume in prefix 8 and updates all of the controls accordingly.  Also, }{\f6 SFReScan}{\f4  now works in the volumes list as well as the files list.\par \par \bullet \tab Fixed a problem where }{\f6 SFGetFile}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 SFGetFile}}}{\f4  (but not }{\f6 SFGetFile2}{\f4 ) would loop forever when prefix zero was empty.\par \par \bullet \tab Changed the way Standard File handles multiple edit line items in \ldblquote put file\rdblquote  dialogs, so that there can be more than just the single edit line item.\par }\pard\plain \widctlpar\adjustright \f4\cgrid {\fs28 \par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\b\fs28 Clarification of Previous Standard File Operations Tool Set Documentation\par }\pard \widctlpar\tx900\adjustright {\par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab Apple }{\scaps IIgs}{ Toolbox Reference Volume 3, page 48-9 describes }{\f6 name}{ as \ldblquote Filename string, containing (}{\f6 nameLength = 2}{) bytes of data, not to exceed 253 characters.\rdblquote   It should read \ldblquote }{\f6 nameLength - 2}{\rdblquote .\par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\b\fs28 \page New Features of TextEdit Tool Set}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\xe {\b\v\fs28 TextEdit Tool Set}}}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 TextEdit Tool Set\tcl2}}}{\b\fs28 \par }\pard \widctlpar\adjustright {\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab }{\f6 TEPaintText}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 TEPaintText}}}{\f4  now properly fully-justifies text.}{\b\f4\fs28 \par }{\f4 \par \bullet \tab Fixed a problem with non-targetable TextEdit controls.  They could start out active (with a usable scroll bar for example), and then become inactive when the window became inactive, but the control would not get reactivated when the window came back to the front.\par \par \bullet \tab When }{\f6 TEStartUp}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 TEStartUp}}}{\f4  calls }{\f6 FMStatus}{\f4 , it now pushes pre-zeroed result space, in case the Font Manager is not loaded.  The result is that you get a }{\f6 TEStartUp}{\f4  error reliably now, instead of just sometimes, if the Font Manager isn\rquote t available.\par }\pard\plain \fi-1440\li1440\widctlpar\brdrt\brdrs\brdrw30 \adjustright \f4\cgrid {\b\fs28 \page New Features of the Tool Locator}{\pard\plain \fi-1440\li1440\widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\xe {\b\v\fs28 Tool Locator}}}{\pard\plain \fi-1440\li1440\widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 Tool Locator\tcl2}}}{\b\fs28 \par }\pard \widctlpar\tx1440\tx2160\tx2880\adjustright {\b \par }\pard \widctlpar\tx900\adjustright {\b StartUpTools}{\pard\plain \widctlpar\tx900\adjustright \v\f4\cgrid {\xe {\v }{\b\v StartUpTools}}}{\b /ShutDownTools}{\pard\plain \widctlpar\tx900\adjustright \v\f4\cgrid {\xe {\v }{\b\v ShutDownTools}}}{\b  enhancements\par }{\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab }{\f6 StartUpTools}{\f4  now returns any error from }{\f6 ResourceStartUp}{\f4  (and returns a NIL result).\par \par }\pard\plain \fi-360\li360\widctlpar\adjustright \f4\cgrid {\bullet \tab }{\pard\plain \fi-360\li360\widctlpar\adjustright \v\f4\cgrid {\xe {\v }{\v NDA}}}{\pard\plain \fi-360\li360\widctlpar\adjustright \v\f4\cgrid {\xe {\v }{\v New Desk Accessories}}}{\f6 ShutDownTools}{ tolerates errors from }{\f6 SFShutDown}{ (for compatibility with errant NDAs that shut down Standard File during }{\f6 DeskShutdown}{ even if they did not own it).\par \par \bullet \tab }{\f6 ShutDownTools}{ no longer calls }{\f6 HideCursor}{ if QuickDraw is not active.  (In 6.0, it can crash if an application calls }{\f6 ShutDownTools}{ with QuickDraw inactive.)  If the new-for-6.0 \ldblquote no Resource Manager\rdblquote  flag bit is set, there is no problem, since it was already skipping the }{\f6 HideCursor}{ call.\par \par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab }{\f6 ShutDownTools}{\f4  checks for a NIL input and behaves sanely.  It also shuts down the Resource Manager even if you get some other error.\par }\pard \s46\widctlpar\adjustright {\f4 \par }\pard\plain \fi-720\li720\widctlpar\tx1440\tx2160\tx2880\adjustright \f4\cgrid {\b New Request Codes\par }{\par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab See the Scrap Manager chapter for a description of the }{\f6 systemSaysDoClipboard}{ request.\par \par \bullet \tab See the QuickDraw II Auxiliary chapter for a description of the }{\f6 systemSaysGetSysIcon}{ request.\par }\pard \widctlpar\tx1440\tx2160\tx2880\adjustright {\par }{\b systemSaysForceUndim\par }{\par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab Request $000D, }{\f6 systemSaysForceUndim}{, requests that screen savers return the screen to a normal state.  The system sends this request in some circumstances.  If you send the request yourself, you should pass }{\f6 dataIn}{ and }{\f6 dataOut}{ values of NIL, and you should broadcast the request to all available request procedures.  If you receive the request, you should ignore the }{\f6 dataIn}{ and }{\f6 dataOut}{ parameters and simply un-dim the screen.\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \par \tab GS/OS sends }{\f6 systemSaysForceUndim}{\f4  before deciding whether to put a message on the text screen or the Super Hi-Res screen.\par }\pard\plain \ri60\widctlpar\tx6480\tx9539\adjustright \f4\cgrid {\par }{\b srqQuit\par }{\par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab Request $0011, }{\f6 srqQuit}{, asks an application to quit at its next opportunity.  Typically, an application will set a global flag that tells it to quit when it eventually gets back to its main event loop.  The application may not actually quit even after accepting this request, since the user may elect to cancel because there are documents open that have not been saved.\par }\pard \ri60\widctlpar\tx6480\tx9539\adjustright {\par }{\b srqOpenOrPrint\par }\pard \fi-360\li360\widctlpar\adjustright {\par \bullet \tab Request $0010, }{\f6 srqOpenOrPrint}{, requests that an application re-check the Message Center for messages of type $0011, GS/OS pathnames of files to open or print, and handle the message as if the application had just been launched by the Finder.\par \par }\pard \fi-1800\li1800\ri1080\widctlpar\tx360\adjustright {\f20 }{\b \tab Note}{\tab Teach 1.1 accepts }{\f6 srqOpenOrPrint}{ but does not respond to it reliably.\~\~}{\f20\fs20 \par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\b\fs28 \page New Features of the Window Manager}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\xe {\b\v\fs28 Window Manager}}}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 Window Manager\tcl2}}}{\b\fs28 \par }\pard \widctlpar\adjustright {\par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab There is one new call, }{\f6 UpdateWindow}{.\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \par \bullet \tab Fixed }{\f6 TaskMaster}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 TaskMaster}}}{\f4  to handle the }{\f6 tmNoGetNextEvent}{\f4  bit correctly (bit 21, $0020/0000, in }{\f6 wmTaskMask}{\f4 ).  This bit tells }{\f6 TaskMaster}{\f4  to skip its }{\f6 GetNextEvent}{\f4  call and simply assume that the task record you pass in already contains an event that it should process.  (The }{\f6 tmNoGetNextEvent}{\f4  bit has been defined since System 5.0.3, but before System 6.0.1 it only worked correctly with ROM version 1.  Now it works with both ROM 1 and ROM 3.)\par \par }\pard\plain \fi-360\li360\widctlpar\tx1440\tx2160\tx2880\adjustright \f4\cgrid {\bullet \tab There are two flag bits in the high-order byte of }{\f6 wContDraw}{ pointers for application windows.  By using these bits, you allow the system to redraw your window at certain times when it could not do so before (like behind modal Standard File dialogs and }{\f6 AlertWindow}{ messages).\par \par }\pard \fi-720\li1440\widctlpar\adjustright {bit 31\tab If your content-draw routine is self-contained, so that it can be called from any environment (unknown Bank and Direct Page register, unknown ResourceApp setting, unknown CtlParamPtr values), then you may set bit 31 of your }{\f6 wContDraw}{ pointer.\par \par bit 30\tab If your content-draw routine does not depend on making GS/OS calls (even indirectly, by going to disk to get resources), then you may set bit 30 of your }{\f6 wContDraw}{ pointer.\par }\pard \widctlpar\tx1440\tx2160\tx2880\adjustright {\par }{\b DoModalWindow}{\pard\plain \widctlpar\tx1440\tx2160\tx2880\adjustright \b\v\f4\cgrid {\xe {\b\v DoModalWindow}}}{\b \par }{\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab }{\f6 DoModalWindow}{\f4  now uses }{\f6 UpdateWindow}{\f4 .  If the }{\f6 mwUpdateAll}{\f4  bit is clear, it passes flags of $0000 for the dialog window, but $8000 (background update) for other windows\emdash so the other windows update only if it\rquote s safe for them to update in the background.  If the }{\f6 mwUpdateAll}{\f4  bit is set, it always passes flags of $0000.\par \par \bullet \tab }{\f6 DoModalWindow}{\f4  in System 6.0 did not set a background window\rquote s origin to correspond with its scroll bars before redrawing it (if the }{\f6 mwUpdateAll}{\f4  was set).  Background windows update correctly in System 6.0.1, even if they are scrolled.\par \par \bullet \tab }{\f6 DoModalWindow}{\f4  no longer invalidates controls on an activate event if the window\rquote s }{\f6 fCtlTie}{\f4  bit is set, saying that the control states are independent of the window state.\par \par \bullet \tab After }{\f6 DoModalWindow}{\f4  does an }{\f6 LECut}{\f4 , }{\f6 LEPaste}{\f4 , }{\f6 TECut}{\f4 , or }{\f6 TEPaste}{\f4 , it now returns the control ID of the control that was just edited.\par }\pard\plain \widctlpar\adjustright \f4\cgrid {\par }{\b AlertWindow}{\pard\plain \widctlpar\adjustright \v\f4\cgrid {\xe {\v }{\b\v AlertWindow}}}{\b  enhancements\par }\pard \widctlpar\tx1440\tx2160\tx2880\adjustright {\par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab }{\f6 ErrorWindow}{\pard\plain \fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 ErrorWindow}}}{ and }{\f6 AlertWindow}{ now use }{\f6 UpdateWindow}{, so that windows behind the alerts can redraw when the environment allows it.\par }\pard \widctlpar\tx1440\tx2160\tx2880\adjustright {\par }\pard \keepn\widctlpar\brdrt\brdrs\brdrw30 \adjustright {\b\fs28 Clarifications of Previous Window Manager Documentation\par }\pard \keepn\widctlpar\adjustright {\par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab On page 291 of }{\i Programmer\rquote s Reference for System 6.0}{, the use of the }{\f6 fFlex}{ bit is documented backwards.  In fact, you should set }{\f6 fFlex}{ when you }{\ul don\rquote t}{ want the system to provide an alert frame for you.\par \par \bullet \tab On page 300 of }{\i Programmer\rquote s Reference for System 6.0}{, the return value for }{\f6 FindCursorCtl}{\pard\plain \fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 FindCursorCtl}}}{ is incorrectly identified as a part code.  It is actually just a word: zero if no control was found, or non-zero if a control was found.\par \par \bullet \tab The description of the }{\f6 windPtr}{ parameter to }{\f6 FindCursorCtl}{ says you can pass NIL to find a control in the frontmost window.  This is incorrect.  NIL is invalid here.\par \par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\b\fs28 \page New Window Manager Calls\par }\pard \widctlpar\adjustright {\par }\pard \widctlpar\brdrt\brdrs\brdrw15 \adjustright {\b\f6 UpdateWindow}{\pard\plain \widctlpar\brdrt\brdrs\brdrw15 \adjustright \v\f4\cgrid {\xe {\v }{\b\v\f6 UpdateWindow}}}{\b \tab $6C0E\par }\pard \widctlpar\adjustright {\par }\pard \widctlpar\tx1440\tx2160\tx2880\adjustright {Updates the specified window, if it has a content draw routine and the environment permits.  }{\f6 UpdateWindow}{ is roughly equivalent to calling }{\f6 BeginUpdate}{, }{\f6 StartDrawing}{, the content-draw routine, }{\f6 SetOrigin(0,0)}{, }{\f6 EndUpdate}{.\par }\pard \widctlpar\adjustright {\par Bits 31 and 30 in application window }{\f6 wContDraw}{ pointers are significant.  See the description under \ldblquote New Features of the Window Manager.\rdblquote \par \par }{\f6 UpdateWindow}{ never operates on a system window (one that has been flagged by }{\f6 SetSysWindow}{).  System windows update during }{\f6 GetNextEvent}{ calls (when }{\f6 GetNextEvent}{ calls }{\f6 SystemEvent}{).\par \par }{\b Parameters\par }{\par Stack before call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\tab }{\i flags}{\tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b Word}{\emdash Flags (See below)}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\fs12 \par }{\emdash \tab }{\i windPtr}{\tab \emdash \par }{\fs12 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs12 \par }{\b Long}{\emdash Window to update}{\b \cell }\pard \widctlpar\intbl\adjustright {\b \row }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par Stack after call\par \par }\pard \li360\ri6480\keep\widctlpar\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1620\tqr\tx2880\adjustright {\tab }{\i previous contents}{\tab \par }\trowd \trgaph180\trleft180 \clvertalt\cltxlrtb \cellx3060\clvertalt\cltxlrtb \cellx9540\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx1260\tqr\tx2520\adjustright {\cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b <\emdash SP\cell }\pard \widctlpar\intbl\adjustright {\b \row }\pard \widctlpar\adjustright {\par }\pard \fi-5040\li5040\widctlpar\tx1440\tx2520\tx5040\adjustright {\b Errors}{\tab }{\f6 $0E05\tab cantUpdateErr}{\tab Cannot update the specified window in the current environment.\par }\pard \widctlpar\tx1440\adjustright {\par }{\b C}{\tab }{\f6\fs20 extern pascal void UpdateWindow (flags, windPtr);\par \tab WindowPtr windPtr;\par \tab Word flags;}{\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 flags}{\tab Defined as follows:\par }\pard \fi-1080\li2880\widctlpar\adjustright {bit 15\tab 1 = Background update (window\rquote s expected environment may not already be set up).  Requires the window\rquote s }{\f6 wContDraw}{ bit 31 to be set for anything to happen, saying that the }{\f6 wContDraw}{ routine can take care of itself.\par \par bit 14\tab Normally, applications do not need to worry about this bit, and should set it to zero.\par \par \tab 0 = Allow }{\f6 UpdateWindow}{ to try calling window update routines which need to make GS/OS calls.  (}{\f6 UpdateWindow}{ automatically checks whether GS/OS is busy; there is no need to set this bit just because GS/OS is busy.)\par \par \tab 1 = Do not allow }{\f6 UpdateWindow}{ to call window update routines that may need to make GS/OS calls, even if GS/OS is not busy.\par \par bits 13-0\tab Reserved, use 0.\par }\pard \widctlpar\adjustright {\par }\pard \fi-1440\li1440\widctlpar\adjustright {\f6\fs20 windPtr}{\tab Window to update.\par }\pard \widctlpar\adjustright {\sect }\sectd \sbkodd\linex0\colsx140\endnhere\sectdefaultcl {\footerr \pard\plain \s27\widctlpar\tqr\tx8280\tqr\tx9360\adjustright \f4\cgrid {\tab Chapter 2  GS/OS Changes\tab }{\field{\*\fldinst { PAGE  }}{\fldrslt {\lang1024 41}}}{\par }}\pard\plain \widctlpar\adjustright \f4\cgrid {\fs36 Chapter 2  }{\b\fs36 GS/OS Changes}{\pard\plain \widctlpar\adjustright \b\v\f4\fs36\cgrid {\tc {\b\v\fs36 }{\v\fs36 Chapter 2  }{\b\v\fs36 GS/OS Changes}{\v\fs36 \tcl1}}}{\b\fs36 \par }{\pard\plain \widctlpar\adjustright \b\v\f4\fs36\cgrid {\xe {\b\v\fs36 }{\b\v\fs36 GS/OS}}}{\v\fs36 \par }\pard \fi-720\li720\widctlpar\adjustright {\par }\pard \fi-720\li720\widctlpar\brdrt\brdrs\brdrw30 \tx1440\tx2160\tx2880\adjustright {\b\fs28 Device Dispatcher}{\pard\plain \fi-720\li720\widctlpar\brdrt\brdrs\brdrw30 \tx1440\tx2160\tx2880\adjustright \b\v\f4\fs28\cgrid {\xe {\b\v\fs28 Device Dispatcher}}}{\pard\plain \fi-720\li720\widctlpar\brdrt\brdrs\brdrw30 \tx1440\tx2160\tx2880\adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 Device Dispatcher\tcl2}}}{\b\fs36 \par }\pard \fi-720\li720\widctlpar\tx1440\tx2160\tx2880\adjustright {\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab There is a new driver characteristics bit to allow Apple to safely add new $0000..$7FFF-range subcalls to }{\f6 DStatus}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 DStatus}}}{\f4  and }{\f6 DControl}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 DControl}}}{\f4 .\par \par \bullet \tab Drivers have always been required to validate all call requests that are sent to them, and return an error if they do not support the call.  This includes the main driver commands as well as all subcalls.  Unfortunately, some driver authors didn\rquote t feel that the guidelines needed to be followed, and they do random things if given a call they don\rquote t know about (some also crash).\par \par \bullet \tab If bit 4 ($0010) is set in a device\rquote s characteristics word, the driver indicates that it properly follows the driver guidelines in the }{\i\f4 GS/OS Reference}{\f4  and }{\i\f4 GS/OS Device Driver Reference}{\f4 .  If this bit is not set, drivers will never receive a call that is not documented in the GS/OS reference (except for device-specific calls, $8000..$FFFF, which are always passed on to drivers).}{\b\f4 \par }\pard\plain \fi-720\li720\widctlpar\adjustright \f4\cgrid {\par }\pard \fi-720\li720\widctlpar\brdrt\brdrs\brdrw30 \tx1440\tx2160\tx2880\adjustright {\b\fs28 System Loader}{\pard\plain \fi-720\li720\widctlpar\brdrt\brdrs\brdrw30 \tx1440\tx2160\tx2880\adjustright \b\v\f4\fs28\cgrid {\xe {\b\v\fs28 System Loader}}}{\pard\plain \fi-720\li720\widctlpar\brdrt\brdrs\brdrw30 \tx1440\tx2160\tx2880\adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 System Loader\tcl2}}}{\b\fs28 \par }\pard \fi-720\li720\widctlpar\adjustright {\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab File types $0030 to $003F (all auxiliary types) are now allowed for load files.  File type/auxiliary type combinations must be assigned by Developer Technical Support, as usual.\par }\pard\plain \fi-720\li720\widctlpar\adjustright \f4\cgrid {\par }\pard \widctlpar\brdrt\brdrs\brdrw30 \adjustright {\b\fs28 GS/OS Drivers}{\pard\plain \widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 GS/OS Drivers\tcl2}}}{\b\fs28 \par }\pard \fi-720\li720\widctlpar\tx1440\tx2160\tx2880\adjustright {\par }\pard \fi-720\li720\keepn\widctlpar\tx1440\tx2160\tx2880\adjustright {\b SCSI HD Driver}{\pard\plain \fi-720\li720\keepn\widctlpar\tx1440\tx2160\tx2880\adjustright \b\v\f4\cgrid {\xe {\b\v SCSI HD Driver}}}{\b \par SCSI Tape Driver}{\pard\plain \fi-720\li720\keepn\widctlpar\tx1440\tx2160\tx2880\adjustright \b\v\f4\cgrid {\xe {\b\v SCSI Tape Driver}}}{\b \par SCSI Scanner Driver}{\pard\plain \fi-720\li720\keepn\widctlpar\tx1440\tx2160\tx2880\adjustright \b\v\f4\cgrid {\xe {\b\v SCSI Scanner Driver}}}{\b \par }\pard\plain \s46\keepn\widctlpar\adjustright \f36\cgrid {\f4 \par }\pard \s46\fi-360\li360\widctlpar\adjustright {\f4 \bullet \tab Added support for the new Apple-defined }{\f6 DStatus}{\f4  subcall.  Call $4000, }{\f6 GetSCSITargetPriority}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 GetSCSITargetPriority}}}{\f4 , returns a word indicating the SCSI ID (0..7) of a given GS/OS SCSI device.  Use a }{\f6 request_count}{\f4  of $0002.}{\b\f4 \par }\pard\plain \fi-720\li720\widctlpar\tx1440\tx2160\tx2880\adjustright \f4\cgrid {\par }\pard \fi-720\li720\keep\keepn\widctlpar\tx1440\tx2160\tx2880\adjustright {\b SCSI CD Driver}{\pard\plain \fi-720\li720\keep\keepn\widctlpar\tx1440\tx2160\tx2880\adjustright \b\v\f4\cgrid {\xe {\b\v SCSI CD Driver}}}{\b \par }\pard\plain \s46\keep\keepn\widctlpar\adjustright \f36\cgrid {\f4 \par }\pard \s46\fi-360\li360\widctlpar\adjustright {\f4 \bullet \tab Added support for the new Apple-defined }{\f6 DStatus}{\f4  subcall.  Call $4000, }{\f6 GetSCSITargetPriority}{\pard\plain \s46\fi-360\li360\widctlpar\adjustright \v\f6\cgrid {\xe {\v\f6 }{\v\f6 GetSCSITargetPriority}}}{\f4 , returns a word indicating the SCSI ID (0..7) of a given GS/OS SCSI device.  Use a }{\f6 request_count}{\f4  of $0002.}{\b\f4 \par \par }{\f4 \bullet \tab Changed default command bitmap to match the AppleCD 300, which does not return a command bitmap in the Inquiry call.\par }\pard \s46\widctlpar\adjustright {\f4 \par }\pard \s46\keepn\widctlpar\adjustright {\b\f4 Compatibility with the AppleCD 300 Drive}{\pard\plain \s46\keepn\widctlpar\adjustright \b\v\f4\cgrid {\xe {\b\v\f4 AppleCD 300 Drive}}}{\b\f4 \par }{\f4 \par }\pard \s46\fi-360\li360\widctlpar\adjustright {\f4 \bullet \tab With the 6.0.1 SCSI CD Driver, you can read data, but you can\rquote t play audio tracks, and you can\rquote t take advantage of the drive\rquote s ability to read audio tracks as data.  With the 6.0 SCSI CD Driver, you can read data if and only if a CD was online when you booted.  You can\rquote t play audio tracks.\par \par \tab Under ProDOS 8 with the Apple High-Speed SCSI card, the AppleCD 300 works just as well as the previous models.  You can\rquote t play audio tracks.\par }\pard\plain \widctlpar\tx1440\tx2160\tx2880\adjustright \f4\cgrid {\par }\pard \fi-720\li720\keepn\widctlpar\tx1440\tx2160\tx2880\adjustright {\b Console Driver}{\pard\plain \fi-720\li720\keepn\widctlpar\tx1440\tx2160\tx2880\adjustright \b\v\f4\cgrid {\xe {\b\v Console Driver}}}{\b \par }{\par }\pard \fi-360\li360\widctlpar\tx1440\tx2160\tx2880\adjustright {\bullet \tab Fixed the driver to store the correct addresses in the fast-I/O vectors (as returned by the }{\f6 DStatus}{ subcall }{\f6 GetVectors}{); they don\rquote t work in System 6.0.  The lowest Console Driver version number where the fast-I/O vectors work is $3040.\par }\pard \fi-720\li720\widctlpar\tx1440\tx2160\tx2880\adjustright {\par }\pard \fi-720\li720\keepn\widctlpar\tx1440\tx2160\tx2880\adjustright {\b AppleDisk 3.5 Driver}{\pard\plain \fi-720\li720\keepn\widctlpar\tx1440\tx2160\tx2880\adjustright \b\v\f4\cgrid {\xe {\b\v AppleDisk 3.5 Driver}}}{\b \par }\pard\plain \s46\li720\keepn\widctlpar\adjustright \f36\cgrid {\f4 \par }\pard \s46\fi-360\li360\widctlpar\adjustright {\f4 \bullet \tab Fixed the }{\f6 DStatus}{\f4  subcall }{\f6 get_format_options}{\f4  to work correctly on an Apple SuperDrive connected to an Apple II SuperDrive Controller Card.  Now it returns as much data as it can and returns a real transfer count.  It used to return a transfer count of zero (and return no data) if the user\rquote s buffer was not big enough.\par }\pard\plain \fi-720\li720\widctlpar\tx1440\tx2160\tx2880\adjustright \f4\cgrid {\par }\pard \keepn\widctlpar\brdrt\brdrs\brdrw30 \adjustright {\b\fs28 FSTs}{\pard\plain \keepn\widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 FSTs\tcl2}}}{\b\fs28 \par }\pard \fi-720\li720\keepn\widctlpar\tx1440\tx2160\tx2880\adjustright {\par }\pard \fi-720\li720\keepn\widctlpar\brdrt\brdrs\brdrw15 \tx1440\tx2160\tx2880\adjustright {\b AppleShare FST}{\pard\plain \fi-720\li720\keepn\widctlpar\brdrt\brdrs\brdrw15 \tx1440\tx2160\tx2880\adjustright \b\v\f4\cgrid {\xe {\b\v AppleShare FST}}}{\pard\plain \fi-720\li720\keepn\widctlpar\brdrt\brdrs\brdrw15 \tx1440\tx2160\tx2880\adjustright \b\v\f4\cgrid {\tc {\b\v AppleShare FST\tcl3}}}{\b \par }\pard \fi-720\li720\keepn\widctlpar\tx1440\tx2160\tx2880\adjustright {\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab Fixed volume-changed notification to pass a valid device number.\par \par \bullet \tab AppleShare volume-changed notifications now occur even if there are no directories open on the volume.\par }\pard\plain \widctlpar\tx1440\tx2160\tx2880\adjustright \f4\cgrid {\par }\pard \fi-720\li720\widctlpar\brdrt\brdrs\brdrw15 \tx1440\tx2160\tx2880\adjustright {\b DOS 3.3 FST}{\pard\plain \fi-720\li720\widctlpar\brdrt\brdrs\brdrw15 \tx1440\tx2160\tx2880\adjustright \b\v\f4\cgrid {\xe {\b\v DOS 3.3 FST}}}{\pard\plain \fi-720\li720\widctlpar\brdrt\brdrs\brdrw15 \tx1440\tx2160\tx2880\adjustright \b\v\f4\cgrid {\tc {\b\v DOS 3.3 FST\tcl3}}}{\b \par }\pard \fi-720\li720\widctlpar\adjustright {\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab The FST now ignores zero-length filename entries on DOS 3.3 disks.  That is, }{\f6 GetDirEntry}{\f4  does not count them and does not return them.  Internally, the FST treats a filename field of all blanks (30 $A0 bytes) just like a deleted catalog entry.\par \par \bullet \tab }{\f6 OpenGS}{\f4  on a DOS 3.3 disk now works correctly with 15 parameters.  In System 6.0 it did not work reliably.\par \par \bullet \tab The FST name as returned from }{\f6 GetFSTInfo}{\f4  is \ldblquote Apple II DOS 3.3\rdblquote  instead of just \ldblquote DOS 3.3\rdblquote .\par \par }\pard\plain \fi-360\li360\widctlpar\adjustright \f4\cgrid {\bullet \tab Changed }{\f6 Open}{, }{\f6 GetFileInfo}{, and }{\f6 GetDirEntry}{ to return zero for }{\f6 resourceEOF}{ and }{\f6 resourceBlocks}{ fields for non-extended files (when the fields are present).\par }\pard \widctlpar\adjustright {\par }\pard \widctlpar\brdrt\brdrs\brdrw15 \adjustright {\b HFS FST}{\pard\plain \widctlpar\brdrt\brdrs\brdrw15 \adjustright \b\v\f4\cgrid {\xe {\b\v HFS FST}}}{\pard\plain \widctlpar\brdrt\brdrs\brdrw15 \adjustright \b\v\f4\cgrid {\tc {\b\v HFS FST\tcl3}}}{\b \par }\pard \widctlpar\adjustright {\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab Fixed a problem where }{\f6 Write}{\f4  to any HFS disk would stop prematurely after transferring 512 bytes if the most recent }{\f6 Read}{\f4  call to any HFS disk stopped because it hit a newline character (not because it transferred the requested number of bytes or hit the end of the file).\par }\pard\plain \widctlpar\adjustright \f4\cgrid {\par }\pard \widctlpar\brdrt\brdrs\brdrw15 \adjustright {\b HS.FST (High Sierra & ISO 9660 FST)}{\pard\plain \widctlpar\brdrt\brdrs\brdrw15 \adjustright \b\v\f4\cgrid {\tc {\b\v HS.FST (High Sierra & ISO 9660 FST)\tcl3}}}{\b \par }\pard \fi-720\li720\widctlpar\adjustright {\v .FST}{\pard\plain \fi-720\li720\widctlpar\adjustright \v\f4\cgrid {\xe {\v }{\v HS.FST}}}{\v \par }{\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab The }{\f6 FSTSpecific}{\f4  subcalls }{\f6 map_enable}{\f4  and }{\f6 set_map_table}{\f4  now post volume-changed notifications for all of online High Sierra and ISO 9660 volumes.\par \par \bullet \tab The FST can now use volumes with path tables larger than 8K.\par }\pard\plain \fi-720\li720\widctlpar\tx1440\tx2160\tx2880\adjustright \f4\cgrid {\par }\pard \fi-720\li720\keepn\widctlpar\brdrt\brdrs\brdrw15 \tx1440\tx2160\tx2880\adjustright {\b MS-DOS FST}{\pard\plain \fi-720\li720\keepn\widctlpar\brdrt\brdrs\brdrw15 \tx1440\tx2160\tx2880\adjustright \b\v\f4\cgrid {\xe {\b\v MS-DOS FST}}}{\pard\plain \fi-720\li720\keepn\widctlpar\brdrt\brdrs\brdrw15 \tx1440\tx2160\tx2880\adjustright \b\v\f4\cgrid {\tc {\b\v MS-DOS FST\tcl3}}}{\b \par }\pard\plain \s46\keepn\widctlpar\adjustright \f36\cgrid {\f4 \par }\pard \s46\widctlpar\adjustright {\f4 The MS-DOS FST, new for System 6.0.1, is read only.  (It does not modify MS-DOS disks, it just reads them.)\par \par Resource forks are supported as defined and implemented by Macintosh PC Exchange.  This is done by placing the resource fork of a given file into a normal MS-DOS file of the same name as the original file in a subdirectory named \ldblquote RESOURCE.FRK\rdblquote  at the same directory level as the original file.  The \ldblquote RESOURCE.FRK\rdblquote  subdirectory does not appear to an application during a directory search on the Apple II}{\f4\fs20 GS}{\f4 , though it does appear normally on an MS-DOS platform.\par }\pard\plain \fi-720\li720\widctlpar\adjustright \f4\cgrid {\par }\pard \keepn\widctlpar\adjustright {\b GS/OS Calls Supported\par \par }\pard \widctlpar\adjustright {The following lists all the GS/OS system calls supported by the MS-DOS FST.  Those in bold type perform the indicated function, those in plain type will always return an error.\par }\pard \widctlpar\tx720\tx2160\tx3600\tx5040\adjustright {\par }\pard \li360\ri2520\widctlpar\brdrt\brdrs\brdrw15 \brdrb\brdrs\brdrw15 \tx1440\tx3600\tx4680\adjustright {Call #\tab Name\tab Call #\tab Name\par }\pard \li360\ri2520\widctlpar\tx1440\tx3600\tx4680\adjustright {$01\tab Create\tab }{\b $14\tab Close}{\par $02\tab Destroy\tab }{\b $15\tab Flush\par }{$04\tab ChangePath\tab }{\b $16\tab SetMark}{\par $05\tab SetFileInfo\tab }{\b $17\tab GetMark\par $06\tab GetFileInfo}{\tab $18\tab SetEOF\par }{\b $08\tab Volume}{\tab }{\b $19\tab GetEOF}{\par $0B\tab ClearBackupBit\tab }{\b $1C\tab GetDirEntry\par $10\tab Open}{\tab }{\b $20\tab GetDevNum}{\par }{\b $12\tab Read}{\tab $24\tab Format\par $13\tab Write\tab $25\tab EraseDisk\par }{\b \tab \tab $33\tab FSTSpecific}{\par }\pard \widctlpar\adjustright {\par }\pard \keepn\widctlpar\adjustright {\b File Attributes\par }{\par }\pard \widctlpar\tx1080\tx2160\adjustright {The MS-DOS file system stores a file attribute byte in the directory entry for each file.  This is similar to the GS/OS access attributes.  The FST translates the file attributes as follows:\par \par }\pard \fi-2520\li2880\keepn\widctlpar\brdrt\brdrs\brdrw15 \brdrb\brdrs\brdrw15 \adjustright {File Attribute\tab GS/OS Interpretation\par }\pard \fi-2520\li2880\keepn\widctlpar\adjustright {Archive bit set\tab Bit 5 (the \ldblquote backup\rdblquote  bit) of the access attributes will be set.\par Subdirectory bit set\tab File type will be returned as $000F.\par Volume Label bit set\tab Used internally by the FST to apply a volume name to the disk.\par System File bit set\tab No special action.\par Hidden File bit set\tab Bit 2 (the \ldblquote Invisible\rdblquote  bit) of the access attributes will be set.\par }\pard \fi-2520\li2880\widctlpar\adjustright {Read-Only File bit set\tab Bits 7, 1, and 0 (the Delete, Write-enable, and Rename) of the access attributes will be cleared (i.e., the file is \ldblquote locked\rdblquote ).\par }\pard \widctlpar\tx1080\tx2160\adjustright {\b\fs28 \par }\pard\plain \s1\keepn\widctlpar\outlinelevel0\adjustright \b\f5\ul\cgrid {\f4\ulnone File Types \par }\pard\plain \keepn\widctlpar\tx1080\tx2160\adjustright \f4\cgrid {\b \par }\pard \widctlpar\tx1080\tx2160\adjustright {MS-DOS does not provide a file typing mechanism.  This is potentially very limiting since most applications select a particular file type as a filter when calling the standard file tools.  Therefore, files from an MS-DOS disk would never be selectable.\par \par The MS-DOS FST provides a partial solution to the problem.  The FST searches a translation table for a matching file name extension.  If it finds a match , it returns the associated file type and auxiliary type to the caller.  For instance, the file \ldblquote ABC.TXT\rdblquote  will normally be assigned a file type $04 (text) because of the suffix \ldblquote .TXT\rdblquote .  The MS-DOS FST maintains a table of suffixes and their associated file types and auxiliary types.  The }{\f6 FSTSpecific}{ calls allow for modification of this table.  The default table contains the following entries:\par \par }\pard \li360\ri1800\keepn\widctlpar\brdrt\brdrs\brdrw15 \brdrb\brdrs\brdrw15 \tx1800\tx3060\tx4320\adjustright {Extension\tab File Type\tab Auxtype\tab Description\par }\pard \li360\ri1800\keepn\widctlpar\tx1800\tx3060\tx4320\adjustright {.TXT\tab $04\tab $0000\tab text file\par .BAT\tab $04\tab $0000\tab batch file\par .BIN\tab $06\tab $0000\tab binary file\par .ASC\tab $04\tab $0000\tab ASCII text file\par .C\tab $04\tab $0000\tab C language source code\par .H\tab $04\tab $0000\tab C header file\par .PAS\tab $04\tab $0000\tab Pascal language source code\par .ASM\tab $04\tab $0000\tab assembly language source code\par .LST\tab $04\tab $0000\tab listing file\par .COB\tab $04\tab $0000\tab COBOL language source code\par .FOR\tab $04\tab $0000\tab FORTRAN language source code\par .DOC\tab $04\tab $0000\tab documentation file\par .SRC\tab $04\tab $0000\tab source code file\par }\pard \li360\ri1800\widctlpar\tx1800\tx3060\tx4320\adjustright {.GIF\tab $C0\tab $8006\tab Graphics Interchange Format file\par }\pard \fi-720\li720\widctlpar\adjustright {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\f5\cgrid {\f4 FSTSpecific ($33)\par }\pard\plain \fi-3240\li3240\keepn\widctlpar\tx1260\tx3240\tx4500\adjustright \f4\cgrid {\par }\pard \widctlpar\tx1260\tx2790\tx4500\adjustright {This call controls file type mapping by the MS-DOS FST.  It is unique in that it uses a command number as one of its parameters and is actually four different calls.\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\f4\cgrid {\b0 Map_Enable\par }\pard\plain \fi-3240\li3240\keepn\widctlpar\tx1260\tx3240\tx4500\adjustright \f4\cgrid {\par }\pard \widctlpar\adjustright {Enables or disables file type mapping.  By default, mapping is enabled.  The parameter block is as follows:\par \par }\trowd \trgaph50\trleft310 \clvertalt\cltxlrtb \cellx850\clvertalt\cltxlrtb \cellx3010\clvertalt\cltxlrtb \cellx9410\pard \keep\widctlpar\intbl\adjustright {\fs20 $00\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 pCount}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash Input value; must be $0003}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\trowd \trgaph50\trleft310 \clvertalt\cltxlrtb \cellx850\clvertalt\cltxlrtb \cellx3010\clvertalt\cltxlrtb \cellx9410\pard \keep\widctlpar\intbl\adjustright {\fs20 $02\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 file_sys_id}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash Input value; $000A (MS-DOS file system ID)}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\pard \keep\widctlpar\intbl\adjustright {\fs20 $04\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 command_num}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash Input value; $0000 (Map_Enable)}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\pard \keep\widctlpar\intbl\adjustright {\fs20 $06\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 enable}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash Input value; $0000 to disable, $0001 to enable}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\trowd \trleft900 \clvertalt\cltxlrtb \cellx2700\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \cell }\pard \widctlpar\intbl\adjustright {\fs20 \row }\pard \widctlpar\tx1260\tx2790\tx4500\adjustright {\par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\f4\cgrid {\b0 Get_Map_Size\par }\pard\plain \fi-3240\li3240\keepn\widctlpar\tx1260\tx3240\tx4500\adjustright \f4\cgrid {\par }\pard \widctlpar\adjustright {Returns the size of the current map in bytes.  The parameter block is as follows:\par \par }\trowd \trgaph50\trleft310 \clvertalt\cltxlrtb \cellx850\clvertalt\cltxlrtb \cellx3010\clvertalt\cltxlrtb \cellx9410\pard \keep\widctlpar\intbl\adjustright {\fs20 $00\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 pCount}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash Input value; must be $0003}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\trowd \trgaph50\trleft310 \clvertalt\cltxlrtb \cellx850\clvertalt\cltxlrtb \cellx3010\clvertalt\cltxlrtb \cellx9410\pard \keep\widctlpar\intbl\adjustright {\fs20 $02\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 file_sys_id}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash Input value; $000A (MS-DOS file system ID)}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\pard \keep\widctlpar\intbl\adjustright {\fs20 $04\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 command_num}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash Input value; $0001 (Get_Map_Size)}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\pard \keep\widctlpar\intbl\adjustright {\fs20 $06\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 map_size}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash Output value; size of the current map table in bytes.}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\trowd \trleft900 \clvertalt\cltxlrtb \cellx2700\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \cell }\pard \widctlpar\intbl\adjustright {\fs20 \row }\pard \widctlpar\tx1260\tx2790\tx4500\adjustright {\par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\f4\cgrid {\b0 Get_Map_Table\par }\pard\plain \fi-3240\li3240\keepn\widctlpar\tx1260\tx3240\tx4500\adjustright \f4\cgrid {\par }\pard \keepn\widctlpar\adjustright {Returns the current map.  The parameter block is as follows:\par \par }\trowd \trgaph50\trleft310 \clvertalt\cltxlrtb \cellx850\clvertalt\cltxlrtb \cellx3010\clvertalt\cltxlrtb \cellx9410\pard \keep\keepn\widctlpar\intbl\adjustright {\fs20 $00\cell }\pard \keep\keepn\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 pCount}{\fs20 \tab \cell }\pard \fi-900\li900\keep\keepn\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash Input value; must be $0003}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\trowd \trgaph50\trleft310 \clvertalt\cltxlrtb \cellx850\clvertalt\cltxlrtb \cellx3010\clvertalt\cltxlrtb \cellx9410\pard \keep\keepn\widctlpar\intbl\adjustright {\fs20 $02\cell }\pard \keep\keepn\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 file_sys_id}{\fs20 \tab \cell }\pard \fi-900\li900\keep\keepn\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash Input value; $000A (MS-DOS file system ID)}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\pard \keep\keepn\widctlpar\intbl\adjustright {\fs20 $04\cell }\pard \keep\keepn\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 command_num}{\fs20 \tab \cell }\pard \fi-900\li900\keep\keepn\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash Input value; $0002 (Get_Map_Table)}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\pard \keep\keepn\widctlpar\intbl\adjustright {\fs20 $06\cell }\pard \keep\keepn\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs10 \par }{\fs20 \emdash \tab }{\i\fs20 buffer_ptr}{\fs20 \tab \emdash \par }{\fs10 \cell }\pard \fi-900\li900\keep\keepn\widctlpar\intbl\adjustright {\b\fs10 \par }{\b\fs20 Long}{\fs20 \emdash Input value; Points to a memory area large enough to hold the map.}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\trowd \trleft900 \clvertalt\cltxlrtb \cellx2700\pard \keep\keepn\widctlpar\intbl\brdrt\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \cell }\pard \widctlpar\intbl\adjustright {\fs20 \row }\pard \widctlpar\tx1260\tx2790\tx4500\adjustright {\par }\pard \fi-1800\li1800\ri1080\widctlpar\tx360\adjustright {\f29\fs22 \u-3981\'73}{\b \tab Warning}{\tab }{\f6 Get_Map_Table}{ assumes the memory area pointed to by }{\f6 buffer_ptr}{ is large enough to hold the map.  If it isn\rquote t, bad things can happen.\~\~}{\f29\fs14 \u-3981\'73}{\b \par }\pard \widctlpar\tx1260\tx2790\tx4500\adjustright {\par \par }\pard\plain \s3\keepn\widctlpar\outlinelevel2\adjustright \b\f4\cgrid {\b0 Set_Map_Table\par }\pard\plain \fi-3240\li3240\keepn\widctlpar\tx1260\tx3240\tx4500\adjustright \f4\cgrid {\par }\pard \widctlpar\adjustright {Changes the map.  As long as there is space in memory for the new table, it will replace the old one.  If there is not enough space, an }{\f6 out_of_memory}{ error will be returned and the original table will remain in effect.  No validity checking is done on the table.\par \par The parameter block is as follows:\par \par }\trowd \trgaph50\trleft310 \clvertalt\cltxlrtb \cellx850\clvertalt\cltxlrtb \cellx3010\clvertalt\cltxlrtb \cellx9410\pard \keep\widctlpar\intbl\adjustright {\fs20 $00\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 pCount}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash Input value; must be $0003}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\trowd \trgaph50\trleft310 \clvertalt\cltxlrtb \cellx850\clvertalt\cltxlrtb \cellx3010\clvertalt\cltxlrtb \cellx9410\pard \keep\widctlpar\intbl\adjustright {\fs20 $02\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 file_sys_id}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash Input value; $000A (MS-DOS file system ID)}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\pard \keep\widctlpar\intbl\adjustright {\fs20 $04\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 command_num}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash Input value; $0003 (Set_Map_Table)}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\pard \keep\widctlpar\intbl\adjustright {\fs20 $06\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs10 \par }{\fs20 \emdash \tab }{\i\fs20 map_ptr}{\fs20 \tab \emdash \par }{\fs10 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs10 \par }{\b\fs20 Long}{\fs20 \emdash Input value; Points to the new map.}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\trowd \trleft900 \clvertalt\cltxlrtb \cellx2700\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \cell }\pard \widctlpar\intbl\adjustright {\fs20 \row }\pard \widctlpar\tx1260\tx2790\tx4500\adjustright {\par }\pard \widctlpar\tx1440\tx2520\tx5040\adjustright {\b Errors}{\tab $04\tab }{\f6 invalidPcount}{\tab parameter count out of range\par \tab $53\tab }{\f6 paramRangeError}{\tab invalid parameter\par \tab $54\tab }{\f6 outOfMem}{\tab out of memory\par }\pard \fi-3240\li3240\widctlpar\tx1260\tx3240\tx3420\tx4500\adjustright {\par \tab \par }\pard \widctlpar\tx270\tx2160\tx2340\tx2520\tx4500\adjustright {The format of a map table is as follows:\par \par }\trowd \trgaph50\trleft310 \clvertalt\cltxlrtb \cellx850\clvertalt\cltxlrtb \cellx3010\clvertalt\cltxlrtb \cellx9410\pard \keep\widctlpar\intbl\adjustright {\fs20 $00\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 map_size}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash Length of the table, including the terminator}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\trowd \trgaph50\trleft310 \clvertalt\cltxlrtb \cellx850\clvertalt\cltxlrtb \cellx3010\clvertalt\cltxlrtb \cellx9410\pard \keep\widctlpar\intbl\adjustright {\fs20 $02\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs10 \par }\pard \keep\widctlpar\intbl\brdrl\brdrdot\brdrw15 \brdrr\brdrdot\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 Record}{\fs20 \tab \par }\pard \keep\widctlpar\intbl\brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs10 \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs10 \par }{\b\fs20 xx bytes}{\fs20 \emdash Map records (use as many as needed)}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\pard \keep\widctlpar\intbl\adjustright {\fs20 $yy\cell }\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \brdrl\brdrs\brdrw15 \brdrr\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \tab }{\i\fs20 terminator}{\fs20 \tab \cell }\pard \fi-900\li900\keep\widctlpar\intbl\adjustright {\b\fs20 Word}{\fs20 \emdash Use zero}{\b\fs20 \cell }\pard \widctlpar\intbl\adjustright {\b\fs20 \row }\trowd \trleft900 \clvertalt\cltxlrtb \cellx2700\pard \keep\widctlpar\intbl\brdrt\brdrs\brdrw15 \tqc\tx900\tqr\tx1800\adjustright {\fs20 \cell }\pard \widctlpar\intbl\adjustright {\fs20 \row }\pard \widctlpar\tx270\tx2160\tx2340\tx2520\tx4500\adjustright {\par }\pard \widctlpar\adjustright {Map records consist of a text string followed by a zero byte followed by a file type byte and an auxiliary file type word.  The text string can be any length and can include any legal characters for an MS-DOS file name (text must be upper case, for example).\par \par }\pard \keepn\widctlpar\brdrt\brdrs\brdrw15 \adjustright {\b ProDOS FST}{\pard\plain \keepn\widctlpar\brdrt\brdrs\brdrw15 \adjustright \b\v\f4\cgrid {\xe {\b\v ProDOS FST}}}{\pard\plain \keepn\widctlpar\brdrt\brdrs\brdrw15 \adjustright \b\v\f4\cgrid {\tc {\b\v ProDOS FST\tcl3}}}{\b \par }\pard \fi-720\li720\keepn\widctlpar\adjustright {\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab Fixed a problem where }{\f6 Read}{\f4  did not work correctly when multiple newline characters were in effect.  Each time it read into a new block of data it was forgetting about one more character from the end of the newline list, for the remainder of the }{\f6 Read}{\f4  call.\par }\pard\plain \widctlpar\adjustright \f4\cgrid {\sect }\sectd \sbkodd\linex0\colsx140\endnhere\sectdefaultcl {\footerr \pard\plain \s27\widctlpar\tqr\tx8280\tqr\tx9360\adjustright \f4\cgrid {\tab Chapter 3  Control Panels\tab }{\field{\*\fldinst { PAGE  }}{\fldrslt {\lang1024 43}}}{\par }}\pard\plain \widctlpar\adjustright \f4\cgrid {\fs36 Chapter 3  }{\b\fs36 Control Panels}{\pard\plain \widctlpar\adjustright \b\v\f4\fs36\cgrid {\xe {\b\v\fs36 Control Panels}}}{\pard\plain \widctlpar\adjustright \b\v\f4\fs36\cgrid {\tc {\b\v\fs36 }{\v\fs36 Chapter 3  .i.}{\b\v\fs36 Control Panels}{\v\fs36 \tcl1}}}{\b\fs36 \par }\pard \fi-720\li720\widctlpar\tx1440\tx2160\tx2880\adjustright {\par }\pard\plain \s46\widctlpar\brdrt\brdrs\brdrw30 \adjustright \f36\cgrid {\b\f4\fs28 Control Panels NDA 2.1}{\pard\plain \s46\widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\f4\fs28 Control Panels NDA 2.1\tcl2}}}{\b\f4\fs28 \par }\pard \s46\widctlpar\adjustright {\f4 \par }\pard \s46\fi-360\li360\widctlpar\adjustright {\f4 \bullet \tab Fixed the }{\f6 cpOpenCDev}{\f4  request to work reliably.  In 6.0, it did not always work.  (The handling of }{\f6 finderSaysBeforeOpen}{\f4  has always worked fine.)\par \par }\pard\plain \fi-1800\li1800\ri1080\widctlpar\tx360\adjustright \f4\cgrid {\f20 }{\b \tab Note}{\tab When you send }{\f6 finderSaysBeforeOpen}{ (or }{\f6 cpOpenCDev}{), you should always pass a fully-expanded pathname (as the Finder does).\~\~}{\f20\fs20 }{\b \par }\pard \fi-720\li720\widctlpar\tx1440\tx2160\tx2880\adjustright {\par }\pard\plain \s46\widctlpar\brdrt\brdrs\brdrw30 \adjustright \f36\cgrid {\b\f4\fs28 Sound Control Panel}{\pard\plain \s46\widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\xe {\b\v\f4\fs28 Sound Control Panel}}}{\pard\plain \s46\widctlpar\brdrt\brdrs\brdrw30 \adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\f4\fs28 Sound Control Panel\tcl2}}}{\b\f4\fs28 \par }\pard \s46\widctlpar\adjustright {\f4 \par The Sound control panel accepts a new request code, }{\f6 srqConvertRelPitch}{\f4  ($8200), which converts a }{\f6 relPitch}{\f4  value into a }{\f6 freqOffset}{\f4  (suitable for use in a }{\f6 FFStartSound}{\f4  parameter block).\par \par The request should be directed to the target string \ldblquote }{\f6 Apple~SoundCP~}{\f4 \rdblquote .\par \par Put the }{\f6 relPitch}{\f4  value into the low word of }{\f6 dataIn}{\f4  (the high word is reserved and should be zero).  After the }{\f6 SendRequest}{\f4 , the resulting }{\f6 freqOffset}{\f4  word is in your four-byte }{\f6 dataOut}{\f4  buffer at offset +002.\par }\pard\plain \widctlpar\adjustright \f4\cgrid {\sect }\sectd \sbkodd\linex0\colsx140\endnhere\sectdefaultcl {\footerr \pard\plain \s27\widctlpar\tqr\tx8280\tqr\tx9360\adjustright \f4\cgrid {\tab Chapter 4  Finder 6.0.1\tab }{\field{\*\fldinst { PAGE  }}{\fldrslt {\lang1024 45}}}{\par }}\pard\plain \widctlpar\adjustright \f4\cgrid {\fs36 Chapter 4  }{\b\fs36 Finder 6.0.1}{\pard\plain \widctlpar\adjustright \b\v\f4\fs36\cgrid {\tc {\b\v\fs36 }{\v\fs36 Chapter 4  }{\b\v\fs36 Finder 6.0.1}{\v\fs36 \tcl1}}}{\b\fs36 \par }\pard \widctlpar\brdrb\brdrs\brdrw30 \tx900\adjustright {\par }\pard \widctlpar\adjustright {\b\fs28 Clarifications}{\pard\plain \widctlpar\adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 Clarifications\tcl2}}}{\b\fs28 \par }\pard \fi-720\li720\widctlpar\adjustright {\par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab The description of }{\f6 askFinderAreYouThere}{ (on page 388 of }{\i Programmer\rquote s Reference To System 6.0}{) is incorrect.  If the Finder}{\pard\plain \fi-360\li360\widctlpar\adjustright \v\f4\cgrid {\xe {\v }{\v Finder}}}{ is present, }{\f6 SendRequest}{ will return no error, and }{\f6 finderResult}{ field of }{\f6 dataOut}{ will always be $0000.  If the Finder is not present, }{\f6 SendRequest}{ returns error $0120, }{\f6 reqNotAccepted}{, and }{\f6 finderResult}{ is undefined (because the Finder was not around to return a value).\par \par \bullet \tab The Finder now loads Finder Extensions from the @:FinderExtras folder.  The @: prefix is not necessarily the same folder that the Finder is in:  When a user boots from an AppleShare server, the Finder Extensions come from the user\rquote s User folder on the server.\par }\pard \widctlpar\brdrb\brdrs\brdrw30 \tx900\adjustright {\par }\pard \keepn\widctlpar\adjustright {\b\fs28 New Features of the Finder}{\pard\plain \keepn\widctlpar\adjustright \b\v\f4\fs28\cgrid {\tc {\b\v\fs28 New Features of the Finder\tcl2}}}{\b\fs28 \par }\pard\plain \s46\keepn\widctlpar\adjustright \f36\cgrid {\f4 \par }\pard \s46\fi-360\li360\widctlpar\adjustright {\f4 \bullet \tab Finder accepts the }{\f6 srqQuit}{\f4  request, handling it just like a }{\f6 tellFinderShutDown}{\f4  with a selector of }{\f6 kQuit}{\f4 .\par }{\b\f4 \par }{\f4 \bullet \tab Implemented the }{\f6 geekPrefs}{\f4  option for Shut Down default.  Set the low two bits of the X2 word to 0, 1, or 2.  (This word was semi-documented with 6.0, but it didn\rquote t do anything.)\par }\pard \s46\widctlpar\adjustright {\f4 \par }\pard \s46\fi-720\li720\keepn\widctlpar\adjustright {\b\f4 Icon Matching changes\par }{\f4 \par }\pard \s46\fi-360\li360\widctlpar\adjustright {\f4 \bullet \tab Fixed the }{\f6 oneDoc}{\f4  match types }{\f6 matchCreateDateTime}{\f4  and }{\f6 matchModDateTime}{\f4 .  They did not work in 6.0.}{\b\f4 \par }{\f4 \par \bullet \tab When matching an icon by filename, the case of the string in the Icon file or in the }{\f6 rBundle}{\f4  resource no longer matters.  Previously, a string with a leading wildcard (like \ldblquote *PAINT\rdblquote ) would only work if all letters were uppercase, regardless of the case of any actual files being matched against.\par \par \bullet \tab When matching an icon by filename and using a leading \ldblquote *\rdblquote , the \ldblquote *\rdblquote  can now match zero characters (it works like 5.0.4 again).  In 6.0, a leading wildcard accidentally required at least one character to match.\par }\pard\plain \fi-720\li720\widctlpar\tx1440\tx2160\tx2880\adjustright \f4\cgrid {\par }\pard \fi-720\li720\keepn\widctlpar\tx1440\tx2160\tx2880\adjustright {\b Finder Extension Changes\par }\pard \fi-720\li720\keepn\widctlpar\adjustright {\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab When Finder sends out multiple }{\f6 finderSaysBeforeOpen}{\f4  requests (when several icons are opened at once), the modifiers are now correct for all of the requests, not just the first one.  In 6.0, the modifiers were accidentally zero for all requests other than the first.\par \par \bullet \tab }{\f6 tellFinderGetSelectedIcons}{\f4  (extended) now returns icon heights and widths. This was broken in 6.0 (the work around in }{\i\f4 Programmer}{\i \rquote s }{\i\f4 Reference For System 6.0 }{\f4 sees that the Finder version is not 6.0 and automatically does nothing).\par }\pard\plain \fi-360\li360\widctlpar\adjustright \f4\cgrid {\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab Finder no longer forgets what menu title to unhighlight if an Extras menu handler calls }{\f6 tellFinderMItemSelected}{\f4  (even with no-highlight).\par }{\b\f4 \par }{\f4 \bullet \tab Finder now sends a }{\f6 finderSaysBeforeOpen}{\f4  any time it launches an application. This means that you can now properly trap the Finder any time it was about to quit to another application.  (Finder 6.0 neglected to send a }{\f6 finderSaysBeforeOpen}{\f4  when the user chose the application using Standard File.)\par }\pard\plain \fi-360\li360\widctlpar\adjustright \f4\cgrid {\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab Added a tick count parameter (long) to }{\f6 finderSaysKeyHit}{\f4 .  The parameter count is now three.  The third parameter tells you the system tick count at the time the key was pressed.\par }\pard\plain \fi-360\li360\widctlpar\adjustright \f4\cgrid {\tab \par \bullet \tab }{\f6 tellFinderOpenWindow}{ had a bad exit path if }{\f6 ExpandPath}{ returned an error.  Now it works even if the pathname you pass in causes an error from }{\f6 ExpandPath}{.\par }\pard \fi-360\li360\widctlpar\tx1440\tx2160\tx2880\adjustright {\par }\pard \fi-360\li360\widctlpar\adjustright {\bullet \tab The parameter count for }{\f6 finderSaysBeforeOpen}{ and }{\f6 finderSaysOpenFailed}{ is now 7.  (It was accidentally only 6 in 6.0.  Oops.  But all the parameters were there anyway.)\par \par \bullet \tab For your convenience, }{\f6 finderSaysIdle}{ now passes the idle ticks (as would be returned from }{\f6 askFinderIdleHowLong}{) as }{\f6 dataIn}{.\par \par \bullet \tab You can now set bit 31 of }{\f6 dataIn}{ on a }{\f6 tellFinderSetSelectedIcons}{ call.  This tells the Finder to deselect all selected icons before selecting the ones specified.\par \par \bullet \tab }{\f6 tellFinderSpecialPreferences}{ now returns a valid }{\f6 finderResult}{ ($0000).\par \par \bullet \tab }{\f6 tellFinderRemoveFromExtras}{ validates the menu item number and returns error }{\f6 fErrFailed}{ if it is invalid.  (If you make the mistake of passing }{\f6 itemID}{ 0 to Finder\~6.0, it happily removes the first (remaining) item from the Apple menu!)\par }\pard \fi-360\li360\widctlpar\tx360\adjustright {\par }\pard\plain \s46\fi-360\li360\widctlpar\adjustright \f36\cgrid {\f4 \bullet \tab Fixed }{\f6 tellFinderAddBundle}{\f4  so that passing a zero to grab the first available }{\f6 rBundle}{\f4  actually works (this case always failed with an error in 6.0).\par }\pard\plain \widctlpar\adjustright \f4\cgrid {\sect }\sectd \sbkodd\linex0\colsx140\endnhere\sectdefaultcl {\footerr \pard\plain \s27\widctlpar\tqr\tx8280\tqr\tx9360\adjustright \f4\cgrid {\tab Chapter 5  Battery RAM Update\tab }{\field{\*\fldinst { PAGE  }}{\fldrslt {\lang1024 47}}}{\par }}\pard\plain \widctlpar\adjustright \f4\cgrid {\fs36 Chapter 5  }{\b\fs36 Battery RAM Update}{\pard\plain \widctlpar\adjustright \b\v\f4\fs36\cgrid {\tc {\b\v\fs36 }{\v\fs36 Chapter 5  }{\b\v\fs36 Battery RAM Update}{\v\fs36 \tcl1}}}{\b\fs36 \par }\pard \widctlpar\tx360\adjustright {\par }\pard \widctlpar\adjustright {Two Battery RAM}{\pard\plain \widctlpar\adjustright \v\f4\cgrid {\xe {\v }{\v Battery RAM}}}{ locations are defined for use with hierarchical menus.  (The system does }{\ul not}{ provide support for hierarchical menus, but it defines these Battery RAM locations for consistency among applications that do.)\par \par }\pard \fi-540\li540\widctlpar\adjustright {$65\tab Drag delay for hierarchical menus (number of ticks you can be out of the menu while moving diagonally before it \ldblquote gives up\rdblquote  on you).\par \par $66\tab Delay in ticks until a hierarchical menu pops up.\par \sect }\sectd \sbkodd\linex0\cols3\colsx140\endnhere\sectdefaultcl {\footerr \pard\plain \s27\widctlpar\tqr\tx8280\tqr\tx9360\adjustright \f4\cgrid {\tab Index\tab }{\field{\*\fldinst { PAGE  }}{\fldrslt {\lang1024 49}}}{\par }}\pard\plain \fi-540\li540\widctlpar\adjustright \f4\cgrid {\pard\plain \fi-540\li540\widctlpar\adjustright \v\f4\cgrid {\tc {\v }{\v Index\tcl1}}}{\v \par }\pard\plain \s25\keepn\widctlpar\adjustright \f4\cgrid {\field{\*\fldinst {\b  INDEX \\r  }}{\fldrslt {\b A\par }{\par }\pard \s25\widctlpar\adjustright {\f6 AddResource}{ 24\par }{\f6 AlertMessage}{ 14\par }{\f6 AlertWindow}{ 33\par AppleCD 300 Drive 37\par AppleDisk 3.5 Driver 38\par AppleShare FST 38\par \par }\pard \s25\keepn\widctlpar\adjustright {\b B\par }{\par }\pard \s25\widctlpar\adjustright {Battery RAM 47\par \par }\pard \s25\keepn\widctlpar\adjustright {\b C\par }{\par }\pard \s25\widctlpar\adjustright {CDA 6\par Classic Desk Accessories 6\par }{\f6 CloseResourceFile}{ 24\par }{\f6 CompactResourceFile}{ 25\par }{\f6 CompareStrings}{ 10\par Console Driver 38\par Control Manager 1\par Control Panels 43\par \par }\pard \s25\keepn\widctlpar\adjustright {\b D\par }{\par }\pard \s25\widctlpar\adjustright {\f6 DControl}{ 37\par }{\f6 DeskShutDown}{ 6\par Device Dispatcher 37\par }{\f6 DoModalWindow}{ 33\par DOS 3.3 FST 38\par DoSysPrefs 16\par }{\f6 DrawStringWidth}{ 19\par }{\f6 DStatus}{ 37\par \par }\pard \s25\keepn\widctlpar\adjustright {\b E\par }{\par }\pard \s25\widctlpar\adjustright {\f6 ErrorWindow}{ 33\par ERS v\par \par }\pard \s25\keepn\widctlpar\adjustright {\b F\par }{\par }\pard \s25\widctlpar\adjustright {\f6 FindCursorCtl}{ 34\par Finder 45\par \par }\pard \s25\keepn\widctlpar\adjustright {\b G\par }{\par }\pard \s25\widctlpar\adjustright {\f6 GetCtlValueByID}{ 2\par }{\f6 GetPixel}{ 17\par }\pard \s25\fi-180\li180\widctlpar\adjustright {\f6 GetSCSITargetPriority}{ 37\par }\pard \s25\widctlpar\adjustright {\f6 GetSysIcon}{ 18\par GS/OS 37\par \par }\pard \s25\keepn\widctlpar\adjustright {\b H\par }{\par }\pard \s25\widctlpar\adjustright {HFS FST 38\par }{\f6 HiliteCtlByID}{ 3\par HS.FST 38\par \par }\pard \s25\keepn\widctlpar\adjustright {\b I\par }{\par }\pard \s25\widctlpar\adjustright {Icon Button Controls 1\par }{\f6 Int2Dec}{ 7\par Integer Math Tool Set 7\par }{\f6 InvalOneCtlByID}{ 4\par \par }\pard \s25\keepn\widctlpar\adjustright {\b L\par }{\par }\pard \s25\widctlpar\adjustright {\f6 LEClassifyKey}{ 9\par }{\f6 LEKey}{ 9\par Line Edit Controls 1, 8\par LineEdit Tool Set 8\par List Manager 10\par ListKey 10\par }{\f6 Long2Dec}{ 7\par \par }\pard \s25\keepn\widctlpar\adjustright {\b M\par }{\par }\pard \s25\widctlpar\adjustright {\f6 MarkResourceChange}{ 24\par }{\f6 MCGetStatus}{ 11\par }{\f6 MCStop}{ 11\par Media Control Tool Set 11\par Menu Manager 12\par Miscellaneous Tool Set 13\par MS-DOS FST 39\par \par }\pard \s25\keepn\widctlpar\adjustright {\b N\par }{\par }\pard \s25\widctlpar\adjustright {NDA 6, 32\par New Desk Accessories 6, 32\par \par }\pard \s25\keepn\widctlpar\adjustright {\b O\par }{\par }\pard \s25\widctlpar\adjustright {\f6 OpenNDA}{ 6\par }{\f6 OpenResourceFile}{ 24\par }\pard \s25\fi-180\li180\widctlpar\adjustright {\f6 OpenResourceFileByID}{ 26\par }\pard \s25\widctlpar\adjustright {\par }\pard \s25\keepn\widctlpar\adjustright {\b P\par }{\par }\pard \s25\widctlpar\adjustright {password 8\par Pop-up menu control 12\par Pop-Up Menu Controls 1\par ProDOS FST 41\par }\pard \s25\keepn\widctlpar\adjustright {\b Q\par }{\par }\pard \s25\widctlpar\adjustright {\f6 QDShutDown}{ 17\par }{\f6 QDVersion}{ 17\par QuickDraw II 17\par QuickDraw II Auxiliary 18\par \par }\pard \s25\keepn\widctlpar\adjustright {\b R\par }{\par }\pard \s25\widctlpar\adjustright {\f6 rCodeResource}{ 24\par }{\f6 RemoveResource}{ 24\par Resource Manager 24\par }{\f6 RestoreColorTable}{ 21\par }{\f6 RMFindNamedResource}{ 24\par }{\f6 RMLoadNamedResource}{ 24\par }{\f6 RMSetResourceName}{ 24\par \par }\pard \s25\keepn\widctlpar\adjustright {\b S\par }{\par }\pard \s25\widctlpar\adjustright {Scroll Bar Controls 1\par SCSI CD Driver 37\par SCSI HD Driver 37\par SCSI Scanner Driver 37\par SCSI Tape Driver 37\par }{\f6 SetCtlValueByID}{ 5\par }{\f6 SFGetFile}{ 30\par }{\f6 SFReScan}{ 30\par }{\f6 ShowBootInfo}{ 13\par }{\f6 ShowClipboard}{ 28\par }{\f6 ShutDownTools}{ 32\par }{\f6 SortList}{ 10\par }{\f6 SortList2}{ 10\par Sound Control Panel 43\par }\pard \s25\fi-180\li180\widctlpar\adjustright {Standard File Operations Tool Set 30\par }\pard \s25\widctlpar\adjustright {StartUpTools 32\par Static Text Controls 1\par }{\f6 SysBeep2}{ 13\par }{\f6 SysFailMgr}{ 13\par System Loader 37\par \par }\pard \s25\keepn\widctlpar\adjustright {\b T\par }{\par }\pard \s25\widctlpar\adjustright {\f6 TaskMaster}{ 33\par }{\f6 TEPaintText}{ 31\par }{\f6 TEStartUp}{ 31\par TextEdit Tool Set 31\par Thermometer Controls 1\par Tool Locator 32\par \par }\pard \s25\keepn\widctlpar\adjustright {\b U\par }{\par }\pard \s25\widctlpar\adjustright {\f6 UpdateWindow}{ 35\par }{\f6 UseColorTable}{ 22\par \par }\pard \s25\keepn\widctlpar\adjustright {\b W\par }{\par }\pard \s25\widctlpar\adjustright {Window Manager 33\par }{\f6 WriteResource}{ 24}}}\pard\plain \s25\widctlpar\adjustright \f4\cgrid {\par }}