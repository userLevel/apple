{\rtf1\mac\ansicpg10000\uc1 \deff0\deflang1033\deflangfe1033{\upr{\fonttbl{\f0\fnil\fcharset256\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fnil\fcharset256\fprq2{\*\panose 020b0604020202020204}Arial;}{\f2\fnil\fcharset256\fprq2{\*\panose 02070309020205020404}Courier New;}{\f3\fnil\fcharset2\fprq2{\*\panose 02000500000000000000}Symbol;}{\f4\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Times;}{\f5\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Helvetica;}{\f6\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Courier;}{\f7\fnil\fcharset256\fprq2{\*\panose 020b0503030404040204}Geneva;}{\f8\froman\fcharset77\fprq2{\*\panose 00000000000000000000}Tms Rmn;}{\f9\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}Helv;}{\f10\froman\fcharset77\fprq2{\*\panose 00000000000000000000}MS Serif;}{\f11\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\fnil\fcharset256\fprq2{\*\panose 02020502060305060204}New York;}{\f13\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}System;}{\f14\fnil\fcharset2\fprq2{\*\panose 05020102010804080708}Wingdings;}{\f15\froman\fcharset256\fprq1{\*\panose 00000000000000000000}FE Roman font face;}{\f16\fmodern\fcharset256\fprq1{\*\panose 00000000000000000000}FE Modern font face;}{\f17\froman\fcharset256\fprq1{\*\panose 00000000000000000000}FE Truetype Roman font face;}{\f18\fmodern\fcharset256\fprq1{\*\panose 00000000000000000000}FE Truetype Modern font face;}{\f19\froman\fcharset77\fprq2{\*\panose 00000000000000000000}Century;}{\f20\fnil\fcharset256\fprq2{\*\panose 020b0a06030101010103}Abadi MT Condensed Extra Bold;}{\f21\fnil\fcharset256\fprq2{\*\panose 020b0306030101010103}Abadi MT Condensed Light;}{\f22\fnil\fcharset256\fprq2{\*\panose 020b0509000000000004}Andale Mono;}{\f23\fnil\fcharset256\fprq2{\*\panose 05000000000000000000}Animals 1;}{\f24\fnil\fcharset256\fprq2{\*\panose 020b0a04020102020204}Arial Black;}{\f25\fnil\fcharset256\fprq2{\*\panose 020b0506020202030204}Arial Narrow;}{\f26\fnil\fcharset256\fprq2{\*\panose 020f0704030504030204}Arial Rounded MT Bold;}{\f27\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde Bk BT;}{\f28\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde BkOb BT;}{\f29\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}AvantGarde Dm BT;}{\f30\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}AvantGarde DmOb BT;}{\f31\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde Md BT;}{\f32\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde MdOb BT;}{\f33\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}Balloons;}{\f34\fnil\fcharset256\fprq2{\*\panose 02020602080505020303}Baskerville Old Face;}{\f35\fnil\fcharset256\fprq2{\*\panose 04030905020b02020c02}Bauhaus 93;}{\f36\fnil\fcharset256\fprq2{\*\panose 02020503060305020303}Bell MT;}{\f37\fnil\fcharset256\fprq2{\*\panose 02050806060905020404}Bernard MT Condensed;}{\f38\fnil\fcharset256\fprq2{\*\panose 02040602050305030304}Book Antiqua;}{\f39\fnil\fcharset256\fprq2{\*\panose 02050604050505020204}Bookman Old Style;}{\f40\fnil\fcharset256\fprq2{\*\panose 04030b070d0b02020403}Braggadocio;}{\f41\fnil\fcharset256\fprq2{\*\panose 020b0903060703020204}Britannic Bold;}{\f42\fnil\fcharset256\fprq2{\*\panose 03060802040406070304}Brush Script MT;}{\f43\fnil\fcharset256\fprq2{\*\panose 02040603050505030304}Calisto MT;}{\f44\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Capitals;}{\f45\fnil\fcharset256\fprq2{\*\panose 020b0502020202020204}Century Gothic;}{\f46\fnil\fcharset256\fprq2{\*\panose 02040604050505020304}Century Schoolbook;}{\f47\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Charcoal;}{\f48\fnil\fcharset256\fprq2{\*\panose 020b0806080604040204}Chicago;}{\f49\fnil\fcharset256\fprq2{\*\panose 04020805060202030203}Colonna MT;}{\f50\fnil\fcharset256\fprq2{\*\panose 030f0702030302020204}Comic Sans MS;}{\f51\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}CommonBullets;}{\f52\fnil\fcharset256\fprq2{\*\panose 0208090404030b020404}Cooper Black;}{\f53\fnil\fcharset256\fprq2{\*\panose 020e0705020206020404}Copperplate Gothic Bold;}{\f54\fnil\fcharset256\fprq2{\*\panose 020e0507020206020404}Copperplate Gothic Light;}{\f55\fnil\fcharset256\fprq2{\*\panose 04020505020e03040504}Desdemona;}{\f56\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Disney Print;}{\f57\fnil\fcharset256\fprq2{\*\panose 02090707080505020304}Engravers MT;}{\f58\fnil\fcharset256\fprq2{\*\panose 020b0504020202050204}Eurostile;}{\f59\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}Festive;}{\f60\fnil\fcharset256\fprq2{\*\panose 0204060206030a020304}Footlight MT Light;}{\f61\fnil\fcharset256\fprq2{\*\panose 05000000000000000000}FrenchScript;}{\f62\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Gadget;}{\f63\fnil\fcharset256\fprq2{\*\panose 02020404030301010803}Garamond;}{\f64\fnil\fcharset256\fprq2{\*\panose 02040502050405020303}Georgia;}{\f65\fnil\fcharset256\fprq2{\*\panose 020b0a04020203020204}Gill Sans Ultra Bold;}{\f66\fnil\fcharset256\fprq2{\*\panose 02030808020601010101}Gloucester MT Extra Condensed;}{\f67\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}GME Title-Regular;}{\f68\fnil\fcharset256\fprq2{\*\panose 02020502050305020303}Goudy Old Style;}{\f69\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier 1;}{\f70\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier 2;}{\f71\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier Bd 1;}{\f72\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier Bd 2;}{\f73\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier BdIt 1;}{\f74\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier BdIt 2;}{\f75\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier It 1;}{\f76\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier It 2;}{\f77\fnil\fcharset256\fprq2{\*\panose 04040505050a02020702}Harrington;}{\f78\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Helvetica Black;}{\f79\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Helvetica Compressed;}{\f80\fnil\fcharset256\fprq2{\*\panose 020b0806030902050204}Impact;}{\f81\fnil\fcharset256\fprq2{\*\panose 04020605060303030202}Imprint MT Shadow;}{\f82\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso GI1 SILDoulosL;}{\f83\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso GI1 SILDoulosL I;}{\f84\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso If1 SILDoulosL;}{\f85\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso If1 SILDoulosL I;}{\f86\fnil\fcharset256\fprq2{\*\panose 03010101010101010101}Kidprint;}{\f87\fnil\fcharset256\fprq2{\*\panose 040307050d0c02020703}Kino MT;}{\f88\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Lucida Blackletter;}{\f89\fnil\fcharset256\fprq2{\*\panose 02040602050505020304}Lucida Bright;}{\f90\fnil\fcharset256\fprq2{\*\panose 03010101010101010101}Lucida Calligraphy;}{\f91\fnil\fcharset256\fprq2{\*\panose 02060602050505020204}Lucida Fax;}{\f92\fnil\fcharset256\fprq2{\*\panose 03010101010101010101}Lucida Handwriting;}{\f93\fnil\fcharset256\fprq2{\*\panose 020b0602030504020204}Lucida Sans;}{\f94\fnil\fcharset256\fprq2{\*\panose 020b0509030504030204}Lucida Sans Typewriter;}{\f95\fnil\fcharset256\fprq2{\*\panose 020b0602060201020203}Lydian MT;}{\f96\fnil\fcharset256\fprq2{\*\panose 03020802060602070202}Matura MT Script Capitals;}{\f97\fnil\fcharset256\fprq2{\*\panose 02040503050201020203}Minion Web;}{\f98\fnil\fcharset256\fprq2{\*\panose 03090702030407020403}Mistral;}{\f99\fnil\fcharset256\fprq2{\*\panose 02070704070505020303}Modern No. 20;}{\f100\fnil\fcharset256\fprq2{\*\panose 020b0509030404040204}Monaco;}{\f101\fnil\fcharset256\fprq2{\*\panose 03010101010201010101}Monotype Corsiva;}{\f102\fnil\fcharset2\fprq2{\*\panose 01010601010101010101}Monotype Sorts;}{\f103\fnil\fcharset256\fprq2{\*\panose 020b0509000000000004}Monotype.com;}{\f104\fnil\fcharset2\fprq2{\*\panose 02000500000000000000}MT Extra;}{\f105\fnil\fcharset256\fprq2{\*\panose 020b0504020203020204}News Gothic MT;}{\f106\fnil\fcharset256\fprq2{\*\panose 04050602080702020203}Onyx;}{\f107\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Palatino;}{\f108\fnil\fcharset256\fprq2{\*\panose 02020502060505020804}Perpetua Titling MT;}{\f109\fnil\fcharset256\fprq2{\*\panose 040506030a0602020202}Playbill;}{\f110\fnil\fcharset256\fprq2{\*\panose 02060603020205020403}Rockwell;}{\f111\fnil\fcharset256\fprq2{\*\panose 02060903040505020403}Rockwell Extra Bold;}{\f112\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Sand;}{\f113\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}SportsFigures;}{\f114\fnil\fcharset256\fprq2{\*\panose 040409050d0802020404}Stencil;}{\f115\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Swing;}{\f116\fnil\fcharset256\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f117\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Techno;}{\f118\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Textile;}{\f119\fnil\fcharset256\fprq2{\*\panose 020b0603020202020204}Trebuchet MS;}{\f120\fnil\fcharset256\fprq2{\*\panose 020b0604030504040204}Verdana;}{\f121\fnil\fcharset2\fprq2{\*\panose 05030102010509060703}Webdings;}{\f122\fnil\fcharset256\fprq2{\*\panose 020a0a07050505020404}Wide Latin;}{\f123\fnil\fcharset2\fprq2{\*\panose 05020102010507070707}Wingdings 2;}{\f124\fnil\fcharset2\fprq2{\*\panose 05040102010807070707}Wingdings 3;}{\f125\fnil\fcharset2\fprq2 Zapf Dingbats;}{\f126\fnil\fcharset256\fprq2{\*\panose 05000000000000000000}ZapfDingbats BT;}}{\*\ud{\fonttbl{\f0\fnil\fcharset256\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fnil\fcharset256\fprq2{\*\panose 020b0604020202020204}Arial;}{\f2\fnil\fcharset256\fprq2{\*\panose 02070309020205020404}Courier New;}{\f3\fnil\fcharset2\fprq2{\*\panose 02000500000000000000}Symbol;}{\f4\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Times;}{\f5\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Helvetica;}{\f6\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Courier;}{\f7\fnil\fcharset256\fprq2{\*\panose 020b0503030404040204}Geneva;}{\f8\froman\fcharset77\fprq2{\*\panose 00000000000000000000}Tms Rmn;}{\f9\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}Helv;}{\f10\froman\fcharset77\fprq2{\*\panose 00000000000000000000}MS Serif;}{\f11\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\fnil\fcharset256\fprq2{\*\panose 02020502060305060204}New York;}{\f13\fswiss\fcharset77\fprq2{\*\panose 00000000000000000000}System;}{\f14\fnil\fcharset2\fprq2{\*\panose 05020102010804080708}Wingdings;}{\f15\froman\fcharset256\fprq1{\*\panose 00000000000000000000}FE Roman font face;}{\f16\fmodern\fcharset256\fprq1{\*\panose 00000000000000000000}FE Modern font face;}{\f17\froman\fcharset256\fprq1{\*\panose 00000000000000000000}FE Truetype Roman font face;}{\f18\fmodern\fcharset256\fprq1{\*\panose 00000000000000000000}FE Truetype Modern font face;}{\f19\froman\fcharset77\fprq2{\*\panose 00000000000000000000}Century;}{\f20\fnil\fcharset256\fprq2{\*\panose 020b0a06030101010103}Abadi MT Condensed Extra Bold;}{\f21\fnil\fcharset256\fprq2{\*\panose 020b0306030101010103}Abadi MT Condensed Light;}{\f22\fnil\fcharset256\fprq2{\*\panose 020b0509000000000004}Andale Mono;}{\f23\fnil\fcharset256\fprq2{\*\panose 05000000000000000000}Animals 1;}{\f24\fnil\fcharset256\fprq2{\*\panose 020b0a04020102020204}Arial Black;}{\f25\fnil\fcharset256\fprq2{\*\panose 020b0506020202030204}Arial Narrow;}{\f26\fnil\fcharset256\fprq2{\*\panose 020f0704030504030204}Arial Rounded MT Bold;}{\f27\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde Bk BT;}{\f28\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde BkOb BT;}{\f29\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}AvantGarde Dm BT;}{\f30\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}AvantGarde DmOb BT;}{\f31\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde Md BT;}{\f32\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}AvantGarde MdOb BT;}{\f33\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}Balloons;}{\f34\fnil\fcharset256\fprq2{\*\panose 02020602080505020303}Baskerville Old Face;}{\f35\fnil\fcharset256\fprq2{\*\panose 04030905020b02020c02}Bauhaus 93;}{\f36\fnil\fcharset256\fprq2{\*\panose 02020503060305020303}Bell MT;}{\f37\fnil\fcharset256\fprq2{\*\panose 02050806060905020404}Bernard MT Condensed;}{\f38\fnil\fcharset256\fprq2{\*\panose 02040602050305030304}Book Antiqua;}{\f39\fnil\fcharset256\fprq2{\*\panose 02050604050505020204}Bookman Old Style;}{\f40\fnil\fcharset256\fprq2{\*\panose 04030b070d0b02020403}Braggadocio;}{\f41\fnil\fcharset256\fprq2{\*\panose 020b0903060703020204}Britannic Bold;}{\f42\fnil\fcharset256\fprq2{\*\panose 03060802040406070304}Brush Script MT;}{\f43\fnil\fcharset256\fprq2{\*\panose 02040603050505030304}Calisto MT;}{\f44\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Capitals;}{\f45\fnil\fcharset256\fprq2{\*\panose 020b0502020202020204}Century Gothic;}{\f46\fnil\fcharset256\fprq2{\*\panose 02040604050505020304}Century Schoolbook;}{\f47\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Charcoal;}{\f48\fnil\fcharset256\fprq2{\*\panose 020b0806080604040204}Chicago;}{\f49\fnil\fcharset256\fprq2{\*\panose 04020805060202030203}Colonna MT;}{\f50\fnil\fcharset256\fprq2{\*\panose 030f0702030302020204}Comic Sans MS;}{\f51\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}CommonBullets;}{\f52\fnil\fcharset256\fprq2{\*\panose 0208090404030b020404}Cooper Black;}{\f53\fnil\fcharset256\fprq2{\*\panose 020e0705020206020404}Copperplate Gothic Bold;}{\f54\fnil\fcharset256\fprq2{\*\panose 020e0507020206020404}Copperplate Gothic Light;}{\f55\fnil\fcharset256\fprq2{\*\panose 04020505020e03040504}Desdemona;}{\f56\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Disney Print;}{\f57\fnil\fcharset256\fprq2{\*\panose 02090707080505020304}Engravers MT;}{\f58\fnil\fcharset256\fprq2{\*\panose 020b0504020202050204}Eurostile;}{\f59\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}Festive;}{\f60\fnil\fcharset256\fprq2{\*\panose 0204060206030a020304}Footlight MT Light;}{\f61\fnil\fcharset256\fprq2{\*\panose 05000000000000000000}FrenchScript;}{\f62\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Gadget;}{\f63\fnil\fcharset256\fprq2{\*\panose 02020404030301010803}Garamond;}{\f64\fnil\fcharset256\fprq2{\*\panose 02040502050405020303}Georgia;}{\f65\fnil\fcharset256\fprq2{\*\panose 020b0a04020203020204}Gill Sans Ultra Bold;}{\f66\fnil\fcharset256\fprq2{\*\panose 02030808020601010101}Gloucester MT Extra Condensed;}{\f67\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}GME Title-Regular;}{\f68\fnil\fcharset256\fprq2{\*\panose 02020502050305020303}Goudy Old Style;}{\f69\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier 1;}{\f70\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier 2;}{\f71\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier Bd 1;}{\f72\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier Bd 2;}{\f73\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier BdIt 1;}{\f74\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Grolier BdIt 2;}{\f75\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier It 1;}{\f76\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Grolier It 2;}{\f77\fnil\fcharset256\fprq2{\*\panose 04040505050a02020702}Harrington;}{\f78\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Helvetica Black;}{\f79\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Helvetica Compressed;}{\f80\fnil\fcharset256\fprq2{\*\panose 020b0806030902050204}Impact;}{\f81\fnil\fcharset256\fprq2{\*\panose 04020605060303030202}Imprint MT Shadow;}{\f82\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso GI1 SILDoulosL;}{\f83\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso GI1 SILDoulosL I;}{\f84\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso If1 SILDoulosL;}{\f85\fnil\fcharset256\fprq2{\*\panose 00000400000000000000}Inso If1 SILDoulosL I;}{\f86\fnil\fcharset256\fprq2{\*\panose 03010101010101010101}Kidprint;}{\f87\fnil\fcharset256\fprq2{\*\panose 040307050d0c02020703}Kino MT;}{\f88\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Lucida Blackletter;}{\f89\fnil\fcharset256\fprq2{\*\panose 02040602050505020304}Lucida Bright;}{\f90\fnil\fcharset256\fprq2{\*\panose 03010101010101010101}Lucida Calligraphy;}{\f91\fnil\fcharset256\fprq2{\*\panose 02060602050505020204}Lucida Fax;}{\f92\fnil\fcharset256\fprq2{\*\panose 03010101010101010101}Lucida Handwriting;}{\f93\fnil\fcharset256\fprq2{\*\panose 020b0602030504020204}Lucida Sans;}{\f94\fnil\fcharset256\fprq2{\*\panose 020b0509030504030204}Lucida Sans Typewriter;}{\f95\fnil\fcharset256\fprq2{\*\panose 020b0602060201020203}Lydian MT;}{\f96\fnil\fcharset256\fprq2{\*\panose 03020802060602070202}Matura MT Script Capitals;}{\f97\fnil\fcharset256\fprq2{\*\panose 02040503050201020203}Minion Web;}{\f98\fnil\fcharset256\fprq2{\*\panose 03090702030407020403}Mistral;}{\f99\fnil\fcharset256\fprq2{\*\panose 02070704070505020303}Modern No. 20;}{\f100\fnil\fcharset256\fprq2{\*\panose 020b0509030404040204}Monaco;}{\f101\fnil\fcharset256\fprq2{\*\panose 03010101010201010101}Monotype Corsiva;}{\f102\fnil\fcharset2\fprq2{\*\panose 01010601010101010101}Monotype Sorts;}{\f103\fnil\fcharset256\fprq2{\*\panose 020b0509000000000004}Monotype.com;}{\f104\fnil\fcharset2\fprq2{\*\panose 02000500000000000000}MT Extra;}{\f105\fnil\fcharset256\fprq2{\*\panose 020b0504020203020204}News Gothic MT;}{\f106\fnil\fcharset256\fprq2{\*\panose 04050602080702020203}Onyx;}{\f107\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Palatino;}{\f108\fnil\fcharset256\fprq2{\*\panose 02020502060505020804}Perpetua Titling MT;}{\f109\fnil\fcharset256\fprq2{\*\panose 040506030a0602020202}Playbill;}{\f110\fnil\fcharset256\fprq2{\*\panose 02060603020205020403}Rockwell;}{\f111\fnil\fcharset256\fprq2{\*\panose 02060903040505020403}Rockwell Extra Bold;}{\f112\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Sand;}{\f113\fnil\fcharset256\fprq2{\*\panose 020b0603050302020204}SportsFigures;}{\f114\fnil\fcharset256\fprq2{\*\panose 040409050d0802020404}Stencil;}{\f115\fnil\fcharset256\fprq2{\*\panose 02000800000000000000}Swing;}{\f116\fnil\fcharset256\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f117\fnil\fcharset256\fprq2{\*\panose 00000000000000000000}Techno;}{\f118\fnil\fcharset256\fprq2{\*\panose 02000500000000000000}Textile;}{\f119\fnil\fcharset256\fprq2{\*\panose 020b0603020202020204}Trebuchet MS;}{\f120\fnil\fcharset256\fprq2{\*\panose 020b0604030504040204}Verdana;}{\f121\fnil\fcharset2\fprq2{\*\panose 05030102010509060703}Webdings;}{\f122\fnil\fcharset256\fprq2{\*\panose 020a0a07050505020404}Wide Latin;}{\f123\fnil\fcharset2\fprq2{\*\panose 05020102010507070707}Wingdings 2;}{\f124\fnil\fcharset2\fprq2{\*\panose 05040102010807070707}Wingdings 3;}{\f125\fnil\fcharset2\fprq2 Zapf Dingbats;}{\f126\fnil\fcharset256\fprq2{\*\panose 05000000000000000000}ZapfDingbats BT;}}}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar\adjustright \loch\af4\hich\af4\dbch\f4\cgrid \snext0 Normal;}{\s1\keepn\widctlpar\outlinelevel0\adjustright \b\fs32\kerning28\loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 heading 1;}{\s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 heading 2;}{\s3\sb240\sa60\keepn\widctlpar\adjustright \loch\af5\hich\af5\dbch\f4\cgrid \sbasedon0 \snext0 heading 3;}{\*\cs10 \additive Default Paragraph Font;}{\s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext15 Plain Text;}{\s16\sb200\widctlpar\tqr\tx6110\adjustright \fs20\lang1024\loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 \sautoupd toc 1;}{\s17\qj\fi360\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid \sbasedon15 \snext17 Code;}{\s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \sbasedon15 \snext18 Indented Plain Text;}{\s19\li240\widctlpar\tqr\tx6110\adjustright \fs20\lang1024\loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 \sautoupd toc 2;}{\s20\li480\widctlpar\adjustright \loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 \sautoupd toc 3;}{\s21\li720\widctlpar\adjustright \loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 \sautoupd toc 4;}{\s22\li960\widctlpar\adjustright \loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 \sautoupd toc 5;}{\s23\li1200\widctlpar\adjustright \loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 \sautoupd toc 6;}{\s24\li1440\widctlpar\adjustright \loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 \sautoupd toc 7;}{\s25\li1680\widctlpar\adjustright \loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 \sautoupd toc 8;}{\s26\li1920\widctlpar\adjustright \loch\af4\hich\af4\dbch\f4\cgrid \sbasedon0 \snext0 \sautoupd toc 9;}}{\info{\title  }{\author Mike Westerfield}{\operator Mike Westerfield}{\creatim\yr2000\mo10\dy31\hr16\min34}{\revtim\yr2000\mo10\dy31\hr16\min34}{\printim\yr2000\mo10\dy31\hr16\min33}{\version2}{\edmins0}{\nofpages63}{\nofwords8305}{\nofchars47344}{\*\company Byte Works, Inc.}{\nofcharsws58141}{\vern99}}\margl3060\margr3060\margt2880\margb2880 \widowctrl\ftnbj\aenddoc\formshade\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot \fet0\sectd \linex-32767\headery2520\footery2520\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \par \par \par {\pict{\*\picprop\shplid1025{\sp{\sn shapeType}{\sv 75}}{\sp{\sn fFlipH}{\sv 0}}{\sp{\sn fFlipV}{\sv 0}}{\sp{\sn fillColor}{\sv 268435473}}{\sp{\sn fFilled}{\sv 0}}{\sp{\sn fLine}{\sv 0}}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw239\pich59\picwgoal4780\pichgoal1180\macpict\bliptag-1531410804\blipupi72{\*\blipuid a4b8868c40411fe5c29f65d520bdebab}2f0800000000003b00ef001102ff0c00ffffffff000000000000000000ef0000003b00000000000000a101f200163842494d000000000000003b00ef4772897068af626a001e0001000a00000000003b00ef0098007e0000000000f503e50000000000f503e500000000003b00ef000002830002830002830002830002830002830002830002830002830002830002830002830008f600027fffc0910008f700fdff00c092000af800001ffdff00f0920008f800fbff0080930010f900000ffbff00e0ce0002031fd0c90012f900003ffbff00fccf00000ffeff00f0ca0010fa000001faff00fecf00fcff00c0cb0012fa000007f9ff0080d100000ffcff00fccb0010fa00001ff9ff00e0d100faff0080cc0010fa00f8ff00f8d2000003faff00f0cc0012fb000003f8ff00fcd200001ffaff00fccc001cfb000007f8ff00fed200007ff9ff0080d700063ffffc1fe001fffe001afb00001ff7ffd3000001f8ff00e0d700063ffffe1ff001fffe001cfb00003ff7ff0080d4000007f8ff00f8d700063ffffe1ff001fffe001afb00f6ff00c0d400001ff8ff00fcd700063ffffc1ff803fffe0019fc000001f6ff00e0d400003ff7ffd600057e001ff803fffe0019fc000007f6ff00f0d400f6ff0080d700053e001ffc03fffe001bfc00000ff6ff00f8d5000001f6ff00e0d700053e001ffc07fffe0020fc00003ff6ff00fcd5000003f6ff00f0f3000107f8e700053e001e7c07dffe0020fc00007ff6ff00fed5000007f6ff00fcf300013fffe700053e001e7e079ffe001ffc00f5ff00fed500000ff6ff00fef30002ffffc0e800053e001e7e0f9ffe0023fd000003f4ffeb000107e0ed00001ff5fff4000301ffffe0e800053e001e3e0f1ffe0025fd000007f4ffeb00011ff0ed00003ff5ff0080f5000303fffff0e800053e001e3e0f1ffe002bfd000007fbff018001fcff0080ec00017ff0ed00007ff5ff00c0f5000307fffff8e800023e001efe1ffe0030fd00000ffcff03f800001ffdff0080ec0001fff8ed00f4ff00e0f500030ffffffcf0000003fa00057e001e1f1e1ffe0034fd00001ffcff03c0000007fdff00c0ed000203fff8ee000001f4ff00f0f500031ffffffcf000011fc0fb00057e001e1f1e1ffe0034fd00003ffcff0380000001fdff00e0ed00020ffff0ee000001f4ff00f8f500031ffffffef000013fe0fb00057e003e0fbe1ffe0033fd00007ffdff00fefd00fdff00e0ed00021ffff0ee000003f4ff00fcf500033ffffffef00001ffe0fb00057e001e0ffc1ffe0035fd00007ffdff00fcfd00007ffeff00e0ed00027fffe0ee000007f4ff00fef500003ffefff1000201ffe0fb00057e001e0ffc1ffe0032fd00fcff00f8fd00003ffeff00f0ee000301ffffc0ee000007f3fff500003ffefff1000207ffe0fb00057e003e07fc1ffe0036fe000001fcff00f0fd00001ffeff00f0ee000303ffff80ee00000ff3ff0080f600003ffefff100020fffe0fb00053e003e07f81ffe0035fe000001fcff00f0fd00000ffeff00f0ee00021fffffed00000ff3ff0080f600003ffefff100027fffc0fb00057e003e07f81ffe0035fe000001fcff00f0fd000007feff00f0ee00027ffffeed00001ff3ff00c0f600003ffefff10002ffffc0fb00057e003e03f01ffe0037fe000001fcff00e0fd000007feff00f0ef000301fffffced00001ff3ff00e0f600007ffefff2000303ffff80fb00053e003e03f01ffe0036fe000003fcff00e0fd000003feff00f8ef000307fffff8ed00003ff3ff00e0f600003ffefff200020ffffffa00053c001e01f01ffe002dfe000001fcff00e0fd000003feff00f8ef00031ffffff0ed00003ff3ff00f0f600003ffefff200023ffffef1002cfe000001fcff00e0fd000003feff00f8ef00feff00f0ed00003ff3ff00f0f600003ffefff20002fffff8f10030fe000001fcff00e0fd000001feff00f8f0000003feff00e0ed00007ff3ff00f8f600033ffffffef3000303fffff8f1002efd00fcff00e0fd000001feff00f8f000000ffeff00e0ed00007ff3ff00f8f600031ffffffef300030ffffff0f10030fd00007ffdff00e0fd000001feff00f8f000003ffeff00e0ed00007ff3ff00fcf600031ffffffcf300037fffffe0f10032fd00053ff03fffffc0fd000001feff00f8f000007ffeff00c0ed00007ff3ff00fcf600031ffffffcf4000001feff00c0f10032fd00050f803fffffc0fd000001feff00f8f000007ffeff00c0ed00007ff3ff00fef600030ffffff8f4000007feff00c0f1002efb00031fffffc0fd000001feff00f8f000fdff00c0ed00007ff3ff00fef6000307fffff0f400003ffeff00c0f1002cfb00031fffffc0fd000001feff00f8f000fdff00c0ed00007ff2fff6000303ffffe0f400007ffeff0080f1002afb00030fffffc0fd000001feff00f8f000fdff00c0ed00007ff2fff6000301ffffc0f400fdff0080f1002dfb00030fffffc0fd000001feff00f8f000007ffeff00c0ed00007ff2fff500027fff80f5000001fdff0080f1002cfb00030fffffc0fd000001feff00f8f000003ffeff00c0ed00007ff2fff500011ffcf4000001fdff0080f1002dfb00030fffffc0fd000003feff00f8f000001ffeff00c0ed00007ff2ff0080f5000080f4000001fdff0080f1002efb00030fffffc0fd000003feff00f8ef00037fffffc0ed00007ffcff02fc0003faff0080e7000001fdff0080f1002dfb00030fffffc0fd000007feff00f0ef00031fffffc0ed00007ffcff038000001ffbff0080e600fdff0080f1002efb00030fffffc0fd000007feff00f0ef00030fffffc0ed00007ffdff00fefe000001fbff00c0e600fdff0080f10030fb00030fffffc0fd00000ffeff00f0ef00030fffffc0ed00007ffdff00f8fd00007ffcff00c0e600007ffeff0080f1002efb00030fffffc0fd00000ffeff00e0ef000307ffffc0ed00007ffdff00e0fd00001ffcff00c0e500feff0080f1002ffb00030fffffc0fd00001ffeff00e0ef000307ffffc0ed00007ffdff0080fd000007fcff00c0e500033fffff80f1002dfb00030fffffc0fd00003ffeff00e0ef000307ffffc0ed00003ffdfffc000001fcff00c0e500031fffff80f1002dfb00030fffffc0fd00007ffeff00c0ef000307ffffc0ed00003ffeff00fefb00fcff00e0e500031fffff80f1002dfb00030fffffc0fd00fdff00c0ef000307ffffc0ed00003ffeff00fcfb00007ffdff00e0e500030fffff80f10032fb00030fffffc0fe000001fdff0080ef000303ffffc0ed00001ffeff03f8000ff8fe00001ffdff00e0e500030fffff80f10032fb00030fffffc0fe000007fdff0080ef000303ffffc0ed00001ffeff03f0001ffefe00000ffdff00e0e500030fffff80f10030fb00030fffffc0fe00001ffdffee000303ffffc0ed00001ffeff03f0007ffffe00000ffdff00e0e500030fffff80f10032fb00030fffffc0fe00007ffeff00feee000303ffffc0ed00000ffeff07e000ffff80000007fdff00e0e500030fffff80f10035fb00060fffffc0000007fdff00fef3000003fd000303ffffc0ed00000ffeff07c000ffff80000003fdff00e0e500030fffff80f10035fb00050ffffff0000ffcff00fcf300013ff8fe000303ffffc0ed000007feff07c001ffffc0000001fdff00e0e500030fffff80f10030fb00000ff7ff00f8f300017ffefe000303ffffc0ed000007feff07c001ffffc0000001fdff00e0e500030fffff80f10035fb00000ff7ff00f8fa000101f8fd000201fffffe000303ffffc0ed000003feff04c003ffffe0fe00fdff00e0e500030fffff80f1003afb00000ff7ff00f0fa000103f8fd000903ffff80000003ffffc0f900013ff8f7000001feff048003ffffe0fe00fdff00e0e5000307ffff80f10040fb00000ff7ff00e0fa000107fcfd000907ffff80000003ffffc0fa00030ffffff0f700feff04c003ffffe0fe00007ffeff00e0fd000030ea000307ffff80f10044fb00000ff7ff00c0fa00010ffcfd00090fffffc0000003ffffc0fa00037ffffffef700077fffffc003ffffe0fe00007ffeff03e0000001feff0080ec000307ffff80f10051fb00000ff7ff0080fa00010ffcfd000b0fffffe0000003ffffc00001fd000007fdff00c0f800073fffffc007ffffe0fe00007ffeff03e000001ffeff00f8fd000107e0fa00011ff0fb000307ffff80f10056fb00000ff8ff00fef900011ffcfd000c0ffffff0000003ffffc0000fc0fe00001ffdff00f0f800071fffffc007fffff0fe00007ffeff02e00000fcff0080fe000b7ffc00007ffe000001ffffc0fc000307ffff80f10056fb00000ff8ff00fcf900013ffcfd000c1ffffff0000007ffffe800ffe0fe00007ffdff00fcf800070fffffc007fffff0fe00003ffeff02c00007fcff00e0fe000bfffe0003ffffe0000ffffff0fc000307ffff80f10052fb00000ff8ff00fcf900013ffcfd00051ffffff00007fbff03e0000001fcff00fef8000703ffffc007fffff0fe00003ffeff02c0001ffcff0ff8000003ffff0007fffff0003ffffffefc000307ffff80f10050fb00000ff7fff900017ffcfd00053ffffff80007fbff03f0000003fbff0080f80006ffffc007fffff0fe00003ffeff02c0007ffcff0bfe000007ffff8007fffff800fdfffc000607ffff80000780f40052fb00000ff7ff00e0fa0001fffcfd00053ffffff8000ffbff03f000000ffbff00c0f800061ffe0007fffff0fe00003ffeff01c000faff0a80000fffffc007fffffc01fdff00c0fd000607ffff80003fc0f4004ffb00000ff7ff00fefa0001fffcfd00053ffffffc000ffbff03f000001ffbff00e0f5000307fffff0fe00003ffeff01c003faff0ac0000fffffc003fffffc03fdff00f0fd00068ffffff01fffc0f4004cfb00000ff6fffb000201fffcfd00053ffffffc000ffbff03f000007ffbff00f8f5000307fffff0fe00003ffeff018007faff0af0001fffffe003fffffe0ffdff00f8fe00000ffbff00e0f4004dfb00000ff6ff00e0fc000203fffcfd00053ffffffc001ffbff02f80000faff00f8f5000307fffff0fe00003ffeff01800ffaff0af0001fffffe001fffffe0ffdff00fcfe00001ffbff00e0f4004dfb00000ff6ff00f0fc000207fffcfd00053ffffffc001ffbff02f80001faff00fcf5000307fffff0fe00003ffeff01801ffaff0af8001ffffff000fffffe3ffdff00fefe00001ffbff00e0f4004bfb00000ff6ff00fcfc00020ffffcfd00053ffffffc001ffbff02f80003faff00fef5000307fffff0fe00003ffeff01803ffaff0afc001ffffff0007ffffe3ffcfffe00001ffbff00f0f4004afb00000ff6ff00fefc00020ffffefd00053ffffffc003ffbff02f80007f9fff5000307fffff0fe00007ffeff01007ffaff0afe001ffffff0007fffff7ffcff038000001ffbff00f0f40048fb00000ff5ff0080fd00021ffffffd00051ffffffc003ffbff02f8000ff9ff0080f6000307fffff0fe00007ffeff0000f9ff07fe001ffffff0003ff9ff03c000003ffbff00f0f40047fb00000ff5ff00c0fd00023ffffffd00050ffffffe003ffbff02f8001ff9ff00c0f6000307ffffe0fe00007ffeff0001f8ff06001ffffff0003ff9ff03e000003ffbff00f0f40047fb00000ff5ff00e0fd00037fffff80fe000503fffffe007ffbff02f8001ff9ff00e0f6000307ffffe0fe00feff01fe01f8ff06001ffffff0001ff9ff03f000003ffbff00f8f40046fb00000ff5ff00f0fd00feff0080fe000501fffffe007ffbff02f8003ff9ff00e0f6000307ffffe0fe00feff01fe03f8ff06800ffffff8001ff9ff03f800003ffbff00f0f40045fb00000ff5ff00f8fd00feff00c0fd0003fffffe00faff02f8007ff9ff00f0f6000607ffffe0000001feff01fc03f8ff06800ffffff8001ff9ff03f800007ffbff00f0f4004afb00000ffeff00e6f9ff00fcfe000001feff00e0fd0003fffffc00faff01f000f8ff00f0f6000607ffffe0000001feff01fc03f8ff06c007fffff8001ff9ff03fc00007ffbff00f0f4004bfb00060fffffc0000001fbff00fefe000003feff00e0fd00037ffffc01faff01f000f8ff00f8f6000607ffffe0000003feff01f807f8ff06c007fffff8001ff9ff02fe0000faff00f0f4004afb00030fffffc0fe00001ffbfffe000007feff00f0fd00037ffffc01faff01f001f8ff00fcf6000607ffffe0000003feff01f807f8ff06c007fffff8001ff9ff02fe0000faff00f0f40049fb00030fffffc0fe000003fbfffe00000ffeff00f8fd00033ffffc03faff01e003f8ff00fcf6000607ffffe0000007feff01f80ff8ff06e003fffff8001ff8ff010001faff00f0f4004afb00030fffffc0fe000001fbff038000001ffeff00f8fd00033ffffc07faff01e003f8ff00fef6000607ffffe000000ffeff01f00ff8ff06e003fffff8001ff8ff010001faff00f0f4004afb00030fffffc0fd00007ffcff03c000003ffeff00fcfd00033ffffc07faff01c007f8ff00fef6000607ffffe000000ffeff01f00ff8ff06e003fffff8000ff8ff018003faff00e0f40048fb00030fffffc0fd00003ffcff03e000007ffeff00fefd00033ffffc0ffaff018007f7fff6000607ffffe000003ffeff01e00ff8ff06e001fffff8000ff8ff018003faff00e0f40047fb00030fffffc0fd00001ffcff02e00000fdff00fefd00031ffffc1ffaff01000ff7fff6000607ffffe000003ffeff01c00ff8ff06e001fffff8000ff8ff01c007faff00c0f40048fb00030fffffc0fd00000ffcff02f00001fcfffd00031ffffc1ffbff02fe000ff7ff0080f7000607ffffe000007ffeff01c00ff8ff06f001fffff8000ff8ff01c007faff00c0f40049fb00030fffffc0fd00000ffcff02f00001fcff0080fe00031ffffc1ffbff02fe001ff7ff0080f7000507ffffe00001fdff01800ff8ff06f000fffff8000ff8ff01e00ffaff0080f4004ffb00030fffffc0fd000007fcff02f80003fcff0080fe00031ffff83ffbff02f8001ff7ff00c0f7000507ffffe00003fdff01000ffeff02fc000ffeff06f000fffff8001ff8ff01e01ffaff0080f4004efb00030fffffc0fd000003fcff02f80007fcff00c0fe00031ffff83ffbff02e0001ff7ff00c0f7000507ffffe00007feff02fe000ffeff02c00001feff06f000fffff8001ff8ff01f01ffafff3004ffb00030fffffc0fd000003fcff02fc001ffcff00e0fe00031ffff81ffbff0280003ff7ff00e0f7000507ffffe0000ffeff02fe0007fefffe00097ffffff000fffff8000ff8ff01f03ffbff00fef30051fb00030fffffc0fd000001fcff02fc001ffcff00f0fe00031ffff80ffcff03f000003ff7ff00f0f7000507ffffe0001ffeff05fc0007fffffcfe00093ffffff000fffff8000ff8ff01f03ffbff00fcf30053fb00030fffffc0fd000001fcff02fe003ffcff00f0fe00081ffff8000007ffffc0fe00003ff7ff00f8f7000507ffffe0007ffeff05f80007fffff8fe00091ffffff000fffff8001ff8ff01f83ffbff00f0f30052fb00030fffffc0fd000001fcff02fe007ffcff00f8fe00081ffff8000003ffffc0fe00007ff7ff00fcf7000407ffffe000fdff05f00003fffff0fe00090ffffff000fffff8001ff8ff01f83ffbff00c0f30054fb00030fffffc0fd000001fbff0000fbff00f8fe00081ffff0000003ffffc0fe00007ffeff02f8007ffdff00fef7000407ffffe003fdff05e00001ffffe0fe000907fffff000fffff8000ff8ff01f83ffbfff20057fb00030fffffc0fd000001fbff0001fbff00fcfe00081ffff0000003ffffc0fe00007ffeff0280001ffdff00fef7000407ffffe007fdff05c00000ffffc0fe000907fffff000fffff8000ff8ff01f81ffdff01f7c0f20053fb00030fffffc0fc00fbff0001fbff00fefe00083ffff0000003ffffc0fe00007ffeff02000007fcfff7000407ffffe01ffdff058000007fffc0fe000907fffff000fffff8000ff8ff06fc000007ffffc0f10056fb00030fffffc0fc00fbff0081fbff00fefe00083ffff0000007ffffc0fe00feff03fc000003fcfff7000407ffffe07ffdfffe00023fff80fe00097ffffff000fffff8000ffeff018007fdff06fc000007ffff80f10054fb00030fffffc0fc00fbff0081fafffe00083ffff0000003ffffc0fe00feff00f0fe00fcfff7000307ffffe1fdff00fefe00010ffffe000003feff0bf000fffff8000ffffffe0001fdff06fc000007ffff80f10058fb00030fffffe0fc00fbff0080faff0b8000003fffe0000003ffffc0fe00feff00e0fe00fdff00fef7000307ffffe7fdff00fcfe000103fefe00000ffeff0cf000fffff8000ffffffc00007ffeff06fc000007ffff80f10055fb00030fffffe0fc00fbff0280ffbffcff0ec000003fffe0000003ffffc0000001feff00c0fe00007ffeff00fcf7000007faff00f8f900003ffeff0cf000fffff8000ffffff000001ffeff06fc000007ffff80f10055fb00030fffffe0fc00fbff02807c03fcff0ec000003fffe0000003ffffc0000001feff0080fe00003ffeff00f8f7000007faff00f0fa000007fdff0cf0007ffff8001ffffff000000ffeff06fc000007ffff80f10055fb00030fffffe0fd000001fbff02c00001fcff0ee000003fffc0000003ffffc0000001fefffd00003ffeff00e0f7000007faff00e0fa00001ffdff0cf0007ffff8000fffffe0000007feff06fc000007ffff80f10054fb00030fffffe0fd000001fbff02c00000fcff11e000007fffc0000003ffffc0000001fffffefd00003ffeff0080f7000007faff0080fa00fcff0cf000fffff8000fffffc0000003feff06fc000007ffff80f10053fb00030fffffe0fd000001fbff03c000007ffdff11f000007fffc0000003ffffc0000001fffffcfd00007ffefff6000007fafffa000007fcff0cf000fffff8001fffffc0000001feff06fc000007ffff80f10057fb00030fffffe0fd000003fbff03c000003ffdff11f800007fffc0000003ffffc0000001fffffcfe000003feff00fcf6000007fbff00fcfa00003ffcff0cf000fffff8001fffff80000001feff06fc000007ffff80f10054fb00030ffffff0fd000003fbff03c000001ffdff11f800007fff80000003ffffc0000001fffff8fe000007feff00f0f6000007fbff00f8fa00fbff09f000fffff8001fffff80fe00feff06fe000007ffff80f10056fb00030ffffff0fd000007fbff03c000000ffdff11fc00007fff80000003ffffc0000001fffff8fe00001ffeff00c0f6000007fbff00f0fb000007fbff09f000fffff8001fffff80fe00feff06fe000007ffff80f10057fb00030ffffff0fd000007fbff03c000000ffdff11fc0000ffff80000003ffff80000001fffff0fe00003ffeff0080f6000007fbff00c0fb00001ffbff09f000fffff8001fffff80fe00097ffffffe000007ffff80f10053fb00030ffffff8fd00000ffbff03e0000007fdff14fe0000ffff80000003ffff80000003fffff0000001feff00fef5000007fbfffa00007ffbff08f000fffff8000ffffffd00093ffffffe000007ffff80f10054fb00031ffffff8fd00001ffbff03e0000003fcff030000fffffe000c03ffff80000003ffffe0000003feff00f8f5000007fcff00fefb000001faff08f000fffff8000ffffffd00093ffffffe000007ffff80f10054fb00031ffffffcfd00003ffbff03e0000001fcff038000fffffe000c03ffff80000003ffffe000000ffeff00e0f500003ffcff00f8fb000007faff08f000fffff0000ffffffd00093ffffffe000007ffff80f10055fb00031ffffffefd00007ffbff03e0000001fcff038001fffffe000c03ffff80000003ffffe000003ffeff00c0f500fbff00e0fb00001ffdff0bfefffff000fffff8001ffffffd00091ffffffe000007ffff80f10055fb00001ffefffd00faff00e0fe00fcff03c001fffefe000c03ffff80000003ffffc000007ffefff5000007fbff0080fb00007ffdff0be0fffff000fffff8000ffffffd00091ffffffe000007ffff80f8000040fb0055fb00001ffeff03c0000001faff00e0fe00007ffdff03c001fffefe000b03ffffc0000003ffffc00001feff00fcf500001ffcff00fefa00fcff0b80fffff000fffff8001ffffffd00091ffffffe000007ffff80f10058fb00003ffeff03f0000007faff00e0fe00007ffdff03e001fffefe000b03ffff80000003ffffc00007feff00f0f500007ffcff00f8fb000003fdff0cf800fffff000fffff8001ffffffd00090ffffffe000007ffff80f10056fb00003ffeff03f800003ffaff00c0fe00003ffdff03f003fffefe000b03ffff80000003ffffc0001ffeff00e0f500fbff00e0fb000007fdff0ce000fffff0007ffff8000ffffffd00090ffffffc000007ffff80f10055fb00007ffdff0200007ffaff00e0fe00001ffdff03f003fffcfe000b03ffff80000003ffffc0003ffeff0080f6000003fbfffa00000ffdff0c8000fffff000fffff0001ffffffd00090ffffffc000007ffff80f10054fb00fcff01f007f9ff00c0fe00000ffdff03f803fffcfe000a03ffff80000001ffffc000feff00fef5000003fcff00fefa00001ffeff0dfe0000fffff000fffff8001ffffffd00090ffffffc000007ffff80f10051fc000001f2ff00c0fe00000ffdff03fc07fffcfe000a03ffff80000001ffffc003feff00f8f5000007fcff00f0fa00007ffeff0df80000fffff0007ffff8001ffffffd00090ffffffc000007ffff80f1004ffc000007f2ff00c0fe000007fdff03fc07fff8fe000a07ffff80000001ffffc00ffeff00f0f5000007fcff00c0fa00fdff0df00000fffff000fffff8001ffffffd000907fffffc000007ffff80f10051fc00000ff2ff00c0fe000007fdff03fe07fff8fe000a03ffff80000001ffffc03ffeff00c0f500000ffdff00fefa000001fdff0dc00000fffff000fffff8000ffffffd000907fffffc000007ffff80f1004efc00003ff2ff00c0fe000003fcff020ffff8fe000a07ffff80000001ffffc07ffefff400000ffdff00f8fa000003fdff0d800000fffff000fffff0001ffffffd000907fffffc000007ffff80f10050fc00007ff2ff0080fe000001fcff028ffff0fe000907ffff80000001ffffc1feff00fcf400000ffdff00e0fa000003feff00fefe000afffff000fffff0001ffffffd000907fffff8000007ffff80f10050fd000001f1ff0080fe000001fcff028ffff0fe000907ffff80000001ffffc3feff00f0f400000ffdff00e0fa000007feff00fefe000afffff000fffff0001ffffffd000907fffff8000007ffff80f1004afd000007f1ff0080fd00fcff02dffff0fe000307ffff80fe00fbff00e0f400000ffdff00e0fa00000ffeff00fcfe000afffff000fffff0001ffffffd000907fffff8000007ffff80f1004afd00000ff1ff0080fd00007ffbff00e0fe000307ffff80fe00fbff0080f400000ffdff00e0fa00000ffeff00f8fe000afffff000fffff8001ffffffd000907fffff8000007ffff80f10048fd00001ff1fffc00007ffbff00e0fe000307ffff80fe00fcff00fef300000ffdff00e0fa00001ffeff00f0fe000afffff0007ffff0000ffffffd000907fffff8000007ffff80f10048fd00007ff1fffc00003ffbff00e0fe000307ffff80fe00fcff00f8f3000007fdff00e0fa00001ffeff0ef0000001fffff000fffff8001ffffffd000907fffff0000007ffff80f10048fd00007ff1fffc00001ffbff00c0fe000307ffff80fe00fcff00f0f3000007fdff00e0fa00003ffeff0ef0000001fffff000fffff8001ffffffd00090ffffff0000007ffff80f10046fd00f0fffc00001ffbff00c0fe000307ffff80fe00fcff00c0f3000003fdff00e0fa00003ffeff0ee0000001fffff000fffff8001ffffffd00090ffffff0000007ffff80f1004afe000001f1ff00fefc00000ffbff00c0fe000307ffff80fe00007ffdfff2000001fdff00e0fa00007ffeff0ee0000001fffff000fffff0001ffffffd000907fffff0000007ffff80f1004cfe000001f1ff00fefc000007fbff0080fe000307ffff80fe00007ffeff00fcf100043e07ffffe0fa00007ffeff0ee0000001fffff000fffff0001ffffffd00090fffffe0000007ffff80f1004bfe000001f1ff00fcfc000003fbff0080fe000307ffff80fe00007ffeff00f8f0000307ffffe0fa00007ffeff0ee0000003fffff000fffff8001ffffffd00090fffffe0000007ffff80f10049fe000001f1ff00fcfc000003fbff0080fe000307ffff80fe00007ffeff00e0f0000307ffffe0fa00fdff0ee0000003fffff000fffff8001ffffffd00090fffffe0000007ffff80f10047fe000001f1ff00f8fc000001fbfffd000307ffff80fe00003ffeff0080f0000307ffffe0fa00fdff0ef0000007fffff000fffff8001ffffffd00090fffffc0000007ffff80f10042fd00f1ff00f8fb00fbfffd000307ffffc0fe00033ffffffeef000307ffffe0fa00fdff0ef0000007fffff000fffff8001ffffffd00090fffffc0000007ffff80f10044fd00f1ff00f0fb00fcff00fefd000307ffffc0fe00031ffffff8ef000307ffffe0fa00fdff0ef000000ffffff000fffff8001ffffffd00090fffffc0000007ffff80f1004afd00f1ff00f0fb00007ffdff00fefd000307ffffc0fe00031ffffff0fb0000f8f6000307ffffe0fa00fdff0ef800001ffffff000fffff8001ffffffd00091fffff80000007ffff80f1004dfd00007ff2ff00e0fb00007ffdff00fefd000307ffffc0fe00030fffffe0fc000103fef6000307ffffe0fa00fdff0efc00003ffffff800fffff8001ffffffd00091fffff80000007ffff80f1004dfd00003ff2ff00c0fb00003ffdff00fcfd000307ffffc0fe00030fffffc0fc000107fff6000307ffffe0fa00fdff0efe00007ffffff000fffff8001ffffffd00021ffffffe000307ffff80f1004dfd00001ff2ff00c0fb00001ffdff00fcfd000307ffffc0fe000307ffffc0fc00021fff80f7000307ffffe0fa00fcff010000feff08f800fffff8001ffffffd00021ffffffe000307ffff80f1004dfd00001ff2ff0080fb00001ffdff00f8fd000307ffffc0fe000307ffffe0fc00023fff80f7000307ffffe0fa00fcff01c007feff08f800fffff8001ffffffd00023ffffffe000307ffffc0f1004bfd00000ff2fffa00000ffdff00f8fd000307ffffc0fe000307fffff0fc00027fff80f7000307ffffe0fa00fcff01f83ffeff08f800fffff8001ffffffd00023ffffefe000307ffffc0f10046fd000007f2fffa000007fdff00f8fd000307ffffc0fe000303fffff8fc0002ffffc0f7000307ffffe0fa00f7ff08f800fffff8001ffffffd00023ffffefe000307ffffc0f1004afd000003f3ff00fefa000007fdff00f0fd000307ffffc0fe000301fffffcfd000303ffffc0f7000307ffffe0fa00f7ff09f800fffff8001fffff80fe00027ffffcfe000307ffffc0f1004afd000001f3ff00fcfa000003fdff00f0fd000307ffffe0fe000301fffffefd000307ffffc0f7000307ffffe0fa00f7ff09f800fffff8001fffff80fe00027ffffcfe000307ffffc0f10047fc00f3ff00f8fa000001fdff00e0fd000307ffffe0fd00fefffd00030fffffc0f700030fffffe0fa00007ff8ff09fc00fffffc001fffff80fe00027ffff8fe000307ffffc0f10049fc00007ff4ff00f0f900fdff00e0fd000307ffffe0fd00feff00c0fe00033fffffc0f700030fffffe0fa00007ff8ff09fc00fffffc001fffff80fe0002fffff8fe000307ffffc0f10049fc00003ff4ff00e0f900fdff00c0fd000307fffff0fd00037ffffff0fe00feff0080f700030fffffe0fa00007ff8ff09fc00fffffc001fffff80fe0002fffff0fe000307ffffe0f1004cfc00001ff4ff00c0f900007ffeff00c0fd000307fffff0fd00063ffffff8000003feff0080f700030fffffe0fa00003ff8ff0ffe00fffffc001fffffc0000001fffff0fe000307ffffe0f1004afc00000ff4ff0080f900007ffeff00c0fd000307fffff8fd00001ffeff0200001ffefff600030fffffe0fa00003ff8ff0ffe00fffffe001fffffc0000001ffffe0fe000307ffffe0f10047fc000007f4fff800003ffeff0080fd000307fffff8fd00000ffeff01f901fdfff600031fffffe0fa00003ff8ff0ffe00fffffe001fffffc0000001ffffe0fe000307fffff0f10045fc000001f5ff00fef800001ffeff0080fd000307fffff8fd00000ff9ff00fef600031fffffe0fa00001ff7ff0000feff0a001fffffe0000003ffffc0fe000307fffff0f10041fb00f5ff00fcf800000ffefffc000307fffffcfd000007f9ff00fcf600031fffffe0fa00001ff7ff0000feff0a001fffffe0000003ffffc0fe000307fffff0f10043fb00003ff6ff00f0f800000ffefffc000307fffffcfd000003f9ff00f8f600033fffffe0fa00000ff7ff0080feff0a001fffffe0000007ffff80fe000307fffff0f10043fb00001ff6ff00e0f8000307fffffefc000307fffffcfd000001f9ff00f0f600033fffffe0fa000007f7ff0080feff09801ffffff0000007fffffd000307fffff8f10047fb000007f6ff0080f8000303fffffefc000303fffffefc00007ffaff00e0f600033fffffe0fa000007fbff00fefeff0080feff09801ffffff000000ffffffd000307fffff8f10045fb000003f6fff7000303fffffcfc000303fffffefc00003ffaff00c0f600037fffffe0fa000003fbff00fcfeff0d807fffff801ffffff800000ffffefd000307fffffcf10043fa00f7ff00fcf7000301fffffcfc000303fffffefc00001ffafff500037fffffe0fa000001fbff00f8feff0080feff09c00ffffff800001ffffefd000307fffffcf10043fa00003ff8ff00f0f60002fffff8fc000303fffffefc000007fbff00fef500feff00e0f900fbff11f07fffff807fffffc00ffffff800001ffffcfd000307fffffcf10045fa00000ff8ff00e0f60002fffff8fc000303fffffcfc000003fbff00fcf500feff00c0f900007ffcff11e07fffff807fffffc00ffffff800003ffffcfd000307fffffef10043fa000003f8ff0080f600027ffff0fc000301fffffcfb00fbff00f0f500feff00c0f900003ffcff11c07fffff807fffffc00ffffff800003ffff8fd000303fffffef10042f900f9ff00fef500027ffff0fb0002fffffcfb00003ffcff00c0f500feff00c0f900001ffcff11003fffff807fffffc00ffffff800007ffff0fd000303fffffef10046f900003ffaff00f0f500027fffe0fb0002fffff8fb00000ffdff00fef400037fffffc0f9000007fdff12fe003fffff003fffffc007fffff80000ffffe0fd000303fffffef10046f9000007faff00c0f500027fffe0fb00027ffff8fb000003fdff00e0f400037fffff80f9000003fdff12f8001fffff003fffff8007fffff00000ffffe0fd000303fffffcf10044f800007ffcff00fef40002ffffc0fb00023fffe0fa00003ffeff00c0f400033fffff80f800fdff12e0001ffffe001fffff8003fffff00001ffffe0fd000301fffffcf10045f800001ffcff00f0f40002ffffc0fb00021fffc0fa000303fffffcf300021ffffff700003ffeff12800007fffc001fffff0003ffffe00001ffffc0fd000401fffffc01f2003ff700007ffdfff4000301ffff80fb000103fff8000103fcf2000207fffcf7001603fffffc000003fff0000ffffe0001ffffc00003ffff80fc0002fffff8f10035f7000003feff00c0f4000301ffff80df000201fff0f600023fffc0fe000effc00007fffc0000ffff800007fffffb00027ffff0f10029f5000058f2000203ffffdd00011f80f0000e08000001fff800003ffe00000ffffffb00023fffe0f1001ce5000203ffffc6000a7f8000000ff800000ffffefb00021fffc0f10013e5000207fffebe00021ffffcfb000107fff00012e500020ffffcbe00021ffffcfa000040f0000ee500020ffffcbe00023ffff8e8000ee500021ffff8be00027ffff0e8000ee500023ffff8be0002ffffe0e8000ee500023ffff0be0002ffffe0e8000fe500027ffff0bf000301ffffc0e8000fe50002ffffe0bf000303ffff80e8000fe6000301ffffc0bf000203ffffe7000fe6000303ffffc0bf000207ffffe7000fe6000307ffff80bf00020ffffee7000ee6000207ffffbe00020ffffce7000ee600020fffffbe00020ffff8e7000ee600021ffffebe00020ffff0e7000ee600023ffffcbe00020fffe0e7000ee600027ffffcbe00020fffc0e7000fe7000301fffff8be000207ffc0e7000ee7000303fffff0be000107ffe6000ee700030ffffff0be000103fee6000de700033fffffe0bd0000f8e6000be900017c00feff00c0a10008e900fcff00c0a1000aea000001fcff0080a10008ea000003fcffa0000aea000007fdff00fea0000aea000007fdff00fca0000aea00000ffdff00f8a0000aea00000ffdff00f8a0000aea00000ffdff00f0a0000aea00001ffdff00e0a0000aea00001ffdff00c0a0000aea00001ffdff0080a00008ea00001ffdff9f000aea00001ffeff00fe9f000aea00001ffeff00fc9f000aea00001ffeff00f89f000aea00000ffeff00f09f000aea00000ffeff00e09f000aea00000ffeff00c09f0008ea000007feff9e0009ea000307fffffc9e0009ea000303fffff89e0009ea000301ffffe09e0007e900017fff9d0007e900011ff89d0002830002830002830002830002830002830002830002830002830000ff}\par \par \par \par \par \par \par \par \par \par \par \par }{\fs40 \hich\af7\dbch\af4\loch\f7 By Phil Montoya\par \par \par \par \par \par }{\fs32 \hich\af7\dbch\af4\loch\f7 Copyright 1985 \par \hich\af7\dbch\af4\loch\f7 By the Byte Works, Inc.\par }{\par \sect }\sectd \sbkodd\linex-32767\headery2520\footery2520\endnhere\sectdefaultcl \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \par \par \par \par \par \par \par \par \par }{\fs32 \hich\af7\dbch\af4\loch\f7 dedicated to my wife, Annette\par \par }\pard \s15\qj\li2520\widctlpar\adjustright {\fs32 \hich\af7\dbch\af4\loch\f7 -Phil Montoya\par }\pard \s15\qj\widctlpar\adjustright {\par \par \sect }\sectd \sbkodd\linex-32767\headery2520\footery2520\endnhere\sectdefaultcl \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\hich\af4\dbch\af4\loch\f4 Apple Computer, Inc., makes no warranties, either expressed or implied, regarding the enclosed computer software packa\hich\af4\dbch\af4\loch\f4 ge, its merchantability, or its fitness for any particular purpose.\par \par \hich\af4\dbch\af4\loch\f4 ProDOS and Applesoft are registered trademarks of Apple Computer, Inc.\par \par }{\b \hich\af4\dbch\af4\loch\f4 Limited Warranty}{\hich\af4\dbch\af4\loch\f4  - Subject to the below stated limitations, Byte Works hereby warrants that the program contained i\hich\af4\dbch\af4\loch\f4 n this unit will load and run on the standard manufacturer's configurations for the computer listed for a period of ninety (90) days from the date of purchase. Except for such warranty, this product is supplied on an "as is" basis without warranty as to m\hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4 rchantability or its fitness for any particular purpose. The limits of warranty extend only to the original purchaser.\par \par \hich\af4\dbch\af4\loch\f4 Neither Byte Works, nor the author of this program are liable or responsible to the purchaser and/or user for loss or damages caused, or\hich\af4\dbch\af4\loch\f4  alleged to be caused, directly or indirectly by this software and its attendant documentation, including (but not limited to) interruption of service, loss of business, or anticipatory profits.\par \par \hich\af4\dbch\af4\loch\f4 To obtain the warranty offered, the enclosed purchaser regis\hich\af4\dbch\af4\loch\f4 tration card must be completed and returned to The Byte Works within ten days of purchase.\par \par }{\b \hich\af4\dbch\af4\loch\f4 Important Notice}{\hich\af4\dbch\af4\loch\f4  - This is a fully copyrighted work and as such is protected under the copyright laws of the United States of America. According to these laws, cons\hich\af4\dbch\af4\loch\f4 umers of copywritten material may make copies for their personal use only. Duplication for any other purposes whatsoever would constitute infringement of copyright laws and the offender would be liable to civil damages of up to $50,000 in addition to actu\hich\af4\dbch\af4\loch\f4 a\hich\af4\dbch\af4\loch\f4 l damages, plus criminal penalties of up to one year imprisonment and/or a $10,000 fine.\par \par \hich\af4\dbch\af4\loch\f4 This product is sold for use on a single computer at a single location. Contact the publisher for information regarding licensing for use at multiple-workstation or m\hich\af4\dbch\af4\loch\f4 ultiple-computer installations.\par \par }{\b \hich\af4\dbch\af4\loch\f4 ORCA/M Libraries}{\hich\af4\dbch\af4\loch\f4  - This program makes use of libraries contained in ORCA/M. These libraries are fully copyrighted, and are used here by permission.\par \par }{\b \hich\af4\dbch\af4\loch\f4 Use of the Graphics Library in Other Programs}{\hich\af4\dbch\af4\loch\f4  - It is the policy of the By\hich\af4\dbch\af4\loch\f4 te Works to License the graphics libraries to purchasers of Byte Paint free of charge. A copy of the program, along with any documentation, is required at the time of licensing, and the documentation must give credit for using the libraries. For details, \hich\af4\dbch\af4\loch\f4 p\hich\af4\dbch\af4\loch\f4 lease contact the Byte Works.\par \par \sect }\sectd \sbkodd\linex-32767\headery2520\footery2520\endnhere\sectdefaultcl \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \par \par \par \par \par \par \par \par \par \par \hich\af4\dbch\af4\loch\f4 I would like to express many thanks to Mike Westerfield. First of all I would like to thank him for giving me the chance to do Byte Paint, secondly, I am grateful for all the guidance, supervision and enthusiasm h\hich\af4\dbch\af4\loch\f4 e provided throughout this project, and finally, I am grateful for the many lessons in structured assembly language programming Mike has so patiently dictated.\par \par \hich\af4\dbch\af4\loch\f4 The graphics routines were adapted from the graphics libraries provided with ProDOS ORCA/M 4.0.\hich\af4\dbch\af4\loch\f4  It should be noted that many changes were made to optimize the routines for our particular purpose.\par \par \sect }\sectd \sbkodd\linex-32767\headery2520\footery2520\endnhere\sectdefaultcl \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\hich\af4\dbch\af4\loch\f4 TABLE OF CONTENTS\par \par }\pard\plain \s16\sb200\widctlpar\tqr\tx6110\adjustright \fs20\lang1024\loch\af4\hich\af4\dbch\f4\cgrid {\field\fldedit{\*\fldinst \hich\af4\dbch\af4\loch\f4  TOC \\o "1-3" }{\fldrslt Introduction to Byte Paint\tab {\field{\*\fldinst  PAGEREF _Toc497644153 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100350033000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 11}}\par The Byte Paint Drawing Program\tab {\field{\*\fldinst  PAGEREF _Toc497644154 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100350034000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 11}}\par \pard\plain \s19\li240\widctlpar\tqr\tx6110\adjustright \fs20\lang1024\loch\af4\hich\af4\dbch\f4\cgrid Selecting Colors\tab {\field{\*\fldinst  PAGEREF _Toc497644155 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100350035000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 12}}\par The Icon Bar\tab {\field{\*\fldinst  PAGEREF _Toc497644156 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100350036000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 12}}\par Drawing on the Full Screen\tab {\field{\*\fldinst  PAGEREF _Toc497644157 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100350037000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 13}}\par The Menu Bar\tab {\field{\*\fldinst  PAGEREF _Toc497644158 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100350038000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 14}}\par Help\tab {\field{\*\fldinst  PAGEREF _Toc497644159 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100350039000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 14}}\par Disk\tab {\field{\*\fldinst  PAGEREF _Toc497644160 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100360030000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 14}}\par Edit Aids\tab {\field{\*\fldinst  PAGEREF _Toc497644161 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100360031000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 15}}\par \pard\plain \s16\sb200\widctlpar\tqr\tx6110\adjustright \fs20\lang1024\loch\af4\hich\af4\dbch\f4\cgrid The Byte Paint Shape Editor\tab {\field{\*\fldinst  PAGEREF _Toc497644162 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100360032000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 16}}\par Using Byte Paint Graphics from BASIC\tab {\field{\*\fldinst  PAGEREF _Toc497644163 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100360033000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 18}}\par \pard\plain \s19\li240\widctlpar\tqr\tx6110\adjustright \fs20\lang1024\loch\af4\hich\af4\dbch\f4\cgrid Installing the Graphics Package\tab {\field{\*\fldinst  PAGEREF _Toc497644164 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100360034000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 18}}\par The Graphics Screens\tab {\field{\*\fldinst  PAGEREF _Toc497644165 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100360035000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 19}}\par The Viewport\tab {\field{\*\fldinst  PAGEREF _Toc497644166 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100360036000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 20}}\par Pushing and Poping the Screen\tab {\field{\*\fldinst  PAGEREF _Toc497644167 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100360037000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 20}}\par Color Mapping\tab {\field{\*\fldinst  PAGEREF _Toc497644168 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100360038000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 20}}\par Shape Tables\tab {\field{\*\fldinst  PAGEREF _Toc497644169 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100360039000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 21}}\par Turtle Graphics\tab {\field{\*\fldinst  PAGEREF _Toc497644170 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100370030000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 21}}\par Page 3\tab {\field{\*\fldinst  PAGEREF _Toc497644171 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100370031000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 21}}\par \pard\plain \s16\sb200\widctlpar\tqr\tx6110\adjustright \fs20\lang1024\loch\af4\hich\af4\dbch\f4\cgrid Graphics Commands\tab {\field{\*\fldinst  PAGEREF _Toc497644172 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100370032000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 22}}\par \pard\plain \s19\li240\widctlpar\tqr\tx6110\adjustright \fs20\lang1024\loch\af4\hich\af4\dbch\f4\cgrid &BOX - Draw a Box\tab {\field{\*\fldinst  PAGEREF _Toc497644173 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100370033000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 24}}\par &CHGR - Initialize Color Graphics\tab {\field{\*\fldinst  PAGEREF _Toc497644174 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100370034000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 25}}\par &CMAPOFF - Color Map Off\tab {\field{\*\fldinst  PAGEREF _Toc497644175 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100370035000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 26}}\par &CMAPON - Color Map On\tab {\field{\*\fldinst  PAGEREF _Toc497644176 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100370036000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 27}}\par &COLOR= - Set the Pen Color\tab {\field{\*\fldinst  PAGEREF _Toc497644177 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100370037000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 28}}\par &COPY - Copy Shape\tab {\field{\*\fldinst  PAGEREF _Toc497644178 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100370038000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 30}}\par &CUSR - Draw System Cursor\tab {\field{\*\fldinst  PAGEREF _Toc497644179 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100370039000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 32}}\par &CUT - Cut a Shape From the Screen\tab {\field{\*\fldinst  PAGEREF _Toc497644180 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100380030000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 35}}\par &DHGR - Initialize Double High Res Graphics\tab {\field{\*\fldinst  PAGEREF _Toc497644181 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100380031000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 36}}\par &DRAWBLOCK - Draw a Block on the Screen\tab {\field{\*\fldinst  PAGEREF _Toc497644182 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100380032000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 37}}\par &DRAWTO - Draw a Line\tab {\field{\*\fldinst  PAGEREF _Toc497644183 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100380033000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 38}}\par &ELLIPSE - Draw an Ellipse\tab {\field{\*\fldinst  PAGEREF _Toc497644184 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100380034000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 39}}\par &FILL - Fill the Window\tab {\field{\*\fldinst  PAGEREF _Toc497644185 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100380035000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 40}}\par &FIND - Find the Cursor Position\tab {\field{\*\fldinst  PAGEREF _Toc497644186 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100380036000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 41}}\par &FLOOD - Flood Fill\tab {\field{\*\fldinst  PAGEREF _Toc497644187 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100380037000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 42}}\par &GROUT - Graphics Output of Text\tab {\field{\*\fldinst  PAGEREF _Toc497644188 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100380038000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 43}}\par &HOME - Clear the Screen\tab {\field{\*\fldinst  PAGEREF _Toc497644189 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100380039000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 45}}\par &INPUT - Select the Mouse, Joystick or Keyboard\tab {\field{\*\fldinst  PAGEREF _Toc497644190 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100390030000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 46}}\par &INVERSE - Invert the Screen\tab {\field{\*\fldinst  PAGEREF _Toc497644191 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100390031000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 47}}\par &MOVETO - Move the Pen\tab {\field{\*\fldinst  PAGEREF _Toc497644192 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100390032000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 48}}\par &NORMAL - Restore Output Hook\tab {\field{\*\fldinst  PAGEREF _Toc497644193 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100390033000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 49}}\par &PDL - Read the Paddle\tab {\field{\*\fldinst  PAGEREF _Toc497644194 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100390034000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 50}}\par &PLOT - Plot a Point\tab {\field{\*\fldinst  PAGEREF _Toc497644195 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100390035000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 51}}\par &POP - Pop the Screen\tab {\field{\*\fldinst  PAGEREF _Toc497644196 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100390036000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 52}}\par &PUSH - Push the Screen\tab {\field{\*\fldinst  PAGEREF _Toc497644197 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100390037000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 53}}\par &READ - Read a Pixel\tab {\field{\*\fldinst  PAGEREF _Toc497644198 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100390038000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 54}}\par &SETCMAP - Set Color Map\tab {\field{\*\fldinst  PAGEREF _Toc497644199 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003100390039000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 55}}\par &SETCUSR - Create Cursor Mask\tab {\field{\*\fldinst  PAGEREF _Toc497644200 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003200300030000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 57}}\par &TEXT - View the Text Screen\tab {\field{\*\fldinst  PAGEREF _Toc497644201 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003200300031000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 58}}\par &TRTLDRAW - Turtlegraphics Draw Command\tab {\field{\*\fldinst  PAGEREF _Toc497644202 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003200300032000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 59}}\par &TRTLMOVE - Turtlegraphics Move Command\tab {\field{\*\fldinst  PAGEREF _Toc497644203 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003200300033000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 60}}\par &TRNTO - Turtlegraphics Turn To Command\tab {\field{\*\fldinst  PAGEREF _Toc497644204 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003200300034000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 61}}\par &TURN - Turtlegraphics Turn Command\tab {\field{\*\fldinst  PAGEREF _Toc497644205 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003200300035000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 62}}\par &VIEW - Set the Viewport\tab {\field{\*\fldinst  PAGEREF _Toc497644206 \\h {{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400390037003600340034003200300036000000}}}{\fldrslt \hich\af4\dbch\af4\loch\f4 63}}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid }}\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \par \sect }\sectd \sbkodd\linex-32767\headery2520\footery2520\endnhere\sectdefaultcl \pard\plain \s1\keepn\widctlpar\outlinelevel0\adjustright \b\fs32\kerning28\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644153}\hich\af4\dbch\af4\loch\f4 Introduction to Byte Paint{\*\bkmkend _Toc497644153}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Byte Paint is re\hich\af4\dbch\af4\loch\f4 ally three programs in one. First, it is a full color drawing program that will use a mouse, joystick, or the keyboard to help you create full size color drawings on you Apple //. The new double high resolution graphics page is used, so you can draw with \hich\af4\dbch\af4\loch\f4 s\hich\af4\dbch\af4\loch\f4 ixteen vibrant colors.\par \par \hich\af4\dbch\af4\loch\f4 Next, Byte Paint includes a sophisticated editor for editing character fonts and shape tables. Byte Paint shape tables are not the same as Applesoft shape tables - with Byte Paint, shapes can be multicolored.\par \par \hich\af4\dbch\af4\loch\f4 Byte Paint is also a c\hich\af4\dbch\af4\loch\f4 omplete graphics language that you can use from your own BASIC programs. From BASIC, you can draw on either the color or black and white double high resolution screens. Since Byte Paint hides itself in the alternate 64K of your computer, your BASIC progra\hich\af4\dbch\af4\loch\f4 m\hich\af4\dbch\af4\loch\f4 s can be as large as ever. The graphics language is very extensive, including turtle graphics, automatic clipping windows, push and pop for doing pull down menus and windows, color mapping, and much more. Complete descriptions are given in the programming\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 guide, along with examples.\par \par \hich\af4\dbch\af4\loch\f4 There are also two very extensive examples of the graphics package. The drawing program and shape editor are written in uncompiled Applesoft BASIC, using the graphics package. If you haven't seen the program running, you simply\hich\af4\dbch\af4\loch\f4  won't believe how fast it is, and yet, you can list it at any time, and make changes, if you like.\par \par \hich\af4\dbch\af4\loch\f4 So, prepare yourself for a pleasant change to graphics on the Apple // - here is a program that lets you draw, and the things that you draw can be used in \hich\af4\dbch\af4\loch\f4 your own BAS programs!\par \par }\pard\plain \s1\keepn\widctlpar\outlinelevel0\adjustright \b\fs32\kerning28\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644154}\hich\af4\dbch\af4\loch\f4 The Byte Paint Drawing Program{\*\bkmkend _Toc497644154}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The drawing program is based on icons, pull down menus and windows. This makes it a very easy program to learn to use, so this section of the manual is relatively short. If you have used programs like\hich\af4\dbch\af4\loch\f4  MousePaint, simply skimming the documentation will tell you all that you need to know.\par \par \hich\af4\dbch\af4\loch\f4 To use the drawing program, simply insert the Byte Paint disk, boot your computer and select the BYTEPAINT option. Next, you will be asked if you would like to use a m\hich\af4\dbch\af4\loch\f4 ouse, joystick, or the keyboard. All will work, but we should point out that a joystick works better than the keyboard, and the mouse works best of all. Select the drawing tool of your choice by typing an M, J or K, as indicated.\par \par \hich\af4\dbch\af4\loch\f4 After a few moments, your\hich\af4\dbch\af4\loch\f4  screen will show the Byte Paint menu bar, icon bar, and color selection bar. A small arrow will be on the screen, and will respond to the mouse, joystick, or the arrow keys on the keyboard, depending on which drawing device you selected. Take a moment-to\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 move the arrow around, getting a feel for the program.\par \par \hich\af4\dbch\af4\loch\f4 Throughout the rest of this section, we will refer to "moving the mouse" and "clicking" or "holding down" the mouse button. If you are using a joystick, moving the mouse is equivalent to using the joy\hich\af4\dbch\af4\loch\f4 stick to move the cursor on the screen. The keyboard arrow keys are used to move the cursor if you select the keyboard option. If you are using the keyboard, note that holding the closed apple key down while using the arrow keys causes the cursor to move \hich\af4\dbch\af4\loch\f4 f\hich\af4\dbch\af4\loch\f4 aster across the screen. The open apple key on the keyboard is equivalent to the mouse button, as is game paddle button zero for the joystick driver.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644155}\hich\af4\dbch\af4\loch\f4 Selecting Colors{\*\bkmkend _Toc497644155}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 If you hold the mouse button down as you move it, you will draw a black line across the\hich\af4\dbch\af4\loch\f4  screen. Only the drawing window will be effected. Along the bottom of the screen, you will see a series of seventeen colored boxes. The one on the far left is larger than the others; it indicates the current color, and starts out black.\par \par \hich\af4\dbch\af4\loch\f4 Move the arrow cu\hich\af4\dbch\af4\loch\f4 rsor down to one of the colored boxes and click the mouse button. The color of the left-hand box will change to the color of the box that the arrow was on when you clicked the mouse button. Now try drawing again - you will be drawing a colored line!\par \par \hich\af4\dbch\af4\loch\f4 All o\hich\af4\dbch\af4\loch\f4 f the drawing commands will use the color you select using the color bar.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644156}\hich\af4\dbch\af4\loch\f4 The Icon Bar{\*\bkmkend _Toc497644156}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Along the left-hand edge of the screen is the icon bar. It contains your drawing tool box. To change tools, simply move the cursor over the tool you want and click the\hich\af4\dbch\af4\loch\f4  mouse button. The tool will be surrounded in gray, indicating your choice.\par \par \hich\af4\dbch\af4\loch\f4 There are eight tools in all. The one you have been using so far is the pencil, shown at the top of the screen. It draws a thin line across the screen whenever the cursor is moved\hich\af4\dbch\af4\loch\f4  while the mouse button is held down.\par \par \hich\af4\dbch\af4\loch\f4 Just below the pencil is the eraser. If you never make mistakes, you won't need this one. As you move it across the drawing area, it erases the picture (assuming that the mouse button is held down). Since the screen s\hich\af4\dbch\af4\loch\f4 tarts out white, it always leaves a white screen behind when you erase.\par \par \hich\af4\dbch\af4\loch\f4 Next is a spray can. The spray can is a very fun tool, which sprays a spotted pattern. Moving the mouse very quickly will give a very fine mist, while slowly moving across a small are\hich\af4\dbch\af4\loch\f4 a will eventually fill it in. Don't worry about getting carried away - it will never drip.\par \par \hich\af4\dbch\af4\loch\f4 The last of the conventional painting tools is the paintbrush. It works like a wide pencil, filling in a large area as you move the mouse. Like the spray can, movin\hich\af4\dbch\af4\loch\f4 g too fast can cause it to skip. Later, we will look at ways to change the shape of the paint brush.\par \par \hich\af4\dbch\af4\loch\f4 You can type information onto the screen using the letter icon, which shows up as a large Z. After selecting it, your cursor will look like an oversized 1\hich\af4\dbch\af4\loch\f4 . Move it to where you want your text information to be and click the mouse button. This locks the cursor in place it stays there until you click the mouse button again. As long as you leave it locked in place, anything you type will show up on the screen\hich\af4\dbch\af4\loch\f4 .\hich\af4\dbch\af4\loch\f4  Later, we will see how to choose character sets.\par \par \hich\af4\dbch\af4\loch\f4 The slanted line is a drawing tool that lets you draw straight lines. Move the cursor to a location in the drawing area and hold down the mouse button. While holding it down, move the mouse until the line \hich\af4\dbch\af4\loch\f4 is as long as you want it, then let up on the mouse button. A straight, colored line will appear on the screen.\par \par \hich\af4\dbch\af4\loch\f4 The last two tools let you draw rectangles and ellipses on the screen. Like the line drawing tool, you start by selecting one point, then hold \hich\af4\dbch\af4\loch\f4 the button down while you expand the shape out to its full size. Letting up on the button completes the shape.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644157}\hich\af4\dbch\af4\loch\f4 Drawing on the Full Screen{\*\bkmkend _Toc497644157}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 So far, you have only been able to draw on a part of the screen. The color bar, menu and icon bar are using part of \hich\af4\dbch\af4\loch\f4 your drawing area.\par \par \hich\af4\dbch\af4\loch\f4 The solution to this problem is found with the ESC key. When you type it, all of the screen covered by program options goes away, and you can draw on the full screen. To switch instruments or change the pen color, you must switch back, \hich\af4\dbch\af4\loch\f4 again with the ESC key.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644158}\hich\af4\dbch\af4\loch\f4 The Menu Bar{\*\bkmkend _Toc497644158}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Across the top of the screen is a menu bar. Each of the words on the menu bar represent a list of drawing aids that you can use. To get at this list, move the mouse up to the word that you want to see a menu for, push\hich\af4\dbch\af4\loch\f4  the mouse button, and hold it down.\par \par \hich\af4\dbch\af4\loch\f4 To activate one of the options, hold the mouse button down and move the cursor down until the option you want is shown in inverse, then release the button. Releasing the button without an option active will cause the m\hich\af4\dbch\af4\loch\f4 enu to disappear, and no action to be taken.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644159}\hich\af4\dbch\af4\loch\f4 Help{\*\bkmkend _Toc497644159}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The first menu is simply a help menu. Under it you will find several entries, each of which causes a help screen to appear with a brief comment about the topic.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644160}\hich\af4\dbch\af4\loch\f4 Disk{\*\bkmkend _Toc497644160}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The disk menu is used to load and sa\hich\af4\dbch\af4\loch\f4 ve the drawing screen or shape tables, to catalog the disk, or delete a file. In each case, a file name is asked for. In the case of the CATALOG command, the name is the name of the directory you want to see cataloged, and can be blank if the default dire\hich\af4\dbch\af4\loch\f4 c\hich\af4\dbch\af4\loch\f4 tory is wanted. In all other cases, a specific file name is required. It can be a simple file name or a full or partial path name.\par \par \hich\af4\dbch\af4\loch\f4 By the way, you don't need to know much about ProDOS to use this program, but to use the disk options, you do need to know t\hich\af4\dbch\af4\loch\f4 he rules for file names and path names under ProDOS. If you don't know about ProDOS file names, consult your ProDOS reference manuals for help.\par \par \hich\af4\dbch\af4\loch\f4 The functions of the CATALOG and DELETE options should be fairly familiar: the first shows you the files on a d\hich\af4\dbch\af4\loch\f4 irectory, while the second destroys one of those files. LOAD PIC and SAVE PIC are also fairly obvious, once you know that PIC is an abbreviation for picture: these commands save a picture that you have drawn to disk, or load one from disk for further edit\hich\af4\dbch\af4\loch\f4 i\hich\af4\dbch\af4\loch\f4 ng.\par \par \hich\af4\dbch\af4\loch\f4 LOAD TABLE and SAVE TABLE are a bit more complex. Byte Paint makes extensive use of what it calls shape tables. These are very different from the shape tables used in Applesoft BASIC programs. In Byte Paint, a shape table is a collection of up to 256 \hich\af4\dbch\af4\loch\f4 different shapes. These can be created using the shape editor or the drawing program. The first 128 of the shapes are generally used as the ASCII character set. This means that loading a shape table will cause the drawing program to change character sets,\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 and that is the principle reason for using the LOAD TABLE command. In the directory /BYTEPAINT/FONTS on the Byte Paint disk you will find a series of shape tables that implement various character sets when used with the character icon drawing tool. Use th\hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4  CATALOG command to see what they are, and LOAD TABLE to use them.\par \par \hich\af4\dbch\af4\loch\f4 Another use of shape tables is to add shapes to your BASIC programs. This will be discussed more fully in the next section. Once a shape table is created, SAVE TABLE places it on disk, whe\hich\af4\dbch\af4\loch\f4 re it can be found later.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644161}\hich\af4\dbch\af4\loch\f4 Edit Aids{\*\bkmkend _Toc497644161}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Under the edit aids menu, you will find a variety of commands to do special things to your drawing. The first three options, CUT, PASTE, and DELETE, are used to copy and move rectangular areas of the screen. When you s\hich\af4\dbch\af4\loch\f4 elect CUT or DELETE your cursor will change to a small cross hair. You can now select a rectangular area of the screen the same way that you draw a box with the box drawing tool: first select one corner of the area, then hold the mouse button down while y\hich\af4\dbch\af4\loch\f4 o\hich\af4\dbch\af4\loch\f4 u move the cursor to the other corner, then release the mouse button. If you are using DELETE, the area marked disappears. CUT doesn't make any change to the drawing. Either operation copies the area into the shape table as shape 255, which is popped back\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 onto the screen using the PASTE command. PASTE will place the area back onto the screen as many times and in as many places as you like. Once PASTE is selected, you get an arrow cursor. Place the arrow where you want the top left of the area to be placed,\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 then click the mouse button.\par \par \hich\af4\dbch\af4\loch\f4 CUT and DELETE can also be used to build a shape table for use in your BASIC programs, or for use as a clip art set in later drawing sessions. Once you CUT or DELETE an area, you can SAVE it to a different area of the shape ta\hich\af4\dbch\af4\loch\f4 ble. SAVE asks for the number of a shape, then moves the last shape that you cut out into the shape table at the location you give it. To move a shape from somewhere in the shape table into shape 255, use GET. It will also ask for a shape number, this tim\hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4  the one you want to fetch. Once it is moved into shape 255, you can use PASTE to place it on the screen.\par \par \hich\af4\dbch\af4\loch\f4 If you place a shape into one of the shapes numbered 0 to 127, there is a second way to get it out to the screen. In the alpha mode, typing the key t\hich\af4\dbch\af4\loch\f4 hat corresponds to the shape will cause it to be printed. For example, the ASCII character code for an "A" character is 65 ($41). Try cutting an area from the screen and saving it to shape number 65 ($41). Now use the Z icon to type something on the scree\hich\af4\dbch\af4\loch\f4 n\hich\af4\dbch\af4\loch\f4 . Be sure that you use a capitol A - you will see your new shape instead of the character!\par \par \hich\af4\dbch\af4\loch\f4 The last option in the edit aids menu is the only one that has nothing to do with the shape table. The SET BRUSH command lets you choose among sixteen different bru\hich\af4\dbch\af4\loch\f4 sh shapes. Once selected, the brush shape will be used by the brush icon. After you choose a brush from those drawn on the screen, move the cursor to the small box at the upper left corner of the brush window and click the button. This will cause the brus\hich\af4\dbch\af4\loch\f4 h\hich\af4\dbch\af4\loch\f4 es to disappear and allow you to start painting with the brush you have chosen.\par \par }\pard\plain \s1\keepn\widctlpar\outlinelevel0\adjustright \b\fs32\kerning28\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644162}\hich\af4\dbch\af4\loch\f4 The Byte Paint Shape Editor{\*\bkmkend _Toc497644162}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The drawing program that we just looked at is a very good program for drawing full size pictures, but it is not easy to use to edit character sets\hich\af4\dbch\af4\loch\f4 . There are also some unique characteristics about shapes when they are used as characters that must be kept in mind, For those reasons, Byte Paint includes a special program for editing character sets. It is also good at editing shapes.\par \par \hich\af4\dbch\af4\loch\f4 First, let's take\hich\af4\dbch\af4\loch\f4  a look at how colors are used by Byte Paint. When you are using the Z icon to write characters on the screen, Byte Paint makes use of color mapping so that your characters show up in the current pen color, and so that the background shows through. Color \hich\af4\dbch\af4\loch\f4 n\hich\af4\dbch\af4\loch\f4 umber five (counting from zero, with black as zero) is a gray color. If you look at the color bar, you will see that color number ten is also gray. Byte Paint uses the first gray (number five) as an invisible color, so that any part of a character defined\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 as color five will not be drawn when you type. Similarly, black is used as a mapped color. Any point in a character that is black in the shape editor will be drawn as the current pen color on the screen when Byte Paint uses the table. All of the other col\hich\af4\dbch\af4\loch\f4 o\hich\af4\dbch\af4\loch\f4 rs show up on the Byte Paint screen the same way that they do in the shape editor. This gives you the ability to define full color character sets, with the limitation that color five cannot be used, and the pen color must be black when the character is dr\hich\af4\dbch\af4\loch\f4 a\hich\af4\dbch\af4\loch\f4 wn for black to be available as a specific color. The Rainbow font provided with Byte Paint gives, ahem, a graphic illustration of this.\par \par \hich\af4\dbch\af4\loch\f4 To use the shape editor, simply select the shape editor from the main menu and choose your drawing tool. You will see \hich\af4\dbch\af4\loch\f4 a familiar looking menu bar across the top, and the color bar across the bottom. These are used just like they were used in the drawing program. The icon bar, on the left, has changed a bit, but still serves the purpose of expanding the number of things y\hich\af4\dbch\af4\loch\f4 o\hich\af4\dbch\af4\loch\f4 u can do to a character.\par \par \hich\af4\dbch\af4\loch\f4 To get started, pull down the options menu. There you will find some of the same commands that were available in the drawing program. DELETE and CATALOG are used to see what is on the disk, and to remove existing files. LOAD TABLE\hich\af4\dbch\af4\loch\f4  and SAVE TABLE let you load an existing shape table, or save one that you have edited. Shape tables are loaded from and saved to the /BYTEPAINT/FONTS directory.\par \par \hich\af4\dbch\af4\loch\f4 Two other options are available there, so let's look at them now. The first is SET SIZE. This\hich\af4\dbch\af4\loch\f4  option lets you set the size of the character that you are looking at, expanding or contracting it. After selecting that option, you will be asked for a height (in pixels) and width (also in pixels). The character will be expanded by adding rows to the b\hich\af4\dbch\af4\loch\f4 o\hich\af4\dbch\af4\loch\f4 ttom and columns on the right of the existing character, or contracted by deleting columns from the right or rows from the bottom. Any added rows or columns will use color number five, the invisible gray.\par \par \hich\af4\dbch\af4\loch\f4 The last menu option is COPY SHAPE. It will ask fo\hich\af4\dbch\af4\loch\f4 r the number of an existing shape, and will copy that shape onto the one you are editing.\par \par \hich\af4\dbch\af4\loch\f4 Once a table is loaded, you will want to start editing the character set. To get a character to edit, simply type the appropriate keyboard character. The keyboard wi\hich\af4\dbch\af4\loch\f4 ll normally use the standard ASCII character set, so that a 65 will be an A. If you want to edit shapes with numbers higher than 128, you can still use the font editor; simply hold down the closed apple key when you type the character. The font editor wil\hich\af4\dbch\af4\loch\f4 l\hich\af4\dbch\af4\loch\f4  reverse the high bit, which effectively adds 128 to the ASCII character set number.\par \par \hich\af4\dbch\af4\loch\f4 By the way, you can type control characters this way. For example, the RETURN key is a control D, which will edit shape number 13.\par \par \hich\af4\dbch\af4\loch\f4 The icon bar shows some editing option\hich\af4\dbch\af4\loch\f4 s which effect the entire shape. The arrows will shift the shape one pixel in the direction of the arrow, filling the new row or column with the invisible gray and destroying the row or column shifted off of the edit area. The double arrows will flip the \hich\af4\dbch\af4\loch\f4 s\hich\af4\dbch\af4\loch\f4 hape.\par \par \hich\af4\dbch\af4\loch\f4 Finally, use the mouse (or keyboard or joystick) to actually edit the shape. After selecting the appropriate color (black for the current pen color), simply move the cursor to the pixel you want to change and click the mouse button. This must be don\hich\af4\dbch\af4\loch\f4 e on the expanded window, not on the actual size shape.\par \par }\pard\plain \s1\keepn\widctlpar\outlinelevel0\adjustright \b\fs32\kerning28\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644163}\hich\af4\dbch\af4\loch\f4 Using Byte Paint Graphics from BASIC{\*\bkmkend _Toc497644163}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 If you have been trying out the programs, it may be necessary to remind you that they were written in BASIC. Despite their speed, both were really written entire\hich\af4\dbch\af4\loch\f4 ly in Applesoft BASIC, and they have not been compiled.\par \par \hich\af4\dbch\af4\loch\f4 The way that we did this was to start by implementing a very powerful graphics package using Amper commands. As it turns out, Applesoft can be extended by writing subroutines in assembly language, th\hich\af4\dbch\af4\loch\f4 en using a special hook to cause Applesoft to call the assembly language subroutines. Every time Applesoft finds an "&" character in the program, it calls the assembly language routines, which read the rest of the line and execute a new command. The Byte \hich\af4\dbch\af4\loch\f4 P\hich\af4\dbch\af4\loch\f4 aint graphics commands are implemented this way, so you can use them from your own BASIC programs.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644164}\hich\af4\dbch\af4\loch\f4 Installing the Graphics Package{\*\bkmkend _Toc497644164}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 There are two ways to install the amper package that lets you use the Byte Paint graphics language from BASIC. The easiest \hich\af4\dbch\af4\loch\f4 way is to boot the program disk and select the QUIT option from the initialization menu, After typing NEW to clear out the old program, you can begin typing in and running your BASIC program. One important note is in order: the Byte Paint initialization r\hich\af4\dbch\af4\loch\f4 o\hich\af4\dbch\af4\loch\f4 utines change some zero page locations so that BASIC programs start at $6000 instead of the normal $800. This gives more room for the BASIC program, since it will not run into the graphics page. It also gives a good spot to load shape tables, since the me\hich\af4\dbch\af4\loch\f4 m\hich\af4\dbch\af4\loch\f4 ory from $800 to $1FFF (decimal 2048 to 8191) and $4000 to $5FFF (decimal 16384 to 24575) is free.\par \par \hich\af4\dbch\af4\loch\f4 The other way to install the amper package is by running a binary program called INIT.PROGRAM. From the BASIC command line, just type\par \par }\pard\plain \s17\qj\fi360\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid \hich\af6\dbch\af4\loch\f6 BRUN INIT.PROGRAM\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 IN\hich\af4\dbch\af4\loch\f4 IT.PROGRAM will need to access another binary file, called ASM.CODE. For that reason, ASM.CODE must be on the default prefix when you run INIT.PROGRAM. You can do all of this from a BASIC program, if the BASIC program is short. If your program is fairly l\hich\af4\dbch\af4\loch\f4 o\hich\af4\dbch\af4\loch\f4 ng, you will need to use a special boot program, like the one below. Using this method, your BASIC programs will start at $800 (decimal 2048) unless you have already changed this yourself.\par \par }\pard\plain \s17\qj\fi360\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid \hich\af6\dbch\af4\loch\f6 100 REM SET UP BYTE PAINT GRAPHICS \par 110 REM AND CALL ANOTHER PROGRAM \par 120 D$ = CHR$(4) \par 130 PRINT D$;"BRUN INIT.PROGRAM" \par 140 PRINT D$;"RUN MYPROG"\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644165}\hich\af4\dbch\af4\loch\f4 The Graphics Screens{\*\bkmkend _Toc497644165}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The Byte Paint graphics routines draw on the double high resolution graphics screen. Double high resolution graphics doubles the number of pixels that \hich\af4\dbch\af4\loch\f4 are on the high resolution graphics screen by putting twice as many pixels on each line. The high resolution graphics page accessed by Applesoft has 280 points on each line; with Byte Paint, you get 560 points per line.\par \par \hich\af4\dbch\af4\loch\f4 Because of the unique way that the \hich\af4\dbch\af4\loch\f4 Apple // computer sends out its video signal to the monitor, the graphics screen looks very different on a color monitor or television set than it does when displayed on a one color monitor. On a one color monitor, each of the 560 points on a line is dist\hich\af4\dbch\af4\loch\f4 i\hich\af4\dbch\af4\loch\f4 nct. The better the monitor, the more each of the points looks like a little square box. On a color monitor or television set, you can only see 140 distinct points, but each of those points can appear in any one of sixteen colors. There is absolutely no r\hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4 striction about which colors can appear next to one another. On the other hand, you should keep in mind that most color monitors and all television sets will show some bleed. Thus, even though you can put a white dot next to a brown one, you get something\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 that looks more like a yellow dot beside a black one.\par \par \hich\af4\dbch\af4\loch\f4 Because of the big difference between what the screen looks like on a monitor and what it looks like on a color display, Byte Paint gives two different ways of drawing on the screen. The one used in th\hich\af4\dbch\af4\loch\f4 e drawing program addressed the screen as if it were a color screen, 192 dots high and 140 dots wide, with each dot having sixteen colors. Another method lets you address the screen as a black and white screen with 560 dots on each of the 192 rows. The co\hich\af4\dbch\af4\loch\f4 m\hich\af4\dbch\af4\loch\f4 mands for the two screens are the same; you choose which you will use when you initialize the graphics screen. The &CHGR command sets up the color screen, while the &DHGR command sets up the black and white screen.\par \par \hich\af4\dbch\af4\loch\f4 As you would expect, the X coordinates o\hich\af4\dbch\af4\loch\f4 n the screen start at zero on the left edge, and increase as you move to the right. The Y coordinate works differently than it does in Applesoft, In Applesoft, the top of the screen was 0 and the bottom was 191. Byte Paint uses a more standard way of addr\hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4 ssing the screen, placing 0 at the bottom of the screen, and 191 at the top. This makes the screen coordinates work just like the first quadrant of a Cartesian coordinate system, which is the way most expensive graphics computers work.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644166}\hich\af4\dbch\af4\loch\f4 The Viewport{\*\bkmkend _Toc497644166}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The g\hich\af4\dbch\af4\loch\f4 raphics commands contain several features that you may not have seen before unless you have programmed in on of the more advanced languages, like Pascal or Logo. The viewport is one of these. The viewport is a rectangular area on the screen. It is used to\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 protect the screen from changes, without needing to carefully check the positions you are about to plot to. By default, the viewport is set to the entire screen. If you change it to a smaller area using the &VIEW command, you cannot change the area outsid\hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4  of the viewport. The graphics commands still function, and you don't get an error, but only the part of the screen in the viewport is changed.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644167}\hich\af4\dbch\af4\loch\f4 Pushing and Poping the Screen{\*\bkmkend _Toc497644167}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 In order to make pull down menus and windows work, you need a way to save part o\hich\af4\dbch\af4\loch\f4 f the screen. Byte Paint's &PUSH command will do that. It can save any rectangular area on the screen, after which &POP can restore it. These commands work like a stack, so you can push more than one area of the screen, but you must restore them in the re\hich\af4\dbch\af4\loch\f4 v\hich\af4\dbch\af4\loch\f4 erse order of the way they were stored. By the way, the memory used to push and pop large areas can add tip to several kilobytes very quickly. Byte Paint uses the alternate 64K for its stack, so the memory used is not taken away from your BASIC program.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644168}\hich\af4\dbch\af4\loch\f4 Color Mapping{\*\bkmkend _Toc497644168}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 One of the most powerful features of the Byte Paint graphics language is the ability to define color maps. A color map lets you define exactly what will happen when a point is plotted using any of the drawing commands. With color mapping enab\hich\af4\dbch\af4\loch\f4 led, you can set the color map so that the color drawn depends not only on the current pen color, but also on the color of the screen where the point will be drawn. The commands &CMAPON, &CMAPOFF and &SETCMAP create this ability, and fully describe how it\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 works.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644169}\hich\af4\dbch\af4\loch\f4 Shape Tables{\*\bkmkend _Toc497644169}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Byte Paint allows you to define shape tables, which work with the &DRAWBLOCK command and the &GROUT command. (&GROUT lets you tell Byte Paint to draw text characters on the graphics screen,) These shape tables work quite differently f\hich\af4\dbch\af4\loch\f4 rom the shape tables in standard Applesoft. The &CUT command is used to define the shape table by placing areas of the screen into the table.' &COPY can then be used to move them around.\par \par \hich\af4\dbch\af4\loch\f4 Before using a shape table, you must decide where in memory it will \hich\af4\dbch\af4\loch\f4 be located, and how long it is. The graphics commands will give an error if you try to use shapes without doing this. Once you select an area of memory and protect it with appropriate settings of LOMEM and HIMEM, you should clear the memory to all zeros w\hich\af4\dbch\af4\loch\f4 i\hich\af4\dbch\af4\loch\f4 th a loop of POKE statements. Next, place the address of the first byte in the area at $3C2 (decimal 962), then place the address of the last byte in the table area at $3C4 (964). After that, you can create shapes, or even use BLOAD and BSAVE to load and \hich\af4\dbch\af4\loch\f4 s\hich\af4\dbch\af4\loch\f4 ave shape tables from and to disk.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644170}\hich\af4\dbch\af4\loch\f4 Turtle Graphics{\*\bkmkend _Toc497644170}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Turtle graphics uses the concept of a turtle placed on the screen which will move across the screen drawing lines. You can tell the turtle to turn or move, and can tell it to draw a line or not to. The B\hich\af4\dbch\af4\loch\f4 yte Paint commands &TRTLMOVE, &TRTLDRAW, &TRNTO and &TURN implement turtle graphics for double high resolution graphics.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644171}\hich\af4\dbch\af4\loch\f4 Page 3{\*\bkmkend _Toc497644171}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The Byte Paint graphics package hides itself in the alternate 64K of your 128K Apple. By doing this, it doesn't use up any of \hich\af4\dbch\af4\loch\f4 the memory that would normally be available for BASIC programs. Byte Paint uses page 3 to communicate between your running BASIC program and the graphics subroutines in the alternate memory bank, It also places certain values in page 3, so that you can us\hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4  the PEEK command from BASIC to read them.\par \par \par \hich\af4\dbch\af4\loch\f4 The table below summarizes the use made of page 3. Individual command descriptions tell what use is made of them, and the sample programs give examples of how to use them.\par \par }\pard \s15\qj\fi-2520\li2520\widctlpar\tx1260\adjustright {\hich\af4\dbch\af4\loch\f4 $300 - $3BC\tab 768 - 956\tab Code used to swi\hich\af4\dbch\af4\loch\f4 tch control between BASIC and Byte Paint.\par \hich\af4\dbch\af4\loch\f4 $3BD\tab 957\tab BUTTON - 0 if the button is not pressed, 1 if it is.\par \hich\af4\dbch\af4\loch\f4 $3BE - $3BF\tab 958 - 959\tab ABSX - set by &PDL to the X position of the mouse, joystick or keyboard cursor.\par \hich\af4\dbch\af4\loch\f4 $3CO - $3Cl\tab 960 - 961\tab ABSY - set by &PDL to the Y \hich\af4\dbch\af4\loch\f4 position of the mouse, joystick or keyboard cursor.\par \hich\af4\dbch\af4\loch\f4 $3C2 - $3C3\tab 962 - 963\tab SHAPEADR - The address of the first byte in the shape table.\par \hich\af4\dbch\af4\loch\f4 $3C4 - $3C5\tab 964 - 965\tab SHAPEEND - The address of the last byte available to the shape table.\par \hich\af4\dbch\af4\loch\f4 $3CA - $3CB\tab 970 - 971\tab PENX - \hich\af4\dbch\af4\loch\f4 X location of the graphics pen; set by &FIND.\par \hich\af4\dbch\af4\loch\f4 $3CC - $3CD\tab 972 - 973\tab PENY - Y location of the graphics pen; set by &FIND.\par \hich\af4\dbch\af4\loch\f4 $3C9\tab 969\tab POINT - The color of the point last read by &READ.\par \hich\af4\dbch\af4\loch\f4 $3C6 - $3C7\tab 966 - 967\tab ANGLE - Current angle of the turtle.\par \hich\af4\dbch\af4\loch\f4 $3C8\tab 968\tab INVISIB\hich\af4\dbch\af4\loch\f4 LE - Flag that indicates if color 5 is to be an invisible color.\par }\pard \s15\qj\widctlpar\adjustright {\par }\pard\plain \s1\keepn\widctlpar\outlinelevel0\adjustright \b\fs32\kerning28\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644172}\hich\af4\dbch\af4\loch\f4 Graphics Commands{\*\bkmkend _Toc497644172}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 The rest of this section explains the commands that are available with Byte Paint.\par \par \hich\af4\dbch\af4\loch\f4 The command descriptions have four parts. The first part lists the parameters needed by\hich\af4\dbch\af4\loch\f4  the command, in the order that they appear in the BASIC program. When using the command in a program, multiple parameters are separated by commas. The next section tells what the command does. If the command can cause an error (other that a syntax error)\hich\af4\dbch\af4\loch\f4 ,\hich\af4\dbch\af4\loch\f4  the third section tells you what those errors are. The last section is a short sample program showing how the command is used.\par \par \hich\af4\dbch\af4\loch\f4 As you are no doubt aware, Applesoft puts blanks wherever it pleases, and takes out any blanks that you might put in to make th\hich\af4\dbch\af4\loch\f4 e program easier to read. Some of the names for the graphics commands contain Applesoft keywords, This does not effect the running of the program, but does cause blanks to occasionally show up inside of the graphics command.\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644173}\hich\af4\dbch\af4\loch\f4 &BOX - Draw a Box{\*\bkmkend _Toc497644173}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters\hich\af4\dbch\af4\loch\f4 :\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 LEFT - left edge of the box\par RIGHT - right edge of the box\par TOP - top edge of the box\par BOTTOM - bottom edge of the box\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 A box is drawn on the graphics screen. The color of the box will match the current pen color, and its size is determined by the\hich\af4\dbch\af4\loch\f4  four parameters. The box is not filled in.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Ex amp l e:\par \par }\pard\plain \s17\qj\fi360\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid \hich\af6\dbch\af4\loch\f6 10 L = 139 / 2 - 2:R = 139 / 2 + 2\par 20 B = 191 / 2 - 2:T = 191 / 2 + 2\par 30\tab & C HGR\par 40\tab & COLOR= 15\par 50\tab FOR J = 0 TO 33\par 60\tab & BOXL,R,B,T\par 70 L = L - 2:R = R + 2:B = B 2:T = T + 2\par 80 NEXT J\par 90 INPUT A$: HOME : & TEXT LIST\par 100 & TEXT\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644174}\hich\af4\dbch\af4\loch\f4 &CHGR - Initialize Color Graphics{\*\bkmkend _Toc497644174}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 This command sets up the screen for color double high resolution graphics. It is used just like the HGR command in Applesoft. The v\hich\af4\dbch\af4\loch\f4 iewport is set to the full screen, which means that the top is set to 191, the bottom to 0, the left to 0, and the right to 139. The pen color is set to black, and the push and pop stacks are initialized.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 See &BOX for an example.\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644175}\hich\af4\dbch\af4\loch\f4 &CMAPOFF - Color Map Off{\*\bkmkend _Toc497644175} \par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none \par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 Color mapping is turned off. See &CMAPON for a description of color mapping. \par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none \par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example: \par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 SEE &SETCMAP\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644176}\hich\af4\dbch\af4\loch\f4 &CMAPON - Color Map On{\*\bkmkend _Toc497644176}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 Color mapping is turned o\hich\af4\dbch\af4\loch\f4 n. Color mapping is a very powerful feature of the graphics package that lets you define what will happen when one color is drawn over a point that used to be a different color. For example, if you need to make sure that a red line is seen, but you do not\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 know what color the background is, you could use color mapping to make sure that when a red line is drawn on a red background, it shows up as white.\par \par \hich\af4\dbch\af4\loch\f4 This command simply turns color mapping on. By default, all of the colors are set up so that they will sho\hich\af4\dbch\af4\loch\f4 w up as the pen color, no matter what the background color is. In plain English, that means things work just like they did before color mapping was turned on, The &SETCMAP command is used to change the color map; it is described later.\par \par \hich\af4\dbch\af4\loch\f4 By the way, color m\hich\af4\dbch\af4\loch\f4 apping works by reading a point from the graphics screen, deciding what color to draw, and then drawing a point. Deciding what color to draw doesn't take much time, but reading a point from the screen takes about as much time as plotting one. For that rea\hich\af4\dbch\af4\loch\f4 s\hich\af4\dbch\af4\loch\f4 on, all of the graphics commands work about half as fast with color mapping turned on.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 None\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 SEE &SETCMAP\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644177}\hich\af4\dbch\af4\loch\f4 &COLOR= - Set the Pen Color{\*\bkmkend _Toc497644177}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 NUM1 - Color Number\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 This command is used to set the color that all of the dr\hich\af4\dbch\af4\loch\f4 awing commands will use. The parameter is the number of the color to set the pen to. The numbers range from zero to fifteen, and match the colors from the low resolution graphics screen.\par \par }\pard \s15\qj\li720\widctlpar\tx2160\adjustright {\hich\af4\dbch\af4\loch\f4 color\tab color\par \hich\af4\dbch\af4\loch\f4 number\tab name\par \par \hich\af4\dbch\af4\loch\f4 0\tab black\par \hich\af4\dbch\af4\loch\f4 I\tab magenta\par \hich\af4\dbch\af4\loch\f4 2\tab dark blue\par \hich\af4\dbch\af4\loch\f4 3\tab purple\par \hich\af4\dbch\af4\loch\f4 4\tab da\hich\af4\dbch\af4\loch\f4 rk green\par \hich\af4\dbch\af4\loch\f4 5\tab gray\par \hich\af4\dbch\af4\loch\f4 6\tab medium blue\par \hich\af4\dbch\af4\loch\f4 7\tab light blue\par \hich\af4\dbch\af4\loch\f4 8\tab brown\par \hich\af4\dbch\af4\loch\f4 9\tab orange\par \hich\af4\dbch\af4\loch\f4 10\tab gray\par \hich\af4\dbch\af4\loch\f4 11\tab pink\par \hich\af4\dbch\af4\loch\f4 12\tab green\par \hich\af4\dbch\af4\loch\f4 13\tab yellow\par \hich\af4\dbch\af4\loch\f4 14\tab aqua\par \hich\af4\dbch\af4\loch\f4 15\tab white\par }\pard \s15\qj\widctlpar\adjustright {\par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard \s15\qj\keepn\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s17\qj\fi360\keepn\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid \hich\af6\dbch\af4\loch\f6 10 X = 9\par 20 L = O:R = X\par 30 COLR = 0\par 40 & C HGR\par 50 & COLOR= COLR\par 60 & FILL\par 70 FOR COLR = I TO 15\par 80 & COLOR= COLR\par 90 & VIEWL,R,0,191\par 100 & FILL\par 110 L = L + X:R = R + X\par 120 NEXT COLR\par \pard \s17\qj\fi360\widctlpar\adjustright 130 INPUT A$: HOME : & TEXT : LIST\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644178}\hich\af4\dbch\af4\loch\f4 &COPY - Copy Shape{\*\bkmkend _Toc497644178}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 FROM - location to copy from\par TO - location to copy to\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 The graphics routines can keep track of 2\hich\af4\dbch\af4\loch\f4 56 different shapes at a time. Each of these shapes has a number; the numbers start at 0 and go up. to 255. &COPY takes the shape whose number is specified by the FROM parameter and copies it into the shape specified by the TO parameter. If either paramet\hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4 r is not in that range, an illegal quantity error results. If the &COPY results in overflowing the shape table area, you will get an out of memory error.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error\par Out of Memory\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard \s15\qj\keepn\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s17\qj\fi360\keepn\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid \hich\af6\dbch\af4\loch\f6 10 BL = 962:BH = 964:FL = 968\par 20 & C HGR\par 30 & COLOR= 15: & FILL\par 40 REM USE MACHINE CODE TO CLEAR FONT AREA\par 50 PRINT CHR$ (4)"-ASM.CODE/CLEAR.CODE"\par 60 REM LOAD A FONT TABLE\par 70 PRINT CHR$ (4)"BLOAD FONTS/OUTLINE.FONT"\par 80 REM SET THE BEGINNING ADDRESS OF THE TABLE\par 90 POKE BL,O: POKE BL + 1,64\par 100 REM SET THE ENDING ADDRESS OF THE TABLE\par 110 POKE BH,O: POKE BH + 1,96\par 120 REM USING THE INVISIBLE COLOR\par 130 POKE 968,1\par 140 X = O:Y 180\par 150 FOR J 65 TO 81\par 160 & DRAW BLOCKX,Y,J\par 170 X = X + 8\par 180 NEXT J\par 190 REM NOT USING THE INVISIBLE COLOR\par 200 POKE 968,0\par 210 X = O:Y 165\par 220 FOR J 65 TO 81\par 230 & DRAW BLOCKX,Y,J\par 240 X = X + 8\par 250 NEXT J\par 260 REM\par 270 REM EXAMPLE OF COPY\par 280 REM\par 290 & COPY66,65: REM COPY "B" INTO "All\par 300 & DRAW BLOCK60,150,65: & DRAW BLOCK75,150,66\par 310 REM\par 320 REM EXAMPLE OF CUT\par 330 REM\par 340 & CUTO,70,166,180\par 350 & DRAW BLOCK35,135,255\par 360 REM CAN COPY SHAPES OF DIFFERENT SIZES\par 370 & COPY255,65\par 380 & DRAW BLOCK35,120,65\par 390 INPUT A$: HOME : & TEXT\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644179}\hich\af4\dbch\af4\loch\f4 &CUSR - Draw System Cursor{\*\bkmkend _Toc497644179}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 X - X coordinate of the top left corner of the cursor\par Y - Y coordinate of the top left corner of the cursor\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 The graphics routines have a special cursor that they can draw very quickly, since it is maintained in a preshifted table. The cursor is always drawn in the EOR mode, so that it will show up on any bac\hich\af4\dbch\af4\loch\f4 kground. To erase the cursor, simply draw it in the same position a second time. X and Y must be in the legal ranges for a coordinate on the screen, which means that Y must be in the range 0-191, and X can range from 0-139 on the color screen or 0-559 on \hich\af4\dbch\af4\loch\f4 t\hich\af4\dbch\af4\loch\f4 he black and white screen. See &SETCUSR for information on how to set the cursor shape. If it is not set beforehand, the command will not do anything.\par \par \hich\af4\dbch\af4\loch\f4 &CUSR is one of the few commands that ignores the setting of the viewport. It will draw the cursor to an\hich\af4\dbch\af4\loch\f4 y screen location.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard \s15\qj\keepn\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s17\qj\fi360\keepn\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid {\fs16 \hich\af6\dbch\af4\loch\f6 10 REM THIS PROGRAM MUST BE ENTERED AFTER EXECUTING\par \hich\af6\dbch\af4\loch\f6 20 REM STARTUP. THE REASON FOR THIS IS BECAUSE THE\par \hich\af6\dbch\af4\loch\f6 30 REM PROGRAM USES A SHAPE TABLE WHICH IS LOAD[D\par \hich\af6\dbch\af4\loch\f6 40 REM A $800, THEREFORE THE PROGRAM MUS\hich\af6\dbch\af4\loch\f6 T BE\par \hich\af6\dbch\af4\loch\f6 50 REM RELOCATED TO $6000 BY THE STARTUP PROGRAM.\par \hich\af6\dbch\af4\loch\f6 60 D$ = CHR$ (4)\par \hich\af6\dbch\af4\loch\f6 70 PRINT D$"BLOAD FONTS/PROG. FONT"\par \hich\af6\dbch\af4\loch\f6 80 BL = 962: REM LOCATION OF BLOCK ADDRESS\par \hich\af6\dbch\af4\loch\f6 90 BH = 964: REM LOCATION OF END OF BLOCK TABLE ADDRESS\par \hich\af6\dbch\af4\loch\f6 100 IN = 2: REM INPUT DRIVER "MOUSE"\par \hich\af6\dbch\af4\loch\f6 110 BT = 957\hich\af6\dbch\af4\loch\f6 : REM LOCATION OF BUTTON STATUS ON PADDLE READ\par \hich\af6\dbch\af4\loch\f6 120 CR = 130: REM CURSOR SHAPE NUMBER\par \hich\af6\dbch\af4\loch\f6 130 DX = 958: REM LOCATION OF X VALUE ON PADDLE READ\par \hich\af6\dbch\af4\loch\f6 140 DY = 960: REM LOCATION OF Y VALUE ON PADDLE READ\par \hich\af6\dbch\af4\loch\f6 150 CX = 22:CY = 170\par \hich\af6\dbch\af4\loch\f6 160 GOSUB 330: REM INITIALIZE SCREEN\par \hich\af6\dbch\af4\loch\f6 170 REM\hich\af6\dbch\af4\loch\f6  MOVE THE CURSOR\par \hich\af6\dbch\af4\loch\f6 180 & SETC USR CR\par \hich\af6\dbch\af4\loch\f6 190 & C USR CX,CY\par \hich\af6\dbch\af4\loch\f6 200 REM READ THE INPUT DEVICE\par \hich\af6\dbch\af4\loch\f6 210 & PDL\par \hich\af6\dbch\af4\loch\f6 220 REM CHECK FOR A CHANGE IN EITHER X OR Y\par \hich\af6\dbch\af4\loch\f6 230 IF PEEK (DX) = CX AND PEEK (DY) = CY THEN 210\par \hich\af6\dbch\af4\loch\f6 240 REM SAVE THE CURRENT CX,CY\par \hich\af6\dbch\af4\loch\f6 250 TX = CX:TY = CY\par \hich\af6\dbch\af4\loch\f6 260 REM RETRIEVE T\hich\af6\dbch\af4\loch\f6 HE NEW CX,CY\par \hich\af6\dbch\af4\loch\f6 270 CX = PEEK (DX):CY = PEEK (DY)\par \hich\af6\dbch\af4\loch\f6 280 REM ERASE OLD CURSOR\par \hich\af6\dbch\af4\loch\f6 290 & C USR TX,TY\par \hich\af6\dbch\af4\loch\f6 300 REM IF BUTTON THE PLOT POINT\par \hich\af6\dbch\af4\loch\f6 310 IF PEEK (BT) = I THEN -& PLOT TX,TY\par \hich\af6\dbch\af4\loch\f6 320 GOTO 190\par \hich\af6\dbch\af4\loch\f6 330 REM SCREEN INITIALIZATION\par \hich\af6\dbch\af4\loch\f6 340 REM SELECT INPUT DRIVER\par \hich\af6\dbch\af4\loch\f6 350 & INPUT IN\par \hich\af6\dbch\af4\loch\f6 360 & C\hich\af6\dbch\af4\loch\f6  HGR\par \hich\af6\dbch\af4\loch\f6 370 REM POKE TABLE ADDRESS\par \hich\af6\dbch\af4\loch\f6 380 POKE BL,O: POKE BL + 1,9\par \hich\af6\dbch\af4\loch\f6 390 REM SET THE PEN COLOR\par \hich\af6\dbch\af4\loch\f6 400 & COLOR= 15\par \hich\af6\dbch\af4\loch\f6 410 RETURN\par }\pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \sect }\sectd \sbkodd\linex-32767\headery2520\footery2520\endnhere\sectdefaultcl \pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid {\*\bkmkstart _Toc497644180}\hich\af4\dbch\af4\loch\f4 &CUT - Cut a Shape From the Screen{\*\bkmkend _Toc497644180}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 LEFT - left edge of the area to cut\par RIGHT - right edge of the parameter to cut\par TOP - top edge of the parameter to cut\par BOTTOM - bottom edge of the parameter to cut\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 This command takes a rectangular area of the screen and places it into the shape table in position 255. The &COPY command can then be used to move the shape to a different lo\hich\af4\dbch\af4\loch\f4 cation, and &DRAWBLOCK can be used to draw the shape onto the screen. All of the parameters must be valid screen coordinates, and LEFT must be less than or equal to RIGHT, and BOTTOM must be less than or equal to TOP. If any of these rules are broken, an \hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4 rror results. An out of memory error can result if you try to cut out an area that will not fit into the buffer holding the shape table.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error Out of Memory\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 SEE &COPY\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644181}\hich\af4\dbch\af4\loch\f4 &DHGR - Initialize Double High Res Graphics{\*\bkmkend _Toc497644181}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Para\hich\af4\dbch\af4\loch\f4 meters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 This command sets up the screen for black and white double high resolution graphics. It is used just like the HGR command in Applesoft. The viewport is set to the full screen, which means that the top is set to 191, the bottom to 0,\hich\af4\dbch\af4\loch\f4  the left to 0, and the right to 559. The pen color is set to black, and the push and pop stacks are initialized. In this mode, only two colors are available: black and white. &COLOR will not let you set the pen color to any other color.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Ex\hich\af4\dbch\af4\loch\f4 ample:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 See &DRAWTO for an example.\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644182}\hich\af4\dbch\af4\loch\f4 &DRAWBLOCK - Draw a Block on the Screen{\*\bkmkend _Toc497644182}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 X - X coordinate of the top left corner of the block \par Y - Y coordinate of the top left corner of the block \par NUM - number of the shape to draw\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Res u I t:\par \par \hich\af4\dbch\af4\loch\f4 NUM is th\hich\af4\dbch\af4\loch\f4 e number of one of the shapes in the shape table, and must be in the range of 0..255. The shape is drawn at X, Y, which must be on the screen. If the shape table pointer in page 3 is zero, or if the table doesn't have a shape in spot number NUM, an error \hich\af4\dbch\af4\loch\f4 r\hich\af4\dbch\af4\loch\f4 esults. A null shape is legal, so if a shape was defined with a width and height of zero, no error results, and nothing is drawn.\par \par \hich\af4\dbch\af4\loch\f4 If the invisible flag in page 3 is set to true (1), color number 5 is treated as an invisible color. This means that whenever\hich\af4\dbch\af4\loch\f4  a gray point is found in the shape, it is not plotted on the screen. By careful use of this feature, odd shapes can be drawn on a patterned background. If the invisible flag is set to zero, color number five is treated like any other color.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error Illegal Direct Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 See &COPY for an example.\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644183}\hich\af4\dbch\af4\loch\f4 &DRAWTO - Draw a Line{\*\bkmkend _Toc497644183}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 X - X coordinate to draw to\par Y - Y coordinate to draw to\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Results:\par \par \hich\af4\dbch\af4\loch\f4 Draws a line from the current pen location to the X, Y specified, and sets\hich\af4\dbch\af4\loch\f4  the pen to the new X, Y. The line is drawn using the current pen color. X and Y must be on the screen.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s17\qj\fi360\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid \hich\af6\dbch\af4\loch\f6 10 MX = 559\par 20 MY = 191\par 30 CX = MX / 2:CY = MY / 2\par 40 & D HGR\par 50 & COLOR= 15\par 60 FOR J = 0 TO MX STEP 8\par 70 & MOVE TO CX,CY\par 80 & DRAW TO J.0\par 90 & DRAW TO J,MY\par 100 & DRAW TO MX,O\par 110 & MOVE TO J,MY\par 120 & DRAW TO 0,0\par 130 NEXT J\par 140 INPUT A$: HOME : & TEXT LIST\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644184}\hich\af4\dbch\af4\loch\f4 &ELLIPSE - Draw an Ellipse{\*\bkmkend _Toc497644184}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 LEFT - left edge of the ellipse\par RIGHT - right edge of the ellipse\par TOP - top edge of the ellipse\par BOTTOM - bottom edge of the ellipse\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Results:\par \par \hich\af4\dbch\af4\loch\f4 An ellipse is drawn on the screen, filling the area specified by the parameters. All of the parameters must be on the screen, and LEFT must be less than or equal to RIGHT and BO\hich\af4\dbch\af4\loch\f4 TTOM less than or equal to TOP. The current pen color is used. Only the outline of the ellipse is drawn; it is not filled in.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s17\qj\fi360\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid \hich\af6\dbch\af4\loch\f6 10 MX = 139\par 20 MY = 191\par 30 L = MX\tab / 2 - 2: R = MX / 2 + 2\par 40 B = MY\tab / 2 - 2:T = MY / 2 + 2\par 50 & C HGR\par 60 & COLOR= 15\par 70 FOR J = 0 TO 22\par 80 & ELIPSEL,R,B,T\par 90 L = L - 3:R = R + 3\par 100 B = B - 3:T = T + 3\par 110 NEXT J\par 120 INPUT A$: HOME : & TEXT : LIST\par 130 & TEXT\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644185}\hich\af4\dbch\af4\loch\f4 &FILL - Fill the Window{\*\bkmkend _Toc497644185}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Results:\par \par \hich\af4\dbch\af4\loch\f4 The current viewport is fil\hich\af4\dbch\af4\loch\f4 led with the current pen color. Color mapping is ignored during the fill. This fill is used to set large rectangular background areas; for a fill that will handle irregular shapes, see &FLOOD.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s17\qj\fi360\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid \hich\af6\dbch\af4\loch\f6 10 X = 7\par 20 L = O:R = 139\par 30 B = O:T = 191\par 40 COLR = 0\par 50 & C HGR\par 60 FOR COLR = 15 TO 6 STEP - 1\par 70 & COLOR= COLR\par 80 & VIEWL,R,B,T\par 90 & FILL\par 100 L = L + X:R = R - X\par 110 B = B + X:T = T - X\par 120 NEXT COLR\par 130 INPUT A$: HOME : & TEXT : LIST\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644186}\hich\af4\dbch\af4\loch\f4 &FIND - Find the Cursor Position{\*\bkmkend _Toc497644186}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Results:\par \par \hich\af4\dbch\af4\loch\f4 The X and Y coordinates of the pen are placed in page 3, where they can be read using PEEK statements. The X location is placed in $3CA and $3CB (decimal locations 970 and 971). The Y location is at $3CC and $3CD (decimal locations 972 and 973). \hich\af4\dbch\af4\loch\f4 Although the Y value is returned as a two byte value, it is not really necessary to read both bytes, since the screen only goes to 191, and the second byte will be zero for all values below 256. For the same reason, you only need to read the second byte o\hich\af4\dbch\af4\loch\f4 f\hich\af4\dbch\af4\loch\f4  the X value if you are using color double high resolution graphics. With black and white graphics, the X value can range up to 559, while with color graphics, 139 is the largest possible X value.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s17\qj\fi360\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid \hich\af6\dbch\af4\loch\f6 10 PY = 972:PX = 970\par 20 HOME\par 30 & C HGR\par 40 & COLOR= 15\par 50 FOR X = 0 TO 15\par 60 & MOVE TO X,Y\par 70 & PLOT X,Y\par 80 Y = Y + 1\par 90 & FIND\par 100 PRINT PEEK (PY), PEEK (PX)\par 110 NEXT X\par 120 INPUT A$: & TEXT\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644187}\hich\af4\dbch\af4\loch\f4 &FLOOD - Flood Fill{\*\bkmkend _Toc497644187}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 X - X location to begin the fill\par Y - Y location to begin the fill\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 The flood fill command will change the color of a simply connected region from what it is now to the current pen color. Simply connected means that the area that will be filled is all of the points on the screen that are the same color and ca\hich\af4\dbch\af4\loch\f4 n be reached by moving up, down, left or right without leaving the color being filled. It doesn't matter how large the region is. If the area is extremely complicated, the command may not reach every point, but will not give an error. X and Y must be on t\hich\af4\dbch\af4\loch\f4 h\hich\af4\dbch\af4\loch\f4 e screen,\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Example:\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error\par \par }\pard\plain \s17\qj\fi360\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid \hich\af6\dbch\af4\loch\f6 10 & C HGR\par 20 & COLOR= 15\par 30 & FILL\par 35 & COLOR= 0\par 40 & ELIPSE30,60,40,90\par 50 & BOX70,110,80,150\par 60 & COLOR= 2\par 70 & FLOOD45,65\par 80 & COLOR= 13\par 90 & FLOOD71,81\par 100 & VIEW20,119,20,171\par 110 & COLOR= 5\par 120 & FLOOD21,21\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644188}\hich\af4\dbch\af4\loch\f4 &GROUT - Graphics Output of Text{\*\bkmkend _Toc497644188}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 Before using this command, a shape table must be defined. In most shape tables, the first 127 shapes are characters, with the number of the shape matching the numbers used in the ASC\hich\af4\dbch\af4\loch\f4 II character set. Once the &GROUT command is used, anything that would normally have been printed on the text screen will be printed on the graphics screen instead, using the current pen color. The shapes for characters are usually defined with background\hich\af4\dbch\af4\loch\f4 s\hich\af4\dbch\af4\loch\f4  made up of the gray color (number 5) that is used as the invisible color. The character output routine uses the invisible color, so that the background that the character is drawn over is not effected by the writing of the character.\par \par \hich\af4\dbch\af4\loch\f4 The character will a\hich\af4\dbch\af4\loch\f4 ppear on the screen with the upper left corner of the character at the current pen position. The pen is automatically moved to the right after the character is drawn. Control keys have no effect - the RETURN key, for example, will print like any other cha\hich\af4\dbch\af4\loch\f4 r\hich\af4\dbch\af4\loch\f4 acter. It does not cause the cursor to move to a new line.\par \par \hich\af4\dbch\af4\loch\f4 While it is plotting characters, the program uses color mapping to cause most characters to appear as the current pen color, and to allow the background to show past the parts of the character whi\hich\af4\dbch\af4\loch\f4 ch are not plotted. The first gray color (color number five) is used as an invisible color, so that whatever was on the screen stays there. Black is used as a mapped color, so that any pixel which is black in the character definition is drawn using the cu\hich\af4\dbch\af4\loch\f4 r\hich\af4\dbch\af4\loch\f4 rent pen color.\par \par \hich\af4\dbch\af4\loch\f4 &NORMAL is used to change the output hook back, so that text again appears on the text screen.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Direct Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard \s15\qj\keepn\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s17\qj\fi360\keepn\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid \hich\af6\dbch\af4\loch\f6 10 BL = 962\par 20 PRINT CHR$ (4)"BLOAD FONTS/OUTLINE.FONT"\par \pard \s17\qj\fi360\widctlpar\adjustright 30 & D HGR\par 40 POKE 968,1\par 50 POKE BL,O: POKE BL + 1,64\par 60 & COLOR= 15\par 70 & FILL\par 80 & COLOR= 0\par 90 & GR OUT\par 100 & MOVE TO 10,180\par 110 PRINT "THIS IS A TEST";\par 120 & MOVE TO 10,170\par 130 PRINT "Please type anything you wish..";\par 140 PRINT "a carriage return terminates this test"\par 150 & MOVE TO 10,150\par 160 INPUT A$: & NORMAL : HOME : & TEXT : LIST\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644189}\hich\af4\dbch\af4\loch\f4 &HOME - Clear the Screen{\*\bkmkend _Toc497644189}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 The viewport is set to the full screen size, the pen color set to black, and the screen is cleared. The cursor is set to 0, 0 (the lower-left corner of the screen).\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s17\qj\fi360\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid \hich\af6\dbch\af4\loch\f6 10 & C HGR\par 20 & VIEW20,109,20,171\par 30 & COLOR= 15\par 40 & FILL\par 50 & HOME\par 60 INPUT A$: HOME : & TEXT : LIST\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644190}\hich\af4\dbch\af4\loch\f4 &INPUT - Select the Mouse, Joystick or Keyboard{\*\bkmkend _Toc497644190}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 NUM - number of the device to read\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 The graphics pack\hich\af4\dbch\af4\loch\f4 age has a uniform interface that your program can use so that one read command can be used with either the mouse, joystick, or the keyboard. This command selects which of those devices the &PDL command will read. It must be used before the &PDL command.\par \par \hich\af4\dbch\af4\loch\f4 T\hich\af4\dbch\af4\loch\f4 he value for the parameter is zero for the keyboard, one for the joystick, and two for a mouse. If you select &INPUT 2 and a mouse is not connected, you will get an illegal quantity error. Any value other than zero, one or two will cause the same error,\par \par \hich\af4\dbch\af4\loch\f4 E\hich\af4\dbch\af4\loch\f4 rrors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 SEE &CUSR\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644191}\hich\af4\dbch\af4\loch\f4 &INVERSE - Invert the Screen{\*\bkmkend _Toc497644191}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 LEFT - left edge of the area to invert\par RIGHT - right edge of the area to invert\par BOTTOM - bottom edge of the area to invert\par TOP - top edge of the area to invert\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 The rectangular area defined by the input parameters is reversed (exclusive or-ed with a $FF). A second use of the command will cause the area to return to its original state. This command is used in the drawing program to reverse the pull down \hich\af4\dbch\af4\loch\f4 menus as the cursor moves across them. The command ignores the window and any color mapping.\par \par \hich\af4\dbch\af4\loch\f4 The parameters must be on the screen, and LEFT must be less that or equal to RIGHT, and TOP greater than or equal to the BOTTOM. If not, an error will result.\par \par \hich\af4\dbch\af4\loch\f4 Er\hich\af4\dbch\af4\loch\f4 rors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s17\qj\fi360\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid \hich\af6\dbch\af4\loch\f6 10 X = 9\par 20 L = O:R = X\par 30 COLR = 0\par 40 & C HGR\par 50 & COLOR= COLR\par 60 & FILL\par 70 FOR COLR = 1 TO 15\par 80 & COLOR= COLR\par 90 & VIEWL,R,0,191\par 100 & FILL\par 110 L = L + X:R = R + X\par 120 NEXT COLR\par 130 FOR PAUSE = 0 TO 1000: NEXT PAUSE\par 140 & INVERSE 0,135,0,191\par 150 INPUT A$: IF A$ .... THEN 140\par 160 HOME : & TEXT LIST\par \pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644192}&MOVETO - Move the Pen{\*\bkmkend _Toc497644192}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 X - X coordinate to move the pen to \par Y - Y coordinate to move the pen to\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Res u I t:\par \par \hich\af4\dbch\af4\loch\f4 The pen is moved to the position specified. T\hich\af4\dbch\af4\loch\f4 he screen is not effected in any way. The next use of any command that uses the current pen position will use the new value. Examples of such commands are &DRAWTO and text output after an &GROUT command. If the coordinate given is not on the screen, an er\hich\af4\dbch\af4\loch\f4 r\hich\af4\dbch\af4\loch\f4 or will result.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 For a sample program, see &DRAWTO or &PLOT.\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644193}\hich\af4\dbch\af4\loch\f4 &NORMAL - Restore Output Hook{\*\bkmkend _Toc497644193}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 Restores the output hook, so any future text output will go to the text screen, not the gra\hich\af4\dbch\af4\loch\f4 phics screen, This command can be used several times in a row, or it can be used before the &GROUT command, with no problems.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 See &GROUT.\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644194}\hich\af4\dbch\af4\loch\f4 &PDL - Read the Paddle{\*\bkmkend _Toc497644194}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 This command provides a single, unifie\hich\af4\dbch\af4\loch\f4 d way to read a keyboard, joystick or mouse and get back an X, Y value and a flag that tells if the button is down. In the case of the mouse, the button is the mouse button. For the joystick, the button is game paddle button 0. For the keyboard driver, th\hich\af4\dbch\af4\loch\f4 e\hich\af4\dbch\af4\loch\f4  open apple key is used.\par \par \hich\af4\dbch\af4\loch\f4 The current input device is read, and the result placed in locations ME to $3C1 (decimal 958 to 961). An error will result if the &INPUT command has not been used to select the input device. The value returned is always on the scr\hich\af4\dbch\af4\loch\f4 een. Location $3BD (decimal 957) is set to 0 if the button is not being pushed, and to a non-zero value if the button is being pushed.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Direct Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 SEE &CUSR\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644195}\hich\af4\dbch\af4\loch\f4 &PLOT - Plot a Point{\*\bkmkend _Toc497644195}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 X - X coordinate to plot at\par Y - Y coordinate to plot at\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 A point is placed on the screen at the location specified, using the current pen color. An error will result if the coordinate given is not on the screen.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s17\qj\fi360\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid \hich\af6\dbch\af4\loch\f6 10\tab & D HGR\par 20\tab & COLOR= 15\par 30\tab FOR J = 0 TO 559 STEP 3\par 40\tab & PLOT J,O\par 50\tab & PLOT J,191\par 60\tab NEXT J\par 70\tab FOR J = 0 TO 191 STEP 3\par 80\tab & PLOT 0,J\par 90\tab & PLOT 559,J\par 100\tab NEXT J\par 110\tab INPUT A$: HOME : & TEXT LIST\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644196}\hich\af4\dbch\af4\loch\f4 &POP - Pop the Screen{\*\bkmkend _Toc497644196}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 The screen area on the top of th\hich\af4\dbch\af4\loch\f4 e graphics stack is popped back onto the screen at the same location it came from. Color mapping and the viewport are ignored. This removes the screen area from the top of the stack, so a subsequent &POP will pop a different area.\par \par \hich\af4\dbch\af4\loch\f4 Using an &POP with nothi\hich\af4\dbch\af4\loch\f4 ng on the stack has no effect.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s17\qj\fi360\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid \hich\af6\dbch\af4\loch\f6 10 X = 9\par 20 L = O:R = X\par 30 COLR = 0\par 40 & C HGR\par 50 & COLOR= COLR\par 60 & FILL\par 70 FOR COLR = 1 TO 15\par 80 & COLOR= COLR\par 90 & VIEWL,R,0,191\par 100 & FILL\par 110 L = L + X:R = R + X\par 120 NEXT COLR\par 130 & PUSH20,120,100,180\par 140 & VIEW20,120,100,180\par 150 & COLOR= 15\par 160 & FILL\par 170 FOR PAUSE = 1 TO 500: NEXT PAUSE\par 180 & POP\par 190 INPUT A$: HOME : & TEXT : LIST\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644197}\hich\af4\dbch\af4\loch\f4 &PUSH - Push the Screen{\*\bkmkend _Toc497644197}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 LEFT - left edge of the area to invert\par RIGHT - right edge of the area to invert\par BOTTOM - bottom edge of the area to invert\par TOP - top edge of the area to invert\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 The area defined by the parameters is pushed onto the graphics stack. After using this command, an &POP command can be used to restore the area of the screen, no\hich\af4\dbch\af4\loch\f4  matter what has been drawn there in the mean time. This command, along with &POP, can be used to handle pull down menus. To do this, start by pushing the area that will be covered by the pull down menu. Next, draw the pull down menu and do any processing\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 that you need to. When it is time to pull the menu up, simply do an &POP.\par \par \hich\af4\dbch\af4\loch\f4 The command can also be used to do windows, using basically the same idea. First, the area to be used by the window is pushed, and the window is drawn. When it is time to erase the \hich\af4\dbch\af4\loch\f4 window, just do an &POP,\par \par \hich\af4\dbch\af4\loch\f4 Keep in mind that the areas are pushed onto a true stack. This means that if you push two areas, say area A and then area B, that there is no way to pop A without first popping B~ By the way, the stack is located in the alternate \hich\af4\dbch\af4\loch\f4 64K of memory, so it can get quite large, yet never takes room away from your program.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 SEE &POP\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644198}\hich\af4\dbch\af4\loch\f4 &READ - Read a Pixel{\*\bkmkend _Toc497644198}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 X - X coordinate to read \par Y - Y coordinate to read\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 The color number \hich\af4\dbch\af4\loch\f4 for the point at X, Y is placed in page 3 location $3C9 (decimal 969). The point must be on the screen, or an error will result.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s17\qj\fi360\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid \hich\af6\dbch\af4\loch\f6 10 X = 9\par 20 L = 0: R = X\par 30 COLR = 0\par 40 & C HGR\par 50 & COLOR= COLR\par 60 & FILL\par 70 FOR COLR = I TO 15\par 80 & COLOR= COLR\par go & VIEWL,R,0,191\par 100 & FILL\par 110 L = L + X:R = R + X\par 120 NEXT COLR\par 130 HOME\par 140 FOR J = 2 TO 139 STEP 9\par 150 & READ J,20\par 160 PRINT PEEK (969)\par 170 NEXT J\par 180 INPUT A$: & TEXT\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644199}\hich\af4\dbch\af4\loch\f4 &SETCMAP - Set Color Map{\*\bkmkend _Toc497644199}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 NUM1 - color number for pen\par NUM2 - color number for screen\par NUM3 - resulting color to plot\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 This command is used to set the color map, which can then be enabled with an &CMAPON command. When the color map is enabled, plotting a point using color NUM1 on a lo\hich\af4\dbch\af4\loch\f4 cation that is currently set to color NUM2 will result in the screen being changed to color NUM3. NUM3 can be the same as NUM1, in which case no difference is seen between using the color map and not using it. The default table is set up that way, so this\hich\af4\dbch\af4\loch\f4  \hich\af4\dbch\af4\loch\f4 command must be used before color mapping has any effect.\par \par \hich\af4\dbch\af4\loch\f4 All color values must be in the range 0-15, or an error will result,\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard \s15\qj\keepn\widctlpar\adjustright {\hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s17\qj\fi360\keepn\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid \hich\af6\dbch\af4\loch\f6 10 X = 9\par 20 L = O:R = X\par 30 COLR = 0\par 40 & C HGR\par 50 & COLOR= COLR\par 60 & FILL\par 70 FOR COLR = I TO 15\par 80 & COLOR= COLR\par 90 & VIEWL,R,0,191\par 100 & FILL\par 110 L = L + X:R = R + X\par 120 NEXT COLR\par 130 & VIEWO,139,0,191\par 140 GOSUB 300\par 150 REM TURN ON THE COLOR MAP\par 160 & CMAPON\par 170 & COLOR= 0\par 180 FOR J = 180 TO 160 STEP - 1\par 190 & MOVE TO 0,J: & DRAW TO 139,J\par 200 NEXT J\par 210 REM TURN OFF THE COLOR MAP\par 220 & CMAPOFF\par 230 FOR J = 150 TO 130 STEP - 1\par 240 & MOVE TO O,J: & DRAW TO 139,J\par 250 NEXT J\par 260 INPUT A$: HOME : & TEXT : END\par 270 REM SETS COLOR MAP SO THAT BLACK ON\par 280 REM ANY COLOR BACKGROUND PLOTS THE\par 290 REM EXCLUSIVE OR OF THE BACKGROUND\par 300 & SETCMAPO,0,15: & SETCMAPO,1,14\par 310 & SETCMAPO,2,13: & SETCMAPO,3,12\par 320 & SETCMAPO,4,11: & SETCMAPO,5,10\par 330 & SETCMAPO,6,9: & SETCMAPO,7,8\par 340 & SETCMAPO,8,7: & SETCMAPO,9,6\par 350 & SETCMAPO,10,5: & SETCMAPO,11,4\par 360 & SETCMAPO,12,3: & SETCMAPO,13,2\par 370 & SETCMAPO,14,1: & SETCMAPO,15,0\par 380 RETURN\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644200}\hich\af4\dbch\af4\loch\f4 &SETCUSR - Create Cursor Mask{\*\bkmkend _Toc497644200}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 NUM - shape number\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 NUM is the number of a shape that will be used as the cursor for the &CUSR command. The &CUSR command \hich\af4\dbch\af4\loch\f4 allows drawing of a very fast cursor, which can be up to eight pixels wide and ten pixels high. The shape used must exist, and must consist of only black and white pixels. If the shape is too big, this command automatically clips it to the proper size.\par \par \hich\af4\dbch\af4\loch\f4 Er\hich\af4\dbch\af4\loch\f4 rors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 SEE &CUSR\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644201}\hich\af4\dbch\af4\loch\f4 &TEXT - View the Text Screen{\*\bkmkend _Toc497644201}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 The text screen is shown instead of the graphics screen. The graphics screen and text screen are unaffected. The output hook is not changed, so i\hich\af4\dbch\af4\loch\f4 f you want to write to the text screen, be sure and use the &NORMAL command if the &GROUT command has been used.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 none\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 See &GROUT for an example.\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644202}\hich\af4\dbch\af4\loch\f4 &TRTLDRAW - Turtlegraphics Draw Command{\*\bkmkend _Toc497644202}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 NUM - distance to draw\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 A\hich\af4\dbch\af4\loch\f4  line of the current pen color is drawn from the current pen position in the direction of the turtle for a length of NUM. The cursor is set to the new location. NUM must be between 32768 and 32767.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s17\qj\fi360\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid \hich\af6\dbch\af4\loch\f6 10 AN = 0\par 20 DX = 125:DY = 155\par 30 & C HGR\par 40 & COLOR= 15\par 50 & MOVE TO DX,DY\par 60 & TRN TO AN\par 70 & TRTL DRAW 2\par 80 & TURN15\par 90 & FIND\par 100 IF PEEK (970) = 0 OR PEEK (972) 0 THEN 120\par 110 GOTO 70\par 120 AN = AN + 90\par 130 DY = DY - 20\par 140 IF AN < > 360 THEN 50\par 150 INPUT A$: HOME : & TEXT : LIST\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644203}\hich\af4\dbch\af4\loch\f4 &TRTLMOVE - Turtlegraphics Move Command{\*\bkmkend _Toc497644203}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 NUM - distance to move\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 The turtle position (which is also the cursor position) moves NUM pixels in the current turtle direction. The screen does not change. NUM must be in the \hich\af4\dbch\af4\loch\f4 range -32768 to 32767.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s17\qj\fi360\widctlpar\adjustright \fs18\loch\af6\hich\af6\dbch\f4\cgrid \hich\af6\dbch\af4\loch\f6 10 & C HGR \par 20 & COLOR= 15 \par 30 & MOVE TO 70,85 \par 40 & TRN TO 90 \par 50 FOR J = 1 TO 4 \par 60 & TRTL DRAW 15 \par 70 & TRTLMOVE15 \par 80 & TURN90 \par 90 NEXT J\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644204}\hich\af4\dbch\af4\loch\f4 &TRNTO - Turtlegraphics Turn To Command{\*\bkmkend _Toc497644204}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Para\hich\af4\dbch\af4\loch\f4 meters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 NUM - number of degrees to turn\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 The direction of the turtle is changed to NUM. Zero degrees is to the right; ninety degrees is straight up. NUM must be in the range -32768 to 32767. If it is outside of the range 0 to 359, it will be adju\hich\af4\dbch\af4\loch\f4 sted to an equivalent angle in that range.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 SEE &TRTLDRAW or &TRTLMOVE\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644205}\hich\af4\dbch\af4\loch\f4 &TURN - Turtlegraphics Turn Command{\*\bkmkend _Toc497644205}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 NUM - number of degrees to change\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 The direction of the turtle is changed by NUM \hich\af4\dbch\af4\loch\f4 degrees. Turning a positive number of degrees causes the turtle direction to change in the counterclockwise direction. Negative turns are allowed; turning 180 degrees is equivalent to turning -180. NUM must be in the range -32768 to 32767.\par \par \hich\af4\dbch\af4\loch\f4 Errors\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par \hich\af4\dbch\af4\loch\f4 SEE &TRTLDRAW or &TRTLMOVE\par \par }\pard\plain \s2\keepn\widctlpar\outlinelevel1\adjustright \b\loch\af4\hich\af4\dbch\f4\cgrid \page {\*\bkmkstart _Toc497644206}\hich\af4\dbch\af4\loch\f4 &VIEW - Set the Viewport{\*\bkmkend _Toc497644206}\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Parameters:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 LEFT - left edge of the viewport\par RIGHT - right edge of the viewport\par BOTTOM - bottom edge of the viewport\par TOP - top edge of the viewport\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Result:\par \par \hich\af4\dbch\af4\loch\f4 No change is vi\hich\af4\dbch\af4\loch\f4 sible on the screen, but any future drawing commands cannot effect the area outside of the box defined by the parameters. Certain commands ignore the window; these include &POP and &CUSR.\par \par \hich\af4\dbch\af4\loch\f4 The box must be on the screen. LEFT must be less that or equal to R\hich\af4\dbch\af4\loch\f4 IGHT, and TOP must be greater than or equal to BOTTOM.\par \par \hich\af4\dbch\af4\loch\f4 Errors:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 Illegal Quantity Error\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par \hich\af4\dbch\af4\loch\f4 Example:\par \par }\pard\plain \s18\qj\fi360\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid \hich\af4\dbch\af4\loch\f4 See &FILL and &COLOR for sample programs.\par \pard\plain \s15\qj\widctlpar\adjustright \fs20\loch\af4\hich\af4\dbch\f4\cgrid {\par }}