			case  on	seg   ''******************************************************************  ORCA - ORCA/C specific libraries**  This code implements the tables and subroutines needed to*  support the ORCA/C library ORCA.**  March 1989*  Mike Westerfield**  Copyright 1989*  Byte Works, Inc.******************************************************************;-----------------------------------------------;;   Imported addresses;;-----------------------------------------------	IMPORT	~COMMANDLINE	IMPORT	~ENDDESK	IMPORT	~ENDGRAPH	IMPORT	~STARTDESK	IMPORT	~STARTGRAPH	IMPORT	~TOOLERROR	IMPORT	~USER_ID******************************************************************  char *commandline(void)**  Inputs:*        ~CommandLine - address of the command line******************************************************************		EXPORT	commandline commandline PROC         ldx   #0         lda   ~COMMANDLINE         ora   ~COMMANDLINE+2         beq   lb1         lda   ~COMMANDLINE         ldx   ~COMMANDLINE+2         clc         adc   #8         bcc   lb1         inxlb1      rtl		ENDP******************************************************************  void enddesk(void)******************************************************************		EXPORT	enddesk  enddesk  PROC         jmp   ~ENDDESK		ENDP******************************************************************  void endgraph(void)******************************************************************		EXPORT	endgraph endgraph PROC         jmp   ~ENDGRAPH		ENDP******************************************************************  char *shellid(void)**  Inputs:*        ~CommandLine - address of the command line******************************************************************		EXPORT	shellid  shellid  PROC         ldx   #0                       ;return NULL if there is no command line         lda   >~COMMANDLINE         ora   >~COMMANDLINE+2         bne   lb1         rtllb1      lda   >~COMMANDLINE+2         pha         lda   >~COMMANDLINE         pha         phd         tsc         tcd         phb         phk         plb         ldy   #6lb2      lda   [3],Y         sta   id,Y         dey         dey         bpl   lb2         plb         pld         pla         pla         lda   #id         ldx   #^id         rtlid	DC.B	' '	DC.B	' '	DC.B	' '	DC.B	' '	DC.B	' '	DC.B	' '	DC.B	' '	DC.B	' '	DC.B	0		ENDP******************************************************************  void startdesk(int width)******************************************************************		EXPORT	startdesk startdesk PROC         jmp   ~STARTDESK		ENDP******************************************************************  void startgraph(int width)******************************************************************		EXPORT	startgraph startgraph PROC         jmp   ~STARTGRAPH		ENDP******************************************************************  int toolerror(void)******************************************************************		EXPORT	toolerror toolerror PROC         lda   >~TOOLERROR         rtl		ENDP******************************************************************  int userid(void)******************************************************************		EXPORT	userid   userid   PROC         lda   >~USER_ID         rtl		ENDP		END